(function(global) {

global.__DEV__ = true;

global.__BUNDLE_START_TIME__ = global.nativePerformanceNow ? global.nativePerformanceNow() : Date.now();
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

'use strict';

global.require = _require;
global.__d = define;

var modules = Object.create(null);
if (__DEV__) {
  var verboseNamesToModuleIds = Object.create(null);
}

function define(factory, moduleId, dependencyMap) {
  if (moduleId in modules) {
    return;
  }
  modules[moduleId] = {
    dependencyMap: dependencyMap,
    exports: undefined,
    factory: factory,
    hasError: false,
    isInitialized: false };

  if (__DEV__) {
    modules[moduleId].hot = createHotReloadingObject();

    var verboseName = arguments[3];
    if (verboseName) {
      modules[moduleId].verboseName = verboseName;
      verboseNamesToModuleIds[verboseName] = moduleId;
    }
  }
}

function _require(moduleId) {
  if (__DEV__ && typeof moduleId === 'string') {
    var verboseName = moduleId;
    moduleId = verboseNamesToModuleIds[moduleId];
    if (moduleId == null) {
      throw new Error('Unknown named module: \'' + verboseName + '\'');
    } else {
      console.warn('Requiring module \'' + verboseName + '\' by name is only supported for ' + 'debugging purposes and will BREAK IN PRODUCTION!');
    }
  }

  var moduleIdReallyIsNumber = moduleId;
  var module = modules[moduleIdReallyIsNumber];
  return module && module.isInitialized ? module.exports : guardedLoadModule(moduleIdReallyIsNumber, module);
}

var inGuard = false;
function guardedLoadModule(moduleId, module) {
  if (!inGuard && global.ErrorUtils) {
    inGuard = true;
    var returnValue = void 0;
    try {
      returnValue = loadModuleImplementation(moduleId, module);
    } catch (e) {
      global.ErrorUtils.reportFatalError(e);
    }
    inGuard = false;
    return returnValue;
  } else {
    return loadModuleImplementation(moduleId, module);
  }
}

function loadModuleImplementation(moduleId, module) {
  var nativeRequire = global.nativeRequire;
  if (!module && nativeRequire) {
    nativeRequire(moduleId);
    module = modules[moduleId];
  }

  if (!module) {
    throw unknownModuleError(moduleId);
  }

  if (module.hasError) {
    throw moduleThrewError(moduleId, module.error);
  }

  if (__DEV__) {
    var Systrace = _require.Systrace;
  }

  module.isInitialized = true;
  var exports = module.exports = {};var _module = module;var factory = _module.factory,
      dependencyMap = _module.dependencyMap;
  try {
    if (__DEV__) {
      Systrace.beginEvent('JS_require_' + (module.verboseName || moduleId));
    }

    var moduleObject = { exports: exports };
    if (__DEV__ && module.hot) {
      moduleObject.hot = module.hot;
    }

    factory(global, _require, moduleObject, exports, dependencyMap);

    if (!__DEV__) {
      module.factory = undefined;
      module.dependencyMap = undefined;
    }

    if (__DEV__) {
      Systrace.endEvent();
    }
    return module.exports = moduleObject.exports;
  } catch (e) {
    module.hasError = true;
    module.error = e;
    module.isInitialized = false;
    module.exports = undefined;
    throw e;
  }
}

function unknownModuleError(id) {
  var message = 'Requiring unknown module "' + id + '".';
  if (__DEV__) {
    message += 'If you are sure the module is there, try restarting the packager. ' + 'You may also want to run `npm install`, or `yarn` (depending on your environment).';
  }
  return Error(message);
}

function moduleThrewError(id, error) {
  var displayName = __DEV__ && modules[id] && modules[id].verboseName || id;
  return Error('Requiring module "' + displayName + '", which threw an exception: ' + error);
}

if (__DEV__) {
  _require.Systrace = { beginEvent: function beginEvent() {}, endEvent: function endEvent() {} };

  var createHotReloadingObject = function createHotReloadingObject() {
    var hot = {
      acceptCallback: null,
      accept: function accept(callback) {
        hot.acceptCallback = callback;
      } };

    return hot;
  };

  var acceptAll = function acceptAll(dependentModules, inverseDependencies) {
    if (!dependentModules || dependentModules.length === 0) {
      return true;
    }

    var notAccepted = dependentModules.filter(function (module) {
      return !accept(module, undefined, inverseDependencies);
    });

    var parents = [];
    for (var i = 0; i < notAccepted.length; i++) {
      if (inverseDependencies[notAccepted[i]].length === 0) {
        return false;
      }

      parents.push.apply(parents, babelHelpers.toConsumableArray(inverseDependencies[notAccepted[i]]));
    }

    return acceptAll(parents, inverseDependencies);
  };

  var accept = function accept(id, factory, inverseDependencies) {
    var mod = modules[id];

    if (!mod && factory) {
      define(factory, id);
      return true;
    }var hot = mod.hot;
    if (!hot) {
      console.warn('Cannot accept module because Hot Module Replacement ' + 'API was not installed.');

      return false;
    }

    if (factory) {
      mod.factory = factory;
    }
    mod.hasError = false;
    mod.isInitialized = false;
    _require(id);

    if (hot.acceptCallback) {
      hot.acceptCallback();
      return true;
    } else {
      if (!inverseDependencies) {
        throw new Error('Undefined `inverseDependencies`');
      }

      return acceptAll(inverseDependencies[id], inverseDependencies);
    }
  };

  global.__accept = accept;
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

Object.assign = function (target, sources) {
  if (__DEV__) {
    if (target == null) {
      throw new TypeError('Object.assign target cannot be null or undefined');
    }
    if (typeof target !== 'object' && typeof target !== 'function') {
      throw new TypeError('In this environment the target of assign MUST be an object.' + 'This error is a performance optimization and not spec compliant.');
    }
  }

  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
    var nextSource = arguments[nextIndex];
    if (nextSource == null) {
      continue;
    }

    if (__DEV__) {
      if (typeof nextSource !== 'object' && typeof nextSource !== 'function') {
        throw new TypeError('In this environment the sources for assign MUST be an object.' + 'This error is a performance optimization and not spec compliant.');
      }
    }

    for (var key in nextSource) {
      if (__DEV__) {
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        if (!hasOwnProperty.call(nextSource, key)) {
          throw new TypeError('One of the sources for assign has an enumerable key on the ' + 'prototype chain. Are you trying to assign a prototype property? ' + 'We don\'t allow it, as this is an edge case that we do not support. ' + 'This error is a performance optimization and not spec compliant.');
        }
      }
      target[key] = nextSource[key];
    }
  }

  return target;
};
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
var inspect = function () {

  function inspect(obj, opts) {
    var ctx = {
      seen: [],
      stylize: stylizeNoColor };

    return formatValue(ctx, obj, opts.depth);
  }

  function stylizeNoColor(str, styleType) {
    return str;
  }

  function arrayToHash(array) {
    var hash = {};

    array.forEach(function (val, idx) {
      hash[val] = true;
    });

    return hash;
  }

  function formatValue(ctx, value, recurseTimes) {
    var primitive = formatPrimitive(ctx, value);
    if (primitive) {
      return primitive;
    }

    var keys = Object.keys(value);
    var visibleKeys = arrayToHash(keys);

    if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
      return formatError(value);
    }

    if (keys.length === 0) {
      if (isFunction(value)) {
        var name = value.name ? ': ' + value.name : '';
        return ctx.stylize('[Function' + name + ']', 'special');
      }
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      }
      if (isDate(value)) {
        return ctx.stylize(Date.prototype.toString.call(value), 'date');
      }
      if (isError(value)) {
        return formatError(value);
      }
    }

    var base = '',
        array = false,
        braces = ['{', '}'];

    if (isArray(value)) {
      array = true;
      braces = ['[', ']'];
    }

    if (isFunction(value)) {
      var n = value.name ? ': ' + value.name : '';
      base = ' [Function' + n + ']';
    }

    if (isRegExp(value)) {
      base = ' ' + RegExp.prototype.toString.call(value);
    }

    if (isDate(value)) {
      base = ' ' + Date.prototype.toUTCString.call(value);
    }

    if (isError(value)) {
      base = ' ' + formatError(value);
    }

    if (keys.length === 0 && (!array || value.length == 0)) {
      return braces[0] + base + braces[1];
    }

    if (recurseTimes < 0) {
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      } else {
        return ctx.stylize('[Object]', 'special');
      }
    }

    ctx.seen.push(value);

    var output;
    if (array) {
      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
    } else {
      output = keys.map(function (key) {
        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
      });
    }

    ctx.seen.pop();

    return reduceToSingleString(output, base, braces);
  }

  function formatPrimitive(ctx, value) {
    if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');
    if (isString(value)) {
      var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
      return ctx.stylize(simple, 'string');
    }
    if (isNumber(value)) return ctx.stylize('' + value, 'number');
    if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');

    if (isNull(value)) return ctx.stylize('null', 'null');
  }

  function formatError(value) {
    return '[' + Error.prototype.toString.call(value) + ']';
  }

  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
    var output = [];
    for (var i = 0, l = value.length; i < l; ++i) {
      if (hasOwnProperty(value, String(i))) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
      } else {
        output.push('');
      }
    }
    keys.forEach(function (key) {
      if (!key.match(/^\d+$/)) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
      }
    });
    return output;
  }

  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
    var name, str, desc;
    desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
    if (desc.get) {
      if (desc.set) {
        str = ctx.stylize('[Getter/Setter]', 'special');
      } else {
        str = ctx.stylize('[Getter]', 'special');
      }
    } else {
      if (desc.set) {
        str = ctx.stylize('[Setter]', 'special');
      }
    }
    if (!hasOwnProperty(visibleKeys, key)) {
      name = '[' + key + ']';
    }
    if (!str) {
      if (ctx.seen.indexOf(desc.value) < 0) {
        if (isNull(recurseTimes)) {
          str = formatValue(ctx, desc.value, null);
        } else {
          str = formatValue(ctx, desc.value, recurseTimes - 1);
        }
        if (str.indexOf('\n') > -1) {
          if (array) {
            str = str.split('\n').map(function (line) {
              return '  ' + line;
            }).join('\n').substr(2);
          } else {
            str = '\n' + str.split('\n').map(function (line) {
              return '   ' + line;
            }).join('\n');
          }
        }
      } else {
        str = ctx.stylize('[Circular]', 'special');
      }
    }
    if (isUndefined(name)) {
      if (array && key.match(/^\d+$/)) {
        return str;
      }
      name = JSON.stringify('' + key);
      if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
        name = name.substr(1, name.length - 2);
        name = ctx.stylize(name, 'name');
      } else {
        name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
        name = ctx.stylize(name, 'string');
      }
    }

    return name + ': ' + str;
  }

  function reduceToSingleString(output, base, braces) {
    var numLinesEst = 0;
    var length = output.reduce(function (prev, cur) {
      numLinesEst++;
      if (cur.indexOf('\n') >= 0) numLinesEst++;
      return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
    }, 0);

    if (length > 60) {
      return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
    }

    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
  }

  function isArray(ar) {
    return Array.isArray(ar);
  }

  function isBoolean(arg) {
    return typeof arg === 'boolean';
  }

  function isNull(arg) {
    return arg === null;
  }

  function isNullOrUndefined(arg) {
    return arg == null;
  }

  function isNumber(arg) {
    return typeof arg === 'number';
  }

  function isString(arg) {
    return typeof arg === 'string';
  }

  function isSymbol(arg) {
    return typeof arg === 'symbol';
  }

  function isUndefined(arg) {
    return arg === void 0;
  }

  function isRegExp(re) {
    return isObject(re) && objectToString(re) === '[object RegExp]';
  }

  function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  }

  function isDate(d) {
    return isObject(d) && objectToString(d) === '[object Date]';
  }

  function isError(e) {
    return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
  }

  function isFunction(arg) {
    return typeof arg === 'function';
  }

  function isPrimitive(arg) {
    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || typeof arg === 'undefined';
  }

  function objectToString(o) {
    return Object.prototype.toString.call(o);
  }

  function hasOwnProperty(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
  }

  return inspect;
}();

var OBJECT_COLUMN_NAME = '(index)';
var LOG_LEVELS = {
  trace: 0,
  info: 1,
  warn: 2,
  error: 3 };

var INSPECTOR_LEVELS = [];
INSPECTOR_LEVELS[LOG_LEVELS.trace] = 'debug';
INSPECTOR_LEVELS[LOG_LEVELS.info] = 'log';
INSPECTOR_LEVELS[LOG_LEVELS.warn] = 'warning';
INSPECTOR_LEVELS[LOG_LEVELS.error] = 'error';

var INSPECTOR_FRAMES_TO_SKIP = __DEV__ ? 2 : 1;

if (global.nativeLoggingHook) {
  function getNativeLogFunction(level) {
    return function () {
      var str = void 0;
      if (arguments.length === 1 && typeof arguments[0] === 'string') {
        str = arguments[0];
      } else {
        str = Array.prototype.map.call(arguments, function (arg) {
          return inspect(arg, { depth: 10 });
        }).join(', ');
      }

      var logLevel = level;
      if (str.slice(0, 9) === 'Warning: ' && logLevel >= LOG_LEVELS.error) {
        logLevel = LOG_LEVELS.warn;
      }
      if (global.__inspectorLog) {
        global.__inspectorLog(INSPECTOR_LEVELS[logLevel], str, [].slice.call(arguments), INSPECTOR_FRAMES_TO_SKIP);
      }
      global.nativeLoggingHook(str, logLevel);
    };
  }

  function repeat(element, n) {
    return Array.apply(null, Array(n)).map(function () {
      return element;
    });
  };

  function consoleTablePolyfill(rows) {
    if (!Array.isArray(rows)) {
      var data = rows;
      rows = [];
      for (var key in data) {
        if (data.hasOwnProperty(key)) {
          var row = data[key];
          row[OBJECT_COLUMN_NAME] = key;
          rows.push(row);
        }
      }
    }
    if (rows.length === 0) {
      global.nativeLoggingHook('', LOG_LEVELS.info);
      return;
    }

    var columns = Object.keys(rows[0]).sort();
    var stringRows = [];
    var columnWidths = [];

    columns.forEach(function (k, i) {
      columnWidths[i] = k.length;
      for (var j = 0; j < rows.length; j++) {
        var cellStr = (rows[j][k] || '?').toString();
        stringRows[j] = stringRows[j] || [];
        stringRows[j][i] = cellStr;
        columnWidths[i] = Math.max(columnWidths[i], cellStr.length);
      }
    });

    function joinRow(row, space) {
      var cells = row.map(function (cell, i) {
        var extraSpaces = repeat(' ', columnWidths[i] - cell.length).join('');
        return cell + extraSpaces;
      });
      space = space || ' ';
      return cells.join(space + '|' + space);
    };

    var separators = columnWidths.map(function (columnWidth) {
      return repeat('-', columnWidth).join('');
    });
    var separatorRow = joinRow(separators, '-');
    var header = joinRow(columns);
    var table = [header, separatorRow];

    for (var i = 0; i < rows.length; i++) {
      table.push(joinRow(stringRows[i]));
    }

    global.nativeLoggingHook('\n' + table.join('\n'), LOG_LEVELS.info);
  }

  var originalConsole = global.console;
  global.console = {
    error: getNativeLogFunction(LOG_LEVELS.error),
    info: getNativeLogFunction(LOG_LEVELS.info),
    log: getNativeLogFunction(LOG_LEVELS.info),
    warn: getNativeLogFunction(LOG_LEVELS.warn),
    trace: getNativeLogFunction(LOG_LEVELS.trace),
    debug: getNativeLogFunction(LOG_LEVELS.trace),
    table: consoleTablePolyfill };

  if (__DEV__ && originalConsole) {
    var descriptor = Object.getOwnPropertyDescriptor(global, 'console');
    if (descriptor) {
      Object.defineProperty(global, 'originalConsole', descriptor);
    }

    Object.keys(console).forEach(function (methodName) {
      var reactNativeMethod = console[methodName];
      if (originalConsole[methodName]) {
        console[methodName] = function () {
          originalConsole[methodName].apply(originalConsole, arguments);
          reactNativeMethod.apply(console, arguments);
        };
      }
    });
  }
} else if (!global.console) {
  function consoleLoggingStub() {};
  global.console = {
    error: consoleLoggingStub,
    info: consoleLoggingStub,
    log: consoleLoggingStub,
    warn: consoleLoggingStub,
    trace: consoleLoggingStub,
    debug: consoleLoggingStub,
    table: consoleLoggingStub };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

var _inGuard = 0;

var _globalHandler = function onError(e) {
  throw e;
};

var ErrorUtils = {
  setGlobalHandler: function setGlobalHandler(fun) {
    _globalHandler = fun;
  },
  getGlobalHandler: function getGlobalHandler() {
    return _globalHandler;
  },
  reportError: function reportError(error) {
    _globalHandler && _globalHandler(error);
  },
  reportFatalError: function reportFatalError(error) {
    _globalHandler && _globalHandler(error, true);
  },
  applyWithGuard: function applyWithGuard(fun, context, args) {
    try {
      _inGuard++;
      return fun.apply(context, args);
    } catch (e) {
      ErrorUtils.reportError(e);
    } finally {
      _inGuard--;
    }
    return null;
  },
  applyWithGuardIfNeeded: function applyWithGuardIfNeeded(fun, context, args) {
    if (ErrorUtils.inGuard()) {
      return fun.apply(context, args);
    } else {
      ErrorUtils.applyWithGuard(fun, context, args);
    }
    return null;
  },
  inGuard: function inGuard() {
    return _inGuard;
  },
  guard: function guard(fun, name, context) {
    if (typeof fun !== 'function') {
      console.warn('A function must be passed to ErrorUtils.guard, got ', fun);
      return null;
    }
    name = name || fun.name || '<generated guard>';
    function guarded() {
      return ErrorUtils.applyWithGuard(fun, context || this, arguments, null, name);
    }

    return guarded;
  }
};

global.ErrorUtils = ErrorUtils;
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

if (Number.EPSILON === undefined) {
  Object.defineProperty(Number, 'EPSILON', {
    value: Math.pow(2, -52) });
}
if (Number.MAX_SAFE_INTEGER === undefined) {
  Object.defineProperty(Number, 'MAX_SAFE_INTEGER', {
    value: Math.pow(2, 53) - 1 });
}
if (Number.MIN_SAFE_INTEGER === undefined) {
  Object.defineProperty(Number, 'MIN_SAFE_INTEGER', {
    value: -(Math.pow(2, 53) - 1) });
}
if (!Number.isNaN) {
  var globalIsNaN = global.isNaN;
  Object.defineProperty(Number, 'isNaN', {
    configurable: true,
    enumerable: false,
    value: function isNaN(value) {
      return typeof value === 'number' && globalIsNaN(value);
    },
    writable: true });
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

if (!String.prototype.startsWith) {
  String.prototype.startsWith = function (search) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : 0;
    var start = Math.min(Math.max(pos, 0), string.length);
    return string.indexOf(String(search), pos) === start;
  };
}

if (!String.prototype.endsWith) {
  String.prototype.endsWith = function (search) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var stringLength = string.length;
    var searchString = String(search);
    var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : stringLength;
    var end = Math.min(Math.max(pos, 0), stringLength);
    var start = end - searchString.length;
    if (start < 0) {
      return false;
    }
    return string.lastIndexOf(searchString, start) === start;
  };
}

if (!String.prototype.repeat) {
  String.prototype.repeat = function (count) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    count = Number(count) || 0;
    if (count < 0 || count === Infinity) {
      throw RangeError();
    }
    if (count === 1) {
      return string;
    }
    var result = '';
    while (count) {
      if (count & 1) {
        result += string;
      }
      if (count >>= 1) {
        string += string;
      }
    }
    return result;
  };
}

if (!String.prototype.includes) {
  String.prototype.includes = function (search, start) {
    'use strict';

    if (typeof start !== 'number') {
      start = 0;
    }

    if (start + search.length > this.length) {
      return false;
    } else {
      return this.indexOf(search, start) !== -1;
    }
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
function findIndex(predicate, context) {
  if (this == null) {
    throw new TypeError('Array.prototype.findIndex called on null or undefined');
  }
  if (typeof predicate !== 'function') {
    throw new TypeError('predicate must be a function');
  }
  var list = Object(this);
  var length = list.length >>> 0;
  for (var i = 0; i < length; i++) {
    if (predicate.call(context, list[i], i, list)) {
      return i;
    }
  }
  return -1;
}

if (!Array.prototype.findIndex) {
  Object.defineProperty(Array.prototype, 'findIndex', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: findIndex });
}

if (!Array.prototype.find) {
  Object.defineProperty(Array.prototype, 'find', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: function value(predicate, context) {
      if (this == null) {
        throw new TypeError('Array.prototype.find called on null or undefined');
      }
      var index = findIndex.call(this, predicate, context);
      return index === -1 ? undefined : this[index];
    } });
}

if (!Array.prototype.includes) {
  Object.defineProperty(Array.prototype, 'includes', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: function value(searchElement) {
      var O = Object(this);
      var len = parseInt(O.length) || 0;
      if (len === 0) {
        return false;
      }
      var n = parseInt(arguments[1]) || 0;
      var k;
      if (n >= 0) {
        k = n;
      } else {
        k = len + n;
        if (k < 0) {
          k = 0;
        }
      }
      var currentElement;
      while (k < len) {
        currentElement = O[k];
        if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {
          return true;
        }
        k++;
      }
      return false;
    } });
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
if (!Array.from) {
  Array.from = function (arrayLike) {
    if (arrayLike == null) {
      throw new TypeError('Object is null or undefined');
    }

    var mapFn = arguments[1];
    var thisArg = arguments[2];

    var C = this;
    var items = Object(arrayLike);
    var symbolIterator = typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
    var mapping = typeof mapFn === 'function';
    var usingIterator = typeof items[symbolIterator] === 'function';
    var key = 0;
    var ret;
    var value;

    if (usingIterator) {
      ret = typeof C === 'function' ? new C() : [];
      var it = items[symbolIterator]();
      var next;

      while (!(next = it.next()).done) {
        value = next.value;

        if (mapping) {
          value = mapFn.call(thisArg, value, key);
        }

        ret[key] = value;
        key += 1;
      }

      ret.length = key;
      return ret;
    }

    var len = items.length;
    if (isNaN(len) || len < 0) {
      len = 0;
    }

    ret = typeof C === 'function' ? new C(len) : new Array(len);

    while (key < len) {
      value = items[key];

      if (mapping) {
        value = mapFn.call(thisArg, value, key);
      }

      ret[key] = value;

      key += 1;
    }

    ret.length = key;
    return ret;
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

(function () {
  'use strict';

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  if (typeof Object.entries !== 'function') {
    Object.entries = function (object) {
      if (object == null) {
        throw new TypeError('Object.entries called on non-object');
      }

      var entries = [];
      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          entries.push([key, object[key]]);
        }
      }
      return entries;
    };
  }

  if (typeof Object.values !== 'function') {
    Object.values = function (object) {
      if (object == null) {
        throw new TypeError('Object.values called on non-object');
      }

      var values = [];
      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          values.push(object[key]);
        }
      }
      return values;
    };
  }
})();
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

var babelHelpers = global.babelHelpers = {};

babelHelpers.typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

babelHelpers.createRawReactElement = function () {
  var REACT_ELEMENT_TYPE = typeof Symbol === "function" && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 0xeac7;
  return function createRawReactElement(type, key, props) {
    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key,
      ref: null,
      props: props,
      _owner: null };
  };
}();

babelHelpers.classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

babelHelpers.createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

babelHelpers.defineEnumerableProperties = function (obj, descs) {
  for (var key in descs) {
    var desc = descs[key];
    desc.configurable = desc.enumerable = true;
    if ('value' in desc) desc.writable = true;
    Object.defineProperty(obj, key, desc);
  }
  return obj;
};

babelHelpers.defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true });
  } else {
    obj[key] = value;
  }

  return obj;
};

babelHelpers._extends = babelHelpers.extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

babelHelpers.get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

babelHelpers.inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true } });

  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

babelHelpers.interopRequireDefault = function (obj) {
  return obj && obj.__esModule ? obj : {
    default: obj };
};

babelHelpers.interopRequireWildcard = function (obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }

    newObj.default = obj;
    return newObj;
  }
};

babelHelpers.objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

babelHelpers.possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

babelHelpers.slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

babelHelpers.taggedTemplateLiteral = function (strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw) } }));
};

babelHelpers.toArray = function (arr) {
  return Array.isArray(arr) ? arr : Array.from(arr);
};

babelHelpers.toConsumableArray = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
};
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
__d(/* myproject/index.android.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\index.android.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _login = require(305          ); // 305 = ./app/login

var _login2 = babelHelpers.interopRequireDefault(_login);

var _admin = require(307          ); // 307 = ./app/admin

var _admin2 = babelHelpers.interopRequireDefault(_admin);

var _file = require(434         ); // 434 = ./app/file

var _file2 = babelHelpers.interopRequireDefault(_file);

var _Storage = require(325              ); // 325 = ./utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _reactNativeDeprecatedCustomComponents = require(435                                        ); // 435 = react-native-deprecated-custom-components

var _reactNativeDeprecatedCustomComponents2 = babelHelpers.interopRequireDefault(_reactNativeDeprecatedCustomComponents);

var MainView = function (_Component) {
    babelHelpers.inherits(MainView, _Component);

    function MainView(props) {
        babelHelpers.classCallCheck(this, MainView);

        var _this = babelHelpers.possibleConstructorReturn(this, (MainView.__proto__ || Object.getPrototypeOf(MainView)).call(this, props));

        _this.state = {
            first: ""
        };
        return _this;
    }

    babelHelpers.createClass(MainView, [{
        key: 'render',
        value: function render() {
            var rootRoute = {
                name: "login",
                component: _file2.default
            };
            return _react2.default.createElement(_reactNativeDeprecatedCustomComponents2.default.Navigator, {
                initialRoute: rootRoute,
                configureScene: function configureScene(route) {
                    return _reactNativeDeprecatedCustomComponents2.default.Navigator.SceneConfigs.PushFromRight;
                },
                renderScene: function renderScene(route, navigator) {
                    var Component = route.component;
                    return _react2.default.createElement(Component, babelHelpers.extends({}, route.params, {
                        navigator: navigator,
                        route: route, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 42
                        }
                    }));
                },
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 34
                }
            });
        }
    }]);
    return MainView;
}(_react.Component);

exports.default = MainView;

_reactNative.AppRegistry.registerComponent('myproject', function () {
    return MainView;
});
}, 0, null, "myproject/index.android.js");
__d(/* react/index.js */function(global, require, module, exports) {'use strict';

if (process.env.NODE_ENV === 'production') {
  module.exports = require(13                             ); // 13 = ./cjs/react.production.min.js
} else {
  module.exports = require(25                          ); // 25 = ./cjs/react.development.js
}
}, 12, null, "react/index.js");
__d(/* react/cjs/react.production.min.js */function(global, require, module, exports) {"use strict";
function e(e) {
  for (var t = arguments.length - 1, r = "Minified React error #" + e + "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant=" + e, n = 0; n < t; n++) {
    r += "&args[]=" + encodeURIComponent(arguments[n + 1]);
  }r += " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";var o = new Error(r);throw o.name = "Invariant Violation", o.framesToPop = 1, o;
}function t(e, t) {}function r(e, t, r) {
  this.props = e, this.context = t, this.refs = A, this.updater = r || T;
}function n(e, t, r) {
  this.props = e, this.context = t, this.refs = A, this.updater = r || T;
}function o() {}function i(e) {
  return void 0 !== e.ref;
}function a(e) {
  return void 0 !== e.key;
}function l(e) {
  var t = e && (Z && e[Z] || e[ee]);if ("function" == typeof t) return t;
}function u(e) {
  var t = { "=": "=0", ":": "=2" };return "$" + ("" + e).replace(/[=:]/g, function (e) {
    return t[e];
  });
}function c(e) {
  var t = { "=0": "=", "=2": ":" };return ("" + ("." === e[0] && "$" === e[1] ? e.substring(2) : e.substring(1))).replace(/(=0|=2)/g, function (e) {
    return t[e];
  });
}function s(e, t) {
  return "object" == typeof e && null !== e && null != e.key ? ne.escape(e.key) : t.toString(36);
}function p(e, t, r, n) {
  var o = typeof e;if ("undefined" !== o && "boolean" !== o || (e = null), null === e || "string" === o || "number" === o || "object" === o && e.$$typeof === Y) return r(n, e, "" === t ? oe + s(e, 0) : t), 1;var i,
      a,
      l = 0,
      u = "" === t ? oe : t + ie;if (Array.isArray(e)) for (var c = 0; c < e.length; c++) {
    i = e[c], a = u + s(i, c), l += p(i, a, r, n);
  } else {
    var f = te(e);if (f) for (var d, h = f.call(e), y = 0; !(d = h.next()).done;) {
      i = d.value, a = u + s(i, y++), l += p(i, a, r, n);
    } else if ("object" === o) {
      var m = "" + e;R("31", "[object Object]" === m ? "object with keys {" + Object.keys(e).join(", ") + "}" : m, "");
    }
  }return l;
}function f(e, t, r) {
  return null == e ? 0 : p(e, "", t, r);
}function d(e) {
  return ("" + e).replace(ce, "$&/");
}function h(e, t) {
  this.func = e, this.context = t, this.count = 0;
}function y(e, t, r) {
  var n = e.func,
      o = e.context;n.call(o, t, e.count++);
}function m(e, t, r) {
  if (null == e) return e;var n = h.getPooled(t, r);ae(e, y, n), h.release(n);
}function b(e, t, r, n) {
  this.result = e, this.keyPrefix = t, this.func = r, this.context = n, this.count = 0;
}function v(e, t, r) {
  var n = e.result,
      o = e.keyPrefix,
      i = e.func,
      a = e.context,
      l = i.call(a, t, e.count++);Array.isArray(l) ? g(l, n, r, j.thatReturnsArgument) : null != l && (X.isValidElement(l) && (l = X.cloneAndReplaceKey(l, o + (!l.key || t && t.key === l.key ? "" : d(l.key) + "/") + r)), n.push(l));
}function g(e, t, r, n, o) {
  var i = "";null != r && (i = d(r) + "/");var a = b.getPooled(t, i, n, o);ae(e, v, a), b.release(a);
}function P(e, t, r) {
  if (null == e) return e;var n = [];return g(e, n, null, t, r), n;
}function k(e, t, r) {
  return null;
}function _(e, t) {
  return ae(e, k, null);
}function E(e) {
  var t = [];return g(e, t, null, j.thatReturnsArgument), t;
}function w(e) {
  return X.isValidElement(e) || R("143"), e;
}var S = require(14             );require(15                );var A = require(17                    );require(18                  );var j = require(16                      ), // 16 = fbjs/lib/emptyFunction // 18 = fbjs/lib/invariant // 17 = fbjs/lib/emptyObject // 15 = fbjs/lib/warning // 14 = object-assign
    x = require(19          ), // 19 = prop-types
    q = require(22                         ), // 22 = prop-types/checkPropTypes
    C = require(24                          ), // 24 = create-react-class/factory
    R = e,
    O = { isMounted: function isMounted(e) {
    return !1;
  }, enqueueForceUpdate: function enqueueForceUpdate(e, r, n) {
    t(e, "forceUpdate");
  }, enqueueReplaceState: function enqueueReplaceState(e, r, n, o) {
    t(e, "replaceState");
  }, enqueueSetState: function enqueueSetState(e, r, n, o) {
    t(e, "setState");
  } },
    T = O;r.prototype.isReactComponent = {}, r.prototype.setState = function (e, t) {
  "object" != typeof e && "function" != typeof e && null != e && R("85"), this.updater.enqueueSetState(this, e, t, "setState");
}, r.prototype.forceUpdate = function (e) {
  this.updater.enqueueForceUpdate(this, e, "forceUpdate");
}, o.prototype = r.prototype, n.prototype = new o(), n.prototype.constructor = n, S(n.prototype, r.prototype), n.prototype.isPureReactComponent = !0;var $ = { Component: r, PureComponent: n },
    F = function F(e) {
  var t = this;if (t.instancePool.length) {
    var r = t.instancePool.pop();return t.call(r, e), r;
  }return new t(e);
},
    U = function U(e, t) {
  var r = this;if (r.instancePool.length) {
    var n = r.instancePool.pop();return r.call(n, e, t), n;
  }return new r(e, t);
},
    I = function I(e, t, r) {
  var n = this;if (n.instancePool.length) {
    var o = n.instancePool.pop();return n.call(o, e, t, r), o;
  }return new n(e, t, r);
},
    V = function V(e, t, r, n) {
  var o = this;if (o.instancePool.length) {
    var i = o.instancePool.pop();return o.call(i, e, t, r, n), i;
  }return new o(e, t, r, n);
},
    G = function G(e) {
  var t = this;e instanceof t || R("25"), e.destructor(), t.instancePool.length < t.poolSize && t.instancePool.push(e);
},
    M = 10,
    z = F,
    D = function D(e, t) {
  var r = e;return r.instancePool = [], r.getPooled = t || z, r.poolSize || (r.poolSize = M), r.release = G, r;
},
    K = { addPoolingTo: D, oneArgumentPooler: F, twoArgumentPooler: U, threeArgumentPooler: I, fourArgumentPooler: V },
    L = K,
    N = { current: null },
    W = N,
    B = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 60103,
    Y = B,
    H = Object.prototype.hasOwnProperty,
    J = { key: !0, ref: !0, __self: !0, __source: !0 },
    Q = function Q(e, t, r, n, o, i, a) {
  return { $$typeof: Y, type: e, key: t, ref: r, props: a, _owner: i };
};Q.createElement = function (e, t, r) {
  var n,
      o = {},
      l = null,
      u = null,
      c = null,
      s = null;if (null != t) {
    i(t) && (u = t.ref), a(t) && (l = "" + t.key), c = void 0 === t.__self ? null : t.__self, s = void 0 === t.__source ? null : t.__source;for (n in t) {
      H.call(t, n) && !J.hasOwnProperty(n) && (o[n] = t[n]);
    }
  }var p = arguments.length - 2;if (1 === p) o.children = r;else if (p > 1) {
    for (var f = Array(p), d = 0; d < p; d++) {
      f[d] = arguments[d + 2];
    }o.children = f;
  }if (e && e.defaultProps) {
    var h = e.defaultProps;for (n in h) {
      void 0 === o[n] && (o[n] = h[n]);
    }
  }return Q(e, l, u, c, s, W.current, o);
}, Q.createFactory = function (e) {
  var t = Q.createElement.bind(null, e);return t.type = e, t;
}, Q.cloneAndReplaceKey = function (e, t) {
  return Q(e.type, t, e.ref, e._self, e._source, e._owner, e.props);
}, Q.cloneElement = function (e, t, r) {
  var n,
      o = S({}, e.props),
      l = e.key,
      u = e.ref,
      c = e._self,
      s = e._source,
      p = e._owner;if (null != t) {
    i(t) && (u = t.ref, p = W.current), a(t) && (l = "" + t.key);var f;e.type && e.type.defaultProps && (f = e.type.defaultProps);for (n in t) {
      H.call(t, n) && !J.hasOwnProperty(n) && (void 0 === t[n] && void 0 !== f ? o[n] = f[n] : o[n] = t[n]);
    }
  }var d = arguments.length - 2;if (1 === d) o.children = r;else if (d > 1) {
    for (var h = Array(d), y = 0; y < d; y++) {
      h[y] = arguments[y + 2];
    }o.children = h;
  }return Q(e.type, l, u, c, s, p, o);
}, Q.isValidElement = function (e) {
  return "object" == typeof e && null !== e && e.$$typeof === Y;
};var X = Q,
    Z = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
    ee = "@@iterator",
    te = l,
    re = { escape: u, unescape: c },
    ne = re,
    oe = ".",
    ie = ":",
    ae = f,
    le = L.twoArgumentPooler,
    ue = L.fourArgumentPooler,
    ce = /\/+/g;h.prototype.destructor = function () {
  this.func = null, this.context = null, this.count = 0;
}, L.addPoolingTo(h, le), b.prototype.destructor = function () {
  this.result = null, this.keyPrefix = null, this.func = null, this.context = null, this.count = 0;
}, L.addPoolingTo(b, ue);var se = { forEach: m, map: P, mapIntoWithKeyPrefixInternal: g, count: _, toArray: E },
    pe = se,
    fe = X.createFactory,
    de = { a: fe("a"), abbr: fe("abbr"), address: fe("address"), area: fe("area"), article: fe("article"), aside: fe("aside"), audio: fe("audio"), b: fe("b"), base: fe("base"), bdi: fe("bdi"), bdo: fe("bdo"), big: fe("big"), blockquote: fe("blockquote"), body: fe("body"), br: fe("br"), button: fe("button"), canvas: fe("canvas"), caption: fe("caption"), cite: fe("cite"), code: fe("code"), col: fe("col"), colgroup: fe("colgroup"), data: fe("data"), datalist: fe("datalist"), dd: fe("dd"), del: fe("del"), details: fe("details"), dfn: fe("dfn"), dialog: fe("dialog"), div: fe("div"), dl: fe("dl"), dt: fe("dt"), em: fe("em"), embed: fe("embed"), fieldset: fe("fieldset"), figcaption: fe("figcaption"), figure: fe("figure"), footer: fe("footer"), form: fe("form"), h1: fe("h1"), h2: fe("h2"), h3: fe("h3"), h4: fe("h4"), h5: fe("h5"), h6: fe("h6"), head: fe("head"), header: fe("header"), hgroup: fe("hgroup"), hr: fe("hr"), html: fe("html"), i: fe("i"), iframe: fe("iframe"), img: fe("img"), input: fe("input"), ins: fe("ins"), kbd: fe("kbd"), keygen: fe("keygen"), label: fe("label"), legend: fe("legend"), li: fe("li"), link: fe("link"), main: fe("main"), map: fe("map"), mark: fe("mark"), menu: fe("menu"), menuitem: fe("menuitem"), meta: fe("meta"), meter: fe("meter"), nav: fe("nav"), noscript: fe("noscript"), object: fe("object"), ol: fe("ol"), optgroup: fe("optgroup"), option: fe("option"), output: fe("output"), p: fe("p"), param: fe("param"), picture: fe("picture"), pre: fe("pre"), progress: fe("progress"), q: fe("q"), rp: fe("rp"), rt: fe("rt"), ruby: fe("ruby"), s: fe("s"), samp: fe("samp"), script: fe("script"), section: fe("section"), select: fe("select"), small: fe("small"), source: fe("source"), span: fe("span"), strong: fe("strong"), style: fe("style"), sub: fe("sub"), summary: fe("summary"), sup: fe("sup"), table: fe("table"), tbody: fe("tbody"), td: fe("td"), textarea: fe("textarea"), tfoot: fe("tfoot"), th: fe("th"), thead: fe("thead"), time: fe("time"), title: fe("title"), tr: fe("tr"), track: fe("track"), u: fe("u"), ul: fe("ul"), var: fe("var"), video: fe("video"), wbr: fe("wbr"), circle: fe("circle"), clipPath: fe("clipPath"), defs: fe("defs"), ellipse: fe("ellipse"), g: fe("g"), image: fe("image"), line: fe("line"), linearGradient: fe("linearGradient"), mask: fe("mask"), path: fe("path"), pattern: fe("pattern"), polygon: fe("polygon"), polyline: fe("polyline"), radialGradient: fe("radialGradient"), rect: fe("rect"), stop: fe("stop"), svg: fe("svg"), text: fe("text"), tspan: fe("tspan") },
    he = de,
    ye = x,
    me = "16.0.0-alpha.12",
    be = w,
    ve = $.Component,
    ge = X.isValidElement,
    Pe = C(ve, ge, T),
    ke = X.createElement,
    _e = X.createFactory,
    Ee = X.cloneElement,
    we = function we(e) {
  return e;
},
    Se = { Children: { map: pe.map, forEach: pe.forEach, count: pe.count, toArray: pe.toArray, only: be }, Component: $.Component, PureComponent: $.PureComponent, createElement: ke, cloneElement: Ee, isValidElement: X.isValidElement, PropTypes: ye, checkPropTypes: q, createClass: Pe, createFactory: _e, createMixin: we, DOM: he, version: me, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: W } },
    Ae = Se;module.exports = Ae;
}, 13, null, "react/cjs/react.production.min.js");
__d(/* object-assign/index.js */function(global, require, module, exports) {/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		var test1 = new String('abc');
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(babelHelpers.extends({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};
}, 14, null, "object-assign/index.js");
__d(/* fbjs/lib/warning.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(16               ); // 16 = ./emptyFunction

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  (function () {
    var printWarning = function printWarning(format) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        throw new Error(message);
      } catch (x) {}
    };

    warning = function warning(condition, format) {
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }

      if (format.indexOf('Failed Composite propType: ') === 0) {
        return;
      }

      if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }

        printWarning.apply(undefined, [format].concat(args));
      }
    };
  })();
}

module.exports = warning;
}, 15, null, "fbjs/lib/warning.js");
__d(/* fbjs/lib/emptyFunction.js */function(global, require, module, exports) {"use strict";

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
}, 16, null, "fbjs/lib/emptyFunction.js");
__d(/* fbjs/lib/emptyObject.js */function(global, require, module, exports) {

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}, 17, null, "fbjs/lib/emptyObject.js");
__d(/* fbjs/lib/invariant.js */function(global, require, module, exports) {

'use strict';

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
}

module.exports = invariant;
}, 18, null, "fbjs/lib/invariant.js");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(20                         )(isValidElement, throwOnDirectAccess); // 20 = ./factoryWithTypeCheckers
} else {
  module.exports = require(23                          )(); // 23 = ./factoryWithThrowingShims
}
}, 19, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(16                      ); // 16 = fbjs/lib/emptyFunction
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var warning = require(15                ); // 15 = fbjs/lib/warning

var ReactPropTypesSecret = require(21                          ); // 21 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(22                ); // 22 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 20, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 21, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(18                  ); // 18 = fbjs/lib/invariant
  var warning = require(15                ); // 15 = fbjs/lib/warning
  var ReactPropTypesSecret = require(21                          ); // 21 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 22, null, "prop-types/checkPropTypes.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(16                      ); // 16 = fbjs/lib/emptyFunction
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var ReactPropTypesSecret = require(21                          ); // 21 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 23, null, "prop-types/factoryWithThrowingShims.js");
__d(/* create-react-class/factory.js */function(global, require, module, exports) {

'use strict';

var _assign = require(14             ); // 14 = object-assign

var emptyObject = require(17                    ); // 17 = fbjs/lib/emptyObject
var _invariant = require(18                  ); // 18 = fbjs/lib/invariant

if (process.env.NODE_ENV !== 'production') {
  var warning = require(15                ); // 15 = fbjs/lib/warning
}

var MIXINS_KEY = 'mixins';

function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {

  var injectedMixins = [];

  var ReactClassInterface = {
    mixins: 'DEFINE_MANY',

    statics: 'DEFINE_MANY',

    propTypes: 'DEFINE_MANY',

    contextTypes: 'DEFINE_MANY',

    childContextTypes: 'DEFINE_MANY',

    getDefaultProps: 'DEFINE_MANY_MERGED',

    getInitialState: 'DEFINE_MANY_MERGED',

    getChildContext: 'DEFINE_MANY_MERGED',

    render: 'DEFINE_ONCE',

    componentWillMount: 'DEFINE_MANY',

    componentDidMount: 'DEFINE_MANY',

    componentWillReceiveProps: 'DEFINE_MANY',

    shouldComponentUpdate: 'DEFINE_ONCE',

    componentWillUpdate: 'DEFINE_MANY',

    componentDidUpdate: 'DEFINE_MANY',

    componentWillUnmount: 'DEFINE_MANY',

    updateComponent: 'OVERRIDE_BASE'
  };

  var RESERVED_SPEC_KEYS = {
    displayName: function displayName(Constructor, _displayName) {
      Constructor.displayName = _displayName;
    },
    mixins: function mixins(Constructor, _mixins) {
      if (_mixins) {
        for (var i = 0; i < _mixins.length; i++) {
          mixSpecIntoComponent(Constructor, _mixins[i]);
        }
      }
    },
    childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
    },
    contextTypes: function contextTypes(Constructor, _contextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _contextTypes, 'context');
      }
      Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
    },

    getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
      } else {
        Constructor.getDefaultProps = _getDefaultProps;
      }
    },
    propTypes: function propTypes(Constructor, _propTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
    },
    statics: function statics(Constructor, _statics) {
      mixStaticSpecIntoComponent(Constructor, _statics);
    },
    autobind: function autobind() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        if (process.env.NODE_ENV !== 'production') {
          warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName);
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);
    }

    if (isAlreadyDefined) {
      _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);
    }
  }

  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (process.env.NODE_ENV !== 'production') {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (process.env.NODE_ENV !== 'production') {
          warning(isMixinValid, "%s: You're attempting to include a mixin that is either null " + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec);
        }
      }

      return;
    }

    _invariant(typeof spec !== 'function', "ReactClass: You're attempting to " + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');
    _invariant(!isValidElement(spec), "ReactClass: You're attempting to " + 'use a component as a mixin. Instead, just use a regular object.');

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name);

            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (process.env.NODE_ENV !== 'production') {
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }
    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);

      var isInherited = name in Constructor;
      _invariant(!isInherited, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);
      Constructor[name] = property;
    }
  }

  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);
        one[key] = two[key];
      }
    }
    return one;
  }

  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (process.env.NODE_ENV !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function (newThis) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        if (newThis !== component && newThis !== null) {
          if (process.env.NODE_ENV !== 'production') {
            warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName);
          }
        } else if (!args.length) {
          if (process.env.NODE_ENV !== 'production') {
            warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName);
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function componentDidMount() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function componentWillUnmount() {
      this.__isMounted = false;
    }
  };

  var ReactClassMixin = {
    replaceState: function replaceState(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    isMounted: function isMounted() {
      if (process.env.NODE_ENV !== 'production') {
        warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component');
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function ReactClassComponent() {};
  _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

  function createClass(spec) {
    var Constructor = identity(function (props, context, updater) {

      if (process.env.NODE_ENV !== 'production') {
        warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory');
      }

      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          initialState = null;
        }
      }
      _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');

    if (process.env.NODE_ENV !== 'production') {
      warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component');
      warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component');
    }

    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;
}, 24, null, "create-react-class/factory.js");
__d(/* react/cjs/react.development.js */function(global, require, module, exports) {'use strict';

var objectAssign$1 = require(14             ); // 14 = object-assign
var warning = require(15                ); // 15 = fbjs/lib/warning
var emptyObject = require(17                    ); // 17 = fbjs/lib/emptyObject
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var emptyFunction = require(16                      ); // 16 = fbjs/lib/emptyFunction
var checkPropTypes = require(22                         ); // 22 = prop-types/checkPropTypes
var propTypes = require(19          ); // 19 = prop-types
var factory = require(24                          ); // 24 = create-react-class/factory

function warnNoop(publicInstance, callerName) {
  {
    var constructor = publicInstance.constructor;
    warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass');
  }
}

var ReactNoopUpdateQueue = {
  isMounted: function isMounted(publicInstance) {
    return false;
  },

  enqueueForceUpdate: function enqueueForceUpdate(publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  enqueueSetState: function enqueueSetState(publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var ReactNoopUpdateQueue_1 = ReactNoopUpdateQueue;

var canDefineProperty$1 = false;
{
  try {
    Object.defineProperty({}, 'x', { get: function get() {} });
    canDefineProperty$1 = true;
  } catch (x) {}
}

var canDefineProperty_1 = canDefineProperty$1;

function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;

  this.updater = updater || ReactNoopUpdateQueue_1;
}

ReactComponent.prototype.isReactComponent = {};

ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};

ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};

{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
    if (canDefineProperty_1) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function get() {
          warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ReactPureComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;

  this.updater = updater || ReactNoopUpdateQueue_1;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;

objectAssign$1(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

var ReactBaseClasses = {
  Component: ReactComponent,
  PureComponent: ReactPureComponent
};

var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler$1 = function twoArgumentPooler$1(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler$1 = function fourArgumentPooler$1(a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function standardReleaser(instance) {
  var Klass = this;
  !(instance instanceof Klass) ? invariant(false, 'Trying to release an instance into a pool of a different type.') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler$1,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler$1
};

var PooledClass_1 = PooledClass;

var ReactCurrentOwner = {
  current: null
};

var ReactCurrentOwner_1 = ReactCurrentOwner;

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

var ReactElementSymbol = REACT_ELEMENT_TYPE;

var hasOwnProperty = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown;
var specialPropRefWarningShown;

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function warnAboutAccessingKey() {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function warnAboutAccessingRef() {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
  var element = {
    $$typeof: ReactElementSymbol,

    type: type,
    key: key,
    ref: ref,
    props: props,

    _owner: owner
  };

  {
    element._store = {};

    if (canDefineProperty_1) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });

      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });

      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

ReactElement.createElement = function (type, config, children) {
  var propName;

  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== ReactElementSymbol) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner_1.current, props);
};

ReactElement.createFactory = function (type) {
  var factory$$1 = ReactElement.createElement.bind(null, type);

  factory$$1.type = type;
  return factory$$1;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

ReactElement.cloneElement = function (element, config, children) {
  var propName;

  var props = objectAssign$1({}, element.props);

  var key = element.key;
  var ref = element.ref;

  var self = element._self;

  var source = element._source;

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
      owner = ReactCurrentOwner_1.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === ReactElementSymbol;
};

var ReactElement_1 = ReactElement;

var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

var getIteratorFn_1 = getIteratorFn;

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

var KeyEscapeUtils_1 = KeyEscapeUtils;

var ReactTypeOfWork = {
  IndeterminateComponent: 0,
  FunctionalComponent: 1,
  ClassComponent: 2,
  HostRoot: 3,
  HostPortal: 4,
  HostComponent: 5,
  HostText: 6,
  CoroutineComponent: 7,
  CoroutineHandlerPhase: 8,
  YieldComponent: 9,
  Fragment: 10
};

function getComponentName(instanceOrFiber) {
  if (typeof instanceOrFiber.getName === 'function') {
    var instance = instanceOrFiber;
    return instance.getName();
  }
  if (typeof instanceOrFiber.tag === 'number') {
    var fiber = instanceOrFiber;
    var type = fiber.type;

    if (typeof type === 'string') {
      return type;
    }
    if (typeof type === 'function') {
      return type.displayName || type.name;
    }
  }
  return null;
}

var getComponentName_1 = getComponentName;

var IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent;
var FunctionalComponent = ReactTypeOfWork.FunctionalComponent;
var ClassComponent = ReactTypeOfWork.ClassComponent;
var HostComponent = ReactTypeOfWork.HostComponent;

function describeComponentFrame$1(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function describeFiber(fiber) {
  switch (fiber.tag) {
    case IndeterminateComponent:
    case FunctionalComponent:
    case ClassComponent:
    case HostComponent:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName_1(fiber);
      var ownerName = null;
      if (owner) {
        ownerName = getComponentName_1(owner);
      }
      return describeComponentFrame$1(name, source, ownerName);
    default:
      return '';
  }
}

function getStackAddendumByWorkInProgressFiber$1(workInProgress) {
  var info = '';
  var node = workInProgress;
  do {
    info += describeFiber(node);

    node = node['return'];
  } while (node);
  return info;
}

var ReactFiberComponentTreeHook = {
  getStackAddendumByWorkInProgressFiber: getStackAddendumByWorkInProgressFiber$1,
  describeComponentFrame: describeComponentFrame$1
};

var getStackAddendumByWorkInProgressFiber = ReactFiberComponentTreeHook.getStackAddendumByWorkInProgressFiber;
var describeComponentFrame = ReactFiberComponentTreeHook.describeComponentFrame;

function isNative(fn) {
  var funcToString = Function.prototype.toString;
  var reIsNative = RegExp('^' + funcToString.call(Object.prototype.hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections = typeof Array.from === 'function' && typeof Map === 'function' && isNative(Map) && Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) && typeof Set === 'function' && isNative(Set) && Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function setItem(id, item) {
    itemMap.set(id, item);
  };
  getItem = function getItem(id) {
    return itemMap.get(id);
  };
  removeItem = function removeItem(id) {
    itemMap['delete'](id);
  };
  getItemIDs = function getItemIDs() {
    return Array.from(itemMap.keys());
  };

  addRoot = function addRoot(id) {
    rootIDSet.add(id);
  };
  removeRoot = function removeRoot(id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function getRootIDs() {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  var getKeyFromID = function getKeyFromID(id) {
    return '.' + id;
  };
  var getIDFromKey = function getIDFromKey(key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function setItem(id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function getItem(id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function removeItem(id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function getItemIDs() {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function addRoot(id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function removeRoot(id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function getRootIDs() {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function _getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName = void 0;

  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id);
  return describeComponentFrame(name || '', element && element._source, ownerName || '');
}

var ReactComponentTreeHook = {
  onSetChildren: function onSetChildren(id, nextChildIDs) {
    var item = getItem(id);
    invariant(item, 'Item must have been set');
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : void 0;
      !nextChild.isMounted ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
      }
      !(nextChild.parentID === id) ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function onBeforeMountComponent(id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      return;
    }
    item.element = element;
  },
  onMountComponent: function onMountComponent(id) {
    var item = getItem(id);
    invariant(item, 'Item must have been set');
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function onUpdateComponent(id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function onUnmountComponent(id) {
    var item = getItem(id);
    if (item) {
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function purgeUnmountedComponents() {
    if (ReactComponentTreeHook._preventPurging) {
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function isMounted(id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function getCurrentStackAddendum(topElement) {
    var info = '';
    if (topElement) {
      var name = _getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && getComponentName_1(owner));
    }

    var currentOwner = ReactCurrentOwner_1.current;
    if (currentOwner) {
      if (typeof currentOwner.tag === 'number') {
        var workInProgress = currentOwner;

        info += getStackAddendumByWorkInProgressFiber(workInProgress);
      } else if (typeof currentOwner._debugID === 'number') {
        info += ReactComponentTreeHook.getStackAddendumByID(currentOwner._debugID);
      }
    }
    return info;
  },
  getStackAddendumByID: function getStackAddendumByID(id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function getChildIDs(id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function getDisplayName(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return _getDisplayName(element);
  },
  getElement: function getElement(id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function getOwnerID(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function getParentID(id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function getSource(id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function getText(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function getUpdateCount(id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },

  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs
};

var ReactComponentTreeHook_1 = ReactComponentTreeHook;

{
  var _require = ReactComponentTreeHook_1,
      getCurrentStackAddendum = _require.getCurrentStackAddendum;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

var didWarnAboutMaps = false;

function getComponentKey(component, index) {
  if (typeof component === 'object' && component !== null && component.key != null) {
    return KeyEscapeUtils_1.escape(component.key);
  }

  return index.toString(36);
}

function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === ReactElementSymbol) {
    callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0;
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn_1(children);
    if (iteratorFn) {
      {
        if (iteratorFn === children.entries) {
          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getCurrentStackAddendum());
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step;
      var ii = 0;
      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';
      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentStackAddendum();
      }
      var childrenString = '' + children;
      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
    }
  }

  return subtreeCount;
}

function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

var traverseAllChildren_1 = traverseAllChildren;

var twoArgumentPooler = PooledClass_1.twoArgumentPooler;
var fourArgumentPooler = PooledClass_1.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass_1.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren_1(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass_1.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;

  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement_1.isValidElement(mappedChild)) {
      mappedChild = ReactElement_1.cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren_1(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

function countChildren(children, context) {
  return traverseAllChildren_1(children, forEachSingleChildDummy, null);
}

function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

var ReactChildren_1 = ReactChildren;

var ReactDebugCurrentFrame$1 = {};

{
  var _require$2 = ReactComponentTreeHook_1,
      getStackAddendumByID = _require$2.getStackAddendumByID,
      getCurrentStackAddendum$2 = _require$2.getCurrentStackAddendum;

  var _require2$1 = ReactFiberComponentTreeHook,
      getStackAddendumByWorkInProgressFiber$2 = _require2$1.getStackAddendumByWorkInProgressFiber;

  ReactDebugCurrentFrame$1.current = null;

  ReactDebugCurrentFrame$1.element = null;

  ReactDebugCurrentFrame$1.getStackAddendum = function () {
    var stack = null;
    var current = ReactDebugCurrentFrame$1.current;
    var element = ReactDebugCurrentFrame$1.element;
    if (current !== null) {
      if (typeof current === 'number') {
        var debugID = current;
        stack = getStackAddendumByID(debugID);
      } else if (typeof current.tag === 'number') {
        var workInProgress = current;
        stack = getStackAddendumByWorkInProgressFiber$2(workInProgress);
      }
    } else if (element !== null) {
      stack = getCurrentStackAddendum$2(element);
    }
    return stack;
  };
}

var ReactDebugCurrentFrame_1 = ReactDebugCurrentFrame$1;

{
  var checkPropTypes$1 = checkPropTypes;
  var warning$2 = warning;
  var ReactDebugCurrentFrame = ReactDebugCurrentFrame_1;

  var _require$1 = ReactComponentTreeHook_1,
      getCurrentStackAddendum$1 = _require$1.getCurrentStackAddendum;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner_1.current) {
    var name = getComponentName_1(ReactCurrentOwner_1.current);
    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner_1.current) {
    childOwner = ' It was passed a child from ' + getComponentName_1(element._owner) + '.';
  }

  warning$2(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getCurrentStackAddendum$1(element));
}

function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement_1.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement_1.isValidElement(node)) {
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn_1(node);

    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement_1.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;

  var propTypes$$1 = typeof componentClass.__propTypesSecretDontUseThesePlease === 'object' ? componentClass.__propTypesSecretDontUseThesePlease : componentClass.propTypes;

  if (propTypes$$1) {
    checkPropTypes$1(propTypes$$1, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    warning$2(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
  }
}

var ReactElementValidator$2 = {
  createElement: function createElement(type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';

    if (!validType) {
      var info = '';
      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in.";
      }

      var sourceInfo = getSourceInfoErrorAddendum(props);
      if (sourceInfo) {
        info += sourceInfo;
      } else {
        info += getDeclarationErrorAddendum();
      }

      info += getCurrentStackAddendum$1();

      warning$2(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);
    }

    var element = ReactElement_1.createElement.apply(this, arguments);

    if (element == null) {
      return element;
    }

    {
      ReactDebugCurrentFrame.element = element;
    }

    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    {
      ReactDebugCurrentFrame.element = null;
    }

    return element;
  },

  createFactory: function createFactory(type) {
    var validatedFactory = ReactElementValidator$2.createElement.bind(null, type);

    validatedFactory.type = type;

    {
      if (canDefineProperty_1) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function get() {
            warning$2(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function cloneElement(element, props, children) {
    var newElement = ReactElement_1.cloneElement.apply(this, arguments);
    {
      ReactDebugCurrentFrame.element = newElement;
    }
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    {
      ReactDebugCurrentFrame.element = null;
    }
    return newElement;
  }
};

var ReactElementValidator_1 = ReactElementValidator$2;

var createDOMFactory = ReactElement_1.createFactory;
{
  var ReactElementValidator$1 = ReactElementValidator_1;
  createDOMFactory = ReactElementValidator$1.createFactory;
}

var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

var ReactDOMFactories_1 = ReactDOMFactories;

var ReactPropTypes = propTypes;

var ReactVersion = '16.0.0-alpha.12';

function onlyChild(children) {
  !ReactElement_1.isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
  return children;
}

var onlyChild_1 = onlyChild;

var Component = ReactBaseClasses.Component;

var isValidElement = ReactElement_1.isValidElement;

var createClass = factory(Component, isValidElement, ReactNoopUpdateQueue_1);

var createElement = ReactElement_1.createElement;
var createFactory = ReactElement_1.createFactory;
var cloneElement = ReactElement_1.cloneElement;

{
  var warning$1 = warning;
  var canDefineProperty = canDefineProperty_1;
  var ReactElementValidator = ReactElementValidator_1;
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var createMixin = function createMixin(mixin) {
  return mixin;
};

var React = {

  Children: {
    map: ReactChildren_1.map,
    forEach: ReactChildren_1.forEach,
    count: ReactChildren_1.count,
    toArray: ReactChildren_1.toArray,
    only: onlyChild_1
  },

  Component: ReactBaseClasses.Component,
  PureComponent: ReactBaseClasses.PureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement_1.isValidElement,

  PropTypes: ReactPropTypes,
  checkPropTypes: checkPropTypes,
  createClass: createClass,

  createFactory: createFactory,
  createMixin: createMixin,

  DOM: ReactDOMFactories_1,

  version: ReactVersion,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    ReactCurrentOwner: ReactCurrentOwner_1
  }
};

{
  objectAssign$1(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
    ReactComponentTreeHook: ReactComponentTreeHook_1,
    ReactDebugCurrentFrame: ReactDebugCurrentFrame_1
  });

  var warnedForCheckPropTypes = false;
  var warnedForCreateMixin = false;
  var warnedForCreateClass = false;
  var warnedForPropTypes = false;

  React.createMixin = function (mixin) {
    warning$1(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. You ' + 'can use this mixin directly instead.');
    warnedForCreateMixin = true;
    return mixin;
  };

  if (canDefineProperty) {
    Object.defineProperty(React, 'checkPropTypes', {
      get: function get() {
        warning$1(warnedForCheckPropTypes, 'checkPropTypes has been moved to a separate package. ' + 'Accessing React.checkPropTypes is no longer supported ' + 'and will be removed completely in React 16. ' + 'Use the prop-types package on npm instead. ' + '(https://fb.me/migrating-from-react-proptypes)');
        warnedForCheckPropTypes = true;
        return checkPropTypes;
      }
    });

    Object.defineProperty(React, 'createClass', {
      get: function get() {
        warning$1(warnedForCreateClass, 'React.createClass is no longer supported. Use a plain JavaScript ' + "class instead. If you're not yet ready to migrate, " + 'create-react-class is available on npm as a drop-in replacement. ' + '(https://fb.me/migrating-from-react-create-class)');
        warnedForCreateClass = true;
        return createClass;
      }
    });

    Object.defineProperty(React, 'PropTypes', {
      get: function get() {
        warning$1(warnedForPropTypes, 'PropTypes has been moved to a separate package. ' + 'Accessing React.PropTypes is no longer supported ' + 'and will be removed completely in React 16. ' + 'Use the prop-types package on npm instead. ' + '(https://fb.me/migrating-from-react-proptypes)');
        warnedForPropTypes = true;
        return ReactPropTypes;
      }
    });
  }

  React.DOM = {};
  var warnedForFactories = false;
  Object.keys(ReactDOMFactories_1).forEach(function (factory$$1) {
    React.DOM[factory$$1] = function () {
      if (!warnedForFactories) {
        warning$1(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in the future. Use the ' + 'react-addons-dom-factories package instead.', factory$$1);
        warnedForFactories = true;
      }
      return ReactDOMFactories_1[factory$$1].apply(ReactDOMFactories_1, arguments);
    };
  });
}

var React_1 = React;

module.exports = React_1;
}, 25, null, "react/cjs/react.development.js");
__d(/* react-native-implementation */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var ReactNative = {
  get AccessibilityInfo() {
    return require(27                 ); // 27 = AccessibilityInfo
  },
  get ActivityIndicator() {
    return require(58                 ); // 58 = ActivityIndicator
  },
  get ART() {
    return require(169             ); // 169 = ReactNativeART
  },
  get Button() {
    return require(175     ); // 175 = Button
  },
  get DatePickerIOS() {
    return require(211            ); // 211 = DatePickerIOS
  },
  get DrawerLayoutAndroid() {
    return require(212                  ); // 212 = DrawerLayoutAndroid
  },
  get FlatList() {
    return require(214       ); // 214 = FlatList
  },
  get Image() {
    return require(200    ); // 200 = Image
  },
  get ImageBackground() {
    return require(227              ); // 227 = ImageBackground
  },
  get ImageEditor() {
    return require(228          ); // 228 = ImageEditor
  },
  get ImageStore() {
    return require(229         ); // 229 = ImageStore
  },
  get KeyboardAvoidingView() {
    return require(230                   ); // 230 = KeyboardAvoidingView
  },
  get ListView() {
    return require(216       ); // 216 = ListView
  },
  get Modal() {
    return require(232    ); // 232 = Modal
  },
  get NavigatorIOS() {
    return require(254           ); // 254 = NavigatorIOS
  },
  get Picker() {
    return require(255     ); // 255 = Picker
  },
  get PickerIOS() {
    return require(256        ); // 256 = PickerIOS
  },
  get ProgressBarAndroid() {
    return require(258                 ); // 258 = ProgressBarAndroid
  },
  get ProgressViewIOS() {
    return require(259              ); // 259 = ProgressViewIOS
  },
  get ScrollView() {
    return require(202         ); // 202 = ScrollView
  },
  get SectionList() {
    return require(260          ); // 260 = SectionList
  },
  get SegmentedControlIOS() {
    return require(262                  ); // 262 = SegmentedControlIOS
  },
  get Slider() {
    return require(263     ); // 263 = Slider
  },
  get SnapshotViewIOS() {
    return require(264              ); // 264 = SnapshotViewIOS
  },
  get Switch() {
    return require(265     ); // 265 = Switch
  },
  get RefreshControl() {
    return require(221             ); // 221 = RefreshControl
  },
  get StatusBar() {
    return require(213        ); // 213 = StatusBar
  },
  get SwipeableListView() {
    return require(266                ); // 266 = SwipeableListView
  },
  get TabBarIOS() {
    return require(271        ); // 271 = TabBarIOS
  },
  get Text() {
    return require(176   ); // 176 = Text
  },
  get TextInput() {
    return require(273        ); // 273 = TextInput
  },
  get ToastAndroid() {
    return require(111           ); // 111 = ToastAndroid
  },
  get ToolbarAndroid() {
    return require(279             ); // 279 = ToolbarAndroid
  },
  get Touchable() {
    return require(177        ); // 177 = Touchable
  },
  get TouchableHighlight() {
    return require(243                 ); // 243 = TouchableHighlight
  },
  get TouchableNativeFeedback() {
    return require(184                      ); // 184 = TouchableNativeFeedback
  },
  get TouchableOpacity() {
    return require(188               ); // 188 = TouchableOpacity
  },
  get TouchableWithoutFeedback() {
    return require(185                       ); // 185 = TouchableWithoutFeedback
  },
  get View() {
    return require(124   ); // 124 = View
  },
  get ViewPagerAndroid() {
    return require(280               ); // 280 = ViewPagerAndroid
  },
  get VirtualizedList() {
    return require(222              ); // 222 = VirtualizedList
  },
  get WebView() {
    return require(281      ); // 281 = WebView
  },

  get ActionSheetIOS() {
    return require(282             ); // 282 = ActionSheetIOS
  },
  get AdSupportIOS() {
    return require(283           ); // 283 = AdSupportIOS
  },
  get Alert() {
    return require(99     ); // 99 = Alert
  },
  get AlertIOS() {
    return require(100       ); // 100 = AlertIOS
  },
  get Animated() {
    return require(189       ); // 189 = Animated
  },
  get AppRegistry() {
    return require(284          ); // 284 = AppRegistry
  },
  get AppState() {
    return require(55        ); // 55 = AppState
  },
  get AsyncStorage() {
    return require(290           ); // 290 = AsyncStorage
  },
  get BackAndroid() {
    return require(291          ); // 291 = BackAndroid
  },
  get BackHandler() {
    return require(289          ); // 289 = BackHandler
  },
  get CameraRoll() {
    return require(292         ); // 292 = CameraRoll
  },
  get Clipboard() {
    return require(293        ); // 293 = Clipboard
  },
  get DatePickerAndroid() {
    return require(294                ); // 294 = DatePickerAndroid
  },
  get DeviceInfo() {
    return require(156         ); // 156 = DeviceInfo
  },
  get Dimensions() {
    return require(155         ); // 155 = Dimensions
  },
  get Easing() {
    return require(198     ); // 198 = Easing
  },
  get findNodeHandle() {
    return require(62           ).findNodeHandle; // 62 = ReactNative
  },
  get I18nManager() {
    return require(253          ); // 253 = I18nManager
  },
  get ImagePickerIOS() {
    return require(295             ); // 295 = ImagePickerIOS
  },
  get InteractionManager() {
    return require(191                 ); // 191 = InteractionManager
  },
  get Keyboard() {
    return require(51        ); // 51 = Keyboard
  },
  get LayoutAnimation() {
    return require(231              ); // 231 = LayoutAnimation
  },
  get Linking() {
    return require(296      ); // 296 = Linking
  },
  get NativeEventEmitter() {
    return require(50                  ); // 50 = NativeEventEmitter
  },
  get NetInfo() {
    return require(297      ); // 297 = NetInfo
  },
  get PanResponder() {
    return require(269           ); // 269 = PanResponder
  },
  get PermissionsAndroid() {
    return require(102                 ); // 102 = PermissionsAndroid
  },
  get PixelRatio() {
    return require(154         ); // 154 = PixelRatio
  },
  get PushNotificationIOS() {
    return require(298                  ); // 298 = PushNotificationIOS
  },
  get Settings() {
    return require(299       ); // 299 = Settings
  },
  get Share() {
    return require(300    ); // 300 = Share
  },
  get StatusBarIOS() {
    return require(49            ); // 49 = StatusBarIOS
  },
  get StyleSheet() {
    return require(153         ); // 153 = StyleSheet
  },
  get Systrace() {
    return require(32        ); // 32 = Systrace
  },
  get TimePickerAndroid() {
    return require(301                ); // 301 = TimePickerAndroid
  },
  get TVEventHandler() {
    return require(181             ); // 181 = TVEventHandler
  },
  get UIManager() {
    return require(54         ); // 54 = UIManager
  },
  get unstable_batchedUpdates() {
    return require(62           ).unstable_batchedUpdates; // 62 = ReactNative
  },
  get Vibration() {
    return require(302        ); // 302 = Vibration
  },
  get VibrationIOS() {
    return require(303           ); // 303 = VibrationIOS
  },

  get DeviceEventEmitter() {
    return require(44                     ); // 44 = RCTDeviceEventEmitter
  },
  get NativeAppEventEmitter() {
    return require(106                       ); // 106 = RCTNativeAppEventEmitter
  },
  get NativeModules() {
    return require(28             ); // 28 = NativeModules
  },
  get Platform() {
    return require(36        ); // 36 = Platform
  },
  get processColor() {
    return require(136           ); // 136 = processColor
  },
  get requireNativeComponent() {
    return require(151                     ); // 151 = requireNativeComponent
  },
  get takeSnapshot() {
    return require(304           ); // 304 = takeSnapshot
  },

  get ColorPropType() {
    return require(59             ); // 59 = ColorPropType
  },
  get EdgeInsetsPropType() {
    return require(142                 ); // 142 = EdgeInsetsPropType
  },
  get PointPropType() {
    return require(203            ); // 203 = PointPropType
  },
  get ViewPropTypes() {
    return require(141            ); // 141 = ViewPropTypes
  },

  get Navigator() {
    invariant(false, 'Navigator is deprecated and has been removed from this package. It can now be installed ' + 'and imported from `react-native-deprecated-custom-components` instead of `react-native`. ' + 'Learn about alternative navigation solutions at http://facebook.github.io/react-native/docs/navigation.html');
  }
};

module.exports = ReactNative;
}, 26, null, "react-native-implementation");
__d(/* AccessibilityInfo */function(global, require, module, exports) {
'use strict';

var NativeModules = require(28             ); // 28 = NativeModules
var RCTDeviceEventEmitter = require(44                     ); // 44 = RCTDeviceEventEmitter

var RCTAccessibilityInfo = NativeModules.AccessibilityInfo;

var TOUCH_EXPLORATION_EVENT = 'touchExplorationDidChange';

var _subscriptions = new Map();

var AccessibilityInfo = {

  fetch: function fetch() {
    return new Promise(function (resolve, reject) {
      RCTAccessibilityInfo.isTouchExplorationEnabled(function (resp) {
        resolve(resp);
      });
    });
  },

  addEventListener: function addEventListener(eventName, handler) {
    var listener = RCTDeviceEventEmitter.addListener(TOUCH_EXPLORATION_EVENT, function (enabled) {
      handler(enabled);
    });
    _subscriptions.set(handler, listener);
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    var listener = _subscriptions.get(handler);
    if (!listener) {
      return;
    }
    listener.remove();
    _subscriptions.delete(handler);
  }

};

module.exports = AccessibilityInfo;
}, 27, null, "AccessibilityInfo");
__d(/* NativeModules */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(29             ); // 29 = BatchedBridge

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

function genModule(config, moduleID) {
  if (!config) {
    return null;
  }

  var _config = babelHelpers.slicedToArray(config, 5),
      moduleName = _config[0],
      constants = _config[1],
      methods = _config[2],
      promiseMethods = _config[3],
      syncMethods = _config[4];

  invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), 'Module name prefixes should\'ve been stripped by the native side ' + 'but wasn\'t for ' + moduleName);

  if (!constants && !methods) {
    return { name: moduleName };
  }

  var module = {};
  methods && methods.forEach(function (methodName, methodID) {
    var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);
    var isSync = syncMethods && arrayContains(syncMethods, methodID);
    invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');
    var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';
    module[methodName] = genMethod(moduleID, methodID, methodType);
  });
  babelHelpers.extends(module, constants);

  if (__DEV__) {
    BatchedBridge.createDebugLookup(moduleID, moduleName, methods);
  }

  return { name: moduleName, module: module };
}

global.__fbGenNativeModule = genModule;

function loadModule(name, moduleID) {
  invariant(global.nativeRequireModuleConfig, 'Can\'t lazily create module without nativeRequireModuleConfig');
  var config = global.nativeRequireModuleConfig(name);
  var info = genModule(config, moduleID);
  return info && info.module;
}

function genMethod(moduleID, methodID, type) {
  var fn = null;
  if (type === 'promise') {
    fn = function fn() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return new Promise(function (resolve, reject) {
        BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {
          return resolve(data);
        }, function (errorData) {
          return reject(createErrorFromErrorData(errorData));
        });
      });
    };
  } else if (type === 'sync') {
    fn = function fn() {
      if (__DEV__) {
        invariant(global.nativeCallSyncHook, 'Calling synchronous methods on native ' + 'modules is not supported in Chrome.\n\n Consider providing alternative ' + 'methods to expose this method in debug mode, e.g. by exposing constants ' + 'ahead-of-time.');
      }

      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return global.nativeCallSyncHook(moduleID, methodID, args);
    };
  } else {
    fn = function fn() {
      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      var lastArg = args.length > 0 ? args[args.length - 1] : null;
      var secondLastArg = args.length > 1 ? args[args.length - 2] : null;
      var hasSuccessCallback = typeof lastArg === 'function';
      var hasErrorCallback = typeof secondLastArg === 'function';
      hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');
      var onSuccess = hasSuccessCallback ? lastArg : null;
      var onFail = hasErrorCallback ? secondLastArg : null;
      var callbackCount = hasSuccessCallback + hasErrorCallback;
      args = args.slice(0, args.length - callbackCount);
      BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);
    };
  }
  fn.type = type;
  return fn;
}

function arrayContains(array, value) {
  return array.indexOf(value) !== -1;
}

function createErrorFromErrorData(errorData) {
  var _ref = errorData || {},
      message = _ref.message,
      extraErrorInfo = babelHelpers.objectWithoutProperties(_ref, ['message']);

  var error = new Error(message);
  error.framesToPop = 1;
  return babelHelpers.extends(error, extraErrorInfo);
}

var NativeModules = {};
if (global.nativeModuleProxy) {
  NativeModules = global.nativeModuleProxy;
} else {
  var bridgeConfig = global.__fbBatchedBridgeConfig;
  invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');

  var defineLazyObjectProperty = require(43                        ); // 43 = defineLazyObjectProperty
  (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {
    var info = genModule(config, moduleID);
    if (!info) {
      return;
    }

    if (info.module) {
      NativeModules[info.name] = info.module;
    } else {
        defineLazyObjectProperty(NativeModules, info.name, {
          get: function get() {
            return loadModule(info.name, moduleID);
          }
        });
      }
  });
}

module.exports = NativeModules;
}, 28, null, "NativeModules");
__d(/* BatchedBridge */function(global, require, module, exports) {
'use strict';

var MessageQueue = require(30            ); // 30 = MessageQueue
var BatchedBridge = new MessageQueue();

Object.defineProperty(global, '__fbBatchedBridge', {
  configurable: true,
  value: BatchedBridge
});

module.exports = BatchedBridge;
}, 29, null, "BatchedBridge");
__d(/* MessageQueue */function(global, require, module, exports) {

'use strict';

var ErrorUtils = require(31          ); // 31 = ErrorUtils
var Systrace = require(32        ); // 32 = Systrace

var deepFreezeAndThrowOnMutationInDev = require(33                                 ); // 33 = deepFreezeAndThrowOnMutationInDev
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var stringifySafe = require(34             ); // 34 = stringifySafe

var TO_JS = 0;
var TO_NATIVE = 1;

var MODULE_IDS = 0;
var METHOD_IDS = 1;
var PARAMS = 2;
var MIN_TIME_BETWEEN_FLUSHES_MS = 5;

var TRACE_TAG_REACT_APPS = 1 << 17;

var DEBUG_INFO_LIMIT = 32;

var JSTimers = null;

var MessageQueue = function () {
  function MessageQueue() {
    babelHelpers.classCallCheck(this, MessageQueue);

    this._lazyCallableModules = {};
    this._queue = [[], [], [], 0];
    this._successCallbacks = [];
    this._failureCallbacks = [];
    this._callID = 0;
    this._lastFlush = 0;
    this._eventLoopStartTime = new Date().getTime();

    if (__DEV__) {
      this._debugInfo = {};
      this._remoteModuleTable = {};
      this._remoteMethodTable = {};
    }

    this.callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);
    this.callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(this);
    this.flushedQueue = this.flushedQueue.bind(this);
    this.invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);
  }

  babelHelpers.createClass(MessageQueue, [{
    key: 'callFunctionReturnFlushedQueue',
    value: function callFunctionReturnFlushedQueue(module, method, args) {
      var _this = this;

      this.__guard(function () {
        _this.__callFunction(module, method, args);
      });

      return this.flushedQueue();
    }
  }, {
    key: 'callFunctionReturnResultAndFlushedQueue',
    value: function callFunctionReturnResultAndFlushedQueue(module, method, args) {
      var _this2 = this;

      var result = void 0;
      this.__guard(function () {
        result = _this2.__callFunction(module, method, args);
      });

      return [result, this.flushedQueue()];
    }
  }, {
    key: 'invokeCallbackAndReturnFlushedQueue',
    value: function invokeCallbackAndReturnFlushedQueue(cbID, args) {
      var _this3 = this;

      this.__guard(function () {
        _this3.__invokeCallback(cbID, args);
      });

      return this.flushedQueue();
    }
  }, {
    key: 'flushedQueue',
    value: function flushedQueue() {
      var _this4 = this;

      this.__guard(function () {
        _this4.__callImmediates();
      });

      var queue = this._queue;
      this._queue = [[], [], [], this._callID];
      return queue[0].length ? queue : null;
    }
  }, {
    key: 'getEventLoopRunningTime',
    value: function getEventLoopRunningTime() {
      return new Date().getTime() - this._eventLoopStartTime;
    }
  }, {
    key: 'registerCallableModule',
    value: function registerCallableModule(name, module) {
      this._lazyCallableModules[name] = function () {
        return module;
      };
    }
  }, {
    key: 'registerLazyCallableModule',
    value: function registerLazyCallableModule(name, factory) {
      var module = void 0;
      var getValue = factory;
      this._lazyCallableModules[name] = function () {
        if (getValue) {
          module = getValue();
          getValue = null;
        }
        return module;
      };
    }
  }, {
    key: 'getCallableModule',
    value: function getCallableModule(name) {
      var getValue = this._lazyCallableModules[name];
      return getValue ? getValue() : null;
    }
  }, {
    key: 'enqueueNativeCall',
    value: function enqueueNativeCall(moduleID, methodID, params, onFail, onSucc) {
      if (onFail || onSucc) {
        if (__DEV__) {
          this._debugInfo[this._callID] = [moduleID, methodID];
          if (this._callID > DEBUG_INFO_LIMIT) {
            delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];
          }
        }

        onFail && params.push(this._callID << 1);
        onSucc && params.push(this._callID << 1 | 1);
        this._successCallbacks[this._callID] = onSucc;
        this._failureCallbacks[this._callID] = onFail;
      }

      if (__DEV__) {
        global.nativeTraceBeginAsyncFlow && global.nativeTraceBeginAsyncFlow(TRACE_TAG_REACT_APPS, 'native', this._callID);
      }
      this._callID++;

      this._queue[MODULE_IDS].push(moduleID);
      this._queue[METHOD_IDS].push(methodID);

      if (__DEV__) {
        JSON.stringify(params);

        deepFreezeAndThrowOnMutationInDev(params);
      }
      this._queue[PARAMS].push(params);

      var now = new Date().getTime();
      if (global.nativeFlushQueueImmediate && (now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS || this._inCall === 0)) {
        var queue = this._queue;
        this._queue = [[], [], [], this._callID];
        this._lastFlush = now;
        global.nativeFlushQueueImmediate(queue);
      }
      Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);
      if (__DEV__ && this.__spy && isFinite(moduleID)) {
        this.__spy({ type: TO_NATIVE,
          module: this._remoteModuleTable[moduleID],
          method: this._remoteMethodTable[moduleID][methodID],
          args: params });
      } else if (this.__spy) {
        this.__spy({ type: TO_NATIVE, module: moduleID + '', method: methodID, args: params });
      }
    }
  }, {
    key: 'createDebugLookup',
    value: function createDebugLookup(moduleID, name, methods) {
      if (__DEV__) {
        this._remoteModuleTable[moduleID] = name;
        this._remoteMethodTable[moduleID] = methods;
      }
    }
  }, {
    key: '__guard',
    value: function __guard(fn) {
      this._inCall++;
      try {
        fn();
      } catch (error) {
        ErrorUtils.reportFatalError(error);
      } finally {
        this._inCall--;
      }
    }
  }, {
    key: '__callImmediates',
    value: function __callImmediates() {
      Systrace.beginEvent('JSTimers.callImmediates()');
      if (!JSTimers) {
        JSTimers = require(35        ); // 35 = JSTimers
      }
      JSTimers.callImmediates();
      Systrace.endEvent();
    }
  }, {
    key: '__callFunction',
    value: function __callFunction(module, method, args) {
      this._lastFlush = new Date().getTime();
      this._eventLoopStartTime = this._lastFlush;
      Systrace.beginEvent(module + '.' + method + '()');
      if (this.__spy) {
        this.__spy({ type: TO_JS, module: module, method: method, args: args });
      }
      var moduleMethods = this.getCallableModule(module);
      invariant(!!moduleMethods, 'Module %s is not a registered callable module (calling %s)', module, method);
      invariant(!!moduleMethods[method], 'Method %s does not exist on module %s', method, module);
      var result = moduleMethods[method].apply(moduleMethods, args);
      Systrace.endEvent();
      return result;
    }
  }, {
    key: '__invokeCallback',
    value: function __invokeCallback(cbID, args) {
      this._lastFlush = new Date().getTime();
      this._eventLoopStartTime = this._lastFlush;

      var callID = cbID >>> 1;
      var callback = cbID & 1 ? this._successCallbacks[callID] : this._failureCallbacks[callID];

      if (__DEV__) {
        var debug = this._debugInfo[callID];
        var _module = debug && this._remoteModuleTable[debug[0]];
        var _method = debug && this._remoteMethodTable[debug[0]][debug[1]];
        if (!callback) {
          var errorMessage = 'Callback with id ' + cbID + ': ' + _module + '.' + _method + '() not found';
          if (_method) {
            errorMessage = 'The callback ' + _method + '() exists in module ' + _module + ', ' + 'but only one callback may be registered to a function in a native module.';
          }
          invariant(callback, errorMessage);
        }
        var profileName = debug ? '<callback for ' + _module + '.' + _method + '>' : cbID;
        if (callback && this.__spy) {
          this.__spy({ type: TO_JS, module: null, method: profileName, args: args });
        }
        Systrace.beginEvent('MessageQueue.invokeCallback(' + profileName + ', ' + stringifySafe(args) + ')');
      }

      if (!callback) {
        return;
      }

      this._successCallbacks[callID] = this._failureCallbacks[callID] = null;
      callback.apply(null, args);

      if (__DEV__) {
        Systrace.endEvent();
      }
    }
  }], [{
    key: 'spy',
    value: function spy(spyOrToggle) {
      if (spyOrToggle === true) {
        MessageQueue.prototype.__spy = function (info) {
          console.log((info.type === TO_JS ? 'N->JS' : 'JS->N') + ' : ' + ('' + (info.module ? info.module + '.' : '') + info.method) + ('(' + JSON.stringify(info.args) + ')'));
        };
      } else if (spyOrToggle === false) {
        MessageQueue.prototype.__spy = null;
      } else {
        MessageQueue.prototype.__spy = spyOrToggle;
      }
    }
  }]);
  return MessageQueue;
}();

module.exports = MessageQueue;
}, 30, null, "MessageQueue");
__d(/* ErrorUtils */function(global, require, module, exports) {
module.exports = global.ErrorUtils;
}, 31, null, "ErrorUtils");
__d(/* Systrace */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var TRACE_TAG_REACT_APPS = 1 << 17;
var TRACE_TAG_JSC_CALLS = 1 << 27;

var _enabled = false;
var _asyncCookie = 0;
var _markStack = [];
var _markStackIndex = -1;

var REACT_MARKER = '\u269B';
var userTimingPolyfill = {
  mark: function mark(markName) {
    if (__DEV__) {
      if (_enabled) {
        _markStackIndex++;
        _markStack[_markStackIndex] = markName;
        var systraceLabel = markName;

        if (markName[0] === REACT_MARKER) {
          var indexOfId = markName.lastIndexOf(' (#');
          var cutoffIndex = indexOfId !== -1 ? indexOfId : markName.length;

          systraceLabel = markName.slice(2, cutoffIndex);
        }
        Systrace.beginEvent(systraceLabel);
      }
    }
  },
  measure: function measure(measureName, startMark, endMark) {
    if (__DEV__) {
      if (_enabled) {
        invariant(typeof measureName === 'string' && typeof startMark === 'string' && typeof endMark === 'undefined', 'Only performance.measure(string, string) overload is supported.');
        var topMark = _markStack[_markStackIndex];
        invariant(startMark === topMark, 'There was a mismatching performance.measure() call. ' + 'Expected "%s" but got "%s."', topMark, startMark);
        _markStackIndex--;

        Systrace.endEvent();
      }
    }
  },
  clearMarks: function clearMarks(markName) {
    if (__DEV__) {
      if (_enabled) {
        if (_markStackIndex === -1) {
          return;
        }
        if (markName === _markStack[_markStackIndex]) {
          userTimingPolyfill.measure(markName, markName);
        }
      }
    }
  },
  clearMeasures: function clearMeasures() {}
};

var Systrace = {
  getUserTimingPolyfill: function getUserTimingPolyfill() {
    return userTimingPolyfill;
  },
  setEnabled: function setEnabled(enabled) {
    if (_enabled !== enabled) {
      if (__DEV__) {
        if (enabled) {
          global.nativeTraceBeginLegacy && global.nativeTraceBeginLegacy(TRACE_TAG_JSC_CALLS);
        } else {
          global.nativeTraceEndLegacy && global.nativeTraceEndLegacy(TRACE_TAG_JSC_CALLS);
        }
      }
      _enabled = enabled;
    }
  },
  isEnabled: function isEnabled() {
    return _enabled;
  },
  beginEvent: function beginEvent(profileName, args) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, profileName, args);
    }
  },
  endEvent: function endEvent() {
    if (_enabled) {
      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);
    }
  },
  beginAsyncEvent: function beginAsyncEvent(profileName) {
    var cookie = _asyncCookie;
    if (_enabled) {
      _asyncCookie++;
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie, 0);
    }
    return cookie;
  },
  endAsyncEvent: function endAsyncEvent(profileName, cookie) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie, 0);
    }
  },
  counterEvent: function counterEvent(profileName, value) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceCounter && global.nativeTraceCounter(TRACE_TAG_REACT_APPS, profileName, value);
    }
  },
  attachToRelayProfiler: function attachToRelayProfiler(relayProfiler) {
    relayProfiler.attachProfileHandler('*', function (name) {
      var cookie = Systrace.beginAsyncEvent(name);
      return function () {
        Systrace.endAsyncEvent(name, cookie);
      };
    });

    relayProfiler.attachAggregateHandler('*', function (name, callback) {
      Systrace.beginEvent(name);
      callback();
      Systrace.endEvent();
    });
  },
  swizzleJSON: function swizzleJSON() {
    Systrace.measureMethods(JSON, 'JSON', ['parse', 'stringify']);
  },
  measureMethods: function measureMethods(object, objectName, methodNames) {
    if (!__DEV__) {
      return;
    }

    methodNames.forEach(function (methodName) {
      object[methodName] = Systrace.measure(objectName, methodName, object[methodName]);
    });
  },
  measure: function measure(objName, fnName, func) {
    if (!__DEV__) {
      return func;
    }

    var profileName = objName + '.' + fnName;
    return function () {
      if (!_enabled) {
        return func.apply(this, arguments);
      }

      Systrace.beginEvent(profileName);
      var ret = func.apply(this, arguments);
      Systrace.endEvent();
      return ret;
    };
  }
};

if (__DEV__) {
  require.Systrace = Systrace;
}

module.exports = Systrace;
}, 32, null, "Systrace");
__d(/* deepFreezeAndThrowOnMutationInDev */function(global, require, module, exports) {

'use strict';

function deepFreezeAndThrowOnMutationInDev(object) {
  if (__DEV__) {
    if (typeof object !== 'object' || object === null || Object.isFrozen(object) || Object.isSealed(object)) {
      return;
    }

    var keys = Object.keys(object);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (object.hasOwnProperty(key)) {
        object.__defineGetter__(key, identity.bind(null, object[key]));
        object.__defineSetter__(key, throwOnImmutableMutation.bind(null, key));
      }
    }

    Object.freeze(object);
    Object.seal(object);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (object.hasOwnProperty(key)) {
        deepFreezeAndThrowOnMutationInDev(object[key]);
      }
    }
  }
}

function throwOnImmutableMutation(key, value) {
  throw Error('You attempted to set the key `' + key + '` with the value `' + JSON.stringify(value) + '` on an object that is meant to be immutable ' + 'and has been frozen.');
}

function identity(value) {
  return value;
}

module.exports = deepFreezeAndThrowOnMutationInDev;
}, 33, null, "deepFreezeAndThrowOnMutationInDev");
__d(/* stringifySafe */function(global, require, module, exports) {
'use strict';

function stringifySafe(arg) {
  var ret;
  var type = typeof arg;
  if (arg === undefined) {
    ret = 'undefined';
  } else if (arg === null) {
    ret = 'null';
  } else if (type === 'string') {
    ret = '"' + arg + '"';
  } else if (type === 'function') {
    try {
      ret = arg.toString();
    } catch (e) {
      ret = '[function unknown]';
    }
  } else {
    try {
      ret = JSON.stringify(arg);
    } catch (e) {
      if (typeof arg.toString === 'function') {
        try {
          ret = arg.toString();
        } catch (E) {}
      }
    }
  }
  return ret || '["' + type + '" failed to stringify]';
}

module.exports = stringifySafe;
}, 34, null, "stringifySafe");
__d(/* JSTimers */function(global, require, module, exports) {
'use strict';

var Platform = require(36        ); // 36 = Platform
var Systrace = require(32        ); // 32 = Systrace

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var performanceNow = require(37                       ); // 37 = fbjs/lib/performanceNow
var warning = require(15                ); // 15 = fbjs/lib/warning

var _require = require(28             ), // 28 = NativeModules
    Timing = _require.Timing;

var FRAME_DURATION = 1000 / 60;
var IDLE_CALLBACK_FRAME_DEADLINE = 1;

var MAX_TIMER_DURATION_MS = 60 * 1000;
var IS_ANDROID = Platform.OS === 'android';
var ANDROID_LONG_TIMER_MESSAGE = 'Setting a timer for a long period of time, i.e. multiple minutes, is a ' + 'performance and correctness issue on Android as it keeps the timer ' + 'module awake, and timers can only be called when the app is in the foreground. ' + 'See https://github.com/facebook/react-native/issues/12981 for more info.';

var callbacks = [];
var types = [];
var timerIDs = [];
var immediates = [];
var requestIdleCallbacks = [];
var requestIdleCallbackTimeouts = {};
var identifiers = [];

var GUID = 1;
var errors = null;

var hasEmittedTimeDriftWarning = false;

function _getFreeIndex() {
  var freeIndex = timerIDs.indexOf(null);
  if (freeIndex === -1) {
    freeIndex = timerIDs.length;
  }
  return freeIndex;
}

function _allocateCallback(func, type) {
  var id = GUID++;
  var freeIndex = _getFreeIndex();
  timerIDs[freeIndex] = id;
  callbacks[freeIndex] = func;
  types[freeIndex] = type;
  if (__DEV__) {
    var parseErrorStack = require(40               ); // 40 = parseErrorStack
    var error = new Error();
    error.framesToPop = 1;
    var stack = parseErrorStack(error);
    if (stack) {
      identifiers[freeIndex] = stack.shift();
    }
  }
  return id;
}

function _callTimer(timerID, frameTime, didTimeout) {
  warning(timerID <= GUID, 'Tried to call timer with ID %s but no such timer exists.', timerID);

  var timerIndex = timerIDs.indexOf(timerID);
  if (timerIndex === -1) {
    return;
  }

  var type = types[timerIndex];
  var callback = callbacks[timerIndex];
  if (!callback || !type) {
    console.error('No callback found for timerID ' + timerID);
    return;
  }

  if (__DEV__) {
    var identifier = identifiers[timerIndex] || {};
    Systrace.beginEvent('Systrace.callTimer: ' + identifier.methodName);
  }

  if (type === 'setTimeout' || type === 'setImmediate' || type === 'requestAnimationFrame' || type === 'requestIdleCallback') {
    _clearIndex(timerIndex);
  }

  try {
    if (type === 'setTimeout' || type === 'setInterval' || type === 'setImmediate') {
      callback();
    } else if (type === 'requestAnimationFrame') {
      callback(performanceNow());
    } else if (type === 'requestIdleCallback') {
      callback({
        timeRemaining: function timeRemaining() {
          return Math.max(0, FRAME_DURATION - (performanceNow() - frameTime));
        },
        didTimeout: !!didTimeout
      });
    } else {
      console.error('Tried to call a callback with invalid type: ' + type);
    }
  } catch (e) {
    if (!errors) {
      errors = [e];
    } else {
      errors.push(e);
    }
  }

  if (__DEV__) {
    Systrace.endEvent();
  }
}

function _clearIndex(i) {
  timerIDs[i] = null;
  callbacks[i] = null;
  types[i] = null;
  identifiers[i] = null;
}

function _freeCallback(timerID) {
  if (timerID == null) {
    return;
  }

  var index = timerIDs.indexOf(timerID);

  if (index !== -1) {
    _clearIndex(index);
    var type = types[index];
    if (type !== 'setImmediate' && type !== 'requestIdleCallback') {
      Timing.deleteTimer(timerID);
    }
  }
}

var JSTimers = {
  setTimeout: function setTimeout(func, duration) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {
      console.warn(ANDROID_LONG_TIMER_MESSAGE + '\n' + '(Saw setTimeout with duration ' + duration + 'ms)');
    }
    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setTimeout');
    Timing.createTimer(id, duration || 0, Date.now(), false);
    return id;
  },

  setInterval: function setInterval(func, duration) {
    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
      args[_key2 - 2] = arguments[_key2];
    }

    if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {
      console.warn(ANDROID_LONG_TIMER_MESSAGE + '\n' + '(Saw setInterval with duration ' + duration + 'ms)');
    }
    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setInterval');
    Timing.createTimer(id, duration || 0, Date.now(), true);
    return id;
  },

  setImmediate: function setImmediate(func) {
    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setImmediate');
    immediates.push(id);
    return id;
  },

  requestAnimationFrame: function requestAnimationFrame(func) {
    var id = _allocateCallback(func, 'requestAnimationFrame');
    Timing.createTimer(id, 1, Date.now(), false);
    return id;
  },

  requestIdleCallback: function requestIdleCallback(func, options) {
    if (requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(true);
    }

    var timeout = options && options.timeout;
    var id = _allocateCallback(timeout != null ? function (deadline) {
      var timeoutId = requestIdleCallbackTimeouts[id];
      if (timeoutId) {
        JSTimers.clearTimeout(timeoutId);
        requestIdleCallbackTimeouts[id];
      }
      return func(deadline);
    } : func, 'requestIdleCallback');
    requestIdleCallbacks.push(id);

    if (timeout != null) {
      var timeoutId = JSTimers.setTimeout(function () {
        var index = requestIdleCallbacks.indexOf(id);
        if (index > -1) {
          requestIdleCallbacks.splice(index, 1);
          _callTimer(id, performanceNow(), true);
        }
        delete requestIdleCallbackTimeouts[id];
        if (requestIdleCallbacks.length === 0) {
          Timing.setSendIdleEvents(false);
        }
      }, timeout);
      requestIdleCallbackTimeouts[id] = timeoutId;
    }
    return id;
  },

  cancelIdleCallback: function cancelIdleCallback(timerID) {
    _freeCallback(timerID);
    var index = requestIdleCallbacks.indexOf(timerID);
    if (index !== -1) {
      requestIdleCallbacks.splice(index, 1);
    }

    var timeoutId = requestIdleCallbackTimeouts[timerID];
    if (timeoutId) {
      JSTimers.clearTimeout(timeoutId);
      delete requestIdleCallbackTimeouts[timerID];
    }

    if (requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(false);
    }
  },

  clearTimeout: function clearTimeout(timerID) {
    _freeCallback(timerID);
  },

  clearInterval: function clearInterval(timerID) {
    _freeCallback(timerID);
  },

  clearImmediate: function clearImmediate(timerID) {
    _freeCallback(timerID);
    var index = immediates.indexOf(timerID);
    if (index !== -1) {
      immediates.splice(index, 1);
    }
  },

  cancelAnimationFrame: function cancelAnimationFrame(timerID) {
    _freeCallback(timerID);
  },

  callTimers: function callTimers(timersToCall) {
    invariant(timersToCall.length !== 0, 'Cannot call `callTimers` with an empty list of IDs.');

    errors = null;
    for (var i = 0; i < timersToCall.length; i++) {
      _callTimer(timersToCall[i], 0);
    }

    if (errors) {
      var errorCount = errors.length;
      if (errorCount > 1) {
        for (var ii = 1; ii < errorCount; ii++) {
          JSTimers.setTimeout(function (error) {
            throw error;
          }.bind(null, errors[ii]), 0);
        }
      }
      throw errors[0];
    }
  },

  callIdleCallbacks: function callIdleCallbacks(frameTime) {
    if (FRAME_DURATION - (performanceNow() - frameTime) < IDLE_CALLBACK_FRAME_DEADLINE) {
      return;
    }

    errors = null;
    if (requestIdleCallbacks.length > 0) {
      var passIdleCallbacks = requestIdleCallbacks.slice();
      requestIdleCallbacks = [];

      for (var i = 0; i < passIdleCallbacks.length; ++i) {
        _callTimer(passIdleCallbacks[i], frameTime);
      }
    }

    if (requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(false);
    }

    if (errors) {
      errors.forEach(function (error) {
        return JSTimers.setTimeout(function () {
          throw error;
        }, 0);
      });
    }
  },

  callImmediatesPass: function callImmediatesPass() {
    if (__DEV__) {
      Systrace.beginEvent('callImmediatesPass()');
    }

    if (immediates.length > 0) {
      var passImmediates = immediates.slice();
      immediates = [];

      for (var i = 0; i < passImmediates.length; ++i) {
        _callTimer(passImmediates[i], 0);
      }
    }

    if (__DEV__) {
      Systrace.endEvent();
    }
    return immediates.length > 0;
  },
  callImmediates: function callImmediates() {
    errors = null;
    while (JSTimers.callImmediatesPass()) {}
    if (errors) {
      errors.forEach(function (error) {
        return JSTimers.setTimeout(function () {
          throw error;
        }, 0);
      });
    }
  },
  emitTimeDriftWarning: function emitTimeDriftWarning(warningMessage) {
    if (hasEmittedTimeDriftWarning) {
      return;
    }
    hasEmittedTimeDriftWarning = true;
    console.warn(warningMessage);
  }
};

module.exports = JSTimers;
}, 35, null, "JSTimers");
__d(/* Platform */function(global, require, module, exports) {

'use strict';

var NativeModules = require(28             ); // 28 = NativeModules

var Platform = {
  OS: 'android',
  get Version() {
    var constants = NativeModules.PlatformConstants;
    return constants && constants.Version;
  },
  get isTesting() {
    var constants = NativeModules.PlatformConstants;
    return constants && constants.isTesting;
  },
  select: function select(obj) {
    return 'android' in obj ? obj.android : obj.default;
  }
};

module.exports = Platform;
}, 36, null, "Platform");
__d(/* fbjs/lib/performanceNow.js */function(global, require, module, exports) {'use strict';

var performance = require(38             ); // 38 = ./performance

var performanceNow;

if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
}, 37, null, "fbjs/lib/performanceNow.js");
__d(/* fbjs/lib/performance.js */function(global, require, module, exports) {

'use strict';

var ExecutionEnvironment = require(39                      ); // 39 = ./ExecutionEnvironment

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
}, 38, null, "fbjs/lib/performance.js");
__d(/* fbjs/lib/ExecutionEnvironment.js */function(global, require, module, exports) {

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM };

module.exports = ExecutionEnvironment;
}, 39, null, "fbjs/lib/ExecutionEnvironment.js");
__d(/* parseErrorStack */function(global, require, module, exports) {
'use strict';

function parseErrorStack(e) {
  if (!e || !e.stack) {
    return [];
  }

  var stacktraceParser = require(41                 ); // 41 = stacktrace-parser
  var stack = Array.isArray(e.stack) ? e.stack : stacktraceParser.parse(e.stack);

  var framesToPop = typeof e.framesToPop === 'number' ? e.framesToPop : 0;
  while (framesToPop--) {
    stack.shift();
  }
  return stack;
}

module.exports = parseErrorStack;
}, 40, null, "parseErrorStack");
__d(/* stacktrace-parser/index.js */function(global, require, module, exports) {module.exports = require(42                          ); // 42 = ./lib/stacktrace-parser.js
}, 41, null, "stacktrace-parser/index.js");
__d(/* stacktrace-parser/lib/stacktrace-parser.js */function(global, require, module, exports) {

var UNKNOWN_FUNCTION = '<unknown>';

var StackTraceParser = {
    parse: function parse(stackString) {
        var chrome = /^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
            gecko = /^(?:\s*([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i,
            node = /^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
            lines = stackString.split('\n'),
            stack = [],
            parts,
            element;

        for (var i = 0, j = lines.length; i < j; ++i) {
            if (parts = gecko.exec(lines[i])) {
                element = {
                    'file': parts[3],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[4],
                    'column': parts[5] ? +parts[5] : null
                };
            } else if (parts = chrome.exec(lines[i])) {
                element = {
                    'file': parts[2],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[3],
                    'column': parts[4] ? +parts[4] : null
                };
            } else if (parts = node.exec(lines[i])) {
                element = {
                    'file': parts[2],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[3],
                    'column': parts[4] ? +parts[4] : null
                };
            } else {
                continue;
            }

            stack.push(element);
        }

        return stack;
    }
};

module.exports = StackTraceParser;
}, 42, null, "stacktrace-parser/lib/stacktrace-parser.js");
__d(/* defineLazyObjectProperty */function(global, require, module, exports) {

'use strict';

function defineLazyObjectProperty(object, name, descriptor) {
  var get = descriptor.get;

  var enumerable = descriptor.enumerable !== false;
  var writable = descriptor.writable !== false;

  var value = void 0;
  var valueSet = false;
  function getValue() {
    if (!valueSet) {
      valueSet = true;
      setValue(get());
    }
    return value;
  }
  function setValue(newValue) {
    value = newValue;
    valueSet = true;
    Object.defineProperty(object, name, {
      value: newValue,
      configurable: true,
      enumerable: enumerable,
      writable: writable
    });
  }

  Object.defineProperty(object, name, {
    get: getValue,
    set: setValue,
    configurable: true,
    enumerable: enumerable
  });
}

module.exports = defineLazyObjectProperty;
}, 43, null, "defineLazyObjectProperty");
__d(/* RCTDeviceEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(45            ); // 45 = EventEmitter
var EventSubscriptionVendor = require(48                       ); // 48 = EventSubscriptionVendor

var RCTDeviceEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(RCTDeviceEventEmitter, _EventEmitter);

  function RCTDeviceEventEmitter() {
    babelHelpers.classCallCheck(this, RCTDeviceEventEmitter);

    var sharedSubscriber = new EventSubscriptionVendor();

    var _this = babelHelpers.possibleConstructorReturn(this, (RCTDeviceEventEmitter.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter)).call(this, sharedSubscriber));

    _this.sharedSubscriber = sharedSubscriber;
    return _this;
  }

  babelHelpers.createClass(RCTDeviceEventEmitter, [{
    key: '_nativeEventModule',
    value: function _nativeEventModule(eventType) {
      if (eventType) {
        if (eventType.lastIndexOf('statusBar', 0) === 0) {
          console.warn('`%s` event should be registered via the StatusBarIOS module', eventType);
          return require(49            ); // 49 = StatusBarIOS
        }
        if (eventType.lastIndexOf('keyboard', 0) === 0) {
          console.warn('`%s` event should be registered via the Keyboard module', eventType);
          return require(51        ); // 51 = Keyboard
        }
        if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {
          console.warn('`%s` event should be registered via the AppState module', eventType);
          return require(55        ); // 55 = AppState
        }
      }
      return null;
    }
  }, {
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      var eventModule = this._nativeEventModule(eventType);
      return eventModule ? eventModule.addListener(eventType, listener, context) : babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'addListener', this).call(this, eventType, listener, context);
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      var eventModule = this._nativeEventModule(eventType);
      eventModule && eventType ? eventModule.removeAllListeners(eventType) : babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'removeAllListeners', this).call(this, eventType);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      if (subscription.emitter !== this) {
        subscription.emitter.removeSubscription(subscription);
      } else {
        babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'removeSubscription', this).call(this, subscription);
      }
    }
  }]);
  return RCTDeviceEventEmitter;
}(EventEmitter);

module.exports = new RCTDeviceEventEmitter();
}, 44, null, "RCTDeviceEventEmitter");
__d(/* EventEmitter */function(global, require, module, exports) {
'use strict';

var EmitterSubscription = require(46                   ); // 46 = EmitterSubscription
var EventSubscriptionVendor = require(48                       ); // 48 = EventSubscriptionVendor

var emptyFunction = require(16                      ); // 16 = fbjs/lib/emptyFunction
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var EventEmitter = function () {
  function EventEmitter(subscriber) {
    babelHelpers.classCallCheck(this, EventEmitter);

    this._subscriber = subscriber || new EventSubscriptionVendor();
  }

  babelHelpers.createClass(EventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {

      return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      var _this = this;

      return this.addListener(eventType, function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this.removeCurrentListener();
        listener.apply(context, args);
      });
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._subscriber.removeAllSubscriptions(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');
      this.removeSubscription(this._currentSubscription);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');
      this._subscriber.removeSubscription(subscription);
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {
        return subscription.listener;
      }) : [];
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription) {
            this._currentSubscription = subscription;
            subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));
          }
        }
        this._currentSubscription = null;
      }
    }
  }, {
    key: 'removeListener',
    value: function removeListener(eventType, listener) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription && subscription.listener === listener) {
            subscription.remove();
          }
        }
      }
    }
  }]);
  return EventEmitter;
}();

module.exports = EventEmitter;
}, 45, null, "EventEmitter");
__d(/* EmitterSubscription */function(global, require, module, exports) {
'use strict';

var EventSubscription = require(47                 ); // 47 = EventSubscription

var EmitterSubscription = function (_EventSubscription) {
  babelHelpers.inherits(EmitterSubscription, _EventSubscription);

  function EmitterSubscription(emitter, subscriber, listener, context) {
    babelHelpers.classCallCheck(this, EmitterSubscription);

    var _this = babelHelpers.possibleConstructorReturn(this, (EmitterSubscription.__proto__ || Object.getPrototypeOf(EmitterSubscription)).call(this, subscriber));

    _this.emitter = emitter;
    _this.listener = listener;
    _this.context = context;
    return _this;
  }

  babelHelpers.createClass(EmitterSubscription, [{
    key: 'remove',
    value: function remove() {
      this.emitter.removeSubscription(this);
    }
  }]);
  return EmitterSubscription;
}(EventSubscription);

module.exports = EmitterSubscription;
}, 46, null, "EmitterSubscription");
__d(/* EventSubscription */function(global, require, module, exports) {
'use strict';

var EventSubscription = function () {
  function EventSubscription(subscriber) {
    babelHelpers.classCallCheck(this, EventSubscription);

    this.subscriber = subscriber;
  }

  babelHelpers.createClass(EventSubscription, [{
    key: 'remove',
    value: function remove() {
      this.subscriber.removeSubscription(this);
    }
  }]);
  return EventSubscription;
}();

module.exports = EventSubscription;
}, 47, null, "EventSubscription");
__d(/* EventSubscriptionVendor */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var EventSubscriptionVendor = function () {
  function EventSubscriptionVendor() {
    babelHelpers.classCallCheck(this, EventSubscriptionVendor);

    this._subscriptionsForType = {};
    this._currentSubscription = null;
  }

  babelHelpers.createClass(EventSubscriptionVendor, [{
    key: 'addSubscription',
    value: function addSubscription(eventType, subscription) {
      invariant(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');
      if (!this._subscriptionsForType[eventType]) {
        this._subscriptionsForType[eventType] = [];
      }
      var key = this._subscriptionsForType[eventType].length;
      this._subscriptionsForType[eventType].push(subscription);
      subscription.eventType = eventType;
      subscription.key = key;
      return subscription;
    }
  }, {
    key: 'removeAllSubscriptions',
    value: function removeAllSubscriptions(eventType) {
      if (eventType === undefined) {
        this._subscriptionsForType = {};
      } else {
        delete this._subscriptionsForType[eventType];
      }
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      var eventType = subscription.eventType;
      var key = subscription.key;

      var subscriptionsForType = this._subscriptionsForType[eventType];
      if (subscriptionsForType) {
        delete subscriptionsForType[key];
      }
    }
  }, {
    key: 'getSubscriptionsForType',
    value: function getSubscriptionsForType(eventType) {
      return this._subscriptionsForType[eventType];
    }
  }]);
  return EventSubscriptionVendor;
}();

module.exports = EventSubscriptionVendor;
}, 48, null, "EventSubscriptionVendor");
__d(/* StatusBarIOS */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter

module.exports = new NativeEventEmitter('StatusBarManager');
}, 49, null, "StatusBarIOS");
__d(/* NativeEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(45            ); // 45 = EventEmitter
var Platform = require(36        ); // 36 = Platform
var RCTDeviceEventEmitter = require(44                     ); // 44 = RCTDeviceEventEmitter
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var NativeEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(NativeEventEmitter, _EventEmitter);

  function NativeEventEmitter(nativeModule) {
    babelHelpers.classCallCheck(this, NativeEventEmitter);

    var _this = babelHelpers.possibleConstructorReturn(this, (NativeEventEmitter.__proto__ || Object.getPrototypeOf(NativeEventEmitter)).call(this, RCTDeviceEventEmitter.sharedSubscriber));

    if (Platform.OS === 'ios') {
      invariant(nativeModule, 'Native module cannot be null.');
      _this._nativeModule = nativeModule;
    }
    return _this;
  }

  babelHelpers.createClass(NativeEventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      if (Platform.OS === 'ios') {
        this._nativeModule.addListener(eventType);
      }
      return babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'addListener', this).call(this, eventType, listener, context);
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      invariant(eventType, 'eventType argument is required.');
      if (Platform.OS === 'ios') {
        var count = this.listeners(eventType).length;
        this._nativeModule.removeListeners(count);
      }
      babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'removeAllListeners', this).call(this, eventType);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      if (Platform.OS === 'ios') {
        this._nativeModule.removeListeners(1);
      }
      babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'removeSubscription', this).call(this, subscription);
    }
  }]);
  return NativeEventEmitter;
}(EventEmitter);

module.exports = NativeEventEmitter;
}, 50, null, "NativeEventEmitter");
__d(/* Keyboard */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter
var KeyboardObserver = require(28             ).KeyboardObserver; // 28 = NativeModules
var dismissKeyboard = require(52               ); // 52 = dismissKeyboard
var KeyboardEventEmitter = new NativeEventEmitter(KeyboardObserver);

var Keyboard = {
  addListener: function addListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeListener: function removeListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeAllListeners: function removeAllListeners(eventName) {
    invariant(false, 'Dummy method used for documentation');
  },
  dismiss: function dismiss() {
    invariant(false, 'Dummy method used for documentation');
  }
};

Keyboard = KeyboardEventEmitter;
Keyboard.dismiss = dismissKeyboard;

module.exports = Keyboard;
}, 51, null, "Keyboard");
__d(/* dismissKeyboard */function(global, require, module, exports) {
'use strict';

var TextInputState = require(53              ); // 53 = TextInputState

function dismissKeyboard() {
  TextInputState.blurTextInput(TextInputState.currentlyFocusedField());
}

module.exports = dismissKeyboard;
}, 52, null, "dismissKeyboard");
__d(/* TextInputState */function(global, require, module, exports) {
'use strict';

var Platform = require(36        ); // 36 = Platform
var UIManager = require(54         ); // 54 = UIManager

var TextInputState = {
  _currentlyFocusedID: null,

  currentlyFocusedField: function currentlyFocusedField() {
    return this._currentlyFocusedID;
  },

  focusTextInput: function focusTextInput(textFieldID) {
    if (this._currentlyFocusedID !== textFieldID && textFieldID !== null) {
      this._currentlyFocusedID = textFieldID;
      if (Platform.OS === 'ios') {
        UIManager.focus(textFieldID);
      } else if (Platform.OS === 'android') {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.AndroidTextInput.Commands.focusTextInput, null);
      }
    }
  },

  blurTextInput: function blurTextInput(textFieldID) {
    if (this._currentlyFocusedID === textFieldID && textFieldID !== null) {
      this._currentlyFocusedID = null;
      if (Platform.OS === 'ios') {
        UIManager.blur(textFieldID);
      } else if (Platform.OS === 'android') {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.AndroidTextInput.Commands.blurTextInput, null);
      }
    }
  }
};

module.exports = TextInputState;
}, 53, null, "TextInputState");
__d(/* UIManager */function(global, require, module, exports) {
'use strict';

var NativeModules = require(28             ); // 28 = NativeModules
var Platform = require(36        ); // 36 = Platform

var defineLazyObjectProperty = require(43                        ); // 43 = defineLazyObjectProperty
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var UIManager = NativeModules.UIManager;


invariant(UIManager, 'UIManager is undefined. The native module config is probably incorrect.');

UIManager.__takeSnapshot = UIManager.takeSnapshot;
UIManager.takeSnapshot = function () {
  invariant(false, 'UIManager.takeSnapshot should not be called directly. ' + 'Use ReactNative.takeSnapshot instead.');
};

if (Platform.OS === 'ios') {
  Object.keys(UIManager).forEach(function (viewName) {
    var viewConfig = UIManager[viewName];
    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  });
} else if (Platform.OS === 'android' && UIManager.AndroidLazyViewManagersEnabled) {
  UIManager.ViewManagerNames.forEach(function (viewManagerName) {
    defineLazyObjectProperty(UIManager, viewManagerName, {
      get: function get() {
        return NativeModules[viewManagerName.replace(/^(RCT|RK)/, '')];
      }
    });
  });
}

module.exports = UIManager;
}, 54, null, "UIManager");
__d(/* AppState */function(global, require, module, exports) {
'use strict';

var MissingNativeEventEmitterShim = require(56                             ); // 56 = MissingNativeEventEmitterShim
var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter
var NativeModules = require(28             ); // 28 = NativeModules
var RCTAppState = NativeModules.AppState;

var logError = require(57        ); // 57 = logError
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var AppState = function (_NativeEventEmitter) {
  babelHelpers.inherits(AppState, _NativeEventEmitter);

  function AppState() {
    babelHelpers.classCallCheck(this, AppState);

    var _this = babelHelpers.possibleConstructorReturn(this, (AppState.__proto__ || Object.getPrototypeOf(AppState)).call(this, RCTAppState));

    _this.isAvailable = true;


    _this.isAvailable = true;
    _this._eventHandlers = {
      change: new Map(),
      memoryWarning: new Map()
    };

    _this.currentState = RCTAppState.initialAppState || 'active';

    _this.addListener('appStateDidChange', function (appStateData) {
      _this.currentState = appStateData.app_state;
    });

    RCTAppState.getCurrentAppState(function (appStateData) {
      _this.currentState = appStateData.app_state;
    }, logError);
    return _this;
  }

  babelHelpers.createClass(AppState, [{
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to subscribe to unknown event: "%s"', type);
      if (type === 'change') {
        this._eventHandlers[type].set(handler, this.addListener('appStateDidChange', function (appStateData) {
          handler(appStateData.app_state);
        }));
      } else if (type === 'memoryWarning') {
        this._eventHandlers[type].set(handler, this.addListener('memoryWarning', handler));
      }
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to remove listener for unknown event: "%s"', type);
      if (!this._eventHandlers[type].has(handler)) {
        return;
      }
      this._eventHandlers[type].get(handler).remove();
      this._eventHandlers[type].delete(handler);
    }
  }]);
  return AppState;
}(NativeEventEmitter);

if (__DEV__ && !RCTAppState) {
  var MissingNativeAppStateShim = function (_MissingNativeEventEm) {
    babelHelpers.inherits(MissingNativeAppStateShim, _MissingNativeEventEm);

    function MissingNativeAppStateShim() {
      babelHelpers.classCallCheck(this, MissingNativeAppStateShim);
      return babelHelpers.possibleConstructorReturn(this, (MissingNativeAppStateShim.__proto__ || Object.getPrototypeOf(MissingNativeAppStateShim)).call(this, 'RCTAppState', 'AppState'));
    }

    babelHelpers.createClass(MissingNativeAppStateShim, [{
      key: 'addEventListener',
      value: function addEventListener() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'removeEventListener',
      value: function removeEventListener() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'currentState',
      get: function get() {
        this.throwMissingNativeModule();
      }
    }]);
    return MissingNativeAppStateShim;
  }(MissingNativeEventEmitterShim);

  AppState = new MissingNativeAppStateShim();
} else {
  AppState = new AppState();
}

module.exports = AppState;
}, 55, null, "AppState");
__d(/* MissingNativeEventEmitterShim */function(global, require, module, exports) {
'use strict';

var EmitterSubscription = require(46                   ); // 46 = EmitterSubscription
var EventEmitter = require(45            ); // 45 = EventEmitter

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var MissingNativeEventEmitterShim = function (_EventEmitter) {
  babelHelpers.inherits(MissingNativeEventEmitterShim, _EventEmitter);

  function MissingNativeEventEmitterShim(nativeModuleName, nativeEventEmitterName) {
    babelHelpers.classCallCheck(this, MissingNativeEventEmitterShim);

    var _this = babelHelpers.possibleConstructorReturn(this, (MissingNativeEventEmitterShim.__proto__ || Object.getPrototypeOf(MissingNativeEventEmitterShim)).call(this, null));

    _this.isAvailable = false;

    _this._nativeModuleName = nativeModuleName;
    _this._nativeEventEmitterName = nativeEventEmitterName;
    return _this;
  }

  babelHelpers.createClass(MissingNativeEventEmitterShim, [{
    key: 'throwMissingNativeModule',
    value: function throwMissingNativeModule() {
      invariant(false, 'Cannot use \'' + this._nativeEventEmitterName + '\' module when ' + ('native \'' + this._nativeModuleName + '\' is not included in the build. ') + ('Either include it, or check \'' + this._nativeEventEmitterName + '\'.isAvailable ') + 'before calling any methods.');
    }
  }, {
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      this.throwMissingNativeModule();
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this.throwMissingNativeModule();
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      this.throwMissingNativeModule();
    }
  }]);
  return MissingNativeEventEmitterShim;
}(EventEmitter);

module.exports = MissingNativeEventEmitterShim;
}, 56, null, "MissingNativeEventEmitterShim");
__d(/* logError */function(global, require, module, exports) {
'use strict';

var logError = function logError() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  if (args.length === 1 && args[0] instanceof Error) {
    var err = args[0];
    console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);
  } else {
    console.error.apply(console, args);
  }
};

module.exports = logError;
}, 57, null, "logError");
__d(/* ActivityIndicator */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\ActivityIndicator\\ActivityIndicator.js';
var ColorPropType = require(59             ); // 59 = ColorPropType
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var StyleSheet = require(153         ); // 153 = StyleSheet
var View = require(124   ); // 124 = View
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var createReactClass = require(150                 ); // 150 = create-react-class
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent

var GRAY = '#999999';

var ActivityIndicator = createReactClass({
  displayName: 'ActivityIndicator',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    animating: PropTypes.bool,

    color: ColorPropType,

    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'large']), PropTypes.number]),

    hidesWhenStopped: PropTypes.bool
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      animating: true,
      color: Platform.OS === 'ios' ? GRAY : undefined,
      hidesWhenStopped: true,
      size: 'small'
    };
  },
  render: function render() {
    var _props = this.props,
        onLayout = _props.onLayout,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['onLayout', 'style']);

    var sizeStyle = void 0;

    switch (props.size) {
      case 'small':
        sizeStyle = styles.sizeSmall;
        break;
      case 'large':
        sizeStyle = styles.sizeLarge;
        break;
      default:
        sizeStyle = { height: props.size, width: props.size };
        break;
    }

    return React.createElement(
      View,
      {
        onLayout: onLayout,
        style: [styles.container, style], __source: {
          fileName: _jsxFileName,
          lineNumber: 96
        }
      },
      React.createElement(RCTActivityIndicator, babelHelpers.extends({}, props, {
        style: sizeStyle,
        styleAttr: 'Normal',
        indeterminate: true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 99
        }
      }))
    );
  }
});

var styles = StyleSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center'
  },
  sizeSmall: {
    width: 20,
    height: 20
  },
  sizeLarge: {
    width: 36,
    height: 36
  }
});

if (Platform.OS === 'ios') {
  var RCTActivityIndicator = requireNativeComponent('RCTActivityIndicatorView', ActivityIndicator, { nativeOnly: { activityIndicatorViewStyle: true } });
} else if (Platform.OS === 'android') {
  var RCTActivityIndicator = requireNativeComponent('AndroidProgressBar', ActivityIndicator, { nativeOnly: {
      indeterminate: true,
      progress: true,
      styleAttr: true
    } });
}

module.exports = ActivityIndicator;
}, 58, null, "ActivityIndicator");
__d(/* ColorPropType */function(global, require, module, exports) {
'use strict';

var normalizeColor = require(60              ); // 60 = normalizeColor

var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
  var color = props[propName];
  if (color === undefined || color === null) {
    if (isRequired) {
      return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
    }
    return;
  }

  if (typeof color === 'number') {
    return;
  }

  if (normalizeColor(color) === null) {
    return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + 'Valid color formats are\n  - \'#f0f\' (#rgb)\n  - \'#f0fc\' (#rgba)\n  - \'#ff00ff\' (#rrggbb)\n  - \'#ff00ff00\' (#rrggbbaa)\n  - \'rgb(255, 255, 255)\'\n  - \'rgba(255, 255, 255, 1.0)\'\n  - \'hsl(360, 100%, 100%)\'\n  - \'hsla(360, 100%, 100%, 1.0)\'\n  - \'transparent\'\n  - \'red\'\n  - 0xff00ff00 (0xrrggbbaa)\n');
  }
};

var ColorPropType = colorPropType.bind(null, false);
ColorPropType.isRequired = colorPropType.bind(null, true);

module.exports = ColorPropType;
}, 59, null, "ColorPropType");
__d(/* normalizeColor */function(global, require, module, exports) {
'use strict';

function normalizeColor(color) {
  var match;

  if (typeof color === 'number') {
    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
      return color;
    }
    return null;
  }

  if (match = matchers.hex6.exec(color)) {
    return parseInt(match[1] + 'ff', 16) >>> 0;
  }

  if (names.hasOwnProperty(color)) {
    return names[color];
  }

  if (match = matchers.rgb.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;
  }

  if (match = matchers.rgba.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;
  }

  if (match = matchers.hex3.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;
  }

  if (match = matchers.hex8.exec(color)) {
    return parseInt(match[1], 16) >>> 0;
  }

  if (match = matchers.hex4.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;
  }

  if (match = matchers.hsl.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;
  }

  if (match = matchers.hsla.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;
  }

  return null;
}

function hue2rgb(p, q, t) {
  if (t < 0) {
    t += 1;
  }
  if (t > 1) {
    t -= 1;
  }
  if (t < 1 / 6) {
    return p + (q - p) * 6 * t;
  }
  if (t < 1 / 2) {
    return q;
  }
  if (t < 2 / 3) {
    return p + (q - p) * (2 / 3 - t) * 6;
  }
  return p;
}

function hslToRgb(h, s, l) {
  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
  var p = 2 * l - q;
  var r = hue2rgb(p, q, h + 1 / 3);
  var g = hue2rgb(p, q, h);
  var b = hue2rgb(p, q, h - 1 / 3);

  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
}

var NUMBER = '[-+]?\\d*\\.?\\d+';
var PERCENTAGE = NUMBER + '%';

function call() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return '\\(\\s*(' + args.join(')\\s*,\\s*(') + ')\\s*\\)';
}

var matchers = {
  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
  rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),
  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
  hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#([0-9a-fA-F]{6})$/,
  hex8: /^#([0-9a-fA-F]{8})$/
};

function parse255(str) {
  var int = parseInt(str, 10);
  if (int < 0) {
    return 0;
  }
  if (int > 255) {
    return 255;
  }
  return int;
}

function parse360(str) {
  var int = parseFloat(str);
  return (int % 360 + 360) % 360 / 360;
}

function parse1(str) {
  var num = parseFloat(str);
  if (num < 0) {
    return 0;
  }
  if (num > 1) {
    return 255;
  }
  return Math.round(num * 255);
}

function parsePercentage(str) {
  var int = parseFloat(str);
  if (int < 0) {
    return 0;
  }
  if (int > 100) {
    return 1;
  }
  return int / 100;
}

var names = {
  transparent: 0x00000000,

  aliceblue: 0xf0f8ffff,
  antiquewhite: 0xfaebd7ff,
  aqua: 0x00ffffff,
  aquamarine: 0x7fffd4ff,
  azure: 0xf0ffffff,
  beige: 0xf5f5dcff,
  bisque: 0xffe4c4ff,
  black: 0x000000ff,
  blanchedalmond: 0xffebcdff,
  blue: 0x0000ffff,
  blueviolet: 0x8a2be2ff,
  brown: 0xa52a2aff,
  burlywood: 0xdeb887ff,
  burntsienna: 0xea7e5dff,
  cadetblue: 0x5f9ea0ff,
  chartreuse: 0x7fff00ff,
  chocolate: 0xd2691eff,
  coral: 0xff7f50ff,
  cornflowerblue: 0x6495edff,
  cornsilk: 0xfff8dcff,
  crimson: 0xdc143cff,
  cyan: 0x00ffffff,
  darkblue: 0x00008bff,
  darkcyan: 0x008b8bff,
  darkgoldenrod: 0xb8860bff,
  darkgray: 0xa9a9a9ff,
  darkgreen: 0x006400ff,
  darkgrey: 0xa9a9a9ff,
  darkkhaki: 0xbdb76bff,
  darkmagenta: 0x8b008bff,
  darkolivegreen: 0x556b2fff,
  darkorange: 0xff8c00ff,
  darkorchid: 0x9932ccff,
  darkred: 0x8b0000ff,
  darksalmon: 0xe9967aff,
  darkseagreen: 0x8fbc8fff,
  darkslateblue: 0x483d8bff,
  darkslategray: 0x2f4f4fff,
  darkslategrey: 0x2f4f4fff,
  darkturquoise: 0x00ced1ff,
  darkviolet: 0x9400d3ff,
  deeppink: 0xff1493ff,
  deepskyblue: 0x00bfffff,
  dimgray: 0x696969ff,
  dimgrey: 0x696969ff,
  dodgerblue: 0x1e90ffff,
  firebrick: 0xb22222ff,
  floralwhite: 0xfffaf0ff,
  forestgreen: 0x228b22ff,
  fuchsia: 0xff00ffff,
  gainsboro: 0xdcdcdcff,
  ghostwhite: 0xf8f8ffff,
  gold: 0xffd700ff,
  goldenrod: 0xdaa520ff,
  gray: 0x808080ff,
  green: 0x008000ff,
  greenyellow: 0xadff2fff,
  grey: 0x808080ff,
  honeydew: 0xf0fff0ff,
  hotpink: 0xff69b4ff,
  indianred: 0xcd5c5cff,
  indigo: 0x4b0082ff,
  ivory: 0xfffff0ff,
  khaki: 0xf0e68cff,
  lavender: 0xe6e6faff,
  lavenderblush: 0xfff0f5ff,
  lawngreen: 0x7cfc00ff,
  lemonchiffon: 0xfffacdff,
  lightblue: 0xadd8e6ff,
  lightcoral: 0xf08080ff,
  lightcyan: 0xe0ffffff,
  lightgoldenrodyellow: 0xfafad2ff,
  lightgray: 0xd3d3d3ff,
  lightgreen: 0x90ee90ff,
  lightgrey: 0xd3d3d3ff,
  lightpink: 0xffb6c1ff,
  lightsalmon: 0xffa07aff,
  lightseagreen: 0x20b2aaff,
  lightskyblue: 0x87cefaff,
  lightslategray: 0x778899ff,
  lightslategrey: 0x778899ff,
  lightsteelblue: 0xb0c4deff,
  lightyellow: 0xffffe0ff,
  lime: 0x00ff00ff,
  limegreen: 0x32cd32ff,
  linen: 0xfaf0e6ff,
  magenta: 0xff00ffff,
  maroon: 0x800000ff,
  mediumaquamarine: 0x66cdaaff,
  mediumblue: 0x0000cdff,
  mediumorchid: 0xba55d3ff,
  mediumpurple: 0x9370dbff,
  mediumseagreen: 0x3cb371ff,
  mediumslateblue: 0x7b68eeff,
  mediumspringgreen: 0x00fa9aff,
  mediumturquoise: 0x48d1ccff,
  mediumvioletred: 0xc71585ff,
  midnightblue: 0x191970ff,
  mintcream: 0xf5fffaff,
  mistyrose: 0xffe4e1ff,
  moccasin: 0xffe4b5ff,
  navajowhite: 0xffdeadff,
  navy: 0x000080ff,
  oldlace: 0xfdf5e6ff,
  olive: 0x808000ff,
  olivedrab: 0x6b8e23ff,
  orange: 0xffa500ff,
  orangered: 0xff4500ff,
  orchid: 0xda70d6ff,
  palegoldenrod: 0xeee8aaff,
  palegreen: 0x98fb98ff,
  paleturquoise: 0xafeeeeff,
  palevioletred: 0xdb7093ff,
  papayawhip: 0xffefd5ff,
  peachpuff: 0xffdab9ff,
  peru: 0xcd853fff,
  pink: 0xffc0cbff,
  plum: 0xdda0ddff,
  powderblue: 0xb0e0e6ff,
  purple: 0x800080ff,
  rebeccapurple: 0x663399ff,
  red: 0xff0000ff,
  rosybrown: 0xbc8f8fff,
  royalblue: 0x4169e1ff,
  saddlebrown: 0x8b4513ff,
  salmon: 0xfa8072ff,
  sandybrown: 0xf4a460ff,
  seagreen: 0x2e8b57ff,
  seashell: 0xfff5eeff,
  sienna: 0xa0522dff,
  silver: 0xc0c0c0ff,
  skyblue: 0x87ceebff,
  slateblue: 0x6a5acdff,
  slategray: 0x708090ff,
  slategrey: 0x708090ff,
  snow: 0xfffafaff,
  springgreen: 0x00ff7fff,
  steelblue: 0x4682b4ff,
  tan: 0xd2b48cff,
  teal: 0x008080ff,
  thistle: 0xd8bfd8ff,
  tomato: 0xff6347ff,
  turquoise: 0x40e0d0ff,
  violet: 0xee82eeff,
  wheat: 0xf5deb3ff,
  white: 0xffffffff,
  whitesmoke: 0xf5f5f5ff,
  yellow: 0xffff00ff,
  yellowgreen: 0x9acd32ff
};

module.exports = normalizeColor;
}, 60, null, "normalizeColor");
__d(/* NativeMethodsMixin */function(global, require, module, exports) {

'use strict';

var _require = require(62           ), // 62 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var NativeMethodsMixin = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;


module.exports = NativeMethodsMixin;
}, 61, null, "NativeMethodsMixin");
__d(/* ReactNative */function(global, require, module, exports) {
'use strict';

var ReactNativeFeatureFlags = require(63                       ); // 63 = ReactNativeFeatureFlags

var ReactNative = void 0;

if (__DEV__) {
  ReactNative = ReactNativeFeatureFlags.useFiber ? require(64                    ) : require(123                   ); // 123 = ReactNativeStack-dev // 64 = ReactNativeFiber-dev
} else {
  ReactNative = ReactNativeFeatureFlags.useFiber ? require(167                    ) : require(168                    ); // 168 = ReactNativeStack-prod // 167 = ReactNativeFiber-prod
}

module.exports = ReactNative;
}, 62, null, "ReactNative");
__d(/* ReactNativeFeatureFlags */function(global, require, module, exports) {

'use strict';

var ReactNativeFeatureFlags = {
  useFiber: false
};

module.exports = ReactNativeFeatureFlags;
}, 63, null, "ReactNativeFeatureFlags");
__d(/* ReactNativeFiber-dev */function(global, require, module, exports) {
"use strict";

var invariant = require(18                  ), // 18 = fbjs/lib/invariant
    warning = require(15                ), // 15 = fbjs/lib/warning
    ExceptionsManager = require(65                 ); // 65 = ExceptionsManager

require(72              ); // 72 = InitializeCore

var RCTEventEmitter = require(120              ), // 120 = RCTEventEmitter
    emptyFunction = require(16                      ), // 16 = fbjs/lib/emptyFunction
    UIManager = require(54         ), // 54 = UIManager
    checkPropTypes = require(22                         ), // 22 = prop-types/checkPropTypes
    emptyObject = require(17                    ), // 17 = fbjs/lib/emptyObject
    react = require(12     ), // 12 = react
    shallowEqual = require(121                    ), // 121 = fbjs/lib/shallowEqual
    deepDiffer = require(122         ), // 122 = deepDiffer
    flattenStyle = require(114           ), // 114 = flattenStyle
    TextInputState = require(53              ), // 53 = TextInputState
    deepFreezeAndThrowOnMutationInDev = require(33                                 ), // 33 = deepFreezeAndThrowOnMutationInDev
    ExecutionEnvironment = require(39                             ), // 39 = fbjs/lib/ExecutionEnvironment
    performanceNow = require(37                       ), // 37 = fbjs/lib/performanceNow
    defaultShowDialog = function defaultShowDialog(capturedError) {
    return !0;
},
    showDialog = defaultShowDialog;

function logCapturedError(capturedError) {
    if (!1 !== showDialog(capturedError)) {
        var componentName = capturedError.componentName,
            componentStack = capturedError.componentStack,
            error = capturedError.error,
            errorBoundaryName = capturedError.errorBoundaryName,
            errorBoundaryFound = capturedError.errorBoundaryFound,
            willRetry = capturedError.willRetry,
            message = error.message,
            name = error.name,
            stack = error.stack,
            errorSummary = message ? name + ": " + message : name,
            componentNameMessage = componentName ? "React caught an error thrown by " + componentName + "." : "React caught an error thrown by one of your components.",
            formattedCallStack = stack.slice(0, errorSummary.length) === errorSummary ? stack.slice(errorSummary.length) : stack;
        formattedCallStack = formattedCallStack.trim().split("\n").map(function (line) {
            return "\n    " + line.trim();
        }).join();
        var errorBoundaryMessage = void 0;
        errorBoundaryMessage = errorBoundaryFound && errorBoundaryName ? willRetry ? "React will try to recreate this component tree from scratch " + "using the error boundary you provided, " + errorBoundaryName + "." : "This error was initially handled by the error boundary " + errorBoundaryName + ". " + "Recreating the tree from scratch failed so React will unmount the tree." : "Consider adding an error boundary to your tree to customize error handling behavior.", console.error(componentNameMessage + " You should fix this error in your code. " + errorBoundaryMessage + "\n\n" + errorSummary + "\n\n" + "The error is located at: " + componentStack + "\n\n" + "The error was thrown at: " + formattedCallStack);
    }
}

var injection = {
    injectDialog: function injectDialog(fn) {
        invariant(showDialog === defaultShowDialog, "The custom dialog was already injected."), invariant("function" == typeof fn, "Injected showDialog() must be a function."), showDialog = fn;
    }
},
    logCapturedError_1 = logCapturedError,
    ReactFiberErrorLogger = {
    injection: injection,
    logCapturedError: logCapturedError_1
},
    caughtError = null,
    _invokeGuardedCallback = function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);
    try {
        func.apply(context, funcArgs);
    } catch (error) {
        return error;
    }
    return null;
};

if ("undefined" != typeof window && "function" == typeof window.dispatchEvent && "undefined" != typeof document && "function" == typeof document.createEvent) {
    var fakeNode = document.createElement("react"),
        depth = 0;
    _invokeGuardedCallback = function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        depth++;
        var thisDepth = depth,
            funcArgs = Array.prototype.slice.call(arguments, 3),
            boundFunc = function boundFunc() {
            func.apply(context, funcArgs);
        },
            fakeEventError = null,
            onFakeEventError = function onFakeEventError(event) {
            depth === thisDepth && (fakeEventError = event.error);
        },
            evtType = "react-" + (name || "invokeguardedcallback") + "-" + depth;
        window.addEventListener("error", onFakeEventError), fakeNode.addEventListener(evtType, boundFunc, !1);
        var evt = document.createEvent("Event");
        return evt.initEvent(evtType, !1, !1), fakeNode.dispatchEvent(evt), fakeNode.removeEventListener(evtType, boundFunc, !1), window.removeEventListener("error", onFakeEventError), depth--, fakeEventError;
    };
}

var _rethrowCaughtError = function _rethrowCaughtError() {
    if (caughtError) {
        var error = caughtError;
        throw caughtError = null, error;
    }
},
    ReactErrorUtils = {
    injection: {
        injectErrorUtils: function injectErrorUtils(injectedErrorUtils) {
            invariant("function" == typeof injectedErrorUtils.invokeGuardedCallback, "Injected invokeGuardedCallback() must be a function."), _invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
        }
    },
    invokeGuardedCallback: function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        return _invokeGuardedCallback.apply(this, arguments);
    },
    invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        var error = ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
        null !== error && null === caughtError && (caughtError = error);
    },
    rethrowCaughtError: function rethrowCaughtError() {
        return _rethrowCaughtError.apply(this, arguments);
    }
},
    ReactErrorUtils_1 = ReactErrorUtils,
    ComponentTree,
    injection$1 = {
    injectComponentTree: function injectComponentTree(Injected) {
        ComponentTree = Injected, warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, "EventPluginUtils.injection.injectComponentTree(...): Injected " + "module is missing getNodeFromInstance or getInstanceFromNode.");
    }
};

function isEndish(topLevelType) {
    return "topMouseUp" === topLevelType || "topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType;
}

function isMoveish(topLevelType) {
    return "topMouseMove" === topLevelType || "topTouchMove" === topLevelType;
}

function isStartish(topLevelType) {
    return "topMouseDown" === topLevelType || "topTouchStart" === topLevelType;
}

var validateEventDispatches;

validateEventDispatches = function validateEventDispatches(event) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances,
        listenersIsArr = Array.isArray(dispatchListeners),
        listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0,
        instancesIsArr = Array.isArray(dispatchInstances),
        instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
    warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, "EventPluginUtils: Invalid `event`.");
};

function executeDispatch(event, simulated, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = EventPluginUtils.getNodeFromInstance(inst), ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event), event.currentTarget = null;
}

function executeDispatchesInOrder(event, simulated) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (validateEventDispatches(event), Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
        executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    } else dispatchListeners && executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
    event._dispatchListeners = null, event._dispatchInstances = null;
}

function executeDispatchesInOrderStopAtTrueImpl(event) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (validateEventDispatches(event), Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
            if (dispatchListeners[i](event, dispatchInstances[i])) return dispatchInstances[i];
        }
    } else if (dispatchListeners && dispatchListeners(event, dispatchInstances)) return dispatchInstances;
    return null;
}

function executeDispatchesInOrderStopAtTrue(event) {
    var ret = executeDispatchesInOrderStopAtTrueImpl(event);
    return event._dispatchInstances = null, event._dispatchListeners = null, ret;
}

function executeDirectDispatch(event) {
    validateEventDispatches(event);
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`."), event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
    var res = dispatchListener ? dispatchListener(event) : null;
    return event.currentTarget = null, event._dispatchListeners = null, event._dispatchInstances = null, res;
}

function hasDispatches(event) {
    return !!event._dispatchListeners;
}

var EventPluginUtils = {
    isEndish: isEndish,
    isMoveish: isMoveish,
    isStartish: isStartish,
    executeDirectDispatch: executeDirectDispatch,
    executeDispatchesInOrder: executeDispatchesInOrder,
    executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
    hasDispatches: hasDispatches,
    getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(node) {
        return ComponentTree.getFiberCurrentPropsFromNode(node);
    },
    getInstanceFromNode: function getInstanceFromNode(node) {
        return ComponentTree.getInstanceFromNode(node);
    },
    getNodeFromInstance: function getNodeFromInstance(node) {
        return ComponentTree.getNodeFromInstance(node);
    },
    injection: injection$1
},
    EventPluginUtils_1 = EventPluginUtils,
    fiberHostComponent = null,
    ReactControlledComponentInjection = {
    injectFiberControlledHostComponent: function injectFiberControlledHostComponent(hostComponentImpl) {
        fiberHostComponent = hostComponentImpl;
    }
},
    restoreTarget = null,
    restoreQueue = null;

function restoreStateOfTarget(target) {
    var internalInstance = EventPluginUtils_1.getInstanceFromNode(target);
    if (internalInstance) {
        if ("number" == typeof internalInstance.tag) {
            invariant(fiberHostComponent && "function" == typeof fiberHostComponent.restoreControlledState, "Fiber needs to be injected to handle a fiber target for controlled " + "events.");
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(internalInstance.stateNode);
            return void fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
        }
        invariant("function" == typeof internalInstance.restoreControlledState, "The internal instance must be a React host component."), internalInstance.restoreControlledState();
    }
}

var ReactControlledComponent = {
    injection: ReactControlledComponentInjection,
    enqueueStateRestore: function enqueueStateRestore(target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [target] : restoreTarget = target;
    },
    restoreStateIfNeeded: function restoreStateIfNeeded() {
        if (restoreTarget) {
            var target = restoreTarget,
                queuedTargets = restoreQueue;
            if (restoreTarget = null, restoreQueue = null, restoreStateOfTarget(target), queuedTargets) for (var i = 0; i < queuedTargets.length; i++) {
                restoreStateOfTarget(queuedTargets[i]);
            }
        }
    }
},
    ReactControlledComponent_1 = ReactControlledComponent,
    stackBatchedUpdates = function stackBatchedUpdates(fn, a, b, c, d, e) {
    return fn(a, b, c, d, e);
},
    fiberBatchedUpdates = function fiberBatchedUpdates(fn, bookkeeping) {
    return fn(bookkeeping);
};

function performFiberBatchedUpdates(fn, bookkeeping) {
    return fiberBatchedUpdates(fn, bookkeeping);
}

function batchedUpdates(fn, bookkeeping) {
    return stackBatchedUpdates(performFiberBatchedUpdates, fn, bookkeeping);
}

var isNestingBatched = !1;

function batchedUpdatesWithControlledComponents(fn, bookkeeping) {
    if (isNestingBatched) return batchedUpdates(fn, bookkeeping);
    isNestingBatched = !0;
    try {
        return batchedUpdates(fn, bookkeeping);
    } finally {
        isNestingBatched = !1, ReactControlledComponent_1.restoreStateIfNeeded();
    }
}

var ReactGenericBatchingInjection = {
    injectStackBatchedUpdates: function injectStackBatchedUpdates(_batchedUpdates) {
        stackBatchedUpdates = _batchedUpdates;
    },
    injectFiberBatchedUpdates: function injectFiberBatchedUpdates(_batchedUpdates) {
        fiberBatchedUpdates = _batchedUpdates;
    }
},
    ReactGenericBatching = {
    batchedUpdates: batchedUpdatesWithControlledComponents,
    injection: ReactGenericBatchingInjection
},
    ReactGenericBatching_1 = ReactGenericBatching;

function ReactNativeFiberErrorDialog(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error,
        errorToHandle = void 0;
    if (error instanceof Error) {
        var message = error.message,
            name = error.name,
            summary = message ? name + ": " + message : name;
        errorToHandle = error;
        try {
            errorToHandle.message = summary + "\n\nThis error is located at:" + componentStack;
        } catch (e) {}
    } else errorToHandle = "string" == typeof error ? new Error(error + "\n\nThis error is located at:" + componentStack) : new Error("Unspecified error at:" + componentStack);
    return ExceptionsManager.handleException(errorToHandle, !1), !1;
}

var showDialog$1 = ReactNativeFiberErrorDialog,
    ReactNativeFiberErrorDialog_1 = {
    showDialog: showDialog$1
},
    eventPluginOrder = null,
    namesToPlugins = {};

function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName],
            pluginIndex = eventPluginOrder.indexOf(pluginName);
        if (invariant(pluginIndex > -1, "EventPluginRegistry: Cannot inject event plugins that do not exist in " + "the plugin ordering, `%s`.", pluginName), !EventPluginRegistry.plugins[pluginIndex]) {
            invariant(pluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` " + "method, but `%s` does not.", pluginName), EventPluginRegistry.plugins[pluginIndex] = pluginModule;
            var publishedEvents = pluginModule.eventTypes;
            for (var eventName in publishedEvents) {
                invariant(publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName), "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName);
            }
        }
    }
}

function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
    invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), "EventPluginHub: More than one plugin attempted to publish the same " + "event name, `%s`.", eventName), EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
    var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
    if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
            if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                var phasedRegistrationName = phasedRegistrationNames[phaseName];
                publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
            }
        }return !0;
    }
    return !!dispatchConfig.registrationName && (publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName), !0);
}

function publishRegistrationName(registrationName, pluginModule, eventName) {
    invariant(!EventPluginRegistry.registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same " + "registration name, `%s`.", registrationName), EventPluginRegistry.registrationNameModules[registrationName] = pluginModule, EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName, "onDoubleClick" === registrationName && (EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName);
}

var EventPluginRegistry = {
    plugins: [],
    eventNameDispatchConfigs: {},
    registrationNameModules: {},
    registrationNameDependencies: {},
    possibleRegistrationNames: {},
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
        invariant(!eventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than " + "once. You are likely trying to load more than one copy of React."), eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder), recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
        var isOrderingDirty = !1;
        for (var pluginName in injectedNamesToPlugins) {
            if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                var pluginModule = injectedNamesToPlugins[pluginName];
                namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins " + "using the same name, `%s`.", pluginName), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = !0);
            }
        }isOrderingDirty && recomputePluginOrdering();
    }
},
    EventPluginRegistry_1 = EventPluginRegistry;

function accumulateInto(current, next) {
    return invariant(null != next, "accumulateInto(...): Accumulated items must not be null or undefined."), null == current ? next : Array.isArray(current) ? Array.isArray(next) ? (current.push.apply(current, next), current) : (current.push(next), current) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulateInto_1 = accumulateInto;

function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
}

var forEachAccumulated_1 = forEachAccumulated,
    eventQueue = null,
    executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
    event && (EventPluginUtils_1.executeDispatchesInOrder(event, simulated), event.isPersistent() || event.constructor.release(event));
},
    executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
    return executeDispatchesAndRelease(e, !0);
},
    executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
    return executeDispatchesAndRelease(e, !1);
};

function isInteractive(tag) {
    return "button" === tag || "input" === tag || "select" === tag || "textarea" === tag;
}

function shouldPreventMouseEvent(name, type, props) {
    switch (name) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
            return !(!props.disabled || !isInteractive(type));

        default:
            return !1;
    }
}

var EventPluginHub = {
    injection: {
        injectEventPluginOrder: EventPluginRegistry_1.injectEventPluginOrder,
        injectEventPluginsByName: EventPluginRegistry_1.injectEventPluginsByName
    },
    getListener: function getListener(inst, registrationName) {
        var listener;
        if ("number" == typeof inst.tag) {
            var stateNode = inst.stateNode;
            if (!stateNode) return null;
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(stateNode);
            if (!props) return null;
            if (listener = props[registrationName], shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        } else {
            var currentElement = inst._currentElement;
            if ("string" == typeof currentElement || "number" == typeof currentElement) return null;
            if (!inst._rootNodeID) return null;
            var _props = currentElement.props;
            if (listener = _props[registrationName], shouldPreventMouseEvent(registrationName, currentElement.type, _props)) return null;
        }
        return invariant(!listener || "function" == typeof listener, "Expected %s listener to be a function, instead got type %s", registrationName, typeof listener), listener;
    },
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        for (var events, plugins = EventPluginRegistry_1.plugins, i = 0; i < plugins.length; i++) {
            var possiblePlugin = plugins[i];
            if (possiblePlugin) {
                var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
                extractedEvents && (events = accumulateInto_1(events, extractedEvents));
            }
        }
        return events;
    },
    enqueueEvents: function enqueueEvents(events) {
        events && (eventQueue = accumulateInto_1(eventQueue, events));
    },
    processEventQueue: function processEventQueue(simulated) {
        var processingEventQueue = eventQueue;
        eventQueue = null, simulated ? forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseSimulated) : forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseTopLevel), invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing " + "an event queue. Support for this has not yet been implemented."), ReactErrorUtils_1.rethrowCaughtError();
    }
},
    EventPluginHub_1 = EventPluginHub,
    ReactTypeOfWork = {
    IndeterminateComponent: 0,
    FunctionalComponent: 1,
    ClassComponent: 2,
    HostRoot: 3,
    HostPortal: 4,
    HostComponent: 5,
    HostText: 6,
    CoroutineComponent: 7,
    CoroutineHandlerPhase: 8,
    YieldComponent: 9,
    Fragment: 10
},
    HostComponent = ReactTypeOfWork.HostComponent;

function getParent(inst) {
    if (void 0 !== inst._hostParent) return inst._hostParent;
    if ("number" == typeof inst.tag) {
        do {
            inst = inst.return;
        } while (inst && inst.tag !== HostComponent);
        if (inst) return inst;
    }
    return null;
}

function getLowestCommonAncestor(instA, instB) {
    for (var depthA = 0, tempA = instA; tempA; tempA = getParent(tempA)) {
        depthA++;
    }for (var depthB = 0, tempB = instB; tempB; tempB = getParent(tempB)) {
        depthB++;
    }for (; depthA - depthB > 0;) {
        instA = getParent(instA), depthA--;
    }for (; depthB - depthA > 0;) {
        instB = getParent(instB), depthB--;
    }for (var depth = depthA; depth--;) {
        if (instA === instB || instA === instB.alternate) return instA;
        instA = getParent(instA), instB = getParent(instB);
    }
    return null;
}

function isAncestor(instA, instB) {
    for (; instB;) {
        if (instA === instB || instA === instB.alternate) return !0;
        instB = getParent(instB);
    }
    return !1;
}

function getParentInstance(inst) {
    return getParent(inst);
}

function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
        path.push(inst), inst = getParent(inst);
    }var i;
    for (i = path.length; i-- > 0;) {
        fn(path[i], "captured", arg);
    }for (i = 0; i < path.length; i++) {
        fn(path[i], "bubbled", arg);
    }
}

function traverseEnterLeave(from, to, fn, argFrom, argTo) {
    for (var common = from && to ? getLowestCommonAncestor(from, to) : null, pathFrom = []; from && from !== common;) {
        pathFrom.push(from), from = getParent(from);
    }for (var pathTo = []; to && to !== common;) {
        pathTo.push(to), to = getParent(to);
    }var i;
    for (i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], "bubbled", argFrom);
    }for (i = pathTo.length; i-- > 0;) {
        fn(pathTo[i], "captured", argTo);
    }
}

var ReactTreeTraversal = {
    isAncestor: isAncestor,
    getLowestCommonAncestor: getLowestCommonAncestor,
    getParentInstance: getParentInstance,
    traverseTwoPhase: traverseTwoPhase,
    traverseEnterLeave: traverseEnterLeave
},
    getListener = EventPluginHub_1.getListener;

function listenerAtPhase(inst, event, propagationPhase) {
    var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
    return getListener(inst, registrationName);
}

function accumulateDirectionalDispatches(inst, phase, event) {
    warning(inst, "Dispatching inst must not be null");
    var listener = listenerAtPhase(inst, event, phase);
    listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
}

function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && ReactTreeTraversal.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
}

function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
        var targetInst = event._targetInst,
            parentInst = targetInst ? ReactTreeTraversal.getParentInstance(targetInst) : null;
        ReactTreeTraversal.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
    }
}

function accumulateDispatches(inst, ignoredDirection, event) {
    if (inst && event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName,
            listener = getListener(inst, registrationName);
        listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
    }
}

function accumulateDirectDispatchesSingle(event) {
    event && event.dispatchConfig.registrationName && accumulateDispatches(event._targetInst, null, event);
}

function accumulateTwoPhaseDispatches(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
    ReactTreeTraversal.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
    forEachAccumulated_1(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = {
    accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
    accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
    accumulateDirectDispatches: accumulateDirectDispatches,
    accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
},
    EventPropagators_1 = EventPropagators,
    oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, copyFieldsFrom), instance;
    }
    return new Klass(copyFieldsFrom);
},
    twoArgumentPooler = function twoArgumentPooler(a1, a2) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2), instance;
    }
    return new Klass(a1, a2);
},
    threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2, a3), instance;
    }
    return new Klass(a1, a2, a3);
},
    fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2, a3, a4), instance;
    }
    return new Klass(a1, a2, a3, a4);
},
    standardReleaser = function standardReleaser(instance) {
    var Klass = this;
    invariant(instance instanceof Klass, "Trying to release an instance into a pool of a different type."), instance.destructor(), Klass.instancePool.length < Klass.poolSize && Klass.instancePool.push(instance);
},
    DEFAULT_POOL_SIZE = 10,
    DEFAULT_POOLER = oneArgumentPooler,
    addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
    var NewKlass = CopyConstructor;
    return NewKlass.instancePool = [], NewKlass.getPooled = pooler || DEFAULT_POOLER, NewKlass.poolSize || (NewKlass.poolSize = DEFAULT_POOL_SIZE), NewKlass.release = standardReleaser, NewKlass;
},
    PooledClass = {
    addPoolingTo: addPoolingTo,
    oneArgumentPooler: oneArgumentPooler,
    twoArgumentPooler: twoArgumentPooler,
    threeArgumentPooler: threeArgumentPooler,
    fourArgumentPooler: fourArgumentPooler
},
    PooledClass_1 = PooledClass,
    didWarnForAddedNewProperty = !1,
    isProxySupported = "function" == typeof Proxy,
    shouldBeReleasedProperties = ["dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances"],
    EventInterface = {
    type: null,
    target: null,
    currentTarget: emptyFunction.thatReturnsNull,
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
        return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
};

function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    delete this.nativeEvent, delete this.preventDefault, delete this.stopPropagation, this.dispatchConfig = dispatchConfig, this._targetInst = targetInst, this.nativeEvent = nativeEvent;
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
        if (Interface.hasOwnProperty(propName)) {
            delete this[propName];
            var normalize = Interface[propName];
            normalize ? this[propName] = normalize(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName];
        }
    }var defaultPrevented = null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue;
    return this.isDefaultPrevented = defaultPrevented ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse, this.isPropagationStopped = emptyFunction.thatReturnsFalse, this;
}

babelHelpers.extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
        this.defaultPrevented = !0;
        var event = this.nativeEvent;
        event && (event.preventDefault ? event.preventDefault() : "unknown" != typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = emptyFunction.thatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
        var event = this.nativeEvent;
        event && (event.stopPropagation ? event.stopPropagation() : "unknown" != typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = emptyFunction.thatReturnsTrue);
    },
    persist: function persist() {
        this.isPersistent = emptyFunction.thatReturnsTrue;
    },
    isPersistent: emptyFunction.thatReturnsFalse,
    destructor: function destructor() {
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
        }for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
            this[shouldBeReleasedProperties[i]] = null;
        }Object.defineProperty(this, "nativeEvent", getPooledWarningPropertyDefinition("nativeEvent", null)), Object.defineProperty(this, "preventDefault", getPooledWarningPropertyDefinition("preventDefault", emptyFunction)), Object.defineProperty(this, "stopPropagation", getPooledWarningPropertyDefinition("stopPropagation", emptyFunction));
    }
}), SyntheticEvent.Interface = EventInterface, SyntheticEvent.augmentClass = function (Class, Interface) {
    var Super = this,
        E = function E() {};
    E.prototype = Super.prototype;
    var prototype = new E();
    babelHelpers.extends(prototype, Class.prototype), Class.prototype = prototype, Class.prototype.constructor = Class, Class.Interface = babelHelpers.extends({}, Super.Interface, Interface), Class.augmentClass = Super.augmentClass, PooledClass_1.addPoolingTo(Class, PooledClass_1.fourArgumentPooler);
}, isProxySupported && (SyntheticEvent = new Proxy(SyntheticEvent, {
    construct: function construct(target, args) {
        return this.apply(target, Object.create(target.prototype), args);
    },
    apply: function apply(constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
            set: function set(target, prop, value) {
                return "isPersistent" === prop || target.constructor.Interface.hasOwnProperty(prop) || -1 !== shouldBeReleasedProperties.indexOf(prop) || (warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + "The property is never released. See " + "https://fb.me/react-event-pooling for more information."), didWarnForAddedNewProperty = !0), target[prop] = value, !0;
            }
        });
    }
})), PooledClass_1.addPoolingTo(SyntheticEvent, PooledClass_1.fourArgumentPooler);

var SyntheticEvent_1 = SyntheticEvent;

function getPooledWarningPropertyDefinition(propName, getVal) {
    var isFunction = "function" == typeof getVal;
    return {
        configurable: !0,
        set: set,
        get: get
    };
    function set(val) {
        return warn(isFunction ? "setting the method" : "setting the property", "This is effectively a no-op"), val;
    }
    function get() {
        return warn(isFunction ? "accessing the method" : "accessing the property", isFunction ? "This is a no-op function" : "This is set to null"), getVal;
    }
    function warn(action, result) {
        warning(!1, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + "If you must keep the original synthetic event around, use event.persist(). " + "See https://fb.me/react-event-pooling for more information.", action, propName, result);
    }
}

var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
},
    customBubblingEventTypes = UIManager.customBubblingEventTypes,
    customDirectEventTypes = UIManager.customDirectEventTypes,
    allTypesByEventName = {};

for (var bubblingTypeName in customBubblingEventTypes) {
    allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];
}for (var directTypeName in customDirectEventTypes) {
    warning(!customBubblingEventTypes[directTypeName], "Event cannot be both direct and bubbling: %s", directTypeName), allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];
}var ReactNativeBridgeEventPlugin = {
    eventTypes: _extends({}, customBubblingEventTypes, customDirectEventTypes),
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType],
            event = SyntheticEvent_1.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) EventPropagators_1.accumulateTwoPhaseDispatches(event);else {
            if (!directDispatchConfig) return null;
            EventPropagators_1.accumulateDirectDispatches(event);
        }
        return event;
    }
},
    ReactNativeBridgeEventPlugin_1 = ReactNativeBridgeEventPlugin,
    instanceCache = {},
    instanceProps = {};

function getRenderedHostOrTextFromComponent(component) {
    for (var rendered; rendered = component._renderedComponent;) {
        component = rendered;
    }return component;
}

function precacheNode(inst, tag) {
    var nativeInst = getRenderedHostOrTextFromComponent(inst);
    instanceCache[tag] = nativeInst;
}

function precacheFiberNode(hostInst, tag) {
    instanceCache[tag] = hostInst;
}

function uncacheNode(inst) {
    var tag = inst._rootNodeID;
    tag && delete instanceCache[tag];
}

function uncacheFiberNode(tag) {
    delete instanceCache[tag], delete instanceProps[tag];
}

function getInstanceFromTag(tag) {
    return instanceCache[tag] || null;
}

function getTagFromInstance(inst) {
    var tag = "number" != typeof inst.tag ? inst._rootNodeID : inst.stateNode._nativeTag;
    return invariant(tag, "All native instances should have a tag."), tag;
}

function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps[stateNode._nativeTag] || null;
}

function updateFiberProps(tag, props) {
    instanceProps[tag] = props;
}

var ReactNativeComponentTree = {
    getClosestInstanceFromNode: getInstanceFromTag,
    getInstanceFromNode: getInstanceFromTag,
    getNodeFromInstance: getTagFromInstance,
    precacheFiberNode: precacheFiberNode,
    precacheNode: precacheNode,
    uncacheFiberNode: uncacheFiberNode,
    uncacheNode: uncacheNode,
    getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode,
    updateFiberProps: updateFiberProps
},
    ReactNativeComponentTree_1 = ReactNativeComponentTree;

function runEventQueueInBatch(events) {
    EventPluginHub_1.enqueueEvents(events), EventPluginHub_1.processEventQueue(!1);
}

var ReactEventEmitterMixin = {
    handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        runEventQueueInBatch(EventPluginHub_1.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget));
    }
},
    ReactEventEmitterMixin_1 = ReactEventEmitterMixin,
    INITIAL_TAG_COUNT = 1,
    ReactNativeTagHandles = {
    tagsStartAt: INITIAL_TAG_COUNT,
    tagCount: INITIAL_TAG_COUNT,
    allocateTag: function allocateTag() {
        for (; this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount);) {
            ReactNativeTagHandles.tagCount++;
        }var tag = ReactNativeTagHandles.tagCount;
        return ReactNativeTagHandles.tagCount++, tag;
    },
    assertRootTag: function assertRootTag(tag) {
        invariant(this.reactTagIsNativeTopRootID(tag), "Expect a native root tag, instead got %s", tag);
    },
    reactTagIsNativeTopRootID: function reactTagIsNativeTopRootID(reactTag) {
        return reactTag % 10 == 1;
    }
},
    ReactNativeTagHandles_1 = ReactNativeTagHandles,
    _extends$1 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
},
    EMPTY_NATIVE_EVENT = {},
    touchSubsequence = function touchSubsequence(touches, indices) {
    for (var ret = [], i = 0; i < indices.length; i++) {
        ret.push(touches[indices[i]]);
    }return ret;
},
    removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {
    for (var rippedOut = [], temp = touches, i = 0; i < indices.length; i++) {
        var index = indices[i];
        rippedOut.push(touches[index]), temp[index] = null;
    }
    for (var fillAt = 0, j = 0; j < temp.length; j++) {
        var cur = temp[j];
        null !== cur && (temp[fillAt++] = cur);
    }
    return temp.length = fillAt, rippedOut;
},
    ReactNativeEventEmitter = _extends$1({}, ReactEventEmitterMixin_1, {
    registrationNames: EventPluginRegistry_1.registrationNameModules,
    getListener: EventPluginHub_1.getListener,
    _receiveRootNodeIDEvent: function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
        var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
            inst = ReactNativeComponentTree_1.getInstanceFromNode(rootNodeID);
        ReactGenericBatching_1.batchedUpdates(function () {
            ReactNativeEventEmitter.handleTopLevel(topLevelType, inst, nativeEvent, nativeEvent.target);
        });
    },
    receiveEvent: function receiveEvent(tag, topLevelType, nativeEventParam) {
        var rootNodeID = tag;
        ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
        for (var changedTouches = "topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices), jj = 0; jj < changedTouches.length; jj++) {
            var touch = changedTouches[jj];
            touch.changedTouches = changedTouches, touch.touches = touches;
            var nativeEvent = touch,
                rootNodeID = null,
                target = nativeEvent.target;
            null !== target && void 0 !== target && (target < ReactNativeTagHandles_1.tagsStartAt ? warning(!1, "A view is reporting that a touch occurred on tag zero.") : rootNodeID = target), ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);
        }
    }
}),
    ReactNativeEventEmitter_1 = ReactNativeEventEmitter,
    ReactNativeEventPluginOrder = ["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"],
    ReactNativeEventPluginOrder_1 = ReactNativeEventPluginOrder,
    ReactNativeGlobalResponderHandler = {
    onChange: function onChange(from, to, blockNativeResponder) {
        if (null !== to) {
            var tag = "number" != typeof to.tag ? to._rootNodeID : to.stateNode._nativeTag;
            UIManager.setJSResponder(tag, blockNativeResponder);
        } else UIManager.clearJSResponder();
    }
},
    ReactNativeGlobalResponderHandler_1 = ReactNativeGlobalResponderHandler,
    ResponderEventInterface = {
    touchHistory: function touchHistory(nativeEvent) {
        return null;
    }
};

function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent_1.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

var ResponderSyntheticEvent_1 = ResponderSyntheticEvent,
    isEndish$2 = EventPluginUtils_1.isEndish,
    isMoveish$2 = EventPluginUtils_1.isMoveish,
    isStartish$2 = EventPluginUtils_1.isStartish,
    MAX_TOUCH_BANK = 20,
    touchBank = [],
    touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
};

function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
}

function createTouchRecord(touch) {
    return {
        touchActive: !0,
        startPageX: touch.pageX,
        startPageY: touch.pageY,
        startTimeStamp: timestampForTouch(touch),
        currentPageX: touch.pageX,
        currentPageY: touch.pageY,
        currentTimeStamp: timestampForTouch(touch),
        previousPageX: touch.pageX,
        previousPageY: touch.pageY,
        previousTimeStamp: timestampForTouch(touch)
    };
}

function resetTouchRecord(touchRecord, touch) {
    touchRecord.touchActive = !0, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch);
}

function getTouchIdentifier(_ref) {
    var identifier = _ref.identifier;
    return invariant(null != identifier, "Touch object is missing identifier."), warning(identifier <= MAX_TOUCH_BANK, "Touch identifier %s is greater than maximum supported %s which causes " + "performance issues backfilling array locations for all of the indices.", identifier, MAX_TOUCH_BANK), identifier;
}

function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? resetTouchRecord(touchRecord, touch) : touchBank[identifier] = createTouchRecord(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
}

function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !0, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch move without a touch start.\n" + "Touch Move: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !1, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch end without a touch start.\n" + "Touch End: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function printTouch(touch) {
    return JSON.stringify({
        identifier: touch.identifier,
        pageX: touch.pageX,
        pageY: touch.pageY,
        timestamp: timestampForTouch(touch)
    });
}

function printTouchBank() {
    var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
    return touchBank.length > MAX_TOUCH_BANK && (printed += " (original size: " + touchBank.length + ")"), printed;
}

var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
        if (isMoveish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if (isEndish$2(topLevelType) && (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches)) {
            for (var i = 0; i < touchBank.length; i++) {
                var touchTrackToCheck = touchBank[i];
                if (null != touchTrackToCheck && touchTrackToCheck.touchActive) {
                    touchHistory.indexOfSingleActiveTouch = i;
                    break;
                }
            }
            var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];
            warning(null != activeRecord && activeRecord.touchActive, "Cannot find single active touch.");
        }
    },
    touchHistory: touchHistory
},
    ResponderTouchHistoryStore_1 = ResponderTouchHistoryStore;

function accumulate(current, next) {
    return invariant(null != next, "accumulate(...): Accumulated items must be not be null or undefined."), null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulate_1 = accumulate,
    isStartish$1 = EventPluginUtils_1.isStartish,
    isMoveish$1 = EventPluginUtils_1.isMoveish,
    isEndish$1 = EventPluginUtils_1.isEndish,
    executeDirectDispatch$1 = EventPluginUtils_1.executeDirectDispatch,
    hasDispatches$1 = EventPluginUtils_1.hasDispatches,
    executeDispatchesInOrderStopAtTrue$1 = EventPluginUtils_1.executeDispatchesInOrderStopAtTrue,
    responderInst = null,
    trackedTouchCount = 0,
    previousActiveTouches = 0,
    changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst, null !== ResponderEventPlugin.GlobalResponderHandler && ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
},
    eventTypes = {
    startShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onStartShouldSetResponder",
            captured: "onStartShouldSetResponderCapture"
        }
    },
    scrollShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onScrollShouldSetResponder",
            captured: "onScrollShouldSetResponderCapture"
        }
    },
    selectionChangeShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onSelectionChangeShouldSetResponder",
            captured: "onSelectionChangeShouldSetResponderCapture"
        }
    },
    moveShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onMoveShouldSetResponder",
            captured: "onMoveShouldSetResponderCapture"
        }
    },
    responderStart: {
        registrationName: "onResponderStart"
    },
    responderMove: {
        registrationName: "onResponderMove"
    },
    responderEnd: {
        registrationName: "onResponderEnd"
    },
    responderRelease: {
        registrationName: "onResponderRelease"
    },
    responderTerminationRequest: {
        registrationName: "onResponderTerminationRequest"
    },
    responderGrant: {
        registrationName: "onResponderGrant"
    },
    responderReject: {
        registrationName: "onResponderReject"
    },
    responderTerminate: {
        registrationName: "onResponderTerminate"
    }
};

function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var shouldSetEventType = isStartish$1(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish$1(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder,
        bubbleShouldSetFrom = responderInst ? ReactTreeTraversal.getLowestCommonAncestor(responderInst, targetInst) : targetInst,
        skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst,
        shouldSetEvent = ResponderSyntheticEvent_1.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
    shouldSetEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, skipOverBubbleShouldSetFrom ? EventPropagators_1.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent) : EventPropagators_1.accumulateTwoPhaseDispatches(shouldSetEvent);
    var wantsResponderInst = executeDispatchesInOrderStopAtTrue$1(shouldSetEvent);
    if (shouldSetEvent.isPersistent() || shouldSetEvent.constructor.release(shouldSetEvent), !wantsResponderInst || wantsResponderInst === responderInst) return null;
    var extracted,
        grantEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
    grantEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(grantEvent);
    var blockHostResponder = !0 === executeDirectDispatch$1(grantEvent);
    if (responderInst) {
        var terminationRequestEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
        terminationRequestEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminationRequestEvent);
        var shouldSwitch = !hasDispatches$1(terminationRequestEvent) || executeDirectDispatch$1(terminationRequestEvent);
        if (terminationRequestEvent.isPersistent() || terminationRequestEvent.constructor.release(terminationRequestEvent), shouldSwitch) {
            var terminateEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
            terminateEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminateEvent), extracted = accumulate_1(extracted, [grantEvent, terminateEvent]), changeResponder(wantsResponderInst, blockHostResponder);
        } else {
            var rejectEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
            rejectEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(rejectEvent), extracted = accumulate_1(extracted, rejectEvent);
        }
    } else extracted = accumulate_1(extracted, grantEvent), changeResponder(wantsResponderInst, blockHostResponder);
    return extracted;
}

function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
    return topLevelInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && "topSelectionChange" === topLevelType || isStartish$1(topLevelType) || isMoveish$1(topLevelType));
}

function noResponderTouches(nativeEvent) {
    var touches = nativeEvent.touches;
    if (!touches || 0 === touches.length) return !0;
    for (var i = 0; i < touches.length; i++) {
        var activeTouch = touches[i],
            target = activeTouch.target;
        if (null !== target && void 0 !== target && 0 !== target) {
            var targetInst = EventPluginUtils_1.getInstanceFromNode(target);
            if (ReactTreeTraversal.isAncestor(responderInst, targetInst)) return !1;
        }
    }
    return !0;
}

var ResponderEventPlugin = {
    _getResponder: function _getResponder() {
        return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (isStartish$1(topLevelType)) trackedTouchCount += 1;else if (isEndish$1(topLevelType)) {
            if (!(trackedTouchCount >= 0)) return console.error("Ended a touch event which was not counted in `trackedTouchCount`."), null;
            trackedTouchCount -= 1;
        }
        ResponderTouchHistoryStore_1.recordTouchTrack(topLevelType, nativeEvent);
        var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null,
            isResponderTouchStart = responderInst && isStartish$1(topLevelType),
            isResponderTouchMove = responderInst && isMoveish$1(topLevelType),
            isResponderTouchEnd = responderInst && isEndish$1(topLevelType),
            incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;
        if (incrementalTouch) {
            var gesture = ResponderSyntheticEvent_1.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
            gesture.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(gesture), extracted = accumulate_1(extracted, gesture);
        }
        var isResponderTerminate = responderInst && "topTouchCancel" === topLevelType,
            isResponderRelease = responderInst && !isResponderTerminate && isEndish$1(topLevelType) && noResponderTouches(nativeEvent),
            finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
        if (finalTouch) {
            var finalEvent = ResponderSyntheticEvent_1.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
            finalEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(finalEvent), extracted = accumulate_1(extracted, finalEvent), changeResponder(null);
        }
        var numberActiveTouches = ResponderTouchHistoryStore_1.touchHistory.numberActiveTouches;
        return ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches && ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches), previousActiveTouches = numberActiveTouches, extracted;
    },
    GlobalResponderHandler: null,
    GlobalInteractionHandler: null,
    injection: {
        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
            ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
        },
        injectGlobalInteractionHandler: function injectGlobalInteractionHandler(GlobalInteractionHandler) {
            ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
        }
    }
},
    ResponderEventPlugin_1 = ResponderEventPlugin;

function inject() {
    RCTEventEmitter.register(ReactNativeEventEmitter_1), EventPluginHub_1.injection.injectEventPluginOrder(ReactNativeEventPluginOrder_1), EventPluginUtils_1.injection.injectComponentTree(ReactNativeComponentTree_1), ResponderEventPlugin_1.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler_1), EventPluginHub_1.injection.injectEventPluginsByName({
        ResponderEventPlugin: ResponderEventPlugin_1,
        ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1
    });
}

var ReactNativeInjection = {
    inject: inject
},
    REACT_PORTAL_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") || 60106,
    createPortal = function createPortal(children, containerInfo, implementation) {
    var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
    return {
        $$typeof: REACT_PORTAL_TYPE,
        key: null == key ? null : "" + key,
        children: children,
        containerInfo: containerInfo,
        implementation: implementation
    };
},
    isPortal = function isPortal(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_PORTAL_TYPE;
},
    REACT_PORTAL_TYPE_1 = REACT_PORTAL_TYPE,
    ReactPortal = {
    createPortal: createPortal,
    isPortal: isPortal,
    REACT_PORTAL_TYPE: REACT_PORTAL_TYPE_1
},
    commonjsGlobal = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
    ReactFeatureFlags = {
    disableNewFiberFeatures: !1,
    enableAsyncSubtreeAPI: !1
},
    ReactFeatureFlags_1 = ReactFeatureFlags,
    ReactTypeOfSideEffect = {
    NoEffect: 0,
    PerformedWork: 1,
    Placement: 2,
    Update: 4,
    PlacementAndUpdate: 6,
    Deletion: 8,
    ContentReset: 16,
    Callback: 32,
    Err: 64,
    Ref: 128
},
    ReactPriorityLevel = {
    NoWork: 0,
    SynchronousPriority: 1,
    TaskPriority: 2,
    HighPriority: 3,
    LowPriority: 4,
    OffscreenPriority: 5
},
    CallbackEffect = ReactTypeOfSideEffect.Callback,
    NoWork = ReactPriorityLevel.NoWork,
    SynchronousPriority = ReactPriorityLevel.SynchronousPriority,
    TaskPriority = ReactPriorityLevel.TaskPriority,
    ClassComponent = ReactTypeOfWork.ClassComponent,
    HostRoot = ReactTypeOfWork.HostRoot,
    warning$3 = warning;

function comparePriority(a, b) {
    return a !== TaskPriority && a !== SynchronousPriority || b !== TaskPriority && b !== SynchronousPriority ? a === NoWork && b !== NoWork ? -255 : a !== NoWork && b === NoWork ? 255 : a - b : 0;
}

function createUpdateQueue() {
    var queue = {
        first: null,
        last: null,
        hasForceUpdate: !1,
        callbackList: null
    };
    return queue.isProcessing = !1, queue;
}

function cloneUpdate(update) {
    return {
        priorityLevel: update.priorityLevel,
        partialState: update.partialState,
        callback: update.callback,
        isReplace: update.isReplace,
        isForced: update.isForced,
        isTopLevelUnmount: update.isTopLevelUnmount,
        next: null
    };
}

function insertUpdateIntoQueue(queue, update, insertAfter, insertBefore) {
    null !== insertAfter ? insertAfter.next = update : (update.next = queue.first, queue.first = update), null !== insertBefore ? update.next = insertBefore : queue.last = update;
}

function findInsertionPosition(queue, update) {
    var priorityLevel = update.priorityLevel,
        insertAfter = null,
        insertBefore = null;
    if (null !== queue.last && comparePriority(queue.last.priorityLevel, priorityLevel) <= 0) insertAfter = queue.last;else for (insertBefore = queue.first; null !== insertBefore && comparePriority(insertBefore.priorityLevel, priorityLevel) <= 0;) {
        insertAfter = insertBefore, insertBefore = insertBefore.next;
    }return insertAfter;
}

function ensureUpdateQueues(fiber) {
    var alternateFiber = fiber.alternate,
        queue1 = fiber.updateQueue;
    null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue());
    var queue2 = void 0;
    return null !== alternateFiber ? null === (queue2 = alternateFiber.updateQueue) && (queue2 = alternateFiber.updateQueue = createUpdateQueue()) : queue2 = null, [queue1, queue2 !== queue1 ? queue2 : null];
}

function insertUpdate(fiber, update) {
    var _ensureUpdateQueues = ensureUpdateQueues(fiber),
        queue1 = _ensureUpdateQueues[0],
        queue2 = _ensureUpdateQueues[1];
    (queue1.isProcessing || null !== queue2 && queue2.isProcessing) && warning$3(!1, "An update (setState, replaceState, or forceUpdate) was scheduled " + "from inside an update function. Update functions should be pure, " + "with zero side-effects. Consider using componentDidUpdate or a " + "callback.");
    var insertAfter1 = findInsertionPosition(queue1, update),
        insertBefore1 = null !== insertAfter1 ? insertAfter1.next : queue1.first;
    if (null === queue2) return insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), null;
    var insertAfter2 = findInsertionPosition(queue2, update),
        insertBefore2 = null !== insertAfter2 ? insertAfter2.next : queue2.first;
    if (insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), insertBefore1 === insertBefore2 && null !== insertBefore1 || insertAfter1 === insertAfter2 && null !== insertAfter1) return null === insertAfter2 && (queue2.first = update), null === insertBefore2 && (queue2.last = null), null;
    var update2 = cloneUpdate(update);
    return insertUpdateIntoQueue(queue2, update2, insertAfter2, insertBefore2), update2;
}

function addUpdate(fiber, partialState, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: partialState,
        callback: callback,
        isReplace: !1,
        isForced: !1,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addUpdate_1 = addUpdate;

function addReplaceUpdate(fiber, state, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: state,
        callback: callback,
        isReplace: !0,
        isForced: !1,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addReplaceUpdate_1 = addReplaceUpdate;

function addForceUpdate(fiber, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: null,
        callback: callback,
        isReplace: !1,
        isForced: !0,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addForceUpdate_1 = addForceUpdate;

function getUpdatePriority(fiber) {
    var updateQueue = fiber.updateQueue;
    return null === updateQueue ? NoWork : fiber.tag !== ClassComponent && fiber.tag !== HostRoot ? NoWork : null !== updateQueue.first ? updateQueue.first.priorityLevel : NoWork;
}

var getUpdatePriority_1 = getUpdatePriority;

function addTopLevelUpdate$1(fiber, partialState, callback, priorityLevel) {
    var isTopLevelUnmount = null === partialState.element,
        update = {
        priorityLevel: priorityLevel,
        partialState: partialState,
        callback: callback,
        isReplace: !1,
        isForced: !1,
        isTopLevelUnmount: isTopLevelUnmount,
        next: null
    },
        update2 = insertUpdate(fiber, update);
    if (isTopLevelUnmount) {
        var _ensureUpdateQueues2 = ensureUpdateQueues(fiber),
            queue1 = _ensureUpdateQueues2[0],
            queue2 = _ensureUpdateQueues2[1];
        null !== queue1 && null !== update.next && (update.next = null, queue1.last = update), null !== queue2 && null !== update2 && null !== update2.next && (update2.next = null, queue2.last = update);
    }
}

var addTopLevelUpdate_1 = addTopLevelUpdate$1;

function getStateFromUpdate(update, instance, prevState, props) {
    var partialState = update.partialState;
    if ("function" == typeof partialState) {
        return partialState.call(instance, prevState, props);
    }
    return partialState;
}

function beginUpdateQueue(current, workInProgress, queue, instance, prevState, props, priorityLevel) {
    if (null !== current && current.updateQueue === queue) {
        var currentQueue = queue;
        queue = workInProgress.updateQueue = {
            first: currentQueue.first,
            last: currentQueue.last,
            callbackList: null,
            hasForceUpdate: !1
        };
    }
    queue.isProcessing = !0;
    for (var callbackList = queue.callbackList, hasForceUpdate = queue.hasForceUpdate, state = prevState, dontMutatePrevState = !0, update = queue.first; null !== update && comparePriority(update.priorityLevel, priorityLevel) <= 0;) {
        queue.first = update.next, null === queue.first && (queue.last = null);
        var _partialState = void 0;
        update.isReplace ? (state = getStateFromUpdate(update, instance, state, props), dontMutatePrevState = !0) : (_partialState = getStateFromUpdate(update, instance, state, props)) && (state = dontMutatePrevState ? babelHelpers.extends({}, state, _partialState) : babelHelpers.extends(state, _partialState), dontMutatePrevState = !1), update.isForced && (hasForceUpdate = !0), null === update.callback || update.isTopLevelUnmount && null !== update.next || (callbackList = null !== callbackList ? callbackList : [], callbackList.push(update.callback), workInProgress.effectTag |= CallbackEffect), update = update.next;
    }
    return queue.callbackList = callbackList, queue.hasForceUpdate = hasForceUpdate, null !== queue.first || null !== callbackList || hasForceUpdate || (workInProgress.updateQueue = null), queue.isProcessing = !1, state;
}

var beginUpdateQueue_1 = beginUpdateQueue;

function commitCallbacks(finishedWork, queue, context) {
    var callbackList = queue.callbackList;
    if (null !== callbackList) {
        queue.callbackList = null;
        for (var i = 0; i < callbackList.length; i++) {
            var _callback = callbackList[i];
            invariant("function" == typeof _callback, "Invalid argument passed as callback. Expected a function. Instead " + "received: %s", _callback), _callback.call(context);
        }
    }
}

var commitCallbacks_1 = commitCallbacks,
    ReactFiberUpdateQueue = {
    addUpdate: addUpdate_1,
    addReplaceUpdate: addReplaceUpdate_1,
    addForceUpdate: addForceUpdate_1,
    getUpdatePriority: getUpdatePriority_1,
    addTopLevelUpdate: addTopLevelUpdate_1,
    beginUpdateQueue: beginUpdateQueue_1,
    commitCallbacks: commitCallbacks_1
};

function getComponentName$1(instanceOrFiber) {
    if ("function" == typeof instanceOrFiber.getName) {
        return instanceOrFiber.getName();
    }
    if ("number" == typeof instanceOrFiber.tag) {
        var fiber = instanceOrFiber,
            type = fiber.type;
        if ("string" == typeof type) return type;
        if ("function" == typeof type) return type.displayName || type.name;
    }
    return null;
}

var getComponentName_1 = getComponentName$1,
    ReactInstanceMap = {
    remove: function remove(key) {
        key._reactInternalInstance = void 0;
    },
    get: function get(key) {
        return key._reactInternalInstance;
    },
    has: function has(key) {
        return void 0 !== key._reactInternalInstance;
    },
    set: function set(key, value) {
        key._reactInternalInstance = value;
    }
},
    ReactInstanceMap_1 = ReactInstanceMap,
    ReactInternals = react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    ReactGlobalSharedState = {
    ReactCurrentOwner: ReactInternals.ReactCurrentOwner
};

babelHelpers.extends(ReactGlobalSharedState, {
    ReactComponentTreeHook: ReactInternals.ReactComponentTreeHook,
    ReactDebugCurrentFrame: ReactInternals.ReactDebugCurrentFrame
});

var ReactGlobalSharedState_1 = ReactGlobalSharedState,
    ReactCurrentOwner = ReactGlobalSharedState_1.ReactCurrentOwner,
    warning$4 = warning,
    HostRoot$2 = ReactTypeOfWork.HostRoot,
    HostComponent$2 = ReactTypeOfWork.HostComponent,
    HostText = ReactTypeOfWork.HostText,
    ClassComponent$2 = ReactTypeOfWork.ClassComponent,
    NoEffect = ReactTypeOfSideEffect.NoEffect,
    Placement = ReactTypeOfSideEffect.Placement,
    MOUNTING = 1,
    MOUNTED = 2,
    UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
        node = node.return;
    } else {
        if ((node.effectTag & Placement) !== NoEffect) return MOUNTING;
        for (; node.return;) {
            if (node = node.return, (node.effectTag & Placement) !== NoEffect) return MOUNTING;
        }
    }
    return node.tag === HostRoot$2 ? MOUNTED : UNMOUNTED;
}

var isFiberMounted$1 = function isFiberMounted$1(fiber) {
    return isFiberMountedImpl(fiber) === MOUNTED;
},
    isMounted = function isMounted(component) {
    var owner = ReactCurrentOwner.current;
    if (null !== owner && owner.tag === ClassComponent$2) {
        var ownerFiber = owner,
            instance = ownerFiber.stateNode;
        warning$4(instance._warnedAboutRefsInRender, "%s is accessing isMounted inside its render() function. " + "render() should be a pure function of props and state. It should " + "never access something that requires stale data from the previous " + "render, such as refs. Move this logic to componentDidMount and " + "componentDidUpdate instead.", getComponentName_1(ownerFiber) || "A component"), instance._warnedAboutRefsInRender = !0;
    }
    var fiber = ReactInstanceMap_1.get(component);
    return !!fiber && isFiberMountedImpl(fiber) === MOUNTED;
};

function assertIsMounted(fiber) {
    invariant(isFiberMountedImpl(fiber) === MOUNTED, "Unable to find node on an unmounted component.");
}

function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;
    if (!alternate) {
        var state = isFiberMountedImpl(fiber);
        return invariant(state !== UNMOUNTED, "Unable to find node on an unmounted component."), state === MOUNTING ? null : fiber;
    }
    for (var a = fiber, b = alternate; !0;) {
        var parentA = a.return,
            parentB = parentA ? parentA.alternate : null;
        if (!parentA || !parentB) break;
        if (parentA.child === parentB.child) {
            for (var child = parentA.child; child;) {
                if (child === a) return assertIsMounted(parentA), fiber;
                if (child === b) return assertIsMounted(parentA), alternate;
                child = child.sibling;
            }
            invariant(!1, "Unable to find node on an unmounted component.");
        }
        if (a.return !== b.return) a = parentA, b = parentB;else {
            for (var didFindChild = !1, _child = parentA.child; _child;) {
                if (_child === a) {
                    didFindChild = !0, a = parentA, b = parentB;
                    break;
                }
                if (_child === b) {
                    didFindChild = !0, b = parentA, a = parentB;
                    break;
                }
                _child = _child.sibling;
            }
            if (!didFindChild) {
                for (_child = parentB.child; _child;) {
                    if (_child === a) {
                        didFindChild = !0, a = parentB, b = parentA;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = !0, b = parentB, a = parentA;
                        break;
                    }
                    _child = _child.sibling;
                }
                invariant(didFindChild, "Child was not found in either parent set. This indicates a bug " + "related to the return pointer.");
            }
        }
        invariant(a.alternate === b, "Return fibers should always be each others' alternates.");
    }
    return invariant(a.tag === HostRoot$2, "Unable to find node on an unmounted component."), a.stateNode.current === a ? fiber : alternate;
}

var findCurrentFiberUsingSlowPath_1 = findCurrentFiberUsingSlowPath,
    findCurrentHostFiber$1 = function findCurrentHostFiber$1(parent) {
    var currentParent = findCurrentFiberUsingSlowPath(parent);
    if (!currentParent) return null;
    for (var node = currentParent; !0;) {
        if (node.tag === HostComponent$2 || node.tag === HostText) return node;
        if (node.child) node.child.return = node, node = node.child;else {
            if (node === currentParent) return null;
            for (; !node.sibling;) {
                if (!node.return || node.return === currentParent) return null;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    return null;
},
    ReactFiberTreeReflection = {
    isFiberMounted: isFiberMounted$1,
    isMounted: isMounted,
    findCurrentFiberUsingSlowPath: findCurrentFiberUsingSlowPath_1,
    findCurrentHostFiber: findCurrentHostFiber$1
},
    valueStack = [],
    fiberStack = [],
    index = -1,
    createCursor$1 = function createCursor$1(defaultValue) {
    return {
        current: defaultValue
    };
},
    isEmpty = function isEmpty() {
    return -1 === index;
},
    pop$1 = function pop$1(cursor, fiber) {
    if (index < 0) return void warning(!1, "Unexpected pop.");
    fiber !== fiberStack[index] && warning(!1, "Unexpected Fiber popped."), cursor.current = valueStack[index], valueStack[index] = null, fiberStack[index] = null, index--;
},
    push$1 = function push$1(cursor, value, fiber) {
    index++, valueStack[index] = cursor.current, fiberStack[index] = fiber, cursor.current = value;
},
    reset = function reset() {
    for (; index > -1;) {
        valueStack[index] = null, fiberStack[index] = null, index--;
    }
},
    ReactFiberStack = {
    createCursor: createCursor$1,
    isEmpty: isEmpty,
    pop: pop$1,
    push: push$1,
    reset: reset
},
    IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$3 = ReactTypeOfWork.ClassComponent,
    HostComponent$3 = ReactTypeOfWork.HostComponent;

function describeComponentFrame(name, source, ownerName) {
    return "\n    in " + (name || "Unknown") + (source ? " (at " + source.fileName.replace(/^.*[\\\/]/, "") + ":" + source.lineNumber + ")" : ownerName ? " (created by " + ownerName + ")" : "");
}

function describeFiber(fiber) {
    switch (fiber.tag) {
        case IndeterminateComponent:
        case FunctionalComponent:
        case ClassComponent$3:
        case HostComponent$3:
            var owner = fiber._debugOwner,
                source = fiber._debugSource,
                name = getComponentName_1(fiber),
                ownerName = null;
            return owner && (ownerName = getComponentName_1(owner)), describeComponentFrame(name, source, ownerName);

        default:
            return "";
    }
}

function getStackAddendumByWorkInProgressFiber$1(workInProgress) {
    var info = "",
        node = workInProgress;
    do {
        info += describeFiber(node), node = node.return;
    } while (node);
    return info;
}

var ReactFiberComponentTreeHook = {
    getStackAddendumByWorkInProgressFiber: getStackAddendumByWorkInProgressFiber$1,
    describeComponentFrame: describeComponentFrame
},
    getComponentName$3 = getComponentName_1,
    _require$1 = ReactFiberComponentTreeHook,
    getStackAddendumByWorkInProgressFiber = _require$1.getStackAddendumByWorkInProgressFiber;

function getCurrentFiberOwnerName() {
    var fiber = ReactDebugCurrentFiber$2.current;
    return null === fiber ? null : null != fiber._debugOwner ? getComponentName$3(fiber._debugOwner) : null;
}

function getCurrentFiberStackAddendum() {
    var fiber = ReactDebugCurrentFiber$2.current;
    return null === fiber ? null : getStackAddendumByWorkInProgressFiber(fiber);
}

var ReactDebugCurrentFiber$2 = {
    current: null,
    phase: null,
    getCurrentFiberOwnerName: getCurrentFiberOwnerName,
    getCurrentFiberStackAddendum: getCurrentFiberStackAddendum
},
    ReactDebugCurrentFiber_1 = ReactDebugCurrentFiber$2,
    ReactDebugFiberPerf = null,
    _require$2 = ReactTypeOfWork,
    HostRoot$3 = _require$2.HostRoot,
    HostComponent$4 = _require$2.HostComponent,
    HostText$1 = _require$2.HostText,
    HostPortal = _require$2.HostPortal,
    YieldComponent = _require$2.YieldComponent,
    Fragment = _require$2.Fragment,
    getComponentName$4 = getComponentName_1,
    reactEmoji = "⚛",
    warningEmoji = "⛔",
    supportsUserTiming = "undefined" != typeof performance && "function" == typeof performance.mark && "function" == typeof performance.clearMarks && "function" == typeof performance.measure && "function" == typeof performance.clearMeasures,
    currentFiber = null,
    currentPhase = null,
    currentPhaseFiber = null,
    isCommitting = !1,
    hasScheduledUpdateInCurrentCommit = !1,
    hasScheduledUpdateInCurrentPhase = !1,
    commitCountInCurrentWorkLoop = 0,
    effectCountInCurrentCommit = 0,
    labelsInCurrentCommit = new Set(),
    formatMarkName = function formatMarkName(markName) {
    return reactEmoji + " " + markName;
},
    formatLabel = function formatLabel(label, warning$$1) {
    return (warning$$1 ? warningEmoji + " " : reactEmoji + " ") + label + (warning$$1 ? " Warning: " + warning$$1 : "");
},
    beginMark = function beginMark(markName) {
    performance.mark(formatMarkName(markName));
},
    clearMark = function clearMark(markName) {
    performance.clearMarks(formatMarkName(markName));
},
    endMark = function endMark(label, markName, warning$$1) {
    var formattedMarkName = formatMarkName(markName),
        formattedLabel = formatLabel(label, warning$$1);
    try {
        performance.measure(formattedLabel, formattedMarkName);
    } catch (err) {}
    performance.clearMarks(formattedMarkName), performance.clearMeasures(formattedLabel);
},
    getFiberMarkName = function getFiberMarkName(label, debugID) {
    return label + " (#" + debugID + ")";
},
    getFiberLabel = function getFiberLabel(componentName, isMounted, phase) {
    return null === phase ? componentName + " [" + (isMounted ? "update" : "mount") + "]" : componentName + "." + phase;
},
    beginFiberMark = function beginFiberMark(fiber, phase) {
    var componentName = getComponentName$4(fiber) || "Unknown",
        debugID = fiber._debugID,
        isMounted = null !== fiber.alternate,
        label = getFiberLabel(componentName, isMounted, phase);
    if (isCommitting && labelsInCurrentCommit.has(label)) return !1;
    labelsInCurrentCommit.add(label);
    var markName = getFiberMarkName(label, debugID);
    return beginMark(markName), !0;
},
    clearFiberMark = function clearFiberMark(fiber, phase) {
    var componentName = getComponentName$4(fiber) || "Unknown",
        debugID = fiber._debugID,
        isMounted = null !== fiber.alternate,
        label = getFiberLabel(componentName, isMounted, phase),
        markName = getFiberMarkName(label, debugID);
    clearMark(markName);
},
    endFiberMark = function endFiberMark(fiber, phase, warning$$1) {
    var componentName = getComponentName$4(fiber) || "Unknown",
        debugID = fiber._debugID,
        isMounted = null !== fiber.alternate,
        label = getFiberLabel(componentName, isMounted, phase),
        markName = getFiberMarkName(label, debugID);
    endMark(label, markName, warning$$1);
},
    shouldIgnoreFiber = function shouldIgnoreFiber(fiber) {
    switch (fiber.tag) {
        case HostRoot$3:
        case HostComponent$4:
        case HostText$1:
        case HostPortal:
        case YieldComponent:
        case Fragment:
            return !0;

        default:
            return !1;
    }
},
    clearPendingPhaseMeasurement = function clearPendingPhaseMeasurement() {
    null !== currentPhase && null !== currentPhaseFiber && clearFiberMark(currentPhaseFiber, currentPhase), currentPhaseFiber = null, currentPhase = null, hasScheduledUpdateInCurrentPhase = !1;
},
    pauseTimers = function pauseTimers() {
    for (var fiber = currentFiber; fiber;) {
        fiber._debugIsCurrentlyTiming && endFiberMark(fiber, null, null), fiber = fiber.return;
    }
},
    resumeTimersRecursively = function resumeTimersRecursively(fiber) {
    null !== fiber.return && resumeTimersRecursively(fiber.return), fiber._debugIsCurrentlyTiming && beginFiberMark(fiber, null);
},
    resumeTimers = function resumeTimers() {
    null !== currentFiber && resumeTimersRecursively(currentFiber);
};

ReactDebugFiberPerf = {
    recordEffect: function recordEffect() {
        effectCountInCurrentCommit++;
    },
    recordScheduleUpdate: function recordScheduleUpdate() {
        isCommitting && (hasScheduledUpdateInCurrentCommit = !0), null !== currentPhase && "componentWillMount" !== currentPhase && "componentWillReceiveProps" !== currentPhase && (hasScheduledUpdateInCurrentPhase = !0);
    },
    startWorkTimer: function startWorkTimer(fiber) {
        supportsUserTiming && !shouldIgnoreFiber(fiber) && (currentFiber = fiber, beginFiberMark(fiber, null) && (fiber._debugIsCurrentlyTiming = !0));
    },
    cancelWorkTimer: function cancelWorkTimer(fiber) {
        supportsUserTiming && !shouldIgnoreFiber(fiber) && (fiber._debugIsCurrentlyTiming = !1, clearFiberMark(fiber, null));
    },
    stopWorkTimer: function stopWorkTimer(fiber) {
        supportsUserTiming && !shouldIgnoreFiber(fiber) && (currentFiber = fiber.return, fiber._debugIsCurrentlyTiming && (fiber._debugIsCurrentlyTiming = !1, endFiberMark(fiber, null, null)));
    },
    startPhaseTimer: function startPhaseTimer(fiber, phase) {
        supportsUserTiming && (clearPendingPhaseMeasurement(), beginFiberMark(fiber, phase) && (currentPhaseFiber = fiber, currentPhase = phase));
    },
    stopPhaseTimer: function stopPhaseTimer() {
        if (supportsUserTiming) {
            if (null !== currentPhase && null !== currentPhaseFiber) {
                endFiberMark(currentPhaseFiber, currentPhase, hasScheduledUpdateInCurrentPhase ? "Scheduled a cascading update" : null);
            }
            currentPhase = null, currentPhaseFiber = null;
        }
    },
    startWorkLoopTimer: function startWorkLoopTimer() {
        supportsUserTiming && (commitCountInCurrentWorkLoop = 0, beginMark("(React Tree Reconciliation)"), resumeTimers());
    },
    stopWorkLoopTimer: function stopWorkLoopTimer() {
        if (supportsUserTiming) {
            var warning$$1 = commitCountInCurrentWorkLoop > 1 ? "There were cascading updates" : null;
            commitCountInCurrentWorkLoop = 0, pauseTimers(), endMark("(React Tree Reconciliation)", "(React Tree Reconciliation)", warning$$1);
        }
    },
    startCommitTimer: function startCommitTimer() {
        supportsUserTiming && (isCommitting = !0, hasScheduledUpdateInCurrentCommit = !1, labelsInCurrentCommit.clear(), beginMark("(Committing Changes)"));
    },
    stopCommitTimer: function stopCommitTimer() {
        if (supportsUserTiming) {
            var warning$$1 = null;
            hasScheduledUpdateInCurrentCommit ? warning$$1 = "Lifecycle hook scheduled a cascading update" : commitCountInCurrentWorkLoop > 0 && (warning$$1 = "Caused by a cascading update in earlier commit"), hasScheduledUpdateInCurrentCommit = !1, commitCountInCurrentWorkLoop++, isCommitting = !1, labelsInCurrentCommit.clear(), endMark("(Committing Changes)", "(Committing Changes)", warning$$1);
        }
    },
    startCommitHostEffectsTimer: function startCommitHostEffectsTimer() {
        supportsUserTiming && (effectCountInCurrentCommit = 0, beginMark("(Committing Host Effects)"));
    },
    stopCommitHostEffectsTimer: function stopCommitHostEffectsTimer() {
        if (supportsUserTiming) {
            var count = effectCountInCurrentCommit;
            effectCountInCurrentCommit = 0, endMark("(Committing Host Effects: " + count + " Total)", "(Committing Host Effects)", null);
        }
    },
    startCommitLifeCyclesTimer: function startCommitLifeCyclesTimer() {
        supportsUserTiming && (effectCountInCurrentCommit = 0, beginMark("(Calling Lifecycle Methods)"));
    },
    stopCommitLifeCyclesTimer: function stopCommitLifeCyclesTimer() {
        if (supportsUserTiming) {
            var count = effectCountInCurrentCommit;
            effectCountInCurrentCommit = 0, endMark("(Calling Lifecycle Methods: " + count + " Total)", "(Calling Lifecycle Methods)", null);
        }
    }
};

var ReactDebugFiberPerf_1 = ReactDebugFiberPerf,
    _extends$2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
},
    isFiberMounted = ReactFiberTreeReflection.isFiberMounted,
    ClassComponent$1 = ReactTypeOfWork.ClassComponent,
    HostRoot$1 = ReactTypeOfWork.HostRoot,
    createCursor = ReactFiberStack.createCursor,
    pop = ReactFiberStack.pop,
    push = ReactFiberStack.push,
    ReactDebugCurrentFiber$1 = ReactDebugCurrentFiber_1,
    _require4 = ReactGlobalSharedState_1,
    ReactDebugCurrentFrame = _require4.ReactDebugCurrentFrame,
    _require5 = ReactDebugFiberPerf_1,
    startPhaseTimer = _require5.startPhaseTimer,
    stopPhaseTimer = _require5.stopPhaseTimer,
    warnedAboutMissingGetChildContext = {},
    contextStackCursor = createCursor(emptyObject),
    didPerformWorkStackCursor = createCursor(!1),
    previousContext = emptyObject;

function getUnmaskedContext(workInProgress) {
    return isContextProvider$1(workInProgress) ? previousContext : contextStackCursor.current;
}

var getUnmaskedContext_1 = getUnmaskedContext;

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}

var cacheContext_1 = cacheContext,
    getMaskedContext = function getMaskedContext(workInProgress, unmaskedContext) {
    var type = workInProgress.type,
        contextTypes = type.contextTypes;
    if (!contextTypes) return emptyObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {};
    for (var key in contextTypes) {
        context[key] = unmaskedContext[key];
    }var name = getComponentName_1(workInProgress) || "Unknown";
    return ReactDebugCurrentFrame.current = workInProgress, checkPropTypes(contextTypes, context, "context", name, ReactDebugCurrentFrame.getStackAddendum), ReactDebugCurrentFrame.current = null, instance && cacheContext(workInProgress, unmaskedContext, context), context;
},
    hasContextChanged = function hasContextChanged() {
    return didPerformWorkStackCursor.current;
};

function isContextConsumer(fiber) {
    return fiber.tag === ClassComponent$1 && null != fiber.type.contextTypes;
}

var isContextConsumer_1 = isContextConsumer;

function isContextProvider$1(fiber) {
    return fiber.tag === ClassComponent$1 && null != fiber.type.childContextTypes;
}

var isContextProvider_1 = isContextProvider$1;

function popContextProvider(fiber) {
    isContextProvider$1(fiber) && (pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber));
}

var popContextProvider_1 = popContextProvider,
    pushTopLevelContextObject = function pushTopLevelContextObject(fiber, context, didChange) {
    invariant(null == contextStackCursor.cursor, "Unexpected context found on stack"), push(contextStackCursor, context, fiber), push(didPerformWorkStackCursor, didChange, fiber);
};

function processChildContext$1(fiber, parentContext, isReconciling) {
    var instance = fiber.stateNode,
        childContextTypes = fiber.type.childContextTypes;
    if ("function" != typeof instance.getChildContext) {
        var componentName = getComponentName_1(fiber) || "Unknown";
        return warnedAboutMissingGetChildContext[componentName] || (warnedAboutMissingGetChildContext[componentName] = !0, warning(!1, "%s.childContextTypes is specified but there is no getChildContext() method " + "on the instance. You can either define getChildContext() on %s or remove " + "childContextTypes from it.", componentName, componentName)), parentContext;
    }
    var childContext = void 0;
    ReactDebugCurrentFiber$1.phase = "getChildContext", startPhaseTimer(fiber, "getChildContext"), childContext = instance.getChildContext(), stopPhaseTimer(), ReactDebugCurrentFiber$1.phase = null;
    for (var contextKey in childContext) {
        invariant(contextKey in childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName_1(fiber) || "Unknown", contextKey);
    }var name = getComponentName_1(fiber) || "Unknown",
        workInProgress = isReconciling ? fiber : null;
    return ReactDebugCurrentFrame.current = workInProgress, checkPropTypes(childContextTypes, childContext, "child context", name, ReactDebugCurrentFrame.getStackAddendum), ReactDebugCurrentFrame.current = null, _extends$2({}, parentContext, childContext);
}

var processChildContext_1 = processChildContext$1,
    pushContextProvider = function pushContextProvider(workInProgress) {
    if (!isContextProvider$1(workInProgress)) return !1;
    var instance = workInProgress.stateNode,
        memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;
    return previousContext = contextStackCursor.current, push(contextStackCursor, memoizedMergedChildContext, workInProgress), push(didPerformWorkStackCursor, !1, workInProgress), !0;
},
    invalidateContextProvider = function invalidateContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    invariant(instance, "Expected to have an instance by this point.");
    var mergedContext = processChildContext$1(workInProgress, previousContext, !0);
    instance.__reactInternalMemoizedMergedChildContext = mergedContext, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, mergedContext, workInProgress), push(didPerformWorkStackCursor, !0, workInProgress);
},
    resetContext = function resetContext() {
    previousContext = emptyObject, contextStackCursor.current = emptyObject, didPerformWorkStackCursor.current = !1;
},
    findCurrentUnmaskedContext$1 = function findCurrentUnmaskedContext$1(fiber) {
    invariant(isFiberMounted(fiber) && fiber.tag === ClassComponent$1, "Expected subtree parent to be a mounted class component");
    for (var node = fiber; node.tag !== HostRoot$1;) {
        if (isContextProvider$1(node)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
        var parent = node.return;
        invariant(parent, "Found unexpected detached subtree parent"), node = parent;
    }
    return node.stateNode.context;
},
    ReactFiberContext = {
    getUnmaskedContext: getUnmaskedContext_1,
    cacheContext: cacheContext_1,
    getMaskedContext: getMaskedContext,
    hasContextChanged: hasContextChanged,
    isContextConsumer: isContextConsumer_1,
    isContextProvider: isContextProvider_1,
    popContextProvider: popContextProvider_1,
    pushTopLevelContextObject: pushTopLevelContextObject,
    processChildContext: processChildContext_1,
    pushContextProvider: pushContextProvider,
    invalidateContextProvider: invalidateContextProvider,
    resetContext: resetContext,
    findCurrentUnmaskedContext: findCurrentUnmaskedContext$1
},
    ReactTypeOfInternalContext = {
    NoContext: 0,
    AsyncUpdates: 1
},
    IndeterminateComponent$1 = ReactTypeOfWork.IndeterminateComponent,
    ClassComponent$4 = ReactTypeOfWork.ClassComponent,
    HostRoot$4 = ReactTypeOfWork.HostRoot,
    HostComponent$5 = ReactTypeOfWork.HostComponent,
    HostText$2 = ReactTypeOfWork.HostText,
    HostPortal$1 = ReactTypeOfWork.HostPortal,
    CoroutineComponent = ReactTypeOfWork.CoroutineComponent,
    YieldComponent$1 = ReactTypeOfWork.YieldComponent,
    Fragment$1 = ReactTypeOfWork.Fragment,
    NoWork$1 = ReactPriorityLevel.NoWork,
    NoContext = ReactTypeOfInternalContext.NoContext,
    NoEffect$1 = ReactTypeOfSideEffect.NoEffect,
    getComponentName$5 = getComponentName_1,
    hasBadMapPolyfill = !1;

try {
    var nonExtensibleObject = Object.preventExtensions({});
    new Map([[nonExtensibleObject, null]]), new Set([nonExtensibleObject]);
} catch (e) {
    hasBadMapPolyfill = !0;
}

var debugCounter = 1,
    createFiber = function createFiber(tag, key, internalContextTag) {
    var fiber = {
        tag: tag,
        key: key,
        type: null,
        stateNode: null,
        return: null,
        child: null,
        sibling: null,
        index: 0,
        ref: null,
        pendingProps: null,
        memoizedProps: null,
        updateQueue: null,
        memoizedState: null,
        internalContextTag: internalContextTag,
        effectTag: NoEffect$1,
        nextEffect: null,
        firstEffect: null,
        lastEffect: null,
        pendingWorkPriority: NoWork$1,
        alternate: null
    };
    return fiber._debugID = debugCounter++, fiber._debugSource = null, fiber._debugOwner = null, fiber._debugIsCurrentlyTiming = !1, hasBadMapPolyfill || "function" != typeof Object.preventExtensions || Object.preventExtensions(fiber), fiber;
};

function shouldConstruct(Component) {
    return !(!Component.prototype || !Component.prototype.isReactComponent);
}

var createWorkInProgress = function createWorkInProgress(current, renderPriority) {
    var workInProgress = current.alternate;
    return null === workInProgress ? (workInProgress = createFiber(current.tag, current.key, current.internalContextTag), workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress._debugID = current._debugID, workInProgress._debugSource = current._debugSource, workInProgress._debugOwner = current._debugOwner, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.effectTag = NoWork$1, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null), workInProgress.pendingWorkPriority = renderPriority, workInProgress.child = current.child, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.sibling = current.sibling, workInProgress.index = current.index, workInProgress.ref = current.ref, workInProgress;
},
    createHostRootFiber$1 = function createHostRootFiber$1() {
    return createFiber(HostRoot$4, null, NoContext);
},
    createFiberFromElement = function createFiberFromElement(element, internalContextTag, priorityLevel) {
    var owner = null;
    owner = element._owner;
    var fiber = createFiberFromElementType(element.type, element.key, internalContextTag, owner);
    return fiber.pendingProps = element.props, fiber.pendingWorkPriority = priorityLevel, fiber._debugSource = element._source, fiber._debugOwner = element._owner, fiber;
},
    createFiberFromFragment = function createFiberFromFragment(elements, internalContextTag, priorityLevel) {
    var fiber = createFiber(Fragment$1, null, internalContextTag);
    return fiber.pendingProps = elements, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromText = function createFiberFromText(content, internalContextTag, priorityLevel) {
    var fiber = createFiber(HostText$2, null, internalContextTag);
    return fiber.pendingProps = content, fiber.pendingWorkPriority = priorityLevel, fiber;
};

function createFiberFromElementType(type, key, internalContextTag, debugOwner) {
    var fiber = void 0;
    if ("function" == typeof type) fiber = shouldConstruct(type) ? createFiber(ClassComponent$4, key, internalContextTag) : createFiber(IndeterminateComponent$1, key, internalContextTag), fiber.type = type;else if ("string" == typeof type) fiber = createFiber(HostComponent$5, key, internalContextTag), fiber.type = type;else if ("object" == typeof type && null !== type && "number" == typeof type.tag) fiber = type;else {
        var info = "";
        (void 0 === type || "object" == typeof type && null !== type && 0 === Object.keys(type).length) && (info += " You likely forgot to export your component from the file " + "it's defined in.");
        var ownerName = debugOwner ? getComponentName$5(debugOwner) : null;
        ownerName && (info += "\n\nCheck the render method of `" + ownerName + "`."), invariant(!1, "Element type is invalid: expected a string (for built-in components) " + "or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, info);
    }
    return fiber;
}

var createFiberFromElementType_1 = createFiberFromElementType,
    createFiberFromHostInstanceForDeletion = function createFiberFromHostInstanceForDeletion() {
    var fiber = createFiber(HostComponent$5, null, NoContext);
    return fiber.type = "DELETED", fiber;
},
    createFiberFromCoroutine = function createFiberFromCoroutine(coroutine, internalContextTag, priorityLevel) {
    var fiber = createFiber(CoroutineComponent, coroutine.key, internalContextTag);
    return fiber.type = coroutine.handler, fiber.pendingProps = coroutine, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromYield = function createFiberFromYield(yieldNode, internalContextTag, priorityLevel) {
    return createFiber(YieldComponent$1, null, internalContextTag);
},
    createFiberFromPortal = function createFiberFromPortal(portal, internalContextTag, priorityLevel) {
    var fiber = createFiber(HostPortal$1, portal.key, internalContextTag);
    return fiber.pendingProps = portal.children || [], fiber.pendingWorkPriority = priorityLevel, fiber.stateNode = {
        containerInfo: portal.containerInfo,
        implementation: portal.implementation
    }, fiber;
},
    largerPriority = function largerPriority(p1, p2) {
    return p1 !== NoWork$1 && (p2 === NoWork$1 || p2 > p1) ? p1 : p2;
},
    ReactFiber = {
    createWorkInProgress: createWorkInProgress,
    createHostRootFiber: createHostRootFiber$1,
    createFiberFromElement: createFiberFromElement,
    createFiberFromFragment: createFiberFromFragment,
    createFiberFromText: createFiberFromText,
    createFiberFromElementType: createFiberFromElementType_1,
    createFiberFromHostInstanceForDeletion: createFiberFromHostInstanceForDeletion,
    createFiberFromCoroutine: createFiberFromCoroutine,
    createFiberFromYield: createFiberFromYield,
    createFiberFromPortal: createFiberFromPortal,
    largerPriority: largerPriority
},
    createHostRootFiber = ReactFiber.createHostRootFiber,
    createFiberRoot$1 = function createFiberRoot$1(containerInfo) {
    var uninitializedFiber = createHostRootFiber(),
        root = {
        current: uninitializedFiber,
        containerInfo: containerInfo,
        isScheduled: !1,
        nextScheduledRoot: null,
        context: null,
        pendingContext: null
    };
    return uninitializedFiber.stateNode = root, root;
},
    ReactFiberRoot = {
    createFiberRoot: createFiberRoot$1
},
    REACT_COROUTINE_TYPE$1,
    REACT_YIELD_TYPE$1;

"function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") ? (REACT_COROUTINE_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.coroutine"), REACT_YIELD_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.yield")) : (REACT_COROUTINE_TYPE$1 = 60104, REACT_YIELD_TYPE$1 = 60105);

var createCoroutine = function createCoroutine(children, handler, props) {
    var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
        coroutine = {
        $$typeof: REACT_COROUTINE_TYPE$1,
        key: null == key ? null : "" + key,
        children: children,
        handler: handler,
        props: props
    };
    return Object.freeze && (Object.freeze(coroutine.props), Object.freeze(coroutine)), coroutine;
},
    createYield = function createYield(value) {
    var yieldNode = {
        $$typeof: REACT_YIELD_TYPE$1,
        value: value
    };
    return Object.freeze && Object.freeze(yieldNode), yieldNode;
},
    isCoroutine = function isCoroutine(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_COROUTINE_TYPE$1;
},
    isYield = function isYield(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_YIELD_TYPE$1;
},
    REACT_YIELD_TYPE_1 = REACT_YIELD_TYPE$1,
    REACT_COROUTINE_TYPE_1 = REACT_COROUTINE_TYPE$1,
    ReactCoroutine = {
    createCoroutine: createCoroutine,
    createYield: createYield,
    isCoroutine: isCoroutine,
    isYield: isYield,
    REACT_YIELD_TYPE: REACT_YIELD_TYPE_1,
    REACT_COROUTINE_TYPE: REACT_COROUTINE_TYPE_1
},
    REACT_COROUTINE_TYPE = ReactCoroutine.REACT_COROUTINE_TYPE,
    REACT_YIELD_TYPE = ReactCoroutine.REACT_YIELD_TYPE,
    REACT_PORTAL_TYPE$1 = ReactPortal.REACT_PORTAL_TYPE,
    _require3$3 = ReactDebugCurrentFiber_1,
    getCurrentFiberStackAddendum$1 = _require3$3.getCurrentFiberStackAddendum,
    warning$7 = warning,
    didWarnAboutMaps = !1,
    ownerHasKeyUseWarning = {},
    warnForMissingKey = function warnForMissingKey(child) {
    if (null !== child && "object" == typeof child && child._store && !child._store.validated && null == child.key) {
        invariant("object" == typeof child._store, "React Component in warnForMissingKey should have a _store"), child._store.validated = !0;
        var currentComponentErrorInfo = "Each child in an array or iterator should have a unique " + '"key" prop. See https://fb.me/react-warning-keys for ' + "more information." + (getCurrentFiberStackAddendum$1() || "");
        ownerHasKeyUseWarning[currentComponentErrorInfo] || (ownerHasKeyUseWarning[currentComponentErrorInfo] = !0, warning$7(!1, "Each child in an array or iterator should have a unique " + '"key" prop. See https://fb.me/react-warning-keys for ' + "more information.%s", getCurrentFiberStackAddendum$1()));
    }
},
    createWorkInProgress$2 = ReactFiber.createWorkInProgress,
    createFiberFromElement$1 = ReactFiber.createFiberFromElement,
    createFiberFromFragment$1 = ReactFiber.createFiberFromFragment,
    createFiberFromText$1 = ReactFiber.createFiberFromText,
    createFiberFromCoroutine$1 = ReactFiber.createFiberFromCoroutine,
    createFiberFromYield$1 = ReactFiber.createFiberFromYield,
    createFiberFromPortal$1 = ReactFiber.createFiberFromPortal,
    isArray = Array.isArray,
    FunctionalComponent$2 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$7 = ReactTypeOfWork.ClassComponent,
    HostText$4 = ReactTypeOfWork.HostText,
    HostPortal$4 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$2 = ReactTypeOfWork.CoroutineComponent,
    YieldComponent$3 = ReactTypeOfWork.YieldComponent,
    Fragment$3 = ReactTypeOfWork.Fragment,
    NoEffect$2 = ReactTypeOfSideEffect.NoEffect,
    Placement$3 = ReactTypeOfSideEffect.Placement,
    Deletion$1 = ReactTypeOfSideEffect.Deletion,
    ITERATOR_SYMBOL = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
    FAUX_ITERATOR_SYMBOL = "@@iterator",
    REACT_ELEMENT_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 60103;

function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || void 0 === maybeIterable) return null;
    var iteratorFn = ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
    return "function" == typeof iteratorFn ? iteratorFn : null;
}

function coerceRef(current, element) {
    var mixedRef = element.ref;
    if (null !== mixedRef && "function" != typeof mixedRef && element._owner) {
        var owner = element._owner,
            inst = void 0;
        if (owner) if ("number" == typeof owner.tag) {
            var ownerFiber = owner;
            invariant(ownerFiber.tag === ClassComponent$7, "Stateless function components cannot have refs."), inst = ownerFiber.stateNode;
        } else inst = owner.getPublicInstance();
        invariant(inst, "Missing owner for string ref %s. This error is likely caused by a " + "bug in React. Please file an issue.", mixedRef);
        var stringRef = "" + mixedRef;
        if (null !== current && null !== current.ref && current.ref._stringRef === stringRef) return current.ref;
        var ref = function ref(value) {
            var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
            null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };
        return ref._stringRef = stringRef, ref;
    }
    return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) {
        var addendum = "";
        addendum = " If you meant to render a collection of children, use an array " + "instead." + (getCurrentFiberStackAddendum$1() || ""), invariant(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild, addendum);
    }
}

function ChildReconciler(shouldClone, shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
        if (shouldTrackSideEffects) {
            if (!shouldClone) {
                if (null === childToDelete.alternate) return;
                childToDelete = childToDelete.alternate;
            }
            var last = returnFiber.lastEffect;
            null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete, childToDelete.nextEffect = null, childToDelete.effectTag = Deletion$1;
        }
    }
    function deleteRemainingChildren(returnFiber, currentFirstChild) {
        if (!shouldTrackSideEffects) return null;
        for (var childToDelete = currentFirstChild; null !== childToDelete;) {
            deleteChild(returnFiber, childToDelete), childToDelete = childToDelete.sibling;
        }return null;
    }
    function mapRemainingChildren(returnFiber, currentFirstChild) {
        for (var existingChildren = new Map(), existingChild = currentFirstChild; null !== existingChild;) {
            null !== existingChild.key ? existingChildren.set(existingChild.key, existingChild) : existingChildren.set(existingChild.index, existingChild), existingChild = existingChild.sibling;
        }return existingChildren;
    }
    function useFiber(fiber, priority) {
        if (shouldClone) {
            var clone = createWorkInProgress$2(fiber, priority);
            return clone.index = 0, clone.sibling = null, clone;
        }
        return fiber.pendingWorkPriority = priority, fiber.effectTag = NoEffect$2, fiber.index = 0, fiber.sibling = null, fiber;
    }
    function placeChild(newFiber, lastPlacedIndex, newIndex) {
        if (newFiber.index = newIndex, !shouldTrackSideEffects) return lastPlacedIndex;
        var current = newFiber.alternate;
        if (null !== current) {
            var oldIndex = current.index;
            return oldIndex < lastPlacedIndex ? (newFiber.effectTag = Placement$3, lastPlacedIndex) : oldIndex;
        }
        return newFiber.effectTag = Placement$3, lastPlacedIndex;
    }
    function placeSingleChild(newFiber) {
        return shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = Placement$3), newFiber;
    }
    function updateTextNode(returnFiber, current, textContent, priority) {
        if (null === current || current.tag !== HostText$4) {
            var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = textContent, existing.return = returnFiber, existing;
    }
    function updateElement(returnFiber, current, element, priority) {
        if (null === current || current.type !== element.type) {
            var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
            return created.ref = coerceRef(current, element), created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.ref = coerceRef(current, element), existing.pendingProps = element.props, existing.return = returnFiber, existing._debugSource = element._source, existing._debugOwner = element._owner, existing;
    }
    function updateCoroutine(returnFiber, current, coroutine, priority) {
        if (null === current || current.tag !== CoroutineComponent$2) {
            var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
    }
    function updateYield(returnFiber, current, yieldNode, priority) {
        if (null === current || current.tag !== YieldComponent$3) {
            var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
            return created.type = yieldNode.value, created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.type = yieldNode.value, existing.return = returnFiber, existing;
    }
    function updatePortal(returnFiber, current, portal, priority) {
        if (null === current || current.tag !== HostPortal$4 || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
            var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
    }
    function updateFragment(returnFiber, current, fragment, priority) {
        if (null === current || current.tag !== Fragment$3) {
            var created = createFiberFromFragment$1(fragment, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = fragment, existing.return = returnFiber, existing;
    }
    function createChild(returnFiber, newChild, priority) {
        if ("string" == typeof newChild || "number" == typeof newChild) {
            var created = createFiberFromText$1("" + newChild, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    var _created = createFiberFromElement$1(newChild, returnFiber.internalContextTag, priority);
                    return _created.ref = coerceRef(null, newChild), _created.return = returnFiber, _created;

                case REACT_COROUTINE_TYPE:
                    var _created2 = createFiberFromCoroutine$1(newChild, returnFiber.internalContextTag, priority);
                    return _created2.return = returnFiber, _created2;

                case REACT_YIELD_TYPE:
                    var _created3 = createFiberFromYield$1(newChild, returnFiber.internalContextTag, priority);
                    return _created3.type = newChild.value, _created3.return = returnFiber, _created3;

                case REACT_PORTAL_TYPE$1:
                    var _created4 = createFiberFromPortal$1(newChild, returnFiber.internalContextTag, priority);
                    return _created4.return = returnFiber, _created4;
            }
            if (isArray(newChild) || getIteratorFn(newChild)) {
                var _created5 = createFiberFromFragment$1(newChild, returnFiber.internalContextTag, priority);
                return _created5.return = returnFiber, _created5;
            }
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function updateSlot(returnFiber, oldFiber, newChild, priority) {
        var key = null !== oldFiber ? oldFiber.key : null;
        if ("string" == typeof newChild || "number" == typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, priority);
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    return newChild.key === key ? updateElement(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_COROUTINE_TYPE:
                    return newChild.key === key ? updateCoroutine(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_YIELD_TYPE:
                    return null === key ? updateYield(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_PORTAL_TYPE$1:
                    return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, priority) : null;
            }
            if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, priority);
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, priority) {
        if ("string" == typeof newChild || "number" == typeof newChild) {
            return updateTextNode(returnFiber, existingChildren.get(newIdx) || null, "" + newChild, priority);
        }
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    return updateElement(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                case REACT_COROUTINE_TYPE:
                    return updateCoroutine(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                case REACT_YIELD_TYPE:
                    return updateYield(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);

                case REACT_PORTAL_TYPE$1:
                    return updatePortal(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);
            }
            if (isArray(newChild) || getIteratorFn(newChild)) {
                return updateFragment(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);
            }
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function warnOnInvalidKey(child, knownKeys) {
        if ("object" != typeof child || null === child) return knownKeys;
        switch (child.$$typeof) {
            case REACT_ELEMENT_TYPE:
            case REACT_COROUTINE_TYPE:
            case REACT_PORTAL_TYPE$1:
                warnForMissingKey(child);
                var key = child.key;
                if ("string" != typeof key) break;
                if (null === knownKeys) {
                    knownKeys = new Set(), knownKeys.add(key);
                    break;
                }
                if (!knownKeys.has(key)) {
                    knownKeys.add(key);
                    break;
                }
                warning$7(!1, "Encountered two children with the same key, `%s`. " + "Keys should be unique so that components maintain their identity " + "across updates. Non-unique keys may cause children to be " + "duplicated and/or omitted — the behavior is unsupported and " + "could change in a future version.%s", key, getCurrentFiberStackAddendum$1());
        }
        return knownKeys;
    }
    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, priority) {
        for (var knownKeys = null, i = 0; i < newChildren.length; i++) {
            knownKeys = warnOnInvalidKey(newChildren[i], knownKeys);
        }
        for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
            oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
            var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], priority);
            if (null === newFiber) {
                null === oldFiber && (oldFiber = nextOldFiber);
                break;
            }
            shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
        }
        if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
        if (null === oldFiber) {
            for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], priority);
                _newFiber && (lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber : previousNewFiber.sibling = _newFiber, previousNewFiber = _newFiber);
            }
            return resultingFirstChild;
        }
        for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
            var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], priority);
            _newFiber2 && (shouldTrackSideEffects && null !== _newFiber2.alternate && existingChildren.delete(null === _newFiber2.key ? newIdx : _newFiber2.key), lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber2 : previousNewFiber.sibling = _newFiber2, previousNewFiber = _newFiber2);
        }
        return shouldTrackSideEffects && existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
        }), resultingFirstChild;
    }
    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, priority) {
        var iteratorFn = getIteratorFn(newChildrenIterable);
        if (invariant("function" == typeof iteratorFn, "An object is not an iterable. This error is likely caused by a bug in " + "React. Please file an issue."), "function" == typeof newChildrenIterable.entries) {
            newChildrenIterable.entries === iteratorFn && (warning$7(didWarnAboutMaps, "Using Maps as children is unsupported and will likely yield " + "unexpected results. Convert it to a sequence/iterable of keyed " + "ReactElements instead.%s", getCurrentFiberStackAddendum$1()), didWarnAboutMaps = !0);
        }
        var _newChildren = iteratorFn.call(newChildrenIterable);
        if (_newChildren) for (var knownKeys = null, _step = _newChildren.next(); !_step.done; _step = _newChildren.next()) {
            var child = _step.value;
            knownKeys = warnOnInvalidKey(child, knownKeys);
        }
        var newChildren = iteratorFn.call(newChildrenIterable);
        invariant(null != newChildren, "An iterable object provided no iterator.");
        for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()) {
            oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
            var newFiber = updateSlot(returnFiber, oldFiber, step.value, priority);
            if (null === newFiber) {
                oldFiber || (oldFiber = nextOldFiber);
                break;
            }
            shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
        }
        if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
        if (null === oldFiber) {
            for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, priority);
                null !== _newFiber3 && (lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber3 : previousNewFiber.sibling = _newFiber3, previousNewFiber = _newFiber3);
            }
            return resultingFirstChild;
        }
        for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildren.next()) {
            var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, priority);
            null !== _newFiber4 && (shouldTrackSideEffects && null !== _newFiber4.alternate && existingChildren.delete(null === _newFiber4.key ? newIdx : _newFiber4.key), lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber4 : previousNewFiber.sibling = _newFiber4, previousNewFiber = _newFiber4);
        }
        return shouldTrackSideEffects && existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
        }), resultingFirstChild;
    }
    function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, priority) {
        if (null !== currentFirstChild && currentFirstChild.tag === HostText$4) {
            deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
            var existing = useFiber(currentFirstChild, priority);
            return existing.pendingProps = textContent, existing.return = returnFiber, existing;
        }
        deleteRemainingChildren(returnFiber, currentFirstChild);
        var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileSingleElement(returnFiber, currentFirstChild, element, priority) {
        for (var key = element.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.type === element.type) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.ref = coerceRef(child, element), existing.pendingProps = element.props, existing.return = returnFiber, existing._debugSource = element._source, existing._debugOwner = element._owner, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
        return created.ref = coerceRef(currentFirstChild, element), created.return = returnFiber, created;
    }
    function reconcileSingleCoroutine(returnFiber, currentFirstChild, coroutine, priority) {
        for (var key = coroutine.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.tag === CoroutineComponent$2) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileSingleYield(returnFiber, currentFirstChild, yieldNode, priority) {
        var child = currentFirstChild;
        if (null !== child) {
            if (child.tag === YieldComponent$3) {
                deleteRemainingChildren(returnFiber, child.sibling);
                var existing = useFiber(child, priority);
                return existing.type = yieldNode.value, existing.return = returnFiber, existing;
            }
            deleteRemainingChildren(returnFiber, child);
        }
        var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
        return created.type = yieldNode.value, created.return = returnFiber, created;
    }
    function reconcileSinglePortal(returnFiber, currentFirstChild, portal, priority) {
        for (var key = portal.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.tag === HostPortal$4 && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileChildFibers(returnFiber, currentFirstChild, newChild, priority) {
        var disableNewFiberFeatures = ReactFeatureFlags_1.disableNewFiberFeatures,
            isObject = "object" == typeof newChild && null !== newChild;
        if (isObject) if (disableNewFiberFeatures) switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
                return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

            case REACT_PORTAL_TYPE$1:
                return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
        } else switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
                return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

            case REACT_COROUTINE_TYPE:
                return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));

            case REACT_YIELD_TYPE:
                return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));

            case REACT_PORTAL_TYPE$1:
                return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
        }
        if (disableNewFiberFeatures) switch (returnFiber.tag) {
            case ClassComponent$7:
                if (returnFiber.stateNode.render._isMockFunction && void 0 === newChild) break;
                var Component = returnFiber.type;
                invariant(null === newChild || !1 === newChild, "%s.render(): A valid React element (or null) must be returned. " + "You may have returned undefined, an array or some other " + "invalid object.", Component.displayName || Component.name || "Component");
                break;

            case FunctionalComponent$2:
                var _Component = returnFiber.type;
                invariant(null === newChild || !1 === newChild, "%s(...): A valid React element (or null) must be returned. " + "You may have returned undefined, an array or some other " + "invalid object.", _Component.displayName || _Component.name || "Component");
        }
        if ("string" == typeof newChild || "number" == typeof newChild) return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, priority));
        if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);
        if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);
        if (isObject && throwOnInvalidObjectType(returnFiber, newChild), !disableNewFiberFeatures && void 0 === newChild) switch (returnFiber.tag) {
            case ClassComponent$7:
                if (returnFiber.stateNode.render._isMockFunction) break;

            case FunctionalComponent$2:
                var _Component2 = returnFiber.type;
                invariant(!1, "%s(...): Nothing was returned from render. This usually means a " + "return statement is missing. Or, to render nothing, " + "return null.", _Component2.displayName || _Component2.name || "Component");
        }
        return deleteRemainingChildren(returnFiber, currentFirstChild);
    }
    return reconcileChildFibers;
}

var reconcileChildFibers$1 = ChildReconciler(!0, !0),
    reconcileChildFibersInPlace$1 = ChildReconciler(!1, !0),
    mountChildFibersInPlace$1 = ChildReconciler(!1, !1),
    cloneChildFibers$1 = function cloneChildFibers$1(current, workInProgress) {
    if (invariant(null === current || workInProgress.child === current.child, "Resuming work not yet implemented."), null !== workInProgress.child) {
        var currentChild = workInProgress.child,
            newChild = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority);
        for (newChild.pendingProps = currentChild.pendingProps, workInProgress.child = newChild, newChild.return = workInProgress; null !== currentChild.sibling;) {
            currentChild = currentChild.sibling, newChild = newChild.sibling = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority), newChild.pendingProps = currentChild.pendingProps, newChild.return = workInProgress;
        }newChild.sibling = null;
    }
},
    ReactChildFiber = {
    reconcileChildFibers: reconcileChildFibers$1,
    reconcileChildFibersInPlace: reconcileChildFibersInPlace$1,
    mountChildFibersInPlace: mountChildFibersInPlace$1,
    cloneChildFibers: cloneChildFibers$1
},
    Update$1 = ReactTypeOfSideEffect.Update,
    AsyncUpdates$1 = ReactTypeOfInternalContext.AsyncUpdates,
    cacheContext$1 = ReactFiberContext.cacheContext,
    getMaskedContext$2 = ReactFiberContext.getMaskedContext,
    getUnmaskedContext$2 = ReactFiberContext.getUnmaskedContext,
    isContextConsumer$1 = ReactFiberContext.isContextConsumer,
    addUpdate$1 = ReactFiberUpdateQueue.addUpdate,
    addReplaceUpdate$1 = ReactFiberUpdateQueue.addReplaceUpdate,
    addForceUpdate$1 = ReactFiberUpdateQueue.addForceUpdate,
    beginUpdateQueue$2 = ReactFiberUpdateQueue.beginUpdateQueue,
    _require5$1 = ReactFiberContext,
    hasContextChanged$2 = _require5$1.hasContextChanged,
    isMounted$1 = ReactFiberTreeReflection.isMounted,
    isArray$1 = Array.isArray,
    _require7$1 = ReactDebugFiberPerf_1,
    startPhaseTimer$1 = _require7$1.startPhaseTimer,
    stopPhaseTimer$1 = _require7$1.stopPhaseTimer,
    warning$8 = warning,
    warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {
    warning$8(null === callback || "function" == typeof callback, "%s(...): Expected the last optional `callback` argument to be a " + "function. Instead received: %s.", callerName, callback);
},
    ReactFiberClassComponent = function ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState) {
    var updater = {
        isMounted: isMounted$1,
        enqueueSetState: function enqueueSetState(instance, partialState, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, warnOnInvalidCallback(callback, "setState"), addUpdate$1(fiber, partialState, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        },
        enqueueReplaceState: function enqueueReplaceState(instance, state, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, warnOnInvalidCallback(callback, "replaceState"), addReplaceUpdate$1(fiber, state, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        },
        enqueueForceUpdate: function enqueueForceUpdate(instance, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, warnOnInvalidCallback(callback, "forceUpdate"), addForceUpdate$1(fiber, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        }
    };
    function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
        if (null === oldProps || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate) return !0;
        var instance = workInProgress.stateNode,
            type = workInProgress.type;
        if ("function" == typeof instance.shouldComponentUpdate) {
            startPhaseTimer$1(workInProgress, "shouldComponentUpdate");
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
            return stopPhaseTimer$1(), warning$8(void 0 !== shouldUpdate, "%s.shouldComponentUpdate(): Returned undefined instead of a " + "boolean value. Make sure to return true or false.", getComponentName_1(workInProgress) || "Unknown"), shouldUpdate;
        }
        return !type.prototype || !type.prototype.isPureReactComponent || !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
    }
    function checkClassInstance(workInProgress) {
        var instance = workInProgress.stateNode,
            type = workInProgress.type,
            name = getComponentName_1(workInProgress),
            renderPresent = instance.render;
        warning$8(renderPresent, "%s(...): No `render` method found on the returned component " + "instance: you may have forgotten to define `render`.", name);
        var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
        warning$8(noGetInitialStateOnES6, "getInitialState was defined on %s, a plain JavaScript class. " + "This is only supported for classes created using React.createClass. " + "Did you mean to define a state property instead?", name);
        var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
        warning$8(noGetDefaultPropsOnES6, "getDefaultProps was defined on %s, a plain JavaScript class. " + "This is only supported for classes created using React.createClass. " + "Use a static property to define defaultProps instead.", name);
        var noInstancePropTypes = !instance.propTypes;
        warning$8(noInstancePropTypes, "propTypes was defined as an instance property on %s. Use a static " + "property to define propTypes instead.", name);
        var noInstanceContextTypes = !instance.contextTypes;
        warning$8(noInstanceContextTypes, "contextTypes was defined as an instance property on %s. Use a static " + "property to define contextTypes instead.", name);
        var noComponentShouldUpdate = "function" != typeof instance.componentShouldUpdate;
        warning$8(noComponentShouldUpdate, "%s has a method called " + "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " + "The name is phrased as a question because the function is " + "expected to return a value.", name), type.prototype && type.prototype.isPureReactComponent && void 0 !== instance.shouldComponentUpdate && warning$8(!1, "%s has a method called shouldComponentUpdate(). " + "shouldComponentUpdate should not be used when extending React.PureComponent. " + "Please extend React.Component if shouldComponentUpdate is used.", getComponentName_1(workInProgress) || "A pure component");
        var noComponentDidUnmount = "function" != typeof instance.componentDidUnmount;
        warning$8(noComponentDidUnmount, "%s has a method called " + "componentDidUnmount(). But there is no such lifecycle method. " + "Did you mean componentWillUnmount()?", name);
        var noComponentWillRecieveProps = "function" != typeof instance.componentWillRecieveProps;
        warning$8(noComponentWillRecieveProps, "%s has a method called " + "componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
        var hasMutatedProps = instance.props !== workInProgress.pendingProps;
        warning$8(void 0 === instance.props || !hasMutatedProps, "%s(...): When calling super() in `%s`, make sure to pass " + "up the same props that your component's constructor was passed.", name, name);
        var noInstanceDefaultProps = !instance.defaultProps;
        warning$8(noInstanceDefaultProps, "Setting defaultProps as an instance property on %s is not supported and will be ignored." + " Instead, define defaultProps as a static property on %s.", name, name);
        var state = instance.state;
        state && ("object" != typeof state || isArray$1(state)) && invariant(!1, "%s.state: must be set to an object or null", getComponentName_1(workInProgress)), "function" == typeof instance.getChildContext && invariant("object" == typeof workInProgress.type.childContextTypes, "%s.getChildContext(): childContextTypes must be defined in order to " + "use getChildContext().", getComponentName_1(workInProgress));
    }
    function resetInputPointers(workInProgress, instance) {
        instance.props = workInProgress.memoizedProps, instance.state = workInProgress.memoizedState;
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = updater, workInProgress.stateNode = instance, ReactInstanceMap_1.set(instance, workInProgress);
    }
    function constructClassInstance(workInProgress, props) {
        var ctor = workInProgress.type,
            unmaskedContext = getUnmaskedContext$2(workInProgress),
            needsContext = isContextConsumer$1(workInProgress),
            context = needsContext ? getMaskedContext$2(workInProgress, unmaskedContext) : emptyObject,
            instance = new ctor(props, context);
        return adoptClassInstance(workInProgress, instance), needsContext && cacheContext$1(workInProgress, unmaskedContext, context), instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        startPhaseTimer$1(workInProgress, "componentWillMount");
        var oldState = instance.state;
        instance.componentWillMount(), stopPhaseTimer$1(), oldState !== instance.state && (warning$8(!1, "%s.componentWillMount(): Assigning directly to this.state is " + "deprecated (except inside a component's " + "constructor). Use setState instead.", getComponentName_1(workInProgress)), updater.enqueueReplaceState(instance, instance.state, null));
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
        startPhaseTimer$1(workInProgress, "componentWillReceiveProps");
        var oldState = instance.state;
        instance.componentWillReceiveProps(newProps, newContext), stopPhaseTimer$1(), instance.state !== oldState && (warning$8(!1, "%s.componentWillReceiveProps(): Assigning directly to " + "this.state is deprecated (except inside a component's " + "constructor). Use setState instead.", getComponentName_1(workInProgress)), updater.enqueueReplaceState(instance, instance.state, null));
    }
    function mountClassInstance(workInProgress, priorityLevel) {
        var current = workInProgress.alternate;
        checkClassInstance(workInProgress);
        var instance = workInProgress.stateNode,
            state = instance.state || null,
            props = workInProgress.pendingProps;
        invariant(props, "There must be pending props for an initial mount. This error is " + "likely caused by a bug in React. Please file an issue.");
        var unmaskedContext = getUnmaskedContext$2(workInProgress);
        if (instance.props = props, instance.state = state, instance.refs = emptyObject, instance.context = getMaskedContext$2(workInProgress, unmaskedContext), ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != workInProgress.type && !0 === workInProgress.type.unstable_asyncUpdates && (workInProgress.internalContextTag |= AsyncUpdates$1), "function" == typeof instance.componentWillMount) {
            callComponentWillMount(workInProgress, instance);
            var updateQueue = workInProgress.updateQueue;
            null !== updateQueue && (instance.state = beginUpdateQueue$2(current, workInProgress, updateQueue, instance, state, props, priorityLevel));
        }
        "function" == typeof instance.componentDidMount && (workInProgress.effectTag |= Update$1);
    }
    function updateClassInstance(current, workInProgress, priorityLevel) {
        var instance = workInProgress.stateNode;
        resetInputPointers(workInProgress, instance);
        var oldProps = workInProgress.memoizedProps,
            newProps = workInProgress.pendingProps;
        newProps || (newProps = oldProps, invariant(null != newProps, "There should always be pending or memoized props. This error is " + "likely caused by a bug in React. Please file an issue."));
        var oldContext = instance.context,
            newUnmaskedContext = getUnmaskedContext$2(workInProgress),
            newContext = getMaskedContext$2(workInProgress, newUnmaskedContext);
        "function" != typeof instance.componentWillReceiveProps || oldProps === newProps && oldContext === newContext || callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
        var oldState = workInProgress.memoizedState,
            newState = void 0;
        if (newState = null !== workInProgress.updateQueue ? beginUpdateQueue$2(current, workInProgress, workInProgress.updateQueue, instance, oldState, newProps, priorityLevel) : oldState, !(oldProps !== newProps || oldState !== newState || hasContextChanged$2() || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate)) return "function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), !1;
        var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);
        return shouldUpdate ? ("function" == typeof instance.componentWillUpdate && (startPhaseTimer$1(workInProgress, "componentWillUpdate"), instance.componentWillUpdate(newProps, newState, newContext), stopPhaseTimer$1()), "function" == typeof instance.componentDidUpdate && (workInProgress.effectTag |= Update$1)) : ("function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), memoizeProps(workInProgress, newProps), memoizeState(workInProgress, newState)), instance.props = newProps, instance.state = newState, instance.context = newContext, shouldUpdate;
    }
    return {
        adoptClassInstance: adoptClassInstance,
        constructClassInstance: constructClassInstance,
        mountClassInstance: mountClassInstance,
        updateClassInstance: updateClassInstance
    };
},
    mountChildFibersInPlace = ReactChildFiber.mountChildFibersInPlace,
    reconcileChildFibers = ReactChildFiber.reconcileChildFibers,
    reconcileChildFibersInPlace = ReactChildFiber.reconcileChildFibersInPlace,
    cloneChildFibers = ReactChildFiber.cloneChildFibers,
    beginUpdateQueue$1 = ReactFiberUpdateQueue.beginUpdateQueue,
    getMaskedContext$1 = ReactFiberContext.getMaskedContext,
    getUnmaskedContext$1 = ReactFiberContext.getUnmaskedContext,
    hasContextChanged$1 = ReactFiberContext.hasContextChanged,
    pushContextProvider$1 = ReactFiberContext.pushContextProvider,
    pushTopLevelContextObject$1 = ReactFiberContext.pushTopLevelContextObject,
    invalidateContextProvider$1 = ReactFiberContext.invalidateContextProvider,
    IndeterminateComponent$2 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent$1 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$6 = ReactTypeOfWork.ClassComponent,
    HostRoot$6 = ReactTypeOfWork.HostRoot,
    HostComponent$7 = ReactTypeOfWork.HostComponent,
    HostText$3 = ReactTypeOfWork.HostText,
    HostPortal$3 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$1 = ReactTypeOfWork.CoroutineComponent,
    CoroutineHandlerPhase = ReactTypeOfWork.CoroutineHandlerPhase,
    YieldComponent$2 = ReactTypeOfWork.YieldComponent,
    Fragment$2 = ReactTypeOfWork.Fragment,
    NoWork$3 = ReactPriorityLevel.NoWork,
    OffscreenPriority$1 = ReactPriorityLevel.OffscreenPriority,
    PerformedWork$1 = ReactTypeOfSideEffect.PerformedWork,
    Placement$2 = ReactTypeOfSideEffect.Placement,
    ContentReset$1 = ReactTypeOfSideEffect.ContentReset,
    Err$1 = ReactTypeOfSideEffect.Err,
    Ref$1 = ReactTypeOfSideEffect.Ref,
    ReactCurrentOwner$2 = ReactGlobalSharedState_1.ReactCurrentOwner,
    ReactDebugCurrentFiber$4 = ReactDebugCurrentFiber_1,
    _require7 = ReactDebugFiberPerf_1,
    cancelWorkTimer = _require7.cancelWorkTimer,
    warning$6 = warning,
    warnedAboutStatelessRefs = {},
    ReactFiberBeginWork = function ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext) {
    var shouldSetTextContent = config.shouldSetTextContent,
        useSyncScheduling = config.useSyncScheduling,
        shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree,
        pushHostContext = hostContext.pushHostContext,
        pushHostContainer = hostContext.pushHostContainer,
        enterHydrationState = hydrationContext.enterHydrationState,
        resetHydrationState = hydrationContext.resetHydrationState,
        tryToClaimNextHydratableInstance = hydrationContext.tryToClaimNextHydratableInstance,
        _ReactFiberClassCompo = ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState),
        adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
        constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
        mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
        updateClassInstance = _ReactFiberClassCompo.updateClassInstance;
    function reconcileChildren(current, workInProgress, nextChildren) {
        reconcileChildrenAtPriority(current, workInProgress, nextChildren, workInProgress.pendingWorkPriority);
    }
    function reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel) {
        null === current ? workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.child = reconcileChildFibers(workInProgress, workInProgress.child, nextChildren, priorityLevel) : workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
    }
    function updateFragment(current, workInProgress) {
        var nextChildren = workInProgress.pendingProps;
        if (hasContextChanged$1()) null === nextChildren && (nextChildren = workInProgress.memoizedProps);else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        return reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren), workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        null === ref || current && current.ref === ref || (workInProgress.effectTag |= Ref$1);
    }
    function updateFunctionalComponent(current, workInProgress) {
        var fn = workInProgress.type,
            nextProps = workInProgress.pendingProps,
            memoizedProps = workInProgress.memoizedProps;
        if (hasContextChanged$1()) null === nextProps && (nextProps = memoizedProps);else {
            if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
            if ("function" == typeof fn.shouldComponentUpdate && !fn.shouldComponentUpdate(memoizedProps, nextProps)) return memoizeProps(workInProgress, nextProps), bailoutOnAlreadyFinishedWork(current, workInProgress);
        }
        var nextChildren,
            unmaskedContext = getUnmaskedContext$1(workInProgress),
            context = getMaskedContext$1(workInProgress, unmaskedContext);
        return ReactCurrentOwner$2.current = workInProgress, ReactDebugCurrentFiber$4.phase = "render", nextChildren = fn(nextProps, context), ReactDebugCurrentFiber$4.phase = null, workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, priorityLevel) {
        var hasContext = pushContextProvider$1(workInProgress),
            shouldUpdate = void 0;
        return null === current ? workInProgress.stateNode ? invariant(!1, "Resuming work not yet implemented.") : (constructClassInstance(workInProgress, workInProgress.pendingProps), mountClassInstance(workInProgress, priorityLevel), shouldUpdate = !0) : shouldUpdate = updateClassInstance(current, workInProgress, priorityLevel), finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
    }
    function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
        if (markRef(current, workInProgress), !shouldUpdate) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        var instance = workInProgress.stateNode;
        ReactCurrentOwner$2.current = workInProgress;
        var nextChildren = void 0;
        return ReactDebugCurrentFiber$4.phase = "render", nextChildren = instance.render(), ReactDebugCurrentFiber$4.phase = null, workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeState(workInProgress, instance.state), memoizeProps(workInProgress, instance.props), hasContext && invalidateContextProvider$1(workInProgress), workInProgress.child;
    }
    function updateHostRoot(current, workInProgress, priorityLevel) {
        var root = workInProgress.stateNode;
        root.pendingContext ? pushTopLevelContextObject$1(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject$1(workInProgress, root.context, !1), pushHostContainer(workInProgress, root.containerInfo);
        var updateQueue = workInProgress.updateQueue;
        if (null !== updateQueue) {
            var prevState = workInProgress.memoizedState,
                state = beginUpdateQueue$1(current, workInProgress, updateQueue, null, prevState, null, priorityLevel);
            if (prevState === state) return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
            var element = state.element;
            return null !== current && null !== current.child || !enterHydrationState(workInProgress) ? (resetHydrationState(), reconcileChildren(current, workInProgress, element)) : (workInProgress.effectTag |= Placement$2, workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, element, priorityLevel)), memoizeState(workInProgress, state), workInProgress.child;
        }
        return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    function updateHostComponent(current, workInProgress, renderPriority) {
        pushHostContext(workInProgress), null === current && tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type,
            memoizedProps = workInProgress.memoizedProps,
            nextProps = workInProgress.pendingProps;
        null === nextProps && (nextProps = memoizedProps, invariant(null !== nextProps, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));
        var prevProps = null !== current ? current.memoizedProps : null;
        if (hasContextChanged$1()) ;else if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        var nextChildren = nextProps.children;
        return shouldSetTextContent(type, nextProps) ? nextChildren = null : prevProps && shouldSetTextContent(type, prevProps) && (workInProgress.effectTag |= ContentReset$1), markRef(current, workInProgress), renderPriority !== OffscreenPriority$1 && !useSyncScheduling && shouldDeprioritizeSubtree(type, nextProps) ? (workInProgress.pendingWorkPriority = OffscreenPriority$1, null) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child);
    }
    function updateHostText(current, workInProgress) {
        null === current && tryToClaimNextHydratableInstance(workInProgress);
        var nextProps = workInProgress.pendingProps;
        return null === nextProps && (nextProps = workInProgress.memoizedProps), memoizeProps(workInProgress, nextProps), null;
    }
    function mountIndeterminateComponent(current, workInProgress, priorityLevel) {
        invariant(null === current, "An indeterminate component should never have mounted. This error is " + "likely caused by a bug in React. Please file an issue.");
        var value,
            fn = workInProgress.type,
            props = workInProgress.pendingProps,
            unmaskedContext = getUnmaskedContext$1(workInProgress),
            context = getMaskedContext$1(workInProgress, unmaskedContext);
        if (ReactCurrentOwner$2.current = workInProgress, value = fn(props, context), workInProgress.effectTag |= PerformedWork$1, "object" == typeof value && null !== value && "function" == typeof value.render) {
            workInProgress.tag = ClassComponent$6;
            var hasContext = pushContextProvider$1(workInProgress);
            return adoptClassInstance(workInProgress, value), mountClassInstance(workInProgress, priorityLevel), finishClassComponent(current, workInProgress, !0, hasContext);
        }
        workInProgress.tag = FunctionalComponent$1;
        var Component = workInProgress.type;
        if (Component && warning$6(!Component.childContextTypes, "%s(...): childContextTypes cannot be defined on a functional component.", Component.displayName || Component.name || "Component"), null !== workInProgress.ref) {
            var info = "",
                ownerName = ReactDebugCurrentFiber$4.getCurrentFiberOwnerName();
            ownerName && (info += "\n\nCheck the render method of `" + ownerName + "`.");
            var warningKey = ownerName || workInProgress._debugID || "",
                debugSource = workInProgress._debugSource;
            debugSource && (warningKey = debugSource.fileName + ":" + debugSource.lineNumber), warnedAboutStatelessRefs[warningKey] || (warnedAboutStatelessRefs[warningKey] = !0, warning$6(!1, "Stateless function components cannot be given refs. " + "Attempts to access this ref will fail.%s%s", info, ReactDebugCurrentFiber$4.getCurrentFiberStackAddendum()));
        }
        return reconcileChildren(current, workInProgress, value), memoizeProps(workInProgress, props), workInProgress.child;
    }
    function updateCoroutineComponent(current, workInProgress) {
        var nextCoroutine = workInProgress.pendingProps;
        hasContextChanged$1() ? null === nextCoroutine && (nextCoroutine = current && current.memoizedProps, invariant(null !== nextCoroutine, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue.")) : null !== nextCoroutine && workInProgress.memoizedProps !== nextCoroutine || (nextCoroutine = workInProgress.memoizedProps);
        var nextChildren = nextCoroutine.children,
            priorityLevel = workInProgress.pendingWorkPriority;
        return null === current ? workInProgress.stateNode = mountChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : workInProgress.stateNode = reconcileChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel), memoizeProps(workInProgress, nextCoroutine), workInProgress.stateNode;
    }
    function updatePortalComponent(current, workInProgress) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var priorityLevel = workInProgress.pendingWorkPriority,
            nextChildren = workInProgress.pendingProps;
        if (hasContextChanged$1()) null === nextChildren && (nextChildren = current && current.memoizedProps, invariant(null != nextChildren, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        return null === current ? (workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel), memoizeProps(workInProgress, nextChildren)) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren)), workInProgress.child;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress) {
        return cancelWorkTimer(workInProgress), cloneChildFibers(current, workInProgress), workInProgress.child;
    }
    function bailoutOnLowPriority(current, workInProgress) {
        switch (cancelWorkTimer(workInProgress), workInProgress.tag) {
            case ClassComponent$6:
                pushContextProvider$1(workInProgress);
                break;

            case HostPortal$3:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        }
        return null;
    }
    function memoizeProps(workInProgress, nextProps) {
        workInProgress.memoizedProps = nextProps;
    }
    function memoizeState(workInProgress, nextState) {
        workInProgress.memoizedState = nextState;
    }
    function beginWork(current, workInProgress, priorityLevel) {
        if (workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
        switch (ReactDebugCurrentFiber$4.current = workInProgress, workInProgress.tag) {
            case IndeterminateComponent$2:
                return mountIndeterminateComponent(current, workInProgress, priorityLevel);

            case FunctionalComponent$1:
                return updateFunctionalComponent(current, workInProgress);

            case ClassComponent$6:
                return updateClassComponent(current, workInProgress, priorityLevel);

            case HostRoot$6:
                return updateHostRoot(current, workInProgress, priorityLevel);

            case HostComponent$7:
                return updateHostComponent(current, workInProgress, priorityLevel);

            case HostText$3:
                return updateHostText(current, workInProgress);

            case CoroutineHandlerPhase:
                workInProgress.tag = CoroutineComponent$1;

            case CoroutineComponent$1:
                return updateCoroutineComponent(current, workInProgress);

            case YieldComponent$2:
                return null;

            case HostPortal$3:
                return updatePortalComponent(current, workInProgress);

            case Fragment$2:
                return updateFragment(current, workInProgress);

            default:
                invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    function beginFailedWork(current, workInProgress, priorityLevel) {
        if (invariant(workInProgress.tag === ClassComponent$6 || workInProgress.tag === HostRoot$6, "Invalid type of work. This error is likely caused by a bug in React. " + "Please file an issue."), workInProgress.effectTag |= Err$1, null === current ? workInProgress.child = null : workInProgress.child !== current.child && (workInProgress.child = current.child), workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
        if (workInProgress.firstEffect = null, workInProgress.lastEffect = null, reconcileChildrenAtPriority(current, workInProgress, null, priorityLevel), workInProgress.tag === ClassComponent$6) {
            var instance = workInProgress.stateNode;
            workInProgress.memoizedProps = instance.props, workInProgress.memoizedState = instance.state;
        }
        return workInProgress.child;
    }
    return {
        beginWork: beginWork,
        beginFailedWork: beginFailedWork
    };
},
    reconcileChildFibers$2 = ReactChildFiber.reconcileChildFibers,
    popContextProvider$2 = ReactFiberContext.popContextProvider,
    IndeterminateComponent$3 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent$3 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$8 = ReactTypeOfWork.ClassComponent,
    HostRoot$7 = ReactTypeOfWork.HostRoot,
    HostComponent$8 = ReactTypeOfWork.HostComponent,
    HostText$5 = ReactTypeOfWork.HostText,
    HostPortal$5 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$3 = ReactTypeOfWork.CoroutineComponent,
    CoroutineHandlerPhase$1 = ReactTypeOfWork.CoroutineHandlerPhase,
    YieldComponent$4 = ReactTypeOfWork.YieldComponent,
    Fragment$4 = ReactTypeOfWork.Fragment,
    Placement$4 = ReactTypeOfSideEffect.Placement,
    Ref$2 = ReactTypeOfSideEffect.Ref,
    Update$2 = ReactTypeOfSideEffect.Update,
    OffscreenPriority$2 = ReactPriorityLevel.OffscreenPriority,
    ReactDebugCurrentFiber$5 = ReactDebugCurrentFiber_1,
    ReactFiberCompleteWork = function ReactFiberCompleteWork(config, hostContext, hydrationContext) {
    var createInstance = config.createInstance,
        createTextInstance = config.createTextInstance,
        appendInitialChild = config.appendInitialChild,
        finalizeInitialChildren = config.finalizeInitialChildren,
        prepareUpdate = config.prepareUpdate,
        getRootHostContainer = hostContext.getRootHostContainer,
        popHostContext = hostContext.popHostContext,
        getHostContext = hostContext.getHostContext,
        popHostContainer = hostContext.popHostContainer,
        prepareToHydrateHostInstance = hydrationContext.prepareToHydrateHostInstance,
        prepareToHydrateHostTextInstance = hydrationContext.prepareToHydrateHostTextInstance,
        popHydrationState = hydrationContext.popHydrationState;
    function markUpdate(workInProgress) {
        workInProgress.effectTag |= Update$2;
    }
    function markRef(workInProgress) {
        workInProgress.effectTag |= Ref$2;
    }
    function appendAllYields(yields, workInProgress) {
        var node = workInProgress.stateNode;
        for (node && (node.return = workInProgress); null !== node;) {
            if (node.tag === HostComponent$8 || node.tag === HostText$5 || node.tag === HostPortal$5) invariant(!1, "A coroutine cannot have host component children.");else if (node.tag === YieldComponent$4) yields.push(node.type);else if (null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function moveCoroutineToHandlerPhase(current, workInProgress) {
        var coroutine = workInProgress.memoizedProps;
        invariant(coroutine, "Should be resolved by now. This error is likely caused by a bug in " + "React. Please file an issue."), workInProgress.tag = CoroutineHandlerPhase$1;
        var yields = [];
        appendAllYields(yields, workInProgress);
        var fn = coroutine.handler,
            props = coroutine.props,
            nextChildren = fn(props, yields),
            currentFirstChild = null !== current ? current.child : null,
            priority = workInProgress.pendingWorkPriority;
        return workInProgress.child = reconcileChildFibers$2(workInProgress, currentFirstChild, nextChildren, priority), workInProgress.child;
    }
    function appendAllChildren(parent, workInProgress) {
        for (var node = workInProgress.child; null !== node;) {
            if (node.tag === HostComponent$8 || node.tag === HostText$5) appendInitialChild(parent, node.stateNode);else if (node.tag === HostPortal$5) ;else if (null !== node.child) {
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }
            node = node.sibling;
        }
    }
    function completeWork(current, workInProgress, renderPriority) {
        ReactDebugCurrentFiber$5.current = workInProgress;
        var newProps = workInProgress.pendingProps;
        switch (null === newProps ? newProps = workInProgress.memoizedProps : workInProgress.pendingWorkPriority === OffscreenPriority$2 && renderPriority !== OffscreenPriority$2 || (workInProgress.pendingProps = null), workInProgress.tag) {
            case FunctionalComponent$3:
                return null;

            case ClassComponent$8:
                return popContextProvider$2(workInProgress), null;

            case HostRoot$7:
                var fiberRoot = workInProgress.stateNode;
                return fiberRoot.pendingContext && (fiberRoot.context = fiberRoot.pendingContext, fiberRoot.pendingContext = null), null !== current && null !== current.child || (popHydrationState(workInProgress), workInProgress.effectTag &= ~Placement$4), null;

            case HostComponent$8:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer(),
                    type = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) {
                    var oldProps = current.memoizedProps,
                        instance = workInProgress.stateNode,
                        currentHostContext = getHostContext(),
                        updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
                    workInProgress.updateQueue = updatePayload, updatePayload && markUpdate(workInProgress), current.ref !== workInProgress.ref && markRef(workInProgress);
                } else {
                    if (!newProps) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                    var _currentHostContext = getHostContext();
                    if (popHydrationState(workInProgress)) prepareToHydrateHostInstance(workInProgress, rootContainerInstance) && markUpdate(workInProgress);else {
                        var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);
                        appendAllChildren(_instance, workInProgress), finalizeInitialChildren(_instance, type, newProps, rootContainerInstance) && markUpdate(workInProgress), workInProgress.stateNode = _instance;
                    }
                    null !== workInProgress.ref && markRef(workInProgress);
                }
                return null;

            case HostText$5:
                var newText = newProps;
                if (current && null != workInProgress.stateNode) {
                    current.memoizedProps !== newText && markUpdate(workInProgress);
                } else {
                    if ("string" != typeof newText) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                    var _rootContainerInstance = getRootHostContainer(),
                        _currentHostContext2 = getHostContext();
                    popHydrationState(workInProgress) ? prepareToHydrateHostTextInstance(workInProgress) && markUpdate(workInProgress) : workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
                }
                return null;

            case CoroutineComponent$3:
                return moveCoroutineToHandlerPhase(current, workInProgress);

            case CoroutineHandlerPhase$1:
                return workInProgress.tag = CoroutineComponent$3, null;

            case YieldComponent$4:
            case Fragment$4:
                return null;

            case HostPortal$5:
                return markUpdate(workInProgress), popHostContainer(workInProgress), null;

            case IndeterminateComponent$3:
                invariant(!1, "An indeterminate component should have become determinate before " + "completing. This error is likely caused by a bug in React. Please " + "file an issue.");

            default:
                invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    return {
        completeWork: completeWork
    };
},
    rendererID = null,
    injectInternals$1 = null,
    onCommitRoot$1 = null,
    onCommitUnmount$1 = null;

if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && __REACT_DEVTOOLS_GLOBAL_HOOK__.supportsFiber) {
    var inject$1 = __REACT_DEVTOOLS_GLOBAL_HOOK__.inject,
        onCommitFiberRoot = __REACT_DEVTOOLS_GLOBAL_HOOK__.onCommitFiberRoot,
        onCommitFiberUnmount = __REACT_DEVTOOLS_GLOBAL_HOOK__.onCommitFiberUnmount;
    injectInternals$1 = function injectInternals$1(internals) {
        warning(null == rendererID, "Cannot inject into DevTools twice."), rendererID = inject$1(internals);
    }, onCommitRoot$1 = function onCommitRoot$1(root) {
        if (null != rendererID) try {
            onCommitFiberRoot(rendererID, root);
        } catch (err) {
            warning(!1, "React DevTools encountered an error: %s", err);
        }
    }, onCommitUnmount$1 = function onCommitUnmount$1(fiber) {
        if (null != rendererID) try {
            onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {
            warning(!1, "React DevTools encountered an error: %s", err);
        }
    };
}

var injectInternals_1 = injectInternals$1,
    onCommitRoot_1 = onCommitRoot$1,
    onCommitUnmount_1 = onCommitUnmount$1,
    ReactFiberDevToolsHook = {
    injectInternals: injectInternals_1,
    onCommitRoot: onCommitRoot_1,
    onCommitUnmount: onCommitUnmount_1
},
    ClassComponent$9 = ReactTypeOfWork.ClassComponent,
    HostRoot$8 = ReactTypeOfWork.HostRoot,
    HostComponent$9 = ReactTypeOfWork.HostComponent,
    HostText$6 = ReactTypeOfWork.HostText,
    HostPortal$6 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$4 = ReactTypeOfWork.CoroutineComponent,
    commitCallbacks$1 = ReactFiberUpdateQueue.commitCallbacks,
    onCommitUnmount = ReactFiberDevToolsHook.onCommitUnmount,
    invokeGuardedCallback$2 = ReactErrorUtils_1.invokeGuardedCallback,
    Placement$5 = ReactTypeOfSideEffect.Placement,
    Update$3 = ReactTypeOfSideEffect.Update,
    Callback$1 = ReactTypeOfSideEffect.Callback,
    ContentReset$2 = ReactTypeOfSideEffect.ContentReset,
    _require5$2 = ReactDebugFiberPerf_1,
    startPhaseTimer$2 = _require5$2.startPhaseTimer,
    stopPhaseTimer$2 = _require5$2.stopPhaseTimer,
    ReactFiberCommitWork = function ReactFiberCommitWork(config, captureError) {
    var commitMount = config.commitMount,
        commitUpdate = config.commitUpdate,
        resetTextContent = config.resetTextContent,
        commitTextUpdate = config.commitTextUpdate,
        appendChild = config.appendChild,
        appendChildToContainer = config.appendChildToContainer,
        insertBefore = config.insertBefore,
        insertInContainerBefore = config.insertInContainerBefore,
        removeChild = config.removeChild,
        removeChildFromContainer = config.removeChildFromContainer,
        getPublicInstance = config.getPublicInstance,
        callComponentWillUnmountWithTimerInDev = function callComponentWillUnmountWithTimerInDev(current, instance) {
        startPhaseTimer$2(current, "componentWillUnmount"), instance.componentWillUnmount(), stopPhaseTimer$2();
    };
    function safelyCallComponentWillUnmount(current, instance) {
        var unmountError = invokeGuardedCallback$2(null, callComponentWillUnmountWithTimerInDev, null, current, instance);
        unmountError && captureError(current, unmountError);
    }
    function safelyDetachRef(current) {
        var ref = current.ref;
        if (null !== ref) {
            var refError = invokeGuardedCallback$2(null, ref, null, null);
            null !== refError && captureError(current, refError);
        }
    }
    function getHostParentFiber(fiber) {
        for (var parent = fiber.return; null !== parent;) {
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        invariant(!1, "Expected to find a host parent. This error is likely caused by a bug " + "in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent$9 || fiber.tag === HostRoot$8 || fiber.tag === HostPortal$6;
    }
    function getHostSibling(fiber) {
        var node = fiber;
        siblings: for (; !0;) {
            for (; null === node.sibling;) {
                if (null === node.return || isHostParent(node.return)) return null;
                node = node.return;
            }
            for (node.sibling.return = node.return, node = node.sibling; node.tag !== HostComponent$9 && node.tag !== HostText$6;) {
                if (node.effectTag & Placement$5) continue siblings;
                if (null === node.child || node.tag === HostPortal$6) continue siblings;
                node.child.return = node, node = node.child;
            }
            if (!(node.effectTag & Placement$5)) return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork),
            parent = void 0,
            isContainer = void 0;
        switch (parentFiber.tag) {
            case HostComponent$9:
                parent = parentFiber.stateNode, isContainer = !1;
                break;

            case HostRoot$8:
            case HostPortal$6:
                parent = parentFiber.stateNode.containerInfo, isContainer = !0;
                break;

            default:
                invariant(!1, "Invalid host parent fiber. This error is likely caused by a bug " + "in React. Please file an issue.");
        }
        parentFiber.effectTag & ContentReset$2 && (resetTextContent(parent), parentFiber.effectTag &= ~ContentReset$2);
        for (var before = getHostSibling(finishedWork), node = finishedWork; !0;) {
            if (node.tag === HostComponent$9 || node.tag === HostText$6) before ? isContainer ? insertInContainerBefore(parent, node.stateNode, before) : insertBefore(parent, node.stateNode, before) : isContainer ? appendChildToContainer(parent, node.stateNode) : appendChild(parent, node.stateNode);else if (node.tag === HostPortal$6) ;else if (null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === finishedWork) return;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function commitNestedUnmounts(root) {
        for (var node = root; !0;) {
            if (commitUnmount(node), null === node.child || node.tag === HostPortal$6) {
                if (node === root) return;
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === root) return;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            } else node.child.return = node, node = node.child;
        }
    }
    function unmountHostComponents(current) {
        for (var node = current, currentParentIsValid = !1, currentParent = void 0, currentParentIsContainer = void 0; !0;) {
            if (!currentParentIsValid) {
                var parent = node.return;
                findParent: for (; !0;) {
                    switch (invariant(null !== parent, "Expected to find a host parent. This error is likely caused by " + "a bug in React. Please file an issue."), parent.tag) {
                        case HostComponent$9:
                            currentParent = parent.stateNode, currentParentIsContainer = !1;
                            break findParent;

                        case HostRoot$8:
                        case HostPortal$6:
                            currentParent = parent.stateNode.containerInfo, currentParentIsContainer = !0;
                            break findParent;
                    }
                    parent = parent.return;
                }
                currentParentIsValid = !0;
            }
            if (node.tag === HostComponent$9 || node.tag === HostText$6) commitNestedUnmounts(node), currentParentIsContainer ? removeChildFromContainer(currentParent, node.stateNode) : removeChild(currentParent, node.stateNode);else if (node.tag === HostPortal$6) {
                if (currentParent = node.stateNode.containerInfo, null !== node.child) {
                    node.child.return = node, node = node.child;
                    continue;
                }
            } else if (commitUnmount(node), null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            if (node === current) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === current) return;
                node = node.return, node.tag === HostPortal$6 && (currentParentIsValid = !1);
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function commitDeletion(current) {
        unmountHostComponents(current), current.return = null, current.child = null, current.alternate && (current.alternate.child = null, current.alternate.return = null);
    }
    function commitUnmount(current) {
        switch ("function" == typeof onCommitUnmount && onCommitUnmount(current), current.tag) {
            case ClassComponent$9:
                safelyDetachRef(current);
                var instance = current.stateNode;
                return void ("function" == typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(current, instance));

            case HostComponent$9:
                return void safelyDetachRef(current);

            case CoroutineComponent$4:
                return void commitNestedUnmounts(current.stateNode);

            case HostPortal$6:
                return void unmountHostComponents(current);
        }
    }
    function commitWork(current, finishedWork) {
        switch (finishedWork.tag) {
            case ClassComponent$9:
                return;

            case HostComponent$9:
                var instance = finishedWork.stateNode;
                if (null != instance) {
                    var newProps = finishedWork.memoizedProps,
                        oldProps = null !== current ? current.memoizedProps : newProps,
                        type = finishedWork.type,
                        updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null, null !== updatePayload && commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
                }
                return;

            case HostText$6:
                invariant(null !== finishedWork.stateNode, "This should have a text node initialized. This error is likely " + "caused by a bug in React. Please file an issue.");
                var textInstance = finishedWork.stateNode,
                    newText = finishedWork.memoizedProps,
                    oldText = null !== current ? current.memoizedProps : newText;
                return void commitTextUpdate(textInstance, oldText, newText);

            case HostRoot$8:
            case HostPortal$6:
                return;

            default:
                invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitLifeCycles(current, finishedWork) {
        switch (finishedWork.tag) {
            case ClassComponent$9:
                var instance = finishedWork.stateNode;
                if (finishedWork.effectTag & Update$3) if (null === current) startPhaseTimer$2(finishedWork, "componentDidMount"), instance.componentDidMount(), stopPhaseTimer$2();else {
                    var prevProps = current.memoizedProps,
                        prevState = current.memoizedState;
                    startPhaseTimer$2(finishedWork, "componentDidUpdate"), instance.componentDidUpdate(prevProps, prevState), stopPhaseTimer$2();
                }
                return void (finishedWork.effectTag & Callback$1 && null !== finishedWork.updateQueue && commitCallbacks$1(finishedWork, finishedWork.updateQueue, instance));

            case HostRoot$8:
                var updateQueue = finishedWork.updateQueue;
                if (null !== updateQueue) {
                    var _instance = finishedWork.child && finishedWork.child.stateNode;
                    commitCallbacks$1(finishedWork, updateQueue, _instance);
                }
                return;

            case HostComponent$9:
                var _instance2 = finishedWork.stateNode;
                if (null === current && finishedWork.effectTag & Update$3) {
                    var type = finishedWork.type,
                        props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props, finishedWork);
                }
                return;

            case HostText$6:
            case HostPortal$6:
                return;

            default:
                invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (null !== ref) {
            var instance = finishedWork.stateNode;
            switch (finishedWork.tag) {
                case HostComponent$9:
                    ref(getPublicInstance(instance));
                    break;

                default:
                    ref(instance);
            }
        }
    }
    function commitDetachRef(current) {
        var currentRef = current.ref;
        null !== currentRef && currentRef(null);
    }
    return {
        commitPlacement: commitPlacement,
        commitDeletion: commitDeletion,
        commitWork: commitWork,
        commitLifeCycles: commitLifeCycles,
        commitAttachRef: commitAttachRef,
        commitDetachRef: commitDetachRef
    };
},
    createCursor$2 = ReactFiberStack.createCursor,
    pop$2 = ReactFiberStack.pop,
    push$2 = ReactFiberStack.push,
    NO_CONTEXT = {},
    ReactFiberHostContext = function ReactFiberHostContext(config) {
    var getChildHostContext = config.getChildHostContext,
        getRootHostContext = config.getRootHostContext,
        contextStackCursor = createCursor$2(NO_CONTEXT),
        contextFiberStackCursor = createCursor$2(NO_CONTEXT),
        rootInstanceStackCursor = createCursor$2(NO_CONTEXT);
    function requiredContext(c) {
        return invariant(c !== NO_CONTEXT, "Expected host context to exist. This error is likely caused by a bug " + "in React. Please file an issue."), c;
    }
    function getRootHostContainer() {
        return requiredContext(rootInstanceStackCursor.current);
    }
    function pushHostContainer(fiber, nextRootInstance) {
        push$2(rootInstanceStackCursor, nextRootInstance, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance);
        push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber), pop$2(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        return requiredContext(contextStackCursor.current);
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current),
            context = requiredContext(contextStackCursor.current),
            nextContext = getChildHostContext(context, fiber.type, rootInstance);
        context !== nextContext && (push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextContext, fiber));
    }
    function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber));
    }
    function resetHostContainer() {
        contextStackCursor.current = NO_CONTEXT, rootInstanceStackCursor.current = NO_CONTEXT;
    }
    return {
        getHostContext: getHostContext,
        getRootHostContainer: getRootHostContainer,
        popHostContainer: popHostContainer,
        popHostContext: popHostContext,
        pushHostContainer: pushHostContainer,
        pushHostContext: pushHostContext,
        resetHostContainer: resetHostContainer
    };
},
    HostComponent$10 = ReactTypeOfWork.HostComponent,
    HostText$7 = ReactTypeOfWork.HostText,
    HostRoot$9 = ReactTypeOfWork.HostRoot,
    Deletion$2 = ReactTypeOfSideEffect.Deletion,
    Placement$6 = ReactTypeOfSideEffect.Placement,
    createFiberFromHostInstanceForDeletion$1 = ReactFiber.createFiberFromHostInstanceForDeletion,
    ReactFiberHydrationContext = function ReactFiberHydrationContext(config) {
    var shouldSetTextContent = config.shouldSetTextContent,
        canHydrateInstance = config.canHydrateInstance,
        canHydrateTextInstance = config.canHydrateTextInstance,
        getNextHydratableSibling = config.getNextHydratableSibling,
        getFirstHydratableChild = config.getFirstHydratableChild,
        hydrateInstance = config.hydrateInstance,
        hydrateTextInstance = config.hydrateTextInstance,
        didNotHydrateInstance = config.didNotHydrateInstance,
        didNotFindHydratableInstance = config.didNotFindHydratableInstance,
        didNotFindHydratableTextInstance = config.didNotFindHydratableTextInstance;
    if (!(canHydrateInstance && canHydrateTextInstance && getNextHydratableSibling && getFirstHydratableChild && hydrateInstance && hydrateTextInstance && didNotHydrateInstance && didNotFindHydratableInstance && didNotFindHydratableTextInstance)) return {
        enterHydrationState: function enterHydrationState() {
            return !1;
        },
        resetHydrationState: function resetHydrationState() {},
        tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance() {},
        prepareToHydrateHostInstance: function prepareToHydrateHostInstance() {
            invariant(!1, "React bug.");
        },
        prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance() {
            invariant(!1, "React bug.");
        },
        popHydrationState: function popHydrationState(fiber) {
            return !1;
        }
    };
    var hydrationParentFiber = null,
        nextHydratableInstance = null,
        isHydrating = !1;
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        return nextHydratableInstance = getFirstHydratableChild(parentInstance), hydrationParentFiber = fiber, isHydrating = !0, !0;
    }
    function deleteHydratableInstance(returnFiber, instance) {
        switch (returnFiber.tag) {
            case HostRoot$9:
                didNotHydrateInstance(returnFiber.stateNode.containerInfo, instance);
                break;

            case HostComponent$10:
                didNotHydrateInstance(returnFiber.stateNode, instance);
        }
        var childToDelete = createFiberFromHostInstanceForDeletion$1();
        childToDelete.stateNode = instance, childToDelete.return = returnFiber, childToDelete.effectTag = Deletion$2, null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.effectTag |= Placement$6;
        var parentInstance;
        switch (returnFiber.tag) {
            case HostComponent$10:
                parentInstance = returnFiber.stateNode;
                break;

            default:
                return;
        }
        switch (fiber.tag) {
            case HostComponent$10:
                var type = fiber.type,
                    props = fiber.pendingProps;
                didNotFindHydratableInstance(parentInstance, type, props);
                break;

            case HostText$7:
                var text = fiber.pendingProps;
                didNotFindHydratableTextInstance(parentInstance, text);
        }
    }
    function canHydrate(fiber, nextInstance) {
        switch (fiber.tag) {
            case HostComponent$10:
                var type = fiber.type,
                    props = fiber.pendingProps;
                return canHydrateInstance(nextInstance, type, props);

            case HostText$7:
                var text = fiber.pendingProps;
                return canHydrateTextInstance(nextInstance, text);

            default:
                return !1;
        }
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (isHydrating) {
            var nextInstance = nextHydratableInstance;
            if (!nextInstance) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
            if (!canHydrate(fiber, nextInstance)) {
                if (!(nextInstance = getNextHydratableSibling(nextInstance)) || !canHydrate(fiber, nextInstance)) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
                deleteHydratableInstance(hydrationParentFiber, nextHydratableInstance);
            }
            fiber.stateNode = nextInstance, hydrationParentFiber = fiber, nextHydratableInstance = getFirstHydratableChild(nextInstance);
        }
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance) {
        var instance = fiber.stateNode,
            updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, fiber);
        return fiber.updateQueue = updatePayload, null !== updatePayload;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        return hydrateTextInstance(textInstance, fiber.memoizedProps, fiber);
    }
    function popToNextHostParent(fiber) {
        for (var parent = fiber.return; null !== parent && parent.tag !== HostComponent$10 && parent.tag !== HostRoot$9;) {
            parent = parent.return;
        }hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) return !1;
        if (!isHydrating) return popToNextHostParent(fiber), isHydrating = !0, !1;
        var type = fiber.type;
        if (fiber.tag !== HostComponent$10 || "head" !== type && "body" !== type && !shouldSetTextContent(type, fiber.memoizedProps)) for (var nextInstance = nextHydratableInstance; nextInstance;) {
            deleteHydratableInstance(fiber, nextInstance), nextInstance = getNextHydratableSibling(nextInstance);
        }return popToNextHostParent(fiber), nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null, !0;
    }
    function resetHydrationState() {
        hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1;
    }
    return {
        enterHydrationState: enterHydrationState,
        resetHydrationState: resetHydrationState,
        tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
        prepareToHydrateHostInstance: prepareToHydrateHostInstance,
        prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
        popHydrationState: popHydrationState
    };
},
    ReactFiberInstrumentation$2 = {
    debugTool: null
},
    ReactFiberInstrumentation_1 = ReactFiberInstrumentation$2,
    popContextProvider$1 = ReactFiberContext.popContextProvider,
    reset$1 = ReactFiberStack.reset,
    getStackAddendumByWorkInProgressFiber$2 = ReactFiberComponentTreeHook.getStackAddendumByWorkInProgressFiber,
    logCapturedError$1 = ReactFiberErrorLogger.logCapturedError,
    invokeGuardedCallback$1 = ReactErrorUtils_1.invokeGuardedCallback,
    ReactCurrentOwner$1 = ReactGlobalSharedState_1.ReactCurrentOwner,
    createWorkInProgress$1 = ReactFiber.createWorkInProgress,
    largerPriority$1 = ReactFiber.largerPriority,
    onCommitRoot = ReactFiberDevToolsHook.onCommitRoot,
    NoWork$2 = ReactPriorityLevel.NoWork,
    SynchronousPriority$1 = ReactPriorityLevel.SynchronousPriority,
    TaskPriority$1 = ReactPriorityLevel.TaskPriority,
    HighPriority = ReactPriorityLevel.HighPriority,
    LowPriority = ReactPriorityLevel.LowPriority,
    OffscreenPriority = ReactPriorityLevel.OffscreenPriority,
    AsyncUpdates = ReactTypeOfInternalContext.AsyncUpdates,
    PerformedWork = ReactTypeOfSideEffect.PerformedWork,
    Placement$1 = ReactTypeOfSideEffect.Placement,
    Update = ReactTypeOfSideEffect.Update,
    PlacementAndUpdate = ReactTypeOfSideEffect.PlacementAndUpdate,
    Deletion = ReactTypeOfSideEffect.Deletion,
    ContentReset = ReactTypeOfSideEffect.ContentReset,
    Callback = ReactTypeOfSideEffect.Callback,
    Err = ReactTypeOfSideEffect.Err,
    Ref = ReactTypeOfSideEffect.Ref,
    HostRoot$5 = ReactTypeOfWork.HostRoot,
    HostComponent$6 = ReactTypeOfWork.HostComponent,
    HostPortal$2 = ReactTypeOfWork.HostPortal,
    ClassComponent$5 = ReactTypeOfWork.ClassComponent,
    getUpdatePriority$1 = ReactFiberUpdateQueue.getUpdatePriority,
    _require14 = ReactFiberContext,
    resetContext$1 = _require14.resetContext,
    warning$5 = warning,
    ReactFiberInstrumentation$1 = ReactFiberInstrumentation_1,
    ReactDebugCurrentFiber$3 = ReactDebugCurrentFiber_1,
    _require15 = ReactDebugFiberPerf_1,
    recordEffect = _require15.recordEffect,
    recordScheduleUpdate = _require15.recordScheduleUpdate,
    startWorkTimer = _require15.startWorkTimer,
    stopWorkTimer = _require15.stopWorkTimer,
    startWorkLoopTimer = _require15.startWorkLoopTimer,
    stopWorkLoopTimer = _require15.stopWorkLoopTimer,
    startCommitTimer = _require15.startCommitTimer,
    stopCommitTimer = _require15.stopCommitTimer,
    startCommitHostEffectsTimer = _require15.startCommitHostEffectsTimer,
    stopCommitHostEffectsTimer = _require15.stopCommitHostEffectsTimer,
    startCommitLifeCyclesTimer = _require15.startCommitLifeCyclesTimer,
    stopCommitLifeCyclesTimer = _require15.stopCommitLifeCyclesTimer,
    warnAboutUpdateOnUnmounted = function warnAboutUpdateOnUnmounted(instance) {
    var ctor = instance.constructor;
    warning$5(!1, "Can only update a mounted or mounting component. This usually means " + "you called setState, replaceState, or forceUpdate on an unmounted " + "component. This is a no-op.\n\nPlease check the code for the " + "%s component.", ctor && (ctor.displayName || ctor.name) || "ReactClass");
},
    warnAboutInvalidUpdates = function warnAboutInvalidUpdates(instance) {
    switch (ReactDebugCurrentFiber$3.phase) {
        case "getChildContext":
            warning$5(!1, "setState(...): Cannot call setState() inside getChildContext()");
            break;

        case "render":
            warning$5(!1, "Cannot update during an existing state transition (such as within " + "`render` or another component's constructor). Render methods should " + "be a pure function of props and state; constructor side-effects are " + "an anti-pattern, but can be moved to `componentWillMount`.");
    }
},
    timeHeuristicForUnitOfWork = 1,
    ReactFiberScheduler = function ReactFiberScheduler(config) {
    var hostContext = ReactFiberHostContext(config),
        hydrationContext = ReactFiberHydrationContext(config),
        popHostContainer = hostContext.popHostContainer,
        popHostContext = hostContext.popHostContext,
        resetHostContainer = hostContext.resetHostContainer,
        _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext),
        beginWork = _ReactFiberBeginWork.beginWork,
        beginFailedWork = _ReactFiberBeginWork.beginFailedWork,
        _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext, hydrationContext),
        completeWork = _ReactFiberCompleteWo.completeWork,
        _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
        commitPlacement = _ReactFiberCommitWork.commitPlacement,
        commitDeletion = _ReactFiberCommitWork.commitDeletion,
        commitWork = _ReactFiberCommitWork.commitWork,
        commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
        commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
        commitDetachRef = _ReactFiberCommitWork.commitDetachRef,
        scheduleDeferredCallback = config.scheduleDeferredCallback,
        useSyncScheduling = config.useSyncScheduling,
        prepareForCommit = config.prepareForCommit,
        resetAfterCommit = config.resetAfterCommit,
        priorityContext = NoWork$2,
        priorityContextBeforeReconciliation = NoWork$2,
        isPerformingWork = !1,
        deadlineHasExpired = !1,
        isBatchingUpdates = !1,
        isUnbatchingUpdates = !1,
        nextUnitOfWork = null,
        nextPriorityLevel = NoWork$2,
        nextEffect = null,
        pendingCommit = null,
        nextScheduledRoot = null,
        lastScheduledRoot = null,
        isCallbackScheduled = !1,
        capturedErrors = null,
        failedBoundaries = null,
        commitPhaseBoundaries = null,
        firstUncaughtError = null,
        fatalError = null,
        isCommitting = !1,
        isUnmounting = !1;
    function resetContextStack() {
        reset$1(), resetContext$1(), resetHostContainer();
    }
    function findNextUnitOfWork() {
        for (; null !== nextScheduledRoot && nextScheduledRoot.current.pendingWorkPriority === NoWork$2;) {
            nextScheduledRoot.isScheduled = !1;
            var next = nextScheduledRoot.nextScheduledRoot;
            if (nextScheduledRoot.nextScheduledRoot = null, nextScheduledRoot === lastScheduledRoot) return nextScheduledRoot = null, lastScheduledRoot = null, nextPriorityLevel = NoWork$2, null;
            nextScheduledRoot = next;
        }
        for (var root = nextScheduledRoot, highestPriorityRoot = null, highestPriorityLevel = NoWork$2; null !== root;) {
            root.current.pendingWorkPriority !== NoWork$2 && (highestPriorityLevel === NoWork$2 || highestPriorityLevel > root.current.pendingWorkPriority) && (highestPriorityLevel = root.current.pendingWorkPriority, highestPriorityRoot = root), root = root.nextScheduledRoot;
        }return null !== highestPriorityRoot ? (nextPriorityLevel = highestPriorityLevel, priorityContext = nextPriorityLevel, resetContextStack(), createWorkInProgress$1(highestPriorityRoot.current, highestPriorityLevel)) : (nextPriorityLevel = NoWork$2, null);
    }
    function commitAllHostEffects() {
        for (; null !== nextEffect;) {
            ReactDebugCurrentFiber$3.current = nextEffect, recordEffect();
            var effectTag = nextEffect.effectTag;
            if (effectTag & ContentReset && config.resetTextContent(nextEffect.stateNode), effectTag & Ref) {
                var current = nextEffect.alternate;
                null !== current && commitDetachRef(current);
            }
            switch (effectTag & ~(Callback | Err | ContentReset | Ref | PerformedWork)) {
                case Placement$1:
                    commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                    break;

                case PlacementAndUpdate:
                    commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                    var _current = nextEffect.alternate;
                    commitWork(_current, nextEffect);
                    break;

                case Update:
                    var _current2 = nextEffect.alternate;
                    commitWork(_current2, nextEffect);
                    break;

                case Deletion:
                    isUnmounting = !0, commitDeletion(nextEffect), isUnmounting = !1;
            }
            nextEffect = nextEffect.nextEffect;
        }
        ReactDebugCurrentFiber$3.current = null;
    }
    function commitAllLifeCycles() {
        for (; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;
            if (effectTag & (Update | Callback)) {
                recordEffect();
                var current = nextEffect.alternate;
                commitLifeCycles(current, nextEffect);
            }
            effectTag & Ref && (recordEffect(), commitAttachRef(nextEffect)), effectTag & Err && (recordEffect(), commitErrorHandling(nextEffect));
            var next = nextEffect.nextEffect;
            nextEffect.nextEffect = null, nextEffect = next;
        }
    }
    function commitAllWork(finishedWork) {
        isCommitting = !0, startCommitTimer(), pendingCommit = null;
        var root = finishedWork.stateNode;
        invariant(root.current !== finishedWork, "Cannot commit the same tree as before. This is probably a bug " + "related to the return field. This error is likely caused by a bug " + "in React. Please file an issue."), ReactCurrentOwner$1.current = null;
        var previousPriorityContext = priorityContext;
        priorityContext = TaskPriority$1;
        var firstEffect = void 0;
        for (finishedWork.effectTag > PerformedWork ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, firstEffect = finishedWork.firstEffect) : firstEffect = finishedWork : firstEffect = finishedWork.firstEffect, prepareForCommit(), nextEffect = firstEffect, startCommitHostEffectsTimer(); null !== nextEffect;) {
            var _error = null;
            _error = invokeGuardedCallback$1(null, commitAllHostEffects, null), null !== _error && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
        }
        for (stopCommitHostEffectsTimer(), resetAfterCommit(), root.current = finishedWork, nextEffect = firstEffect, startCommitLifeCyclesTimer(); null !== nextEffect;) {
            var _error2 = null;
            _error2 = invokeGuardedCallback$1(null, commitAllLifeCycles, null), null !== _error2 && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error2), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
        }
        isCommitting = !1, stopCommitLifeCyclesTimer(), stopCommitTimer(), "function" == typeof onCommitRoot && onCommitRoot(finishedWork.stateNode), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCommitWork(finishedWork), commitPhaseBoundaries && (commitPhaseBoundaries.forEach(scheduleErrorRecovery), commitPhaseBoundaries = null), priorityContext = previousPriorityContext;
    }
    function resetWorkPriority(workInProgress, renderPriority) {
        if (!(workInProgress.pendingWorkPriority !== NoWork$2 && workInProgress.pendingWorkPriority > renderPriority)) {
            for (var newPriority = getUpdatePriority$1(workInProgress), child = workInProgress.child; null !== child;) {
                newPriority = largerPriority$1(newPriority, child.pendingWorkPriority), child = child.sibling;
            }workInProgress.pendingWorkPriority = newPriority;
        }
    }
    function completeUnitOfWork(workInProgress) {
        for (; !0;) {
            var current = workInProgress.alternate,
                next = completeWork(current, workInProgress, nextPriorityLevel),
                returnFiber = workInProgress.return,
                siblingFiber = workInProgress.sibling;
            if (resetWorkPriority(workInProgress, nextPriorityLevel), null !== next) return stopWorkTimer(workInProgress), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), next;
            if (null !== returnFiber) {
                null === returnFiber.firstEffect && (returnFiber.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== returnFiber.lastEffect && (returnFiber.lastEffect.nextEffect = workInProgress.firstEffect), returnFiber.lastEffect = workInProgress.lastEffect);
                workInProgress.effectTag > PerformedWork && (null !== returnFiber.lastEffect ? returnFiber.lastEffect.nextEffect = workInProgress : returnFiber.firstEffect = workInProgress, returnFiber.lastEffect = workInProgress);
            }
            if (stopWorkTimer(workInProgress), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), null !== siblingFiber) return siblingFiber;
            if (null === returnFiber) return nextPriorityLevel < HighPriority ? commitAllWork(workInProgress) : pendingCommit = workInProgress, null;
            workInProgress = returnFiber;
        }
        return null;
    }
    function performUnitOfWork(workInProgress) {
        var current = workInProgress.alternate;
        startWorkTimer(workInProgress);
        var next = beginWork(current, workInProgress, nextPriorityLevel);
        return !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, ReactDebugCurrentFiber$3.current = null, next;
    }
    function performFailedUnitOfWork(workInProgress) {
        var current = workInProgress.alternate;
        startWorkTimer(workInProgress);
        var next = beginFailedWork(current, workInProgress, nextPriorityLevel);
        return !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, ReactDebugCurrentFiber$3.current = null, next;
    }
    function clearErrors() {
        for (null === nextUnitOfWork && (nextUnitOfWork = findNextUnitOfWork()); null !== capturedErrors && capturedErrors.size && null !== nextUnitOfWork && nextPriorityLevel !== NoWork$2 && nextPriorityLevel <= TaskPriority$1;) {
            null === (nextUnitOfWork = hasCapturedError(nextUnitOfWork) ? performFailedUnitOfWork(nextUnitOfWork) : performUnitOfWork(nextUnitOfWork)) && (nextUnitOfWork = findNextUnitOfWork());
        }
    }
    function workLoopAsync(minPriorityLevel, deadline) {
        for (; null !== nextUnitOfWork && !deadlineHasExpired;) {
            if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                if (null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork)) && null !== pendingCommit) if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                    if (commitAllWork(pendingCommit), nextUnitOfWork = findNextUnitOfWork(), clearErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel < HighPriority) break;
                } else deadlineHasExpired = !0;
            } else deadlineHasExpired = !0;
        }
    }
    function workLoopSync(minPriorityLevel) {
        for (; null !== nextUnitOfWork && !(null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork)) && (nextUnitOfWork = findNextUnitOfWork(), clearErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel > TaskPriority$1));) {}
    }
    function workLoop(minPriorityLevel, deadline) {
        clearErrors(), null === nextUnitOfWork && (nextUnitOfWork = findNextUnitOfWork()), nextPriorityLevel !== NoWork$2 && nextPriorityLevel <= minPriorityLevel && (nextPriorityLevel <= TaskPriority$1 ? workLoopSync(minPriorityLevel) : null !== deadline && workLoopAsync(minPriorityLevel, deadline));
    }
    function performDeferredWork(deadline) {
        performWork(OffscreenPriority, deadline);
    }
    function performWork(minPriorityLevel, deadline) {
        startWorkLoopTimer(), invariant(!isPerformingWork, "performWork was called recursively. This error is likely caused " + "by a bug in React. Please file an issue."), isPerformingWork = !0;
        for (var hasRemainingAsyncWork = !1; null === fatalError;) {
            null === pendingCommit || deadlineHasExpired || commitAllWork(pendingCommit), priorityContextBeforeReconciliation = priorityContext;
            var _error3 = null;
            if (_error3 = invokeGuardedCallback$1(null, workLoop, null, minPriorityLevel, deadline), priorityContext = priorityContextBeforeReconciliation, null === _error3) {
                switch (nextPriorityLevel) {
                    case SynchronousPriority$1:
                    case TaskPriority$1:
                        if (nextPriorityLevel <= minPriorityLevel) continue;
                        break;

                    case HighPriority:
                    case LowPriority:
                    case OffscreenPriority:
                        if (null === deadline) hasRemainingAsyncWork = !0;else {
                            if (!deadlineHasExpired && nextPriorityLevel <= minPriorityLevel) continue;
                            hasRemainingAsyncWork = !0;
                        }
                        break;

                    case NoWork$2:
                        break;

                    default:
                        invariant(!1, "Switch statement should be exhuastive.");
                }
                break;
            }
            var failedWork = nextUnitOfWork;
            if (null === failedWork) null === fatalError && (fatalError = _error3);else {
                var maybeBoundary = captureError(failedWork, _error3);
                if (null !== maybeBoundary) {
                    var boundary = maybeBoundary;
                    beginFailedWork(boundary.alternate, boundary, nextPriorityLevel), unwindContexts(failedWork, boundary), nextUnitOfWork = completeUnitOfWork(boundary);
                }
            }
        }
        null !== deadline && (isCallbackScheduled = !1), hasRemainingAsyncWork && !isCallbackScheduled && (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
        var errorToThrow = null !== fatalError ? fatalError : firstUncaughtError;
        if (isPerformingWork = !1, deadlineHasExpired = !1, fatalError = null, firstUncaughtError = null, capturedErrors = null, failedBoundaries = null, stopWorkLoopTimer(), null !== errorToThrow) throw errorToThrow;
    }
    function captureError(failedWork, error) {
        ReactCurrentOwner$1.current = null, ReactDebugCurrentFiber$3.current = null, ReactDebugCurrentFiber$3.phase = null, nextUnitOfWork = null;
        var boundary = null,
            errorBoundaryFound = !1,
            willRetry = !1,
            errorBoundaryName = null;
        if (failedWork.tag === HostRoot$5) boundary = failedWork, isFailedBoundary(failedWork) && (fatalError = error);else for (var node = failedWork.return; null !== node && null === boundary;) {
            if (node.tag === ClassComponent$5) {
                var instance = node.stateNode;
                "function" == typeof instance.unstable_handleError && (errorBoundaryFound = !0, errorBoundaryName = getComponentName_1(node), boundary = node, willRetry = !0);
            } else node.tag === HostRoot$5 && (boundary = node);
            if (isFailedBoundary(node)) {
                if (isUnmounting) return null;
                if (null !== commitPhaseBoundaries && (commitPhaseBoundaries.has(node) || null !== node.alternate && commitPhaseBoundaries.has(node.alternate))) return null;
                boundary = null, willRetry = !1;
            }
            node = node.return;
        }
        if (null !== boundary) {
            null === failedBoundaries && (failedBoundaries = new Set()), failedBoundaries.add(boundary);
            var _componentStack = getStackAddendumByWorkInProgressFiber$2(failedWork),
                _componentName = getComponentName_1(failedWork);
            return null === capturedErrors && (capturedErrors = new Map()), capturedErrors.set(boundary, {
                componentName: _componentName,
                componentStack: _componentStack,
                error: error,
                errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
                errorBoundaryFound: errorBoundaryFound,
                errorBoundaryName: errorBoundaryName,
                willRetry: willRetry
            }), isCommitting ? (null === commitPhaseBoundaries && (commitPhaseBoundaries = new Set()), commitPhaseBoundaries.add(boundary)) : scheduleErrorRecovery(boundary), boundary;
        }
        return null === firstUncaughtError && (firstUncaughtError = error), null;
    }
    function hasCapturedError(fiber) {
        return null !== capturedErrors && (capturedErrors.has(fiber) || null !== fiber.alternate && capturedErrors.has(fiber.alternate));
    }
    function isFailedBoundary(fiber) {
        return null !== failedBoundaries && (failedBoundaries.has(fiber) || null !== fiber.alternate && failedBoundaries.has(fiber.alternate));
    }
    function commitErrorHandling(effectfulFiber) {
        var capturedError = void 0;
        null !== capturedErrors && (capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber), null == capturedError && null !== effectfulFiber.alternate && (effectfulFiber = effectfulFiber.alternate, capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber))), invariant(null != capturedError, "No error for given unit of work. This error is likely caused by a " + "bug in React. Please file an issue.");
        var error = capturedError.error;
        try {
            logCapturedError$1(capturedError);
        } catch (e) {
            console.error(e);
        }
        switch (effectfulFiber.tag) {
            case ClassComponent$5:
                var instance = effectfulFiber.stateNode,
                    info = {
                    componentStack: capturedError.componentStack
                };
                return void instance.unstable_handleError(error, info);

            case HostRoot$5:
                return void (null === firstUncaughtError && (firstUncaughtError = error));

            default:
                invariant(!1, "Invalid type of work. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    function unwindContexts(from, to) {
        for (var node = from; null !== node && node !== to && node.alternate !== to;) {
            switch (node.tag) {
                case ClassComponent$5:
                    popContextProvider$1(node);
                    break;

                case HostComponent$6:
                    popHostContext(node);
                    break;

                case HostRoot$5:
                case HostPortal$2:
                    popHostContainer(node);
            }
            stopWorkTimer(node), node = node.return;
        }
    }
    function scheduleRoot(root, priorityLevel) {
        priorityLevel !== NoWork$2 && (root.isScheduled || (root.isScheduled = !0, lastScheduledRoot ? (lastScheduledRoot.nextScheduledRoot = root, lastScheduledRoot = root) : (nextScheduledRoot = root, lastScheduledRoot = root)));
    }
    function scheduleUpdate(fiber, priorityLevel) {
        if (recordScheduleUpdate(), priorityLevel <= nextPriorityLevel && (nextUnitOfWork = null), fiber.tag === ClassComponent$5) {
            var instance = fiber.stateNode;
            warnAboutInvalidUpdates(instance);
        }
        for (var node = fiber, shouldContinue = !0; null !== node && shouldContinue;) {
            if (shouldContinue = !1, (node.pendingWorkPriority === NoWork$2 || node.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.pendingWorkPriority = priorityLevel), null !== node.alternate && (node.alternate.pendingWorkPriority === NoWork$2 || node.alternate.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.alternate.pendingWorkPriority = priorityLevel), null === node.return) {
                if (node.tag !== HostRoot$5) return void (fiber.tag === ClassComponent$5 && warnAboutUpdateOnUnmounted(fiber.stateNode));
                if (scheduleRoot(node.stateNode, priorityLevel), !isPerformingWork) switch (priorityLevel) {
                    case SynchronousPriority$1:
                        isUnbatchingUpdates ? performWork(SynchronousPriority$1, null) : performWork(TaskPriority$1, null);
                        break;

                    case TaskPriority$1:
                        invariant(isBatchingUpdates, "Task updates can only be scheduled as a nested update or " + "inside batchedUpdates.");
                        break;

                    default:
                        isCallbackScheduled || (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
                }
            }
            node = node.return;
        }
    }
    function getPriorityContext(fiber, forceAsync) {
        var priorityLevel = priorityContext;
        return priorityLevel === NoWork$2 && (priorityLevel = !useSyncScheduling || fiber.internalContextTag & AsyncUpdates || forceAsync ? LowPriority : SynchronousPriority$1), priorityLevel === SynchronousPriority$1 && (isPerformingWork || isBatchingUpdates) ? TaskPriority$1 : priorityLevel;
    }
    function scheduleErrorRecovery(fiber) {
        scheduleUpdate(fiber, TaskPriority$1);
    }
    function performWithPriority(priorityLevel, fn) {
        var previousPriorityContext = priorityContext;
        priorityContext = priorityLevel;
        try {
            fn();
        } finally {
            priorityContext = previousPriorityContext;
        }
    }
    function batchedUpdates(fn, a) {
        var previousIsBatchingUpdates = isBatchingUpdates;
        isBatchingUpdates = !0;
        try {
            return fn(a);
        } finally {
            isBatchingUpdates = previousIsBatchingUpdates, isPerformingWork || isBatchingUpdates || performWork(TaskPriority$1, null);
        }
    }
    function unbatchedUpdates(fn) {
        var previousIsUnbatchingUpdates = isUnbatchingUpdates,
            previousIsBatchingUpdates = isBatchingUpdates;
        isUnbatchingUpdates = isBatchingUpdates, isBatchingUpdates = !1;
        try {
            return fn();
        } finally {
            isBatchingUpdates = previousIsBatchingUpdates, isUnbatchingUpdates = previousIsUnbatchingUpdates;
        }
    }
    function syncUpdates(fn) {
        var previousPriorityContext = priorityContext;
        priorityContext = SynchronousPriority$1;
        try {
            return fn();
        } finally {
            priorityContext = previousPriorityContext;
        }
    }
    function deferredUpdates(fn) {
        var previousPriorityContext = priorityContext;
        priorityContext = LowPriority;
        try {
            return fn();
        } finally {
            priorityContext = previousPriorityContext;
        }
    }
    return {
        scheduleUpdate: scheduleUpdate,
        getPriorityContext: getPriorityContext,
        performWithPriority: performWithPriority,
        batchedUpdates: batchedUpdates,
        unbatchedUpdates: unbatchedUpdates,
        syncUpdates: syncUpdates,
        deferredUpdates: deferredUpdates
    };
},
    getContextFiber = function getContextFiber(arg) {
    invariant(!1, "Missing injection for fiber getContextForSubtree");
};

function getContextForSubtree(parentComponent) {
    if (!parentComponent) return emptyObject;
    var instance = ReactInstanceMap_1.get(parentComponent);
    return "number" == typeof instance.tag ? getContextFiber(instance) : instance._processChildContext(instance._context);
}

getContextForSubtree._injectFiber = function (fn) {
    getContextFiber = fn;
};

var getContextForSubtree_1 = getContextForSubtree,
    addTopLevelUpdate = ReactFiberUpdateQueue.addTopLevelUpdate,
    findCurrentUnmaskedContext = ReactFiberContext.findCurrentUnmaskedContext,
    isContextProvider = ReactFiberContext.isContextProvider,
    processChildContext = ReactFiberContext.processChildContext,
    createFiberRoot = ReactFiberRoot.createFiberRoot,
    HostComponent$1 = ReactTypeOfWork.HostComponent,
    warning$2 = warning,
    ReactFiberInstrumentation = ReactFiberInstrumentation_1,
    ReactDebugCurrentFiber = ReactDebugCurrentFiber_1,
    getComponentName = getComponentName_1,
    findCurrentHostFiber = ReactFiberTreeReflection.findCurrentHostFiber;

getContextForSubtree_1._injectFiber(function (fiber) {
    var parentContext = findCurrentUnmaskedContext(fiber);
    return isContextProvider(fiber) ? processChildContext(fiber, parentContext, !1) : parentContext;
});

var ReactFiberReconciler = function ReactFiberReconciler(config) {
    var getPublicInstance = config.getPublicInstance,
        _ReactFiberScheduler = ReactFiberScheduler(config),
        scheduleUpdate = _ReactFiberScheduler.scheduleUpdate,
        getPriorityContext = _ReactFiberScheduler.getPriorityContext,
        performWithPriority = _ReactFiberScheduler.performWithPriority,
        batchedUpdates = _ReactFiberScheduler.batchedUpdates,
        unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
        syncUpdates = _ReactFiberScheduler.syncUpdates,
        deferredUpdates = _ReactFiberScheduler.deferredUpdates;
    function scheduleTopLevelUpdate(current, element, callback) {
        "render" === ReactDebugCurrentFiber.phase && null !== ReactDebugCurrentFiber.current && warning$2(!1, "Render methods should be a pure function of props and state; " + "triggering nested component updates from render is not allowed. " + "If necessary, trigger nested updates in componentDidUpdate.\n\n" + "Check the render method of %s.", getComponentName(ReactDebugCurrentFiber.current) || "Unknown");
        var forceAsync = ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != element && null != element.type && !0 === element.type.unstable_asyncUpdates,
            priorityLevel = getPriorityContext(current, forceAsync),
            nextState = {
            element: element
        };
        callback = void 0 === callback ? null : callback, warning$2(null === callback || "function" == typeof callback, "render(...): Expected the last optional `callback` argument to be a " + "function. Instead received: %s.", callback), addTopLevelUpdate(current, nextState, callback, priorityLevel), scheduleUpdate(current, priorityLevel);
    }
    return {
        createContainer: function createContainer(containerInfo) {
            return createFiberRoot(containerInfo);
        },
        updateContainer: function updateContainer(element, container, parentComponent, callback) {
            var current = container.current;
            ReactFiberInstrumentation.debugTool && (null === current.alternate ? ReactFiberInstrumentation.debugTool.onMountContainer(container) : null === element ? ReactFiberInstrumentation.debugTool.onUnmountContainer(container) : ReactFiberInstrumentation.debugTool.onUpdateContainer(container));
            var context = getContextForSubtree_1(parentComponent);
            null === container.context ? container.context = context : container.pendingContext = context, scheduleTopLevelUpdate(current, element, callback);
        },
        performWithPriority: performWithPriority,
        batchedUpdates: batchedUpdates,
        unbatchedUpdates: unbatchedUpdates,
        syncUpdates: syncUpdates,
        deferredUpdates: deferredUpdates,
        getPublicRootInstance: function getPublicRootInstance(container) {
            var containerFiber = container.current;
            if (!containerFiber.child) return null;
            switch (containerFiber.child.tag) {
                case HostComponent$1:
                    return getPublicInstance(containerFiber.child.stateNode);

                default:
                    return containerFiber.child.stateNode;
            }
        },
        findHostInstance: function findHostInstance(fiber) {
            var hostFiber = findCurrentHostFiber(fiber);
            return null === hostFiber ? null : hostFiber.stateNode;
        }
    };
};

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var objects = {},
    uniqueID = 1,
    emptyObject$3 = {},
    ReactNativePropRegistry = function () {
    function ReactNativePropRegistry() {
        _classCallCheck(this, ReactNativePropRegistry);
    }
    return ReactNativePropRegistry.register = function (object) {
        var id = ++uniqueID;
        return Object.freeze(object), objects[id] = object, id;
    }, ReactNativePropRegistry.getByID = function (id) {
        if (!id) return emptyObject$3;
        var object = objects[id];
        return object || (console.warn("Invalid style with id `" + id + "`. Skipping ..."), emptyObject$3);
    }, ReactNativePropRegistry;
}(),
    ReactNativePropRegistry_1 = ReactNativePropRegistry,
    emptyObject$2 = {},
    removedKeys = null,
    removedKeyCount = 0;

function defaultDiffer(prevProp, nextProp) {
    return "object" != typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp);
}

function resolveObject(idOrObject) {
    return "number" == typeof idOrObject ? ReactNativePropRegistry_1.getByID(idOrObject) : idOrObject;
}

function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && removedKeyCount > 0;) {
        restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && removedKeyCount > 0) {
        var obj = resolveObject(node);
        for (var propKey in removedKeys) {
            if (removedKeys[propKey]) {
                var nextProp = obj[propKey];
                if (void 0 !== nextProp) {
                    var attributeConfig = validAttributes[propKey];
                    if (attributeConfig) {
                        if ("function" == typeof nextProp && (nextProp = !0), void 0 === nextProp && (nextProp = null), "object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                            var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                            updatePayload[propKey] = nextValue;
                        }
                        removedKeys[propKey] = !1, removedKeyCount--;
                    }
                }
            }
        }
    }
}

function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
    var i,
        minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
    for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
    }for (; i < prevArray.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
    }for (; i < nextArray.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
    }return updatePayload;
}

function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    return updatePayload || prevProp !== nextProp ? prevProp && nextProp ? Array.isArray(prevProp) || Array.isArray(nextProp) ? Array.isArray(prevProp) && Array.isArray(nextProp) ? diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes) : Array.isArray(prevProp) ? diffProperties(updatePayload, flattenStyle(prevProp), resolveObject(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), flattenStyle(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), resolveObject(nextProp), validAttributes) : nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload : updatePayload;
}

function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return addProperties(updatePayload, resolveObject(nextProp), validAttributes);
    for (var i = 0; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }return updatePayload;
}

function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return clearProperties(updatePayload, resolveObject(prevProp), validAttributes);
    for (var i = 0; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }return updatePayload;
}

function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, nextProp, prevProp;
    for (var propKey in nextProps) {
        if (attributeConfig = validAttributes[propKey]) if (prevProp = prevProps[propKey], nextProp = nextProps[propKey], "function" == typeof nextProp && (nextProp = !0, "function" == typeof prevProp && (prevProp = !0)), void 0 === nextProp && (nextProp = null, void 0 === prevProp && (prevProp = null)), removedKeys && (removedKeys[propKey] = !1), updatePayload && void 0 !== updatePayload[propKey]) {
            if ("object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                updatePayload[propKey] = nextValue;
            }
        } else if (prevProp !== nextProp) if ("object" != typeof attributeConfig) defaultDiffer(prevProp, nextProp) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
            var shouldUpdate = void 0 === prevProp || ("function" == typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
            shouldUpdate && (nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = nextValue);
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), removedKeyCount > 0 && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
    }for (propKey in prevProps) {
        void 0 === nextProps[propKey] && (attributeConfig = validAttributes[propKey]) && (updatePayload && void 0 !== updatePayload[propKey] || void 0 !== (prevProp = prevProps[propKey]) && ("object" != typeof attributeConfig || "function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[propKey] = null, removedKeys || (removedKeys = {}), removedKeys[propKey] || (removedKeys[propKey] = !0, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig)));
    }return updatePayload;
}

function addProperties(updatePayload, props, validAttributes) {
    return diffProperties(updatePayload, emptyObject$2, props, validAttributes);
}

function clearProperties(updatePayload, prevProps, validAttributes) {
    return diffProperties(updatePayload, prevProps, emptyObject$2, validAttributes);
}

var ReactNativeAttributePayload = {
    create: function create(props, validAttributes) {
        return addProperties(null, props, validAttributes);
    },
    diff: function diff(prevProps, nextProps, validAttributes) {
        return diffProperties(null, prevProps, nextProps, validAttributes);
    }
},
    ReactNativeAttributePayload_1 = ReactNativeAttributePayload;

function mountSafeCallback$1(context, callback) {
    return function () {
        if (callback) {
            if ("boolean" == typeof context.__isMounted) {
                if (!context.__isMounted) return;
            } else if ("function" == typeof context.isMounted && !context.isMounted()) return;
            return callback.apply(context, arguments);
        }
    };
}

function throwOnStylesProp(component, props) {
    if (void 0 !== props.styles) {
        var owner = component._owner || null,
            name = component.constructor.displayName,
            msg = "`styles` is not a supported property of `" + name + "`, did " + "you mean `style` (singular)?";
        throw owner && owner.constructor && owner.constructor.displayName && (msg += "\n\nCheck the `" + owner.constructor.displayName + "` parent " + " component."), new Error(msg);
    }
}

function warnForStyleProps$1(props, validAttributes) {
    for (var key in validAttributes.style) {
        validAttributes[key] || void 0 === props[key] || console.error("You are setting the style `{ " + key + ": ... }` as a prop. You " + "should nest it in a style object. " + "E.g. `{ style: { " + key + ": ... } }`");
    }
}

var NativeMethodsMixinUtils = {
    mountSafeCallback: mountSafeCallback$1,
    throwOnStylesProp: throwOnStylesProp,
    warnForStyleProps: warnForStyleProps$1
};

function _classCallCheck$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var mountSafeCallback = NativeMethodsMixinUtils.mountSafeCallback,
    warnForStyleProps = NativeMethodsMixinUtils.warnForStyleProps,
    ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
        _classCallCheck$1(this, ReactNativeFiberHostComponent), this._nativeTag = tag, this._children = [], this.viewConfig = viewConfig;
    }
    return ReactNativeFiberHostComponent.prototype.blur = function () {
        TextInputState.blurTextInput(this._nativeTag);
    }, ReactNativeFiberHostComponent.prototype.focus = function () {
        TextInputState.focusTextInput(this._nativeTag);
    }, ReactNativeFiberHostComponent.prototype.measure = function (callback) {
        UIManager.measure(this._nativeTag, mountSafeCallback(this, callback));
    }, ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
        UIManager.measureInWindow(this._nativeTag, mountSafeCallback(this, callback));
    }, ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(this._nativeTag, relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
    }, ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
        warnForStyleProps(nativeProps, this.viewConfig.validAttributes);
        var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, this.viewConfig.validAttributes);
        UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, updatePayload);
    }, ReactNativeFiberHostComponent;
}(),
    ReactNativeFiberHostComponent_1 = ReactNativeFiberHostComponent,
    viewConfigs = new Map(),
    ReactNativeViewConfigRegistry = {
    register: function register(viewConfig) {
        var name = viewConfig.uiViewClassName;
        return invariant(!viewConfigs.has(name), "Tried to register two views with the same name %s", name), viewConfigs.set(name, viewConfig), name;
    },
    get: function get(name) {
        var config = viewConfigs.get(name);
        return invariant(config, "View config not found for name %s", name), config;
    }
},
    ReactNativeViewConfigRegistry_1 = ReactNativeViewConfigRegistry,
    precacheFiberNode$1 = ReactNativeComponentTree_1.precacheFiberNode,
    uncacheFiberNode$1 = ReactNativeComponentTree_1.uncacheFiberNode,
    updateFiberProps$1 = ReactNativeComponentTree_1.updateFiberProps;

function recursivelyUncacheFiberNode(node) {
    "number" == typeof node ? uncacheFiberNode$1(node) : (uncacheFiberNode$1(node._nativeTag), node._children.forEach(recursivelyUncacheFiberNode));
}

var NativeRenderer = ReactFiberReconciler({
    appendChild: function appendChild(parentInstance, child) {
        var childTag = "number" == typeof child ? child : child._nativeTag,
            children = parentInstance._children,
            index = children.indexOf(child);
        index >= 0 ? (children.splice(index, 1), children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [index], [children.length - 1], [], [], [])) : (children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [children.length - 1], []));
    },
    appendChildToContainer: function appendChildToContainer(parentInstance, child) {
        var childTag = "number" == typeof child ? child : child._nativeTag;
        UIManager.setChildren(parentInstance, [childTag]);
    },
    appendInitialChild: function appendInitialChild(parentInstance, child) {
        parentInstance._children.push(child);
    },
    commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {
        UIManager.updateView(textInstance, "RCTRawText", {
            text: newText
        });
    },
    commitMount: function commitMount(instance, type, newProps, internalInstanceHandle) {},
    commitUpdate: function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps, internalInstanceHandle) {
        var viewConfig = instance.viewConfig;
        updateFiberProps$1(instance._nativeTag, newProps);
        var updatePayload = ReactNativeAttributePayload_1.diff(oldProps, newProps, viewConfig.validAttributes);
        UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    },
    createInstance: function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var tag = ReactNativeTagHandles_1.allocateTag(),
            viewConfig = ReactNativeViewConfigRegistry_1.get(type);
        for (var key in viewConfig.validAttributes) {
            props.hasOwnProperty(key) && deepFreezeAndThrowOnMutationInDev(props[key]);
        }var updatePayload = ReactNativeAttributePayload_1.create(props, viewConfig.validAttributes);
        UIManager.createView(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload);
        var component = new ReactNativeFiberHostComponent_1(tag, viewConfig);
        return precacheFiberNode$1(internalInstanceHandle, tag), updateFiberProps$1(tag, props), component;
    },
    createTextInstance: function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var tag = ReactNativeTagHandles_1.allocateTag();
        return UIManager.createView(tag, "RCTRawText", rootContainerInstance, {
            text: text
        }), precacheFiberNode$1(internalInstanceHandle, tag), tag;
    },
    finalizeInitialChildren: function finalizeInitialChildren(parentInstance, type, props, rootContainerInstance) {
        if (0 === parentInstance._children.length) return !1;
        var nativeTags = parentInstance._children.map(function (child) {
            return "number" == typeof child ? child : child._nativeTag;
        });
        return UIManager.setChildren(parentInstance._nativeTag, nativeTags), !1;
    },
    getRootHostContext: function getRootHostContext() {
        return emptyObject;
    },
    getChildHostContext: function getChildHostContext() {
        return emptyObject;
    },
    getPublicInstance: function getPublicInstance(instance) {
        return instance;
    },
    insertBefore: function insertBefore(parentInstance, child, beforeChild) {
        var children = parentInstance._children,
            index = children.indexOf(child);
        if (index >= 0) {
            children.splice(index, 1);
            var beforeChildIndex = children.indexOf(beforeChild);
            children.splice(beforeChildIndex, 0, child), UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChildIndex], [], [], []);
        } else {
            var _beforeChildIndex = children.indexOf(beforeChild);
            children.splice(_beforeChildIndex, 0, child);
            var childTag = "number" == typeof child ? child : child._nativeTag;
            UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [_beforeChildIndex], []);
        }
    },
    insertInContainerBefore: function insertInContainerBefore(parentInstance, child, beforeChild) {
        invariant("number" != typeof parentInstance, "Container does not support insertBefore operation");
    },
    prepareForCommit: function prepareForCommit() {},
    prepareUpdate: function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {
        return emptyObject;
    },
    removeChild: function removeChild(parentInstance, child) {
        recursivelyUncacheFiberNode(child);
        var children = parentInstance._children,
            index = children.indexOf(child);
        children.splice(index, 1), UIManager.manageChildren(parentInstance._nativeTag, [], [], [], [], [index]);
    },
    removeChildFromContainer: function removeChildFromContainer(parentInstance, child) {
        recursivelyUncacheFiberNode(child), UIManager.manageChildren(parentInstance, [], [], [], [], [0]);
    },
    resetAfterCommit: function resetAfterCommit() {},
    resetTextContent: function resetTextContent(instance) {},
    shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {
        return !1;
    },
    scheduleDeferredCallback: commonjsGlobal.requestIdleCallback,
    shouldSetTextContent: function shouldSetTextContent(type, props) {
        return !1;
    },
    useSyncScheduling: !0
}),
    ReactNativeFiberRenderer = NativeRenderer,
    getClosestInstanceFromNode = ReactNativeComponentTree_1.getClosestInstanceFromNode,
    findCurrentFiberUsingSlowPath$1 = ReactFiberTreeReflection.findCurrentFiberUsingSlowPath,
    HostComponent$11 = ReactTypeOfWork.HostComponent,
    getInspectorDataForViewTag = void 0,
    traverseOwnerTreeUp = function traverseOwnerTreeUp(hierarchy, instance) {
    instance && (hierarchy.unshift(instance), traverseOwnerTreeUp(hierarchy, instance._debugOwner));
},
    getOwnerHierarchy = function getOwnerHierarchy(instance) {
    var hierarchy = [];
    return traverseOwnerTreeUp(hierarchy, instance), hierarchy;
},
    lastNonHostInstance = function lastNonHostInstance(hierarchy) {
    for (var i = hierarchy.length - 1; i > 1; i--) {
        var instance = hierarchy[i];
        if (instance.tag !== HostComponent$11) return instance;
    }
    return hierarchy[0];
},
    getHostProps = function getHostProps(fiber) {
    var host = ReactFiberTreeReflection.findCurrentHostFiber(fiber);
    return host ? host.memoizedProps || emptyObject : emptyObject;
},
    getHostNode = function getHostNode(fiber, findNodeHandle) {
    for (var hostNode = void 0; fiber;) {
        if (null !== fiber.stateNode && fiber.tag === HostComponent$11 && (hostNode = findNodeHandle(fiber.stateNode)), hostNode) return hostNode;
        fiber = fiber.child;
    }
    return null;
},
    createHierarchy = function createHierarchy(fiberHierarchy) {
    return fiberHierarchy.map(function (fiber) {
        return {
            name: getComponentName_1(fiber),
            getInspectorData: function getInspectorData(findNodeHandle) {
                return {
                    measure: function measure(callback) {
                        return UIManager.measure(getHostNode(fiber, findNodeHandle), callback);
                    },
                    props: getHostProps(fiber),
                    source: fiber._debugSource
                };
            }
        };
    });
};

getInspectorDataForViewTag = function getInspectorDataForViewTag(viewTag) {
    var closestInstance = getClosestInstanceFromNode(viewTag);
    if (!closestInstance) return {
        hierarchy: [],
        props: emptyObject,
        selection: null,
        source: null
    };
    var fiber = findCurrentFiberUsingSlowPath$1(closestInstance),
        fiberHierarchy = getOwnerHierarchy(fiber),
        instance = lastNonHostInstance(fiberHierarchy),
        hierarchy = createHierarchy(fiberHierarchy),
        props = getHostProps(instance),
        source = instance._debugSource;
    return {
        hierarchy: hierarchy,
        props: props,
        selection: fiberHierarchy.indexOf(instance),
        source: source
    };
};

var ReactNativeFiberInspector = {
    getInspectorDataForViewTag: getInspectorDataForViewTag
},
    ReactVersion = "16.0.0-alpha.13",
    ReactNativeFeatureFlags = require(63                       ), // 63 = ReactNativeFeatureFlags
    ReactCurrentOwner$3 = ReactGlobalSharedState_1.ReactCurrentOwner,
    injectedFindNode = ReactNativeFeatureFlags.useFiber ? function (fiber) {
    return ReactNativeFiberRenderer.findHostInstance(fiber);
} : function (instance) {
    return instance;
};

function findNodeHandle(componentOrHandle) {
    var owner = ReactCurrentOwner$3.current;
    if (null !== owner && (warning(owner._warnedAboutRefsInRender, "%s is accessing findNodeHandle inside its render(). " + "render() should be a pure function of props and state. It should " + "never access something that requires stale data from the previous " + "render, such as refs. Move this logic to componentDidMount and " + "componentDidUpdate instead.", owner.getName() || "A component"), owner._warnedAboutRefsInRender = !0), null == componentOrHandle) return null;
    if ("number" == typeof componentOrHandle) return componentOrHandle;
    var component = componentOrHandle,
        internalInstance = ReactInstanceMap_1.get(component);
    return internalInstance ? injectedFindNode(internalInstance) : component || (invariant("object" == typeof component && ("_rootNodeID" in component || "_nativeTag" in component) || null != component.render && "function" == typeof component.render, "findNodeHandle(...): Argument is not a component " + "(type: %s, keys: %s)", typeof component, Object.keys(component)), void invariant(!1, "findNodeHandle(...): Unable to find node handle for unmounted " + "component."));
}

var findNodeHandle_1 = findNodeHandle,
    findNumericNodeHandleFiber = function findNumericNodeHandleFiber(componentOrHandle) {
    var instance = findNodeHandle_1(componentOrHandle);
    return null == instance || "number" == typeof instance ? instance : instance._nativeTag;
},
    DevOnlyStubShim = null;

function _classCallCheck$2(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return !call || "object" != typeof call && "function" != typeof call ? self : call;
}

function _inherits(subClass, superClass) {
    if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: !1,
            writable: !0,
            configurable: !0
        }
    }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
}

var ReactNativeFeatureFlags$1 = require(63                       ), // 63 = ReactNativeFeatureFlags
    mountSafeCallback$2 = NativeMethodsMixinUtils.mountSafeCallback,
    findNumericNodeHandle = ReactNativeFeatureFlags$1.useFiber ? findNumericNodeHandleFiber : DevOnlyStubShim,
    ReactNativeComponent = function (_React$Component) {
    _inherits(ReactNativeComponent, _React$Component);
    function ReactNativeComponent() {
        return _classCallCheck$2(this, ReactNativeComponent), _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }
    return ReactNativeComponent.prototype.blur = function () {
        TextInputState.blurTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.focus = function () {
        TextInputState.focusTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.measure = function (callback) {
        UIManager.measure(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
    }, ReactNativeComponent.prototype.measureInWindow = function (callback) {
        UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
    }, ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback$2(this, onFail), mountSafeCallback$2(this, onSuccess));
    }, ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
        injectedSetNativeProps(this, nativeProps);
    }, ReactNativeComponent;
}(react.Component);

function setNativePropsFiber(componentOrHandle, nativeProps) {
    var maybeInstance = void 0;
    try {
        maybeInstance = findNodeHandle_1(componentOrHandle);
    } catch (error) {}
    if (null != maybeInstance) {
        var viewConfig = maybeInstance.viewConfig,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    }
}

function setNativePropsStack(componentOrHandle, nativeProps) {
    var maybeInstance = findNodeHandle_1(componentOrHandle);
    if (null != maybeInstance) {
        var viewConfig = void 0;
        if (void 0 !== maybeInstance.viewConfig) viewConfig = maybeInstance.viewConfig;else if (void 0 !== maybeInstance._instance && void 0 !== maybeInstance._instance.viewConfig) viewConfig = maybeInstance._instance.viewConfig;else {
            for (; void 0 !== maybeInstance._renderedComponent;) {
                maybeInstance = maybeInstance._renderedComponent;
            }viewConfig = maybeInstance.viewConfig;
        }
        var tag = "function" == typeof maybeInstance.getHostNode ? maybeInstance.getHostNode() : maybeInstance._rootNodeID,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(tag, viewConfig.uiViewClassName, updatePayload);
    }
}

var injectedSetNativeProps = void 0;

injectedSetNativeProps = ReactNativeFeatureFlags$1.useFiber ? setNativePropsFiber : setNativePropsStack;

var ReactNativeComponent_1 = ReactNativeComponent,
    ReactNativeFeatureFlags$2 = require(63                       ), // 63 = ReactNativeFeatureFlags
    mountSafeCallback$3 = NativeMethodsMixinUtils.mountSafeCallback,
    throwOnStylesProp$1 = NativeMethodsMixinUtils.throwOnStylesProp,
    warnForStyleProps$2 = NativeMethodsMixinUtils.warnForStyleProps,
    findNumericNodeHandle$1 = ReactNativeFeatureFlags$2.useFiber ? findNumericNodeHandleFiber : DevOnlyStubShim,
    NativeMethodsMixin = {
    measure: function measure(callback) {
        UIManager.measure(findNumericNodeHandle$1(this), mountSafeCallback$3(this, callback));
    },
    measureInWindow: function measureInWindow(callback) {
        UIManager.measureInWindow(findNumericNodeHandle$1(this), mountSafeCallback$3(this, callback));
    },
    measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle$1(this), relativeToNativeNode, mountSafeCallback$3(this, onFail), mountSafeCallback$3(this, onSuccess));
    },
    setNativeProps: function setNativeProps(nativeProps) {
        injectedSetNativeProps$1(this, nativeProps);
    },
    focus: function focus() {
        TextInputState.focusTextInput(findNumericNodeHandle$1(this));
    },
    blur: function blur() {
        TextInputState.blurTextInput(findNumericNodeHandle$1(this));
    }
};

function setNativePropsFiber$1(componentOrHandle, nativeProps) {
    var maybeInstance = void 0;
    try {
        maybeInstance = findNodeHandle_1(componentOrHandle);
    } catch (error) {}
    if (null != maybeInstance) {
        var viewConfig = maybeInstance.viewConfig;
        warnForStyleProps$2(nativeProps, viewConfig.validAttributes);
        var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    }
}

function setNativePropsStack$1(componentOrHandle, nativeProps) {
    var maybeInstance = findNodeHandle_1(componentOrHandle);
    if (null != maybeInstance) {
        var viewConfig = void 0;
        if (void 0 !== maybeInstance.viewConfig) viewConfig = maybeInstance.viewConfig;else if (void 0 !== maybeInstance._instance && void 0 !== maybeInstance._instance.viewConfig) viewConfig = maybeInstance._instance.viewConfig;else {
            for (; void 0 !== maybeInstance._renderedComponent;) {
                maybeInstance = maybeInstance._renderedComponent;
            }viewConfig = maybeInstance.viewConfig;
        }
        var tag = "function" == typeof maybeInstance.getHostNode ? maybeInstance.getHostNode() : maybeInstance._rootNodeID;
        warnForStyleProps$2(nativeProps, viewConfig.validAttributes);
        var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(tag, viewConfig.uiViewClassName, updatePayload);
    }
}

var injectedSetNativeProps$1 = void 0;

injectedSetNativeProps$1 = ReactNativeFeatureFlags$2.useFiber ? setNativePropsFiber$1 : setNativePropsStack$1;

var NativeMethodsMixin_DEV = NativeMethodsMixin;

invariant(!NativeMethodsMixin_DEV.componentWillMount && !NativeMethodsMixin_DEV.componentWillReceiveProps, "Do not override existing functions."), NativeMethodsMixin_DEV.componentWillMount = function () {
    throwOnStylesProp$1(this, this.props);
}, NativeMethodsMixin_DEV.componentWillReceiveProps = function (newProps) {
    throwOnStylesProp$1(this, newProps);
};

var NativeMethodsMixin_1 = NativeMethodsMixin,
    TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
        var touchBank = touchHistory.touchBank,
            total = 0,
            count = 0,
            oneTouchData = 1 === touchHistory.numberActiveTouches ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
        if (null !== oneTouchData) oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter && (total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY, count = 1);else for (var i = 0; i < touchBank.length; i++) {
            var touchTrack = touchBank[i];
            if (null !== touchTrack && void 0 !== touchTrack && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
                var toAdd;
                toAdd = ofCurrent && isXAxis ? touchTrack.currentPageX : ofCurrent && !isXAxis ? touchTrack.currentPageY : !ofCurrent && isXAxis ? touchTrack.previousPageX : touchTrack.previousPageY, total += toAdd, count++;
            }
        }
        return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !0);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !0);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !1);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !1);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !0, !0);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !1, !0);
    },
    noCentroid: -1
},
    TouchHistoryMath_1 = TouchHistoryMath,
    createReactNativeComponentClassFiber = function createReactNativeComponentClassFiber(viewConfig) {
    return ReactNativeViewConfigRegistry_1.register(viewConfig);
},
    createReactNativeComponentClassFiber_1 = createReactNativeComponentClassFiber,
    ReactNativeFeatureFlags$3 = require(63                       ), // 63 = ReactNativeFeatureFlags
    createReactNativeComponentClass = ReactNativeFeatureFlags$3.useFiber ? createReactNativeComponentClassFiber_1 : DevOnlyStubShim,
    ReactNativeFeatureFlags$4 = require(63                       ), // 63 = ReactNativeFeatureFlags
    findNumericNodeHandle$2 = ReactNativeFeatureFlags$4.useFiber ? findNumericNodeHandleFiber : DevOnlyStubShim;

function takeSnapshot(view, options) {
    return "number" != typeof view && "window" !== view && (view = findNumericNodeHandle$2(view) || "window"), UIManager.__takeSnapshot(view, options);
}

var takeSnapshot_1 = takeSnapshot,
    ReactInvalidSetStateWarningHook = {},
    processingChildContext = !1,
    warnInvalidSetState = function warnInvalidSetState() {
    warning(!processingChildContext, "setState(...): Cannot call setState() inside getChildContext()");
};

ReactInvalidSetStateWarningHook = {
    onBeginProcessingChildContext: function onBeginProcessingChildContext() {
        processingChildContext = !0;
    },
    onEndProcessingChildContext: function onEndProcessingChildContext() {
        processingChildContext = !1;
    },
    onSetState: function onSetState() {
        warnInvalidSetState();
    }
};

var ReactInvalidSetStateWarningHook_1 = ReactInvalidSetStateWarningHook,
    ReactHostOperationHistoryHook = null,
    history = [];

ReactHostOperationHistoryHook = {
    onHostOperation: function onHostOperation(operation) {
        history.push(operation);
    },
    clearHistory: function clearHistory() {
        ReactHostOperationHistoryHook._preventClearing || (history = []);
    },
    getHistory: function getHistory() {
        return history;
    }
};

var ReactHostOperationHistoryHook_1 = ReactHostOperationHistoryHook,
    ReactComponentTreeHook = ReactGlobalSharedState_1.ReactComponentTreeHook,
    ReactDebugTool = null,
    hooks = [],
    didHookThrowForEvent = {},
    callHook = function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
    try {
        fn.call(context, arg1, arg2, arg3, arg4, arg5);
    } catch (e) {
        warning(didHookThrowForEvent[event], "Exception thrown by hook while handling %s: %s", event, e + "\n" + e.stack), didHookThrowForEvent[event] = !0;
    }
},
    emitEvent = function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
    for (var i = 0; i < hooks.length; i++) {
        var hook = hooks[i],
            fn = hook[event];
        fn && callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
},
    _isProfiling = !1,
    flushHistory = [],
    lifeCycleTimerStack = [],
    currentFlushNesting = 0,
    currentFlushMeasurements = [],
    currentFlushStartTime = 0,
    currentTimerDebugID = null,
    currentTimerStartTime = 0,
    currentTimerNestedFlushDuration = 0,
    currentTimerType = null,
    lifeCycleTimerHasWarned = !1,
    clearHistory = function clearHistory() {
    ReactComponentTreeHook.purgeUnmountedComponents(), ReactHostOperationHistoryHook_1.clearHistory();
},
    getTreeSnapshot = function getTreeSnapshot(registeredIDs) {
    return registeredIDs.reduce(function (tree, id) {
        var ownerID = ReactComponentTreeHook.getOwnerID(id),
            parentID = ReactComponentTreeHook.getParentID(id);
        return tree[id] = {
            displayName: ReactComponentTreeHook.getDisplayName(id),
            text: ReactComponentTreeHook.getText(id),
            updateCount: ReactComponentTreeHook.getUpdateCount(id),
            childIDs: ReactComponentTreeHook.getChildIDs(id),
            ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
            parentID: parentID
        }, tree;
    }, {});
},
    resetMeasurements = function resetMeasurements() {
    var previousStartTime = currentFlushStartTime,
        previousMeasurements = currentFlushMeasurements,
        previousOperations = ReactHostOperationHistoryHook_1.getHistory();
    if (0 === currentFlushNesting) return currentFlushStartTime = 0, currentFlushMeasurements = [], void clearHistory();
    if (previousMeasurements.length || previousOperations.length) {
        var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
        flushHistory.push({
            duration: performanceNow() - previousStartTime,
            measurements: previousMeasurements || [],
            operations: previousOperations || [],
            treeSnapshot: getTreeSnapshot(registeredIDs)
        });
    }
    clearHistory(), currentFlushStartTime = performanceNow(), currentFlushMeasurements = [];
},
    checkDebugID = function checkDebugID(debugID) {
    arguments.length > 1 && void 0 !== arguments[1] && arguments[1] && 0 === debugID || debugID || warning(!1, "ReactDebugTool: debugID may not be empty.");
},
    beginLifeCycleTimer = function beginLifeCycleTimer(debugID, timerType) {
    0 !== currentFlushNesting && (currentTimerType && !lifeCycleTimerHasWarned && (warning(!1, "There is an internal error in the React performance measurement code." + "\n\nDid not expect %s timer to start while %s timer is still in " + "progress for %s instance.", timerType, currentTimerType || "no", debugID === currentTimerDebugID ? "the same" : "another"), lifeCycleTimerHasWarned = !0), currentTimerStartTime = performanceNow(), currentTimerNestedFlushDuration = 0, currentTimerDebugID = debugID, currentTimerType = timerType);
},
    endLifeCycleTimer = function endLifeCycleTimer(debugID, timerType) {
    0 !== currentFlushNesting && (currentTimerType === timerType || lifeCycleTimerHasWarned || (warning(!1, "There is an internal error in the React performance measurement code. " + "We did not expect %s timer to stop while %s timer is still in " + "progress for %s instance. Please report this as a bug in React.", timerType, currentTimerType || "no", debugID === currentTimerDebugID ? "the same" : "another"), lifeCycleTimerHasWarned = !0), _isProfiling && currentFlushMeasurements.push({
        timerType: timerType,
        instanceID: debugID,
        duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    }), currentTimerStartTime = 0, currentTimerNestedFlushDuration = 0, currentTimerDebugID = null, currentTimerType = null);
},
    pauseCurrentLifeCycleTimer = function pauseCurrentLifeCycleTimer() {
    var currentTimer = {
        startTime: currentTimerStartTime,
        nestedFlushStartTime: performanceNow(),
        debugID: currentTimerDebugID,
        timerType: currentTimerType
    };
    lifeCycleTimerStack.push(currentTimer), currentTimerStartTime = 0, currentTimerNestedFlushDuration = 0, currentTimerDebugID = null, currentTimerType = null;
},
    resumeCurrentLifeCycleTimer = function resumeCurrentLifeCycleTimer() {
    var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
        startTime = _lifeCycleTimerStack$.startTime,
        nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
        debugID = _lifeCycleTimerStack$.debugID,
        timerType = _lifeCycleTimerStack$.timerType,
        nestedFlushDuration = performanceNow() - nestedFlushStartTime;
    currentTimerStartTime = startTime, currentTimerNestedFlushDuration += nestedFlushDuration, currentTimerDebugID = debugID, currentTimerType = timerType;
},
    lastMarkTimeStamp = 0,
    canUsePerformanceMeasure = "undefined" != typeof performance && "function" == typeof performance.mark && "function" == typeof performance.clearMarks && "function" == typeof performance.measure && "function" == typeof performance.clearMeasures,
    shouldMark = function shouldMark(debugID) {
    if (!_isProfiling || !canUsePerformanceMeasure) return !1;
    var element = ReactComponentTreeHook.getElement(debugID);
    return null != element && "object" == typeof element && !("string" == typeof element.type);
},
    markBegin = function markBegin(debugID, markType) {
    if (shouldMark(debugID)) {
        var markName = debugID + "::" + markType;
        lastMarkTimeStamp = performanceNow(), performance.mark(markName);
    }
},
    markEnd = function markEnd(debugID, markType) {
    if (shouldMark(debugID)) {
        var markName = debugID + "::" + markType,
            displayName = ReactComponentTreeHook.getDisplayName(debugID) || "Unknown";
        if (performanceNow() - lastMarkTimeStamp > .1) {
            var measurementName = displayName + " [" + markType + "]";
            performance.measure(measurementName, markName);
        }
        performance.clearMarks(markName), measurementName && performance.clearMeasures(measurementName);
    }
};

ReactDebugTool = {
    addHook: function addHook(hook) {
        hooks.push(hook);
    },
    removeHook: function removeHook(hook) {
        for (var i = 0; i < hooks.length; i++) {
            hooks[i] === hook && (hooks.splice(i, 1), i--);
        }
    },
    isProfiling: function isProfiling() {
        return _isProfiling;
    },
    beginProfiling: function beginProfiling() {
        _isProfiling || (_isProfiling = !0, flushHistory.length = 0, resetMeasurements(), ReactDebugTool.addHook(ReactHostOperationHistoryHook_1));
    },
    endProfiling: function endProfiling() {
        _isProfiling && (_isProfiling = !1, resetMeasurements(), ReactDebugTool.removeHook(ReactHostOperationHistoryHook_1));
    },
    getFlushHistory: function getFlushHistory() {
        return flushHistory;
    },
    onBeginFlush: function onBeginFlush() {
        currentFlushNesting++, resetMeasurements(), pauseCurrentLifeCycleTimer(), emitEvent("onBeginFlush");
    },
    onEndFlush: function onEndFlush() {
        resetMeasurements(), currentFlushNesting--, resumeCurrentLifeCycleTimer(), emitEvent("onEndFlush");
    },
    onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
        checkDebugID(debugID), emitEvent("onBeginLifeCycleTimer", debugID, timerType), markBegin(debugID, timerType), beginLifeCycleTimer(debugID, timerType);
    },
    onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
        checkDebugID(debugID), endLifeCycleTimer(debugID, timerType), markEnd(debugID, timerType), emitEvent("onEndLifeCycleTimer", debugID, timerType);
    },
    onBeginProcessingChildContext: function onBeginProcessingChildContext() {
        emitEvent("onBeginProcessingChildContext");
    },
    onEndProcessingChildContext: function onEndProcessingChildContext() {
        emitEvent("onEndProcessingChildContext");
    },
    onHostOperation: function onHostOperation(operation) {
        checkDebugID(operation.instanceID), emitEvent("onHostOperation", operation);
    },
    onSetState: function onSetState() {
        emitEvent("onSetState");
    },
    onSetChildren: function onSetChildren(debugID, childDebugIDs) {
        checkDebugID(debugID), childDebugIDs.forEach(checkDebugID), emitEvent("onSetChildren", debugID, childDebugIDs);
    },
    onBeforeMountComponent: function onBeforeMountComponent(debugID, element, parentDebugID) {
        checkDebugID(debugID), checkDebugID(parentDebugID, !0), emitEvent("onBeforeMountComponent", debugID, element, parentDebugID), markBegin(debugID, "mount");
    },
    onMountComponent: function onMountComponent(debugID) {
        checkDebugID(debugID), markEnd(debugID, "mount"), emitEvent("onMountComponent", debugID);
    },
    onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
        checkDebugID(debugID), emitEvent("onBeforeUpdateComponent", debugID, element), markBegin(debugID, "update");
    },
    onUpdateComponent: function onUpdateComponent(debugID) {
        checkDebugID(debugID), markEnd(debugID, "update"), emitEvent("onUpdateComponent", debugID);
    },
    onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
        checkDebugID(debugID), emitEvent("onBeforeUnmountComponent", debugID), markBegin(debugID, "unmount");
    },
    onUnmountComponent: function onUnmountComponent(debugID) {
        checkDebugID(debugID), markEnd(debugID, "unmount"), emitEvent("onUnmountComponent", debugID);
    },
    onTestEvent: function onTestEvent() {
        emitEvent("onTestEvent");
    }
}, ReactDebugTool.addHook(ReactInvalidSetStateWarningHook_1), ReactDebugTool.addHook(ReactComponentTreeHook);

var url = ExecutionEnvironment.canUseDOM && window.location.href || "";

/[?&]react_perf\b/.test(url) && ReactDebugTool.beginProfiling();

var ReactDebugTool_1 = ReactDebugTool,
    lowPriorityWarning = function lowPriorityWarning() {},
    printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
    }var argIndex = 0,
        message = "Warning: " + format.replace(/%s/g, function () {
        return args[argIndex++];
    });
    "undefined" != typeof console && console.warn(message);
    try {
        throw new Error(message);
    } catch (x) {}
};

lowPriorityWarning = function lowPriorityWarning(condition, format) {
    if (void 0 === format) throw new Error("`warning(condition, format, ...args)` requires a warning " + "message argument");
    if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
        }printWarning.apply(void 0, [format].concat(args));
    }
};

var lowPriorityWarning_1 = lowPriorityWarning,
    _extends$3 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
};

function roundFloat(val) {
    var base = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2,
        n = Math.pow(10, base);
    return Math.floor(val * n) / n;
}

function consoleTable(table) {
    console.table(table);
}

function getLastMeasurements() {
    return ReactDebugTool_1.getFlushHistory();
}

function getExclusive() {
    var flushHistory = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : getLastMeasurements(),
        aggregatedStats = {},
        affectedIDs = {};
    function updateAggregatedStats(treeSnapshot, instanceID, timerType, applyUpdate) {
        var displayName = treeSnapshot[instanceID].displayName,
            key = displayName,
            stats = aggregatedStats[key];
        stats || (affectedIDs[key] = {}, stats = aggregatedStats[key] = {
            key: key,
            instanceCount: 0,
            counts: {},
            durations: {},
            totalDuration: 0
        }), stats.durations[timerType] || (stats.durations[timerType] = 0), stats.counts[timerType] || (stats.counts[timerType] = 0), affectedIDs[key][instanceID] = !0, applyUpdate(stats);
    }
    return flushHistory.forEach(function (flush) {
        var measurements = flush.measurements,
            treeSnapshot = flush.treeSnapshot;
        measurements.forEach(function (measurement) {
            var duration = measurement.duration,
                instanceID = measurement.instanceID,
                timerType = measurement.timerType;
            updateAggregatedStats(treeSnapshot, instanceID, timerType, function (stats) {
                stats.totalDuration += duration, stats.durations[timerType] += duration, stats.counts[timerType]++;
            });
        });
    }), Object.keys(aggregatedStats).map(function (key) {
        return _extends$3({}, aggregatedStats[key], {
            instanceCount: Object.keys(affectedIDs[key]).length
        });
    }).sort(function (a, b) {
        return b.totalDuration - a.totalDuration;
    });
}

function getInclusive() {
    var flushHistory = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : getLastMeasurements(),
        aggregatedStats = {},
        affectedIDs = {};
    function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
        var _treeSnapshot$instanc = treeSnapshot[instanceID],
            displayName = _treeSnapshot$instanc.displayName,
            ownerID = _treeSnapshot$instanc.ownerID,
            owner = treeSnapshot[ownerID],
            key = (owner ? owner.displayName + " > " : "") + displayName,
            stats = aggregatedStats[key];
        stats || (affectedIDs[key] = {}, stats = aggregatedStats[key] = {
            key: key,
            instanceCount: 0,
            inclusiveRenderDuration: 0,
            renderCount: 0
        }), affectedIDs[key][instanceID] = !0, applyUpdate(stats);
    }
    var isCompositeByID = {};
    return flushHistory.forEach(function (flush) {
        flush.measurements.forEach(function (measurement) {
            var instanceID = measurement.instanceID;
            "render" === measurement.timerType && (isCompositeByID[instanceID] = !0);
        });
    }), flushHistory.forEach(function (flush) {
        var measurements = flush.measurements,
            treeSnapshot = flush.treeSnapshot;
        measurements.forEach(function (measurement) {
            var duration = measurement.duration,
                instanceID = measurement.instanceID;
            if ("render" === measurement.timerType) {
                updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
                    stats.renderCount++;
                });
                for (var nextParentID = instanceID; nextParentID;) {
                    isCompositeByID[nextParentID] && updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
                        stats.inclusiveRenderDuration += duration;
                    }), nextParentID = treeSnapshot[nextParentID].parentID;
                }
            }
        });
    }), Object.keys(aggregatedStats).map(function (key) {
        return _extends$3({}, aggregatedStats[key], {
            instanceCount: Object.keys(affectedIDs[key]).length
        });
    }).sort(function (a, b) {
        return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
    });
}

function getWasted() {
    var flushHistory = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : getLastMeasurements(),
        aggregatedStats = {},
        affectedIDs = {};
    function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
        var _treeSnapshot$instanc2 = treeSnapshot[instanceID],
            displayName = _treeSnapshot$instanc2.displayName,
            ownerID = _treeSnapshot$instanc2.ownerID,
            owner = treeSnapshot[ownerID],
            key = (owner ? owner.displayName + " > " : "") + displayName,
            stats = aggregatedStats[key];
        stats || (affectedIDs[key] = {}, stats = aggregatedStats[key] = {
            key: key,
            instanceCount: 0,
            inclusiveRenderDuration: 0,
            renderCount: 0
        }), affectedIDs[key][instanceID] = !0, applyUpdate(stats);
    }
    return flushHistory.forEach(function (flush) {
        var measurements = flush.measurements,
            treeSnapshot = flush.treeSnapshot,
            operations = flush.operations,
            isDefinitelyNotWastedByID = {};
        operations.forEach(function (operation) {
            for (var instanceID = operation.instanceID, nextParentID = instanceID; nextParentID;) {
                isDefinitelyNotWastedByID[nextParentID] = !0, nextParentID = treeSnapshot[nextParentID].parentID;
            }
        });
        var renderedCompositeIDs = {};
        measurements.forEach(function (measurement) {
            var instanceID = measurement.instanceID;
            "render" === measurement.timerType && (renderedCompositeIDs[instanceID] = !0);
        }), measurements.forEach(function (measurement) {
            var duration = measurement.duration,
                instanceID = measurement.instanceID;
            if ("render" === measurement.timerType) {
                var updateCount = treeSnapshot[instanceID].updateCount;
                if (!isDefinitelyNotWastedByID[instanceID] && 0 !== updateCount) {
                    updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
                        stats.renderCount++;
                    });
                    for (var nextParentID = instanceID; nextParentID;) {
                        renderedCompositeIDs[nextParentID] && !isDefinitelyNotWastedByID[nextParentID] && updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
                            stats.inclusiveRenderDuration += duration;
                        }), nextParentID = treeSnapshot[nextParentID].parentID;
                    }
                }
            }
        });
    }), Object.keys(aggregatedStats).map(function (key) {
        return _extends$3({}, aggregatedStats[key], {
            instanceCount: Object.keys(affectedIDs[key]).length
        });
    }).sort(function (a, b) {
        return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
    });
}

function getOperations() {
    var flushHistory = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : getLastMeasurements(),
        stats = [];
    return flushHistory.forEach(function (flush, flushIndex) {
        var operations = flush.operations,
            treeSnapshot = flush.treeSnapshot;
        operations.forEach(function (operation) {
            var instanceID = operation.instanceID,
                type = operation.type,
                payload = operation.payload,
                _treeSnapshot$instanc3 = treeSnapshot[instanceID],
                displayName = _treeSnapshot$instanc3.displayName,
                ownerID = _treeSnapshot$instanc3.ownerID,
                owner = treeSnapshot[ownerID],
                key = (owner ? owner.displayName + " > " : "") + displayName;
            stats.push({
                flushIndex: flushIndex,
                instanceID: instanceID,
                key: key,
                type: type,
                ownerID: ownerID,
                payload: payload
            });
        });
    }), stats;
}

function printExclusive(flushHistory) {
    consoleTable(getExclusive(flushHistory).map(function (item) {
        var key = item.key,
            instanceCount = item.instanceCount,
            totalDuration = item.totalDuration,
            renderCount = item.counts.render || 0,
            renderDuration = item.durations.render || 0;
        return {
            Component: key,
            "Total time (ms)": roundFloat(totalDuration),
            "Instance count": instanceCount,
            "Total render time (ms)": roundFloat(renderDuration),
            "Average render time (ms)": renderCount ? roundFloat(renderDuration / renderCount) : void 0,
            "Render count": renderCount,
            "Total lifecycle time (ms)": roundFloat(totalDuration - renderDuration)
        };
    }));
}

function printInclusive(flushHistory) {
    consoleTable(getInclusive(flushHistory).map(function (item) {
        var key = item.key,
            instanceCount = item.instanceCount,
            inclusiveRenderDuration = item.inclusiveRenderDuration,
            renderCount = item.renderCount;
        return {
            "Owner > Component": key,
            "Inclusive render time (ms)": roundFloat(inclusiveRenderDuration),
            "Instance count": instanceCount,
            "Render count": renderCount
        };
    }));
}

function printWasted(flushHistory) {
    consoleTable(getWasted(flushHistory).map(function (item) {
        var key = item.key,
            instanceCount = item.instanceCount,
            inclusiveRenderDuration = item.inclusiveRenderDuration,
            renderCount = item.renderCount;
        return {
            "Owner > Component": key,
            "Inclusive wasted time (ms)": roundFloat(inclusiveRenderDuration),
            "Instance count": instanceCount,
            "Render count": renderCount
        };
    }));
}

function printOperations(flushHistory) {
    consoleTable(getOperations(flushHistory).map(function (stat) {
        return {
            "Owner > Node": stat.key,
            Operation: stat.type,
            Payload: "object" == typeof stat.payload ? JSON.stringify(stat.payload) : stat.payload,
            "Flush index": stat.flushIndex,
            "Owner Component ID": stat.ownerID,
            "DOM Component ID": stat.instanceID
        };
    }));
}

var warnedAboutPrintDOM = !1;

function printDOM(measurements) {
    return lowPriorityWarning_1(warnedAboutPrintDOM, "`ReactPerf.printDOM(...)` is deprecated. Use " + "`ReactPerf.printOperations(...)` instead."), warnedAboutPrintDOM = !0, printOperations(measurements);
}

var warnedAboutGetMeasurementsSummaryMap = !1;

function getMeasurementsSummaryMap(measurements) {
    return lowPriorityWarning_1(warnedAboutGetMeasurementsSummaryMap, "`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use " + "`ReactPerf.getWasted(...)` instead."), warnedAboutGetMeasurementsSummaryMap = !0, getWasted(measurements);
}

function start() {
    ReactDebugTool_1.beginProfiling();
}

function stop() {
    ReactDebugTool_1.endProfiling();
}

function isRunning() {
    return ReactDebugTool_1.isProfiling();
}

var ReactPerfAnalysis = {
    getLastMeasurements: getLastMeasurements,
    getExclusive: getExclusive,
    getInclusive: getInclusive,
    getWasted: getWasted,
    getOperations: getOperations,
    printExclusive: printExclusive,
    printInclusive: printInclusive,
    printWasted: printWasted,
    printOperations: printOperations,
    start: start,
    stop: stop,
    isRunning: isRunning,
    printDOM: printDOM,
    getMeasurementsSummaryMap: getMeasurementsSummaryMap
},
    ReactPerf = ReactPerfAnalysis,
    injectInternals = ReactFiberDevToolsHook.injectInternals;

ReactNativeInjection.inject(), ReactGenericBatching_1.injection.injectFiberBatchedUpdates(ReactNativeFiberRenderer.batchedUpdates);

var roots = new Map();

ReactFiberErrorLogger.injection.injectDialog(ReactNativeFiberErrorDialog_1.showDialog);

var ReactNativeFiber = {
    NativeComponent: ReactNativeComponent_1,
    findNodeHandle: findNumericNodeHandleFiber,
    render: function render(element, containerTag, callback) {
        var root = roots.get(containerTag);
        return root || (root = ReactNativeFiberRenderer.createContainer(containerTag), roots.set(containerTag, root)), ReactNativeFiberRenderer.updateContainer(element, root, null, callback), ReactNativeFiberRenderer.getPublicRootInstance(root);
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
        var root = roots.get(containerTag);
        root && ReactNativeFiberRenderer.updateContainer(null, root, null, function () {
            roots.delete(containerTag);
        });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
        ReactNativeFiber.unmountComponentAtNode(containerTag), UIManager.removeRootView(containerTag);
    },
    unstable_createPortal: function unstable_createPortal(children, containerTag) {
        var key = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
        return ReactPortal.createPortal(children, containerTag, null, key);
    },
    unstable_batchedUpdates: ReactGenericBatching_1.batchedUpdates,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        NativeMethodsMixin: NativeMethodsMixin_1,
        ReactGlobalSharedState: ReactGlobalSharedState_1,
        ReactNativeComponentTree: ReactNativeComponentTree_1,
        ReactNativePropRegistry: ReactNativePropRegistry_1,
        TouchHistoryMath: TouchHistoryMath_1,
        createReactNativeComponentClass: createReactNativeComponentClass,
        takeSnapshot: takeSnapshot_1
    }
};

babelHelpers.extends(ReactNativeFiber.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
    ReactDebugTool: ReactDebugTool_1,
    ReactPerf: ReactPerf
}), "function" == typeof injectInternals && injectInternals({
    findFiberByHostInstance: ReactNativeComponentTree_1.getClosestInstanceFromNode,
    findHostInstanceByFiber: ReactNativeFiberRenderer.findHostInstance,
    getInspectorDataForViewTag: ReactNativeFiberInspector.getInspectorDataForViewTag,
    bundleType: 1,
    version: ReactVersion
});

var ReactNativeFiberEntry = ReactNativeFiber;

module.exports = ReactNativeFiberEntry;
}, 64, null, "ReactNativeFiber-dev");
__d(/* ExceptionsManager */function(global, require, module, exports) {
'use strict';

var exceptionID = 0;
function reportException(e, isFatal) {
  var _require = require(28             ), // 28 = NativeModules
      ExceptionsManager = _require.ExceptionsManager;

  if (ExceptionsManager) {
    var parseErrorStack = require(40               ); // 40 = parseErrorStack
    var stack = parseErrorStack(e);
    var currentExceptionID = ++exceptionID;
    if (isFatal) {
      ExceptionsManager.reportFatalException(e.message, stack, currentExceptionID);
    } else {
      ExceptionsManager.reportSoftException(e.message, stack, currentExceptionID);
    }
    if (__DEV__) {
      var symbolicateStackTrace = require(66                     ); // 66 = symbolicateStackTrace
      symbolicateStackTrace(stack).then(function (prettyStack) {
        if (prettyStack) {
          ExceptionsManager.updateExceptionMessage(e.message, prettyStack, currentExceptionID);
        } else {
          throw new Error('The stack is null');
        }
      }).catch(function (error) {
        return console.warn('Unable to symbolicate stack trace: ' + error.message);
      });
    }
  }
}

function handleException(e, isFatal) {
  if (!e.message) {
    e = new Error(e);
  }
  if (console._errorOriginal) {
    console._errorOriginal(e.message);
  } else {
    console.error(e.message);
  }
  reportException(e, isFatal);
}

function reactConsoleErrorHandler() {
  console._errorOriginal.apply(console, arguments);
  if (!console.reportErrorsAsExceptions) {
    return;
  }

  if (arguments[0] && arguments[0].stack) {
    reportException(arguments[0], false);
  } else {
    var stringifySafe = require(34             ); // 34 = stringifySafe
    var str = Array.prototype.map.call(arguments, stringifySafe).join(', ');
    if (str.slice(0, 10) === '"Warning: ') {
      return;
    }
    var error = new Error('console.error: ' + str);
    error.framesToPop = 1;
    reportException(error, false);
  }
}

function installConsoleErrorReporter() {
  if (console._errorOriginal) {
    return;
  }

  console._errorOriginal = console.error.bind(console);
  console.error = reactConsoleErrorHandler;
  if (console.reportErrorsAsExceptions === undefined) {
    console.reportErrorsAsExceptions = true;
  }
}

module.exports = { handleException: handleException, installConsoleErrorReporter: installConsoleErrorReporter };
}, 65, null, "ExceptionsManager");
__d(/* symbolicateStackTrace */function(global, require, module, exports) {
'use strict';

var regeneratorRuntime = require(67                   ); // 67 = regenerator-runtime

var getDevServer = require(69            ); // 69 = getDevServer

var _require = require(28             ), // 28 = NativeModules
    SourceCode = _require.SourceCode;

var fetch = void 0;

function isSourcedFromDisk(sourcePath) {
  return !/^http/.test(sourcePath) && /[\\/]/.test(sourcePath);
}

function symbolicateStackTrace(stack) {
  var devServer, stackCopy, foundInternalSource, response, json;
  return regeneratorRuntime.async(function symbolicateStackTrace$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!fetch) {
            fetch = global.fetch || require(70     ).fetch; // 70 = fetch
          }

          devServer = getDevServer();

          if (devServer.bundleLoadedFromServer) {
            _context.next = 4;
            break;
          }

          throw new Error('Bundle was not loaded from the packager');

        case 4:
          stackCopy = stack;


          if (SourceCode.scriptURL) {
            foundInternalSource = false;

            stackCopy = stack.map(function (frame) {
              if (!foundInternalSource && isSourcedFromDisk(frame.file)) {
                return babelHelpers.extends({}, frame, { file: SourceCode.scriptURL });
              }

              foundInternalSource = true;
              return frame;
            });
          }

          _context.next = 8;
          return regeneratorRuntime.awrap(fetch(devServer.url + 'symbolicate', {
            method: 'POST',
            body: JSON.stringify({ stack: stackCopy })
          }));

        case 8:
          response = _context.sent;
          _context.next = 11;
          return regeneratorRuntime.awrap(response.json());

        case 11:
          json = _context.sent;
          return _context.abrupt('return', json.stack);

        case 13:
        case 'end':
          return _context.stop();
      }
    }
  }, null, this);
}

module.exports = symbolicateStackTrace;
}, 66, null, "symbolicateStackTrace");
__d(/* regenerator-runtime/runtime-module.js */function(global, require, module, exports) {
var g = typeof global === "object" ? global : typeof window === "object" ? window : typeof self === "object" ? self : this;

var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

var oldRuntime = hadRuntime && g.regeneratorRuntime;

g.regeneratorRuntime = undefined;

module.exports = require(68         ); // 68 = ./runtime

if (hadRuntime) {
  g.regeneratorRuntime = oldRuntime;
} else {
  try {
    delete g.regeneratorRuntime;
  } catch (e) {
    g.regeneratorRuntime = undefined;
  }
}
}, 67, null, "regenerator-runtime/runtime-module.js");
__d(/* regenerator-runtime/runtime.js */function(global, require, module, exports) {

!function (global) {
  "use strict";

  var hasOwn = Object.prototype.hasOwnProperty;
  var undefined;
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      module.exports = runtime;
    }

    return;
  }

  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  var ContinueSentinel = {};

  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  runtime.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  runtime.awrap = function (arg) {
    return new AwaitArgument(arg);
  };

  function AwaitArgument(arg) {
    this.arg = arg;
  }

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value instanceof AwaitArgument) {
          return Promise.resolve(value.arg).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function (unwrapped) {
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof process === "object" && process.domain) {
      invoke = process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    }

    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  runtime.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

    return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        return doneResult();
      }

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          if (method === "return" || method === "throw" && delegate.iterator[method] === undefined) {
            context.delegate = null;

            var returnMethod = delegate.iterator["return"];
            if (returnMethod) {
              var record = tryCatch(returnMethod, delegate.iterator, arg);
              if (record.type === "throw") {
                method = "throw";
                arg = record.arg;
                continue;
              }
            }

            if (method === "return") {
              continue;
            }
          }

          var record = tryCatch(delegate.iterator[method], delegate.iterator, arg);

          if (record.type === "throw") {
            context.delegate = null;

            method = "throw";
            arg = record.arg;
            continue;
          }

          method = "next";
          arg = undefined;

          var info = record.arg;
          if (info.done) {
            context[delegate.resultName] = info.value;
            context.next = delegate.nextLoc;
          } else {
            state = GenStateSuspendedYield;
            return info;
          }

          context.delegate = null;
        }

        if (method === "next") {
          context.sent = context._sent = arg;
        } else if (method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw arg;
          }

          if (context.dispatchException(arg)) {
            method = "next";
            arg = undefined;
          }
        } else if (method === "return") {
          context.abrupt("return", arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          var info = {
            value: record.arg,
            done: context.done
          };

          if (record.arg === ContinueSentinel) {
            if (context.delegate && method === "next") {
              arg = undefined;
            }
          } else {
            return info;
          }
        } else if (record.type === "throw") {
          state = GenStateCompleted;

          method = "throw";
          arg = record.arg;
        }
      }
    };
  }

  defineIteratorMethods(Gp);

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp[toStringTagSymbol] = "Generator";

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function (object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0;

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function stop() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;
        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.next = finallyEntry.finallyLoc;
      } else {
        this.complete(record);
      }

      return ContinueSentinel;
    },

    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = record.arg;
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }
    },

    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      throw new Error("illegal catch attempt");
    },

    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      return ContinueSentinel;
    }
  };
}(typeof global === "object" ? global : typeof window === "object" ? window : typeof self === "object" ? self : this);
}, 68, null, "regenerator-runtime/runtime.js");
__d(/* getDevServer */function(global, require, module, exports) {
'use strict';

var _require = require(28             ), // 28 = NativeModules
    SourceCode = _require.SourceCode;

var _cachedDevServerURL = void 0;
var FALLBACK = 'http://localhost:8081/';

function getDevServer() {
  if (_cachedDevServerURL === undefined) {
    var match = SourceCode.scriptURL && SourceCode.scriptURL.match(/^https?:\/\/.*?\//);
    _cachedDevServerURL = match ? match[0] : null;
  }

  return {
    url: _cachedDevServerURL || FALLBACK,
    bundleLoadedFromServer: _cachedDevServerURL !== null
  };
}

module.exports = getDevServer;
}, 69, null, "getDevServer");
__d(/* fetch */function(global, require, module, exports) {
'use strict';

require(71            ); // 71 = whatwg-fetch

module.exports = { fetch: fetch, Headers: Headers, Request: Request, Response: Response };
}, 70, null, "fetch");
__d(/* whatwg-fetch/fetch.js */function(global, require, module, exports) {(function (self) {
  'use strict';

  if (self.fetch) {
    return;
  }

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && function () {
      try {
        new Blob();
        return true;
      } catch (e) {
        return false;
      }
    }(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  };

  if (support.arrayBuffer) {
    var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

    var isDataView = function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    };

    var isArrayBufferView = ArrayBuffer.isView || function (obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
    };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name');
    }
    return name.toLowerCase();
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value;
  }

  function iteratorFor(items) {
    var iterator = {
      next: function next() {
        var value = items.shift();
        return { done: value === undefined, value: value };
      }
    };

    if (support.iterable) {
      iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = function () {
        return iterator;
      };
    }

    return iterator;
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function (value, name) {
        this.append(name, value);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function (name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function (name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var list = this.map[name];
    if (!list) {
      list = [];
      this.map[name] = list;
    }
    list.push(value);
  };

  Headers.prototype['delete'] = function (name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function (name) {
    var values = this.map[normalizeName(name)];
    return values ? values[0] : null;
  };

  Headers.prototype.getAll = function (name) {
    return this.map[normalizeName(name)] || [];
  };

  Headers.prototype.has = function (name) {
    return this.map.hasOwnProperty(normalizeName(name));
  };

  Headers.prototype.set = function (name, value) {
    this.map[normalizeName(name)] = [normalizeValue(value)];
  };

  Headers.prototype.forEach = function (callback, thisArg) {
    Object.getOwnPropertyNames(this.map).forEach(function (name) {
      this.map[name].forEach(function (value) {
        callback.call(thisArg, value, name, this);
      }, this);
    }, this);
  };

  Headers.prototype.keys = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push(name);
    });
    return iteratorFor(items);
  };

  Headers.prototype.values = function () {
    var items = [];
    this.forEach(function (value) {
      items.push(value);
    });
    return iteratorFor(items);
  };

  Headers.prototype.entries = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items);
  };

  if (support.iterable) {
    Headers.prototype[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'));
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function (resolve, reject) {
      reader.onload = function () {
        resolve(reader.result);
      };
      reader.onerror = function () {
        reject(reader.error);
      };
    });
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise;
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsText(blob);
    return promise;
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('');
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0);
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer;
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function (body) {
      this._bodyInit = body;
      if (!body) {
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);

        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        throw new Error('unsupported BodyInit type');
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function () {
        var rejected = consumed(this);
        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob');
        } else {
          return Promise.resolve(new Blob([this._bodyText]));
        }
      };

      this.arrayBuffer = function () {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
        } else {
          return this.blob().then(readBlobAsArrayBuffer);
        }
      };
    }

    this.text = function () {
      var rejected = consumed(this);
      if (rejected) {
        return rejected;
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob);
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text');
      } else {
        return Promise.resolve(this._bodyText);
      }
    };

    if (support.formData) {
      this.formData = function () {
        return this.text().then(decode);
      };
    }

    this.json = function () {
      return this.text().then(JSON.parse);
    };

    return this;
  }

  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method;
  }

  function Request(input, options) {
    options = options || {};
    var body = options.body;

    if (typeof input === 'string') {
      this.url = input;
    } else {
      if (input.bodyUsed) {
        throw new TypeError('Already read');
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    }

    this.credentials = options.credentials || this.credentials || 'omit';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests');
    }
    this._initBody(body);
  }

  Request.prototype.clone = function () {
    return new Request(this, { body: this._bodyInit });
  };

  function decode(body) {
    var form = new FormData();
    body.trim().split('&').forEach(function (bytes) {
      if (bytes) {
        var split = bytes.split('=');
        var name = split.shift().replace(/\+/g, ' ');
        var value = split.join('=').replace(/\+/g, ' ');
        form.append(decodeURIComponent(name), decodeURIComponent(value));
      }
    });
    return form;
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    rawHeaders.split('\r\n').forEach(function (line) {
      var parts = line.split(':');
      var key = parts.shift().trim();
      if (key) {
        var value = parts.join(':').trim();
        headers.append(key, value);
      }
    });
    return headers;
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = 'status' in options ? options.status : 200;
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = 'statusText' in options ? options.statusText : 'OK';
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function () {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    });
  };

  Response.error = function () {
    var response = new Response(null, { status: 0, statusText: '' });
    response.type = 'error';
    return response;
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function (url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code');
    }

    return new Response(null, { status: status, headers: { location: url } });
  };

  self.Headers = Headers;
  self.Request = Request;
  self.Response = Response;

  self.fetch = function (input, init) {
    return new Promise(function (resolve, reject) {
      var request = new Request(input, init);
      var xhr = new XMLHttpRequest();

      xhr.onload = function () {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        resolve(new Response(body, options));
      };

      xhr.onerror = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.ontimeout = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.open(request.method, request.url, true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob';
      }

      request.headers.forEach(function (value, name) {
        xhr.setRequestHeader(name, value);
      });

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    });
  };
  self.fetch.polyfill = true;
})(typeof self !== 'undefined' ? self : this);
}, 71, null, "whatwg-fetch/fetch.js");
__d(/* InitializeCore */function(global, require, module, exports) {
'use strict';

if (global.GLOBAL === undefined) {
  global.GLOBAL = global;
}

if (global.window === undefined) {
  global.window = global;
}

var defineLazyObjectProperty = require(43                        ); // 43 = defineLazyObjectProperty

function defineProperty(object, name, getValue, eager) {
  var descriptor = Object.getOwnPropertyDescriptor(object, name);
  if (descriptor) {
    var backupName = 'original' + name[0].toUpperCase() + name.substr(1);
    Object.defineProperty(object, backupName, babelHelpers.extends({}, descriptor, {
      value: object[name]
    }));
  }

  var _ref = descriptor || {},
      enumerable = _ref.enumerable,
      writable = _ref.writable,
      configurable = _ref.configurable;

  if (descriptor && !configurable) {
    console.error('Failed to set polyfill. ' + name + ' is not configurable.');
    return;
  }

  if (eager === true) {
    Object.defineProperty(object, name, {
      configurable: true,
      enumerable: enumerable !== false,
      writable: writable !== false,
      value: getValue()
    });
  } else {
    defineLazyObjectProperty(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }
}

global.process = global.process || {};
global.process.env = global.process.env || {};
if (!global.process.env.NODE_ENV) {
  global.process.env.NODE_ENV = __DEV__ ? 'development' : 'production';
}

if (global.__RCTProfileIsProfiling) {
  var Systrace = require(32        ); // 32 = Systrace
  Systrace.setEnabled(true);
}

if (__DEV__ && global.performance === undefined) {
  var _Systrace = require(32        ); // 32 = Systrace
  global.performance = _Systrace.getUserTimingPolyfill();
}

var ExceptionsManager = require(65                 ); // 65 = ExceptionsManager
ExceptionsManager.installConsoleErrorReporter();

if (!global.__fbDisableExceptionsManager) {
  var handleError = function handleError(e, isFatal) {
    try {
      ExceptionsManager.handleException(e, isFatal);
    } catch (ee) {
      console.log('Failed to print error: ', ee.message);

      throw e;
    }
  };

  var ErrorUtils = require(31          ); // 31 = ErrorUtils
  ErrorUtils.setGlobalHandler(handleError);
}

defineProperty(global, 'Map', function () {
  return require(73   ); // 73 = Map
}, true);
defineProperty(global, 'Set', function () {
  return require(78   ); // 78 = Set
}, true);

defineProperty(global, 'Promise', function () {
  return require(79       ); // 79 = Promise
});

defineProperty(global, 'regeneratorRuntime', function () {
  delete global.regeneratorRuntime;
  require(68                           ); // 68 = regenerator-runtime/runtime
  return global.regeneratorRuntime;
});

var defineLazyTimer = function defineLazyTimer(name) {
  defineProperty(global, name, function () {
    return require(35        )[name]; // 35 = JSTimers
  });
};
defineLazyTimer('setTimeout');
defineLazyTimer('setInterval');
defineLazyTimer('setImmediate');
defineLazyTimer('clearTimeout');
defineLazyTimer('clearInterval');
defineLazyTimer('clearImmediate');
defineLazyTimer('requestAnimationFrame');
defineLazyTimer('cancelAnimationFrame');
defineLazyTimer('requestIdleCallback');
defineLazyTimer('cancelIdleCallback');

defineProperty(global, 'XMLHttpRequest', function () {
  return require(87              ); // 87 = XMLHttpRequest
});
defineProperty(global, 'FormData', function () {
  return require(96        ); // 96 = FormData
});

defineProperty(global, 'fetch', function () {
  return require(70     ).fetch; // 70 = fetch
});
defineProperty(global, 'Headers', function () {
  return require(70     ).Headers; // 70 = fetch
});
defineProperty(global, 'Request', function () {
  return require(70     ).Request; // 70 = fetch
});
defineProperty(global, 'Response', function () {
  return require(70     ).Response; // 70 = fetch
});
defineProperty(global, 'WebSocket', function () {
  return require(97         ); // 97 = WebSocket
});

if (!global.alert) {
  global.alert = function (text) {
    require(99     ).alert('Alert', '' + text); // 99 = Alert
  };
}

var navigator = global.navigator;
if (navigator === undefined) {
  global.navigator = navigator = {};
}

defineProperty(navigator, 'product', function () {
  return 'ReactNative';
}, true);
defineProperty(navigator, 'geolocation', function () {
  return require(101          ); // 101 = Geolocation
});

var BatchedBridge = require(29             ); // 29 = BatchedBridge
BatchedBridge.registerLazyCallableModule('Systrace', function () {
  return require(32        ); // 32 = Systrace
});
BatchedBridge.registerLazyCallableModule('JSTimers', function () {
  return require(35        ); // 35 = JSTimers
});
BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
  return require(103          ); // 103 = HeapCapture
});
BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
  return require(104               ); // 104 = SamplingProfiler
});
BatchedBridge.registerLazyCallableModule('RCTLog', function () {
  return require(105     ); // 105 = RCTLog
});
BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
  return require(44                     ); // 44 = RCTDeviceEventEmitter
});
BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
  return require(106                       ); // 106 = RCTNativeAppEventEmitter
});
BatchedBridge.registerLazyCallableModule('PerformanceLogger', function () {
  return require(107                ); // 107 = PerformanceLogger
});

if (__DEV__) {
  if (!global.__RCTProfileIsProfiling) {
    BatchedBridge.registerCallableModule('HMRClient', require(109        )); // 109 = HMRClient

    if (!window.document) {
      require(112            ); // 112 = setupDevtools
    }

    require(116                         ); // 116 = RCTDebugComponentOwnership

    var JSInspector = require(117          ); // 117 = JSInspector
    JSInspector.registerAgent(require(118           )); // 118 = NetworkAgent
  }
}
}, 72, null, "InitializeCore");
__d(/* Map */function(global, require, module, exports) {

'use strict';

var _shouldPolyfillES6Collection = require(74                            ); // 74 = _shouldPolyfillES6Collection
var guid = require(75    ); // 75 = guid
var isNode = require(76               ); // 76 = fbjs/lib/isNode
var toIterator = require(77          ); // 77 = toIterator

module.exports = function (global, undefined) {
  if (!_shouldPolyfillES6Collection('Map')) {
    return global.Map;
  }

  var KIND_KEY = 'key';
  var KIND_VALUE = 'value';
  var KIND_KEY_VALUE = 'key+value';

  var KEY_PREFIX = '$map_';

  var SECRET_SIZE_PROP;
  if (__DEV__) {
    SECRET_SIZE_PROP = '$size' + guid();
  }

  var OLD_IE_HASH_PREFIX = 'IE_HASH_';

  var Map = function () {
    function Map(iterable) {
      babelHelpers.classCallCheck(this, Map);

      if (!isObject(this)) {
        throw new TypeError('Wrong map object type.');
      }

      initMap(this);

      if (iterable != null) {
        var it = toIterator(iterable);
        var next;
        while (!(next = it.next()).done) {
          if (!isObject(next.value)) {
            throw new TypeError('Expected iterable items to be pair objects.');
          }
          this.set(next.value[0], next.value[1]);
        }
      }
    }

    babelHelpers.createClass(Map, [{
      key: 'clear',
      value: function clear() {
        initMap(this);
      }
    }, {
      key: 'has',
      value: function has(key) {
        var index = getIndex(this, key);
        return !!(index != null && this._mapData[index]);
      }
    }, {
      key: 'set',
      value: function set(key, value) {
        var index = getIndex(this, key);

        if (index != null && this._mapData[index]) {
          this._mapData[index][1] = value;
        } else {
          index = this._mapData.push([key, value]) - 1;
          setIndex(this, key, index);
          if (__DEV__) {
            this[SECRET_SIZE_PROP] += 1;
          } else {
            this.size += 1;
          }
        }

        return this;
      }
    }, {
      key: 'get',
      value: function get(key) {
        var index = getIndex(this, key);
        if (index == null) {
          return undefined;
        } else {
          return this._mapData[index][1];
        }
      }
    }, {
      key: 'delete',
      value: function _delete(key) {
        var index = getIndex(this, key);
        if (index != null && this._mapData[index]) {
          setIndex(this, key, undefined);
          this._mapData[index] = undefined;
          if (__DEV__) {
            this[SECRET_SIZE_PROP] -= 1;
          } else {
            this.size -= 1;
          }
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: 'entries',
      value: function entries() {
        return new MapIterator(this, KIND_KEY_VALUE);
      }
    }, {
      key: 'keys',
      value: function keys() {
        return new MapIterator(this, KIND_KEY);
      }
    }, {
      key: 'values',
      value: function values() {
        return new MapIterator(this, KIND_VALUE);
      }
    }, {
      key: 'forEach',
      value: function forEach(callback, thisArg) {
        if (typeof callback !== 'function') {
          throw new TypeError('Callback must be callable.');
        }

        var boundCallback = callback.bind(thisArg || undefined);
        var mapData = this._mapData;

        for (var i = 0; i < mapData.length; i++) {
          var entry = mapData[i];
          if (entry != null) {
            boundCallback(entry[1], entry[0], this);
          }
        }
      }
    }]);
    return Map;
  }();

  Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;

  var MapIterator = function () {
    function MapIterator(map, kind) {
      babelHelpers.classCallCheck(this, MapIterator);

      if (!(isObject(map) && map._mapData)) {
        throw new TypeError('Object is not a map.');
      }

      if ([KIND_KEY, KIND_KEY_VALUE, KIND_VALUE].indexOf(kind) === -1) {
        throw new Error('Invalid iteration kind.');
      }

      this._map = map;
      this._nextIndex = 0;
      this._kind = kind;
    }

    babelHelpers.createClass(MapIterator, [{
      key: 'next',
      value: function next() {
        if (!this instanceof Map) {
          throw new TypeError('Expected to be called on a MapIterator.');
        }

        var map = this._map;
        var index = this._nextIndex;
        var kind = this._kind;

        if (map == null) {
          return createIterResultObject(undefined, true);
        }

        var entries = map._mapData;

        while (index < entries.length) {
          var record = entries[index];

          index += 1;
          this._nextIndex = index;

          if (record) {
            if (kind === KIND_KEY) {
              return createIterResultObject(record[0], false);
            } else if (kind === KIND_VALUE) {
              return createIterResultObject(record[1], false);
            } else if (kind) {
              return createIterResultObject(record, false);
            }
          }
        }

        this._map = undefined;

        return createIterResultObject(undefined, true);
      }
    }]);
    return MapIterator;
  }();

  MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function () {
    return this;
  };

  function getIndex(map, key) {
    if (isObject(key)) {
      var hash = getHash(key);
      return map._objectIndex[hash];
    } else {
      var prefixedKey = KEY_PREFIX + key;
      if (typeof key === 'string') {
        return map._stringIndex[prefixedKey];
      } else {
        return map._otherIndex[prefixedKey];
      }
    }
  }

  function setIndex(map, key, index) {
    var shouldDelete = index == null;

    if (isObject(key)) {
      var hash = getHash(key);
      if (shouldDelete) {
        delete map._objectIndex[hash];
      } else {
        map._objectIndex[hash] = index;
      }
    } else {
      var prefixedKey = KEY_PREFIX + key;
      if (typeof key === 'string') {
        if (shouldDelete) {
          delete map._stringIndex[prefixedKey];
        } else {
          map._stringIndex[prefixedKey] = index;
        }
      } else {
        if (shouldDelete) {
          delete map._otherIndex[prefixedKey];
        } else {
          map._otherIndex[prefixedKey] = index;
        }
      }
    }
  }

  function initMap(map) {
    map._mapData = [];

    map._objectIndex = {};

    map._stringIndex = {};

    map._otherIndex = {};

    if (__DEV__) {
      if (isES5) {
        if (map.hasOwnProperty(SECRET_SIZE_PROP)) {
          map[SECRET_SIZE_PROP] = 0;
        } else {
          Object.defineProperty(map, SECRET_SIZE_PROP, {
            value: 0,
            writable: true
          });
          Object.defineProperty(map, 'size', {
            set: function set(v) {
              console.error('PLEASE FIX ME: You are changing the map size property which ' + 'should not be writable and will break in production.');
              throw new Error('The map size property is not writable.');
            },
            get: function get() {
              return map[SECRET_SIZE_PROP];
            }
          });
        }

        return;
      }
    }

    map.size = 0;
  }

  function isObject(o) {
    return o != null && (typeof o === 'object' || typeof o === 'function');
  }

  function createIterResultObject(value, done) {
    return { value: value, done: done };
  }

  var isES5 = function () {
    try {
      Object.defineProperty({}, 'x', {});
      return true;
    } catch (e) {
      return false;
    }
  }();

  function isExtensible(o) {
    if (!isES5) {
      return true;
    } else {
      return Object.isExtensible(o);
    }
  }

  function getIENodeHash(node) {
    var uniqueID;
    switch (node.nodeType) {
      case 1:
        uniqueID = node.uniqueID;
        break;
      case 9:
        uniqueID = node.documentElement.uniqueID;
        break;
      default:
        return null;
    }

    if (uniqueID) {
      return OLD_IE_HASH_PREFIX + uniqueID;
    } else {
      return null;
    }
  }

  var getHash = function () {
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    var hashProperty = guid();
    var hashCounter = 0;

    return function getHash(o) {
      if (o[hashProperty]) {
        return o[hashProperty];
      } else if (!isES5 && o.propertyIsEnumerable && o.propertyIsEnumerable[hashProperty]) {
        return o.propertyIsEnumerable[hashProperty];
      } else if (!isES5 && isNode(o) && getIENodeHash(o)) {
        return getIENodeHash(o);
      } else if (!isES5 && o[hashProperty]) {
        return o[hashProperty];
      }

      if (isExtensible(o)) {
        hashCounter += 1;
        if (isES5) {
          Object.defineProperty(o, hashProperty, {
            enumerable: false,
            writable: false,
            configurable: false,
            value: hashCounter
          });
        } else if (o.propertyIsEnumerable) {
          o.propertyIsEnumerable = function () {
            return propIsEnumerable.apply(this, arguments);
          };
          o.propertyIsEnumerable[hashProperty] = hashCounter;
        } else if (isNode(o)) {
          o[hashProperty] = hashCounter;
        } else {
          throw new Error('Unable to set a non-enumerable property on object.');
        }
        return hashCounter;
      } else {
        throw new Error('Non-extensible objects are not allowed as keys.');
      }
    };
  }();

  return Map;
}(Function('return this')());
}, 73, null, "Map");
__d(/* _shouldPolyfillES6Collection */function(global, require, module, exports) {
'use strict';

function shouldPolyfillES6Collection(collectionName) {
  var Collection = global[collectionName];
  if (Collection == null) {
    return true;
  }

  if (typeof global.Symbol !== 'function') {
    return true;
  }

  var proto = Collection.prototype;

  return Collection == null || typeof Collection !== 'function' || typeof proto.clear !== 'function' || new Collection().size !== 0 || typeof proto.keys !== 'function' || typeof proto.forEach !== 'function';
}

module.exports = shouldPolyfillES6Collection;
}, 74, null, "_shouldPolyfillES6Collection");
__d(/* guid */function(global, require, module, exports) {

'use strict';

function guid() {
  return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.', '');
}

module.exports = guid;
}, 75, null, "guid");
__d(/* fbjs/lib/isNode.js */function(global, require, module, exports) {'use strict';

function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
}, 76, null, "fbjs/lib/isNode.js");
__d(/* toIterator */function(global, require, module, exports) {
'use strict';

var KIND_KEY = 'key';
var KIND_VALUE = 'value';
var KIND_KEY_VAL = 'key+value';

var ITERATOR_SYMBOL = typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';

var toIterator = function () {
  if (!(Array.prototype[ITERATOR_SYMBOL] && String.prototype[ITERATOR_SYMBOL])) {
    return function () {
      var ArrayIterator = function () {
        function ArrayIterator(array, kind) {
          babelHelpers.classCallCheck(this, ArrayIterator);

          if (!Array.isArray(array)) {
            throw new TypeError('Object is not an Array');
          }
          this._iteratedObject = array;
          this._kind = kind;
          this._nextIndex = 0;
        }

        babelHelpers.createClass(ArrayIterator, [{
          key: 'next',
          value: function next() {
            if (!this instanceof ArrayIterator) {
              throw new TypeError('Object is not an ArrayIterator');
            }

            if (this._iteratedObject == null) {
              return createIterResultObject(undefined, true);
            }

            var array = this._iteratedObject;
            var len = this._iteratedObject.length;
            var index = this._nextIndex;
            var kind = this._kind;

            if (index >= len) {
              this._iteratedObject = undefined;
              return createIterResultObject(undefined, true);
            }

            this._nextIndex = index + 1;

            if (kind === KIND_KEY) {
              return createIterResultObject(index, false);
            } else if (kind === KIND_VALUE) {
              return createIterResultObject(array[index], false);
            } else if (kind === KIND_KEY_VAL) {
              return createIterResultObject([index, array[index]], false);
            }
          }
        }, {
          key: '@@iterator',
          value: function iterator() {
            return this;
          }
        }]);
        return ArrayIterator;
      }();

      var StringIterator = function () {
        function StringIterator(string) {
          babelHelpers.classCallCheck(this, StringIterator);

          if (typeof string !== 'string') {
            throw new TypeError('Object is not a string');
          }
          this._iteratedString = string;
          this._nextIndex = 0;
        }

        babelHelpers.createClass(StringIterator, [{
          key: 'next',
          value: function next() {
            if (!this instanceof StringIterator) {
              throw new TypeError('Object is not a StringIterator');
            }

            if (this._iteratedString == null) {
              return createIterResultObject(undefined, true);
            }

            var index = this._nextIndex;
            var s = this._iteratedString;
            var len = s.length;

            if (index >= len) {
              this._iteratedString = undefined;
              return createIterResultObject(undefined, true);
            }

            var ret;
            var first = s.charCodeAt(index);

            if (first < 0xD800 || first > 0xDBFF || index + 1 === len) {
              ret = s[index];
            } else {
              var second = s.charCodeAt(index + 1);
              if (second < 0xDC00 || second > 0xDFFF) {
                ret = s[index];
              } else {
                ret = s[index] + s[index + 1];
              }
            }

            this._nextIndex = index + ret.length;

            return createIterResultObject(ret, false);
          }
        }, {
          key: '@@iterator',
          value: function iterator() {
            return this;
          }
        }]);
        return StringIterator;
      }();

      function createIterResultObject(value, done) {
        return { value: value, done: done };
      }

      return function (object, kind) {
        if (typeof object === 'string') {
          return new StringIterator(object);
        } else if (Array.isArray(object)) {
          return new ArrayIterator(object, kind || KIND_VALUE);
        } else {
          return object[ITERATOR_SYMBOL]();
        }
      };
    }();
  } else {
    return function (object) {
      return object[ITERATOR_SYMBOL]();
    };
  }
}();

babelHelpers.extends(toIterator, {
  KIND_KEY: KIND_KEY,
  KIND_VALUE: KIND_VALUE,
  KIND_KEY_VAL: KIND_KEY_VAL,
  ITERATOR_SYMBOL: ITERATOR_SYMBOL
});

module.exports = toIterator;
}, 77, null, "toIterator");
__d(/* Set */function(global, require, module, exports) {

'use strict';

var Map = require(73   ); // 73 = Map

var _shouldPolyfillES6Collection = require(74                            ); // 74 = _shouldPolyfillES6Collection
var toIterator = require(77          ); // 77 = toIterator

module.exports = function (global) {
  if (!_shouldPolyfillES6Collection('Set')) {
    return global.Set;
  }

  var Set = function () {
    function Set(iterable) {
      babelHelpers.classCallCheck(this, Set);

      if (this == null || typeof this !== 'object' && typeof this !== 'function') {
        throw new TypeError('Wrong set object type.');
      }

      initSet(this);

      if (iterable != null) {
        var it = toIterator(iterable);
        var next;
        while (!(next = it.next()).done) {
          this.add(next.value);
        }
      }
    }

    babelHelpers.createClass(Set, [{
      key: 'add',
      value: function add(value) {
        this._map.set(value, value);
        this.size = this._map.size;
        return this;
      }
    }, {
      key: 'clear',
      value: function clear() {
        initSet(this);
      }
    }, {
      key: 'delete',
      value: function _delete(value) {
        var ret = this._map.delete(value);
        this.size = this._map.size;
        return ret;
      }
    }, {
      key: 'entries',
      value: function entries() {
        return this._map.entries();
      }
    }, {
      key: 'forEach',
      value: function forEach(callback) {
        var thisArg = arguments[1];
        var it = this._map.keys();
        var next;
        while (!(next = it.next()).done) {
          callback.call(thisArg, next.value, next.value, this);
        }
      }
    }, {
      key: 'has',
      value: function has(value) {
        return this._map.has(value);
      }
    }, {
      key: 'values',
      value: function values() {
        return this._map.values();
      }
    }]);
    return Set;
  }();

  Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;

  Set.prototype.keys = Set.prototype.values;

  function initSet(set) {
    set._map = new Map();
    set.size = set._map.size;
  }

  return Set;
}(Function('return this')());
}, 78, null, "Set");
__d(/* Promise */function(global, require, module, exports) {
'use strict';

var Promise = require(80                       ); // 80 = fbjs/lib/Promise.native

if (__DEV__) {
  require(84                                       ).enable({ // 84 = promise/setimmediate/rejection-tracking
    allRejections: true,
    onUnhandled: function onUnhandled(id) {
      var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var message = void 0;
      var stack = void 0;

      var stringValue = Object.prototype.toString.call(error);
      if (stringValue === '[object Error]') {
        message = Error.prototype.toString.call(error);
        stack = error.stack;
      } else {
        message = require(85             )(error); // 85 = pretty-format
      }

      var warning = 'Possible Unhandled Promise Rejection (id: ' + id + '):\n' + (message + '\n') + (stack == null ? '' : stack);
      console.warn(warning);
    },
    onHandled: function onHandled(id) {
      var warning = 'Promise Rejection Handled (id: ' + id + ')\n' + 'This means you can ignore any previous messages of the form ' + ('"Possible Unhandled Promise Rejection (id: ' + id + '):"');
      console.warn(warning);
    }
  });
}

module.exports = Promise;
}, 79, null, "Promise");
__d(/* fbjs/lib/Promise.native.js */function(global, require, module, exports) {

'use strict';

var Promise = require(81                                   ); // 81 = promise/setimmediate/es6-extensions
require(83                         ); // 83 = promise/setimmediate/done

Promise.prototype['finally'] = function (onSettled) {
  return this.then(onSettled, onSettled);
};

module.exports = Promise;
}, 80, null, "fbjs/lib/Promise.native.js");
__d(/* promise/setimmediate/es6-extensions.js */function(global, require, module, exports) {'use strict';

var Promise = require(82         ); // 82 = ./core.js

module.exports = Promise;

var TRUE = valuePromise(true);
var FALSE = valuePromise(false);
var NULL = valuePromise(null);
var UNDEFINED = valuePromise(undefined);
var ZERO = valuePromise(0);
var EMPTYSTRING = valuePromise('');

function valuePromise(value) {
  var p = new Promise(Promise._61);
  p._65 = 1;
  p._55 = value;
  return p;
}
Promise.resolve = function (value) {
  if (value instanceof Promise) return value;

  if (value === null) return NULL;
  if (value === undefined) return UNDEFINED;
  if (value === true) return TRUE;
  if (value === false) return FALSE;
  if (value === 0) return ZERO;
  if (value === '') return EMPTYSTRING;

  if (typeof value === 'object' || typeof value === 'function') {
    try {
      var then = value.then;
      if (typeof then === 'function') {
        return new Promise(then.bind(value));
      }
    } catch (ex) {
      return new Promise(function (resolve, reject) {
        reject(ex);
      });
    }
  }
  return valuePromise(value);
};

Promise.all = function (arr) {
  var args = Array.prototype.slice.call(arr);

  return new Promise(function (resolve, reject) {
    if (args.length === 0) return resolve([]);
    var remaining = args.length;
    function res(i, val) {
      if (val && (typeof val === 'object' || typeof val === 'function')) {
        if (val instanceof Promise && val.then === Promise.prototype.then) {
          while (val._65 === 3) {
            val = val._55;
          }
          if (val._65 === 1) return res(i, val._55);
          if (val._65 === 2) reject(val._55);
          val.then(function (val) {
            res(i, val);
          }, reject);
          return;
        } else {
          var then = val.then;
          if (typeof then === 'function') {
            var p = new Promise(then.bind(val));
            p.then(function (val) {
              res(i, val);
            }, reject);
            return;
          }
        }
      }
      args[i] = val;
      if (--remaining === 0) {
        resolve(args);
      }
    }
    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
};

Promise.reject = function (value) {
  return new Promise(function (resolve, reject) {
    reject(value);
  });
};

Promise.race = function (values) {
  return new Promise(function (resolve, reject) {
    values.forEach(function (value) {
      Promise.resolve(value).then(resolve, reject);
    });
  });
};

Promise.prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
};
}, 81, null, "promise/setimmediate/es6-extensions.js");
__d(/* promise/setimmediate/core.js */function(global, require, module, exports) {'use strict';

function noop() {}

var LAST_ERROR = null;
var IS_ERROR = {};
function getThen(obj) {
  try {
    return obj.then;
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

function tryCallOne(fn, a) {
  try {
    return fn(a);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}
function tryCallTwo(fn, a, b) {
  try {
    fn(a, b);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

module.exports = Promise;

function Promise(fn) {
  if (typeof this !== 'object') {
    throw new TypeError('Promises must be constructed via new');
  }
  if (typeof fn !== 'function') {
    throw new TypeError('Promise constructor\'s argument is not a function');
  }
  this._40 = 0;
  this._65 = 0;
  this._55 = null;
  this._72 = null;
  if (fn === noop) return;
  doResolve(fn, this);
}
Promise._37 = null;
Promise._87 = null;
Promise._61 = noop;

Promise.prototype.then = function (onFulfilled, onRejected) {
  if (this.constructor !== Promise) {
    return safeThen(this, onFulfilled, onRejected);
  }
  var res = new Promise(noop);
  handle(this, new Handler(onFulfilled, onRejected, res));
  return res;
};

function safeThen(self, onFulfilled, onRejected) {
  return new self.constructor(function (resolve, reject) {
    var res = new Promise(noop);
    res.then(resolve, reject);
    handle(self, new Handler(onFulfilled, onRejected, res));
  });
}
function handle(self, deferred) {
  while (self._65 === 3) {
    self = self._55;
  }
  if (Promise._37) {
    Promise._37(self);
  }
  if (self._65 === 0) {
    if (self._40 === 0) {
      self._40 = 1;
      self._72 = deferred;
      return;
    }
    if (self._40 === 1) {
      self._40 = 2;
      self._72 = [self._72, deferred];
      return;
    }
    self._72.push(deferred);
    return;
  }
  handleResolved(self, deferred);
}

function handleResolved(self, deferred) {
  setImmediate(function () {
    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;
    if (cb === null) {
      if (self._65 === 1) {
        resolve(deferred.promise, self._55);
      } else {
        reject(deferred.promise, self._55);
      }
      return;
    }
    var ret = tryCallOne(cb, self._55);
    if (ret === IS_ERROR) {
      reject(deferred.promise, LAST_ERROR);
    } else {
      resolve(deferred.promise, ret);
    }
  });
}
function resolve(self, newValue) {
  if (newValue === self) {
    return reject(self, new TypeError('A promise cannot be resolved with itself.'));
  }
  if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
    var then = getThen(newValue);
    if (then === IS_ERROR) {
      return reject(self, LAST_ERROR);
    }
    if (then === self.then && newValue instanceof Promise) {
      self._65 = 3;
      self._55 = newValue;
      finale(self);
      return;
    } else if (typeof then === 'function') {
      doResolve(then.bind(newValue), self);
      return;
    }
  }
  self._65 = 1;
  self._55 = newValue;
  finale(self);
}

function reject(self, newValue) {
  self._65 = 2;
  self._55 = newValue;
  if (Promise._87) {
    Promise._87(self, newValue);
  }
  finale(self);
}
function finale(self) {
  if (self._40 === 1) {
    handle(self, self._72);
    self._72 = null;
  }
  if (self._40 === 2) {
    for (var i = 0; i < self._72.length; i++) {
      handle(self, self._72[i]);
    }
    self._72 = null;
  }
}

function Handler(onFulfilled, onRejected, promise) {
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
  this.promise = promise;
}

function doResolve(fn, promise) {
  var done = false;
  var res = tryCallTwo(fn, function (value) {
    if (done) return;
    done = true;
    resolve(promise, value);
  }, function (reason) {
    if (done) return;
    done = true;
    reject(promise, reason);
  });
  if (!done && res === IS_ERROR) {
    done = true;
    reject(promise, LAST_ERROR);
  }
}
}, 82, null, "promise/setimmediate/core.js");
__d(/* promise/setimmediate/done.js */function(global, require, module, exports) {'use strict';

var Promise = require(82         ); // 82 = ./core.js

module.exports = Promise;
Promise.prototype.done = function (onFulfilled, onRejected) {
  var self = arguments.length ? this.then.apply(this, arguments) : this;
  self.then(null, function (err) {
    setTimeout(function () {
      throw err;
    }, 0);
  });
};
}, 83, null, "promise/setimmediate/done.js");
__d(/* promise/setimmediate/rejection-tracking.js */function(global, require, module, exports) {'use strict';

var Promise = require(82      ); // 82 = ./core

var DEFAULT_WHITELIST = [ReferenceError, TypeError, RangeError];

var enabled = false;
exports.disable = disable;
function disable() {
  enabled = false;
  Promise._37 = null;
  Promise._87 = null;
}

exports.enable = enable;
function enable(options) {
  options = options || {};
  if (enabled) disable();
  enabled = true;
  var id = 0;
  var displayId = 0;
  var rejections = {};
  Promise._37 = function (promise) {
    if (promise._65 === 2 && rejections[promise._51]) {
      if (rejections[promise._51].logged) {
        onHandled(promise._51);
      } else {
        clearTimeout(rejections[promise._51].timeout);
      }
      delete rejections[promise._51];
    }
  };
  Promise._87 = function (promise, err) {
    if (promise._40 === 0) {
      promise._51 = id++;
      rejections[promise._51] = {
        displayId: null,
        error: err,
        timeout: setTimeout(onUnhandled.bind(null, promise._51), matchWhitelist(err, DEFAULT_WHITELIST) ? 100 : 2000),
        logged: false
      };
    }
  };
  function onUnhandled(id) {
    if (options.allRejections || matchWhitelist(rejections[id].error, options.whitelist || DEFAULT_WHITELIST)) {
      rejections[id].displayId = displayId++;
      if (options.onUnhandled) {
        rejections[id].logged = true;
        options.onUnhandled(rejections[id].displayId, rejections[id].error);
      } else {
        rejections[id].logged = true;
        logError(rejections[id].displayId, rejections[id].error);
      }
    }
  }
  function onHandled(id) {
    if (rejections[id].logged) {
      if (options.onHandled) {
        options.onHandled(rejections[id].displayId, rejections[id].error);
      } else if (!rejections[id].onUnhandled) {
        console.warn('Promise Rejection Handled (id: ' + rejections[id].displayId + '):');
        console.warn('  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' + rejections[id].displayId + '.');
      }
    }
  }
}

function logError(id, error) {
  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');
  var errStr = (error && (error.stack || error)) + '';
  errStr.split('\n').forEach(function (line) {
    console.warn('  ' + line);
  });
}

function matchWhitelist(error, list) {
  return list.some(function (cls) {
    return error instanceof cls;
  });
}
}, 84, null, "promise/setimmediate/rejection-tracking.js");
__d(/* pretty-format/index.js */function(global, require, module, exports) {'use strict';

var printString = require(86             ); // 86 = ./printString

var toString = Object.prototype.toString;
var toISOString = Date.prototype.toISOString;
var errorToString = Error.prototype.toString;
var regExpToString = RegExp.prototype.toString;
var symbolToString = (typeof Symbol === 'function' ? Symbol.prototype : '@@prototype').toString;

var SYMBOL_REGEXP = /^Symbol\((.*)\)(.*)$/;
var NEWLINE_REGEXP = /\n/ig;

var getSymbols = Object.getOwnPropertySymbols || function (obj) {
  return [];
};

function isToStringedArrayType(toStringed) {
  return toStringed === '[object Array]' || toStringed === '[object ArrayBuffer]' || toStringed === '[object DataView]' || toStringed === '[object Float32Array]' || toStringed === '[object Float64Array]' || toStringed === '[object Int8Array]' || toStringed === '[object Int16Array]' || toStringed === '[object Int32Array]' || toStringed === '[object Uint8Array]' || toStringed === '[object Uint8ClampedArray]' || toStringed === '[object Uint16Array]' || toStringed === '[object Uint32Array]';
}

function printNumber(val) {
  if (val != +val) return 'NaN';
  var isNegativeZero = val === 0 && 1 / val < 0;
  return isNegativeZero ? '-0' : '' + val;
}

function printFunction(val, printFunctionName) {
  if (!printFunctionName) {
    return '[Function]';
  } else if (val.name === '') {
    return '[Function anonymous]';
  } else {
    return '[Function ' + val.name + ']';
  }
}

function printSymbol(val) {
  return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');
}

function printError(val) {
  return '[' + errorToString.call(val) + ']';
}

function printBasicValue(val, printFunctionName, escapeRegex) {
  if (val === true || val === false) return '' + val;
  if (val === undefined) return 'undefined';
  if (val === null) return 'null';

  var typeOf = typeof val;

  if (typeOf === 'number') return printNumber(val);
  if (typeOf === 'string') return '"' + printString(val) + '"';
  if (typeOf === 'function') return printFunction(val, printFunctionName);
  if (typeOf === 'symbol') return printSymbol(val);

  var toStringed = toString.call(val);

  if (toStringed === '[object WeakMap]') return 'WeakMap {}';
  if (toStringed === '[object WeakSet]') return 'WeakSet {}';
  if (toStringed === '[object Function]' || toStringed === '[object GeneratorFunction]') return printFunction(val, printFunctionName);
  if (toStringed === '[object Symbol]') return printSymbol(val);
  if (toStringed === '[object Date]') return toISOString.call(val);
  if (toStringed === '[object Error]') return printError(val);
  if (toStringed === '[object RegExp]') {
    if (escapeRegex) {
      return printString(regExpToString.call(val));
    }
    return regExpToString.call(val);
  };
  if (toStringed === '[object Arguments]' && val.length === 0) return 'Arguments []';
  if (isToStringedArrayType(toStringed) && val.length === 0) return val.constructor.name + ' []';

  if (val instanceof Error) return printError(val);

  return false;
}

function printList(list, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var body = '';

  if (list.length) {
    body += edgeSpacing;

    var innerIndent = prevIndent + indent;

    for (var i = 0; i < list.length; i++) {
      body += innerIndent + print(list[i], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      if (i < list.length - 1) {
        body += ',' + spacing;
      }
    }

    body += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return '[' + body + ']';
}

function printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  return (min ? '' : 'Arguments ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

function printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  return (min ? '' : val.constructor.name + ' ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

function printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var result = 'Map {';
  var iterator = val.entries();
  var current = iterator.next();

  if (!current.done) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    while (!current.done) {
      var key = print(current.value[0], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
      var value = print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      result += innerIndent + key + ' => ' + value;

      current = iterator.next();

      if (!current.done) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var constructor = min ? '' : val.constructor ? val.constructor.name + ' ' : 'Object ';
  var result = constructor + '{';
  var keys = Object.keys(val).sort();
  var symbols = getSymbols(val);

  if (symbols.length) {
    keys = keys.filter(function (key) {
      return !(typeof key === 'symbol' || toString.call(key) === '[object Symbol]');
    }).concat(symbols);
  }

  if (keys.length) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var name = print(key, indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
      var value = print(val[key], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      result += innerIndent + name + ': ' + value;

      if (i < keys.length - 1) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var result = 'Set {';
  var iterator = val.entries();
  var current = iterator.next();

  if (!current.done) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    while (!current.done) {
      result += innerIndent + print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      current = iterator.next();

      if (!current.done) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  refs = refs.slice();
  if (refs.indexOf(val) > -1) {
    return '[Circular]';
  } else {
    refs.push(val);
  }

  currentDepth++;

  var hitMaxDepth = currentDepth > maxDepth;

  if (callToJSON && !hitMaxDepth && val.toJSON && typeof val.toJSON === 'function') {
    return print(val.toJSON(), indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }

  var toStringed = toString.call(val);
  if (toStringed === '[object Arguments]') {
    return hitMaxDepth ? '[Arguments]' : printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (isToStringedArrayType(toStringed)) {
    return hitMaxDepth ? '[Array]' : printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (toStringed === '[object Map]') {
    return hitMaxDepth ? '[Map]' : printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (toStringed === '[object Set]') {
    return hitMaxDepth ? '[Set]' : printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (typeof val === 'object') {
    return hitMaxDepth ? '[Object]' : printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }
}

function printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var match = false;
  var plugin = void 0;

  for (var p = 0; p < plugins.length; p++) {
    plugin = plugins[p];

    if (plugin.test(val)) {
      match = true;
      break;
    }
  }

  if (!match) {
    return false;
  }

  function boundPrint(val) {
    return print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }

  function boundIndent(str) {
    var indentation = prevIndent + indent;
    return indentation + str.replace(NEWLINE_REGEXP, '\n' + indentation);
  }

  return plugin.print(val, boundPrint, boundIndent, {
    edgeSpacing: edgeSpacing,
    spacing: spacing
  });
}

function print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var basic = printBasicValue(val, printFunctionName, escapeRegex);
  if (basic) return basic;

  var plugin = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  if (plugin) return plugin;

  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

var DEFAULTS = {
  callToJSON: true,
  indent: 2,
  maxDepth: Infinity,
  min: false,
  plugins: [],
  printFunctionName: true,
  escapeRegex: false
};

function validateOptions(opts) {
  Object.keys(opts).forEach(function (key) {
    if (!DEFAULTS.hasOwnProperty(key)) {
      throw new Error('prettyFormat: Invalid option: ' + key);
    }
  });

  if (opts.min && opts.indent !== undefined && opts.indent !== 0) {
    throw new Error('prettyFormat: Cannot run with min option and indent');
  }
}

function normalizeOptions(opts) {
  var result = {};

  Object.keys(DEFAULTS).forEach(function (key) {
    return result[key] = opts.hasOwnProperty(key) ? opts[key] : DEFAULTS[key];
  });

  if (result.min) {
    result.indent = 0;
  }

  return result;
}

function createIndent(indent) {
  return new Array(indent + 1).join(' ');
}

function prettyFormat(val, opts) {
  if (!opts) {
    opts = DEFAULTS;
  } else {
    validateOptions(opts);
    opts = normalizeOptions(opts);
  }

  var indent = void 0;
  var refs = void 0;
  var prevIndent = '';
  var currentDepth = 0;
  var spacing = opts.min ? ' ' : '\n';
  var edgeSpacing = opts.min ? '' : '\n';

  if (opts && opts.plugins.length) {
    indent = createIndent(opts.indent);
    refs = [];
    var pluginsResult = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min, opts.callToJSON, opts.printFunctionName, opts.escapeRegex);
    if (pluginsResult) return pluginsResult;
  }

  var basicResult = printBasicValue(val, opts.printFunctionName, opts.escapeRegex);
  if (basicResult) return basicResult;

  if (!indent) indent = createIndent(opts.indent);
  if (!refs) refs = [];
  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min, opts.callToJSON, opts.printFunctionName, opts.escapeRegex);
}

module.exports = prettyFormat;
}, 85, null, "pretty-format/index.js");
__d(/* pretty-format/printString.js */function(global, require, module, exports) {'use strict';

var ESCAPED_CHARACTERS = /(\\|\"|\')/g;

module.exports = function printString(val) {
  return val.replace(ESCAPED_CHARACTERS, '\\$1');
};
}, 86, null, "pretty-format/printString.js");
__d(/* XMLHttpRequest */function(global, require, module, exports) {
'use strict';

var EventTarget = require(88                 ); // 88 = event-target-shim
var RCTNetworking = require(92             ); // 92 = RCTNetworking

var base64 = require(95         ); // 95 = base64-js
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var warning = require(15                ); // 15 = fbjs/lib/warning

var UNSENT = 0;
var OPENED = 1;
var HEADERS_RECEIVED = 2;
var LOADING = 3;
var DONE = 4;

var SUPPORTED_RESPONSE_TYPES = {
  arraybuffer: typeof global.ArrayBuffer === 'function',
  blob: typeof global.Blob === 'function',
  document: false,
  json: true,
  text: true,
  '': true
};

var REQUEST_EVENTS = ['abort', 'error', 'load', 'loadstart', 'progress', 'timeout', 'loadend'];

var XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');

var XMLHttpRequestEventTarget = function (_EventTarget) {
  babelHelpers.inherits(XMLHttpRequestEventTarget, _EventTarget);

  function XMLHttpRequestEventTarget() {
    babelHelpers.classCallCheck(this, XMLHttpRequestEventTarget);
    return babelHelpers.possibleConstructorReturn(this, (XMLHttpRequestEventTarget.__proto__ || Object.getPrototypeOf(XMLHttpRequestEventTarget)).apply(this, arguments));
  }

  return XMLHttpRequestEventTarget;
}(EventTarget.apply(undefined, REQUEST_EVENTS));

var XMLHttpRequest = function (_EventTarget2) {
  babelHelpers.inherits(XMLHttpRequest, _EventTarget2);
  babelHelpers.createClass(XMLHttpRequest, null, [{
    key: 'setInterceptor',
    value: function setInterceptor(interceptor) {
      XMLHttpRequest._interceptor = interceptor;
    }
  }]);

  function XMLHttpRequest() {
    babelHelpers.classCallCheck(this, XMLHttpRequest);

    var _this2 = babelHelpers.possibleConstructorReturn(this, (XMLHttpRequest.__proto__ || Object.getPrototypeOf(XMLHttpRequest)).call(this));

    _this2.UNSENT = UNSENT;
    _this2.OPENED = OPENED;
    _this2.HEADERS_RECEIVED = HEADERS_RECEIVED;
    _this2.LOADING = LOADING;
    _this2.DONE = DONE;
    _this2.readyState = UNSENT;
    _this2.status = 0;
    _this2.timeout = 0;
    _this2.withCredentials = true;
    _this2.upload = new XMLHttpRequestEventTarget();
    _this2._aborted = false;
    _this2._hasError = false;
    _this2._method = null;
    _this2._response = '';
    _this2._url = null;
    _this2._timedOut = false;
    _this2._trackingName = 'unknown';
    _this2._incrementalEvents = false;

    _this2._reset();
    return _this2;
  }

  babelHelpers.createClass(XMLHttpRequest, [{
    key: '_reset',
    value: function _reset() {
      this.readyState = this.UNSENT;
      this.responseHeaders = undefined;
      this.status = 0;
      delete this.responseURL;

      this._requestId = null;

      this._cachedResponse = undefined;
      this._hasError = false;
      this._headers = {};
      this._response = '';
      this._responseType = '';
      this._sent = false;
      this._lowerCaseResponseHeaders = {};

      this._clearSubscriptions();
      this._timedOut = false;
    }
  }, {
    key: '__didCreateRequest',
    value: function __didCreateRequest(requestId) {
      this._requestId = requestId;

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.requestSent(requestId, this._url || '', this._method || 'GET', this._headers);
    }
  }, {
    key: '__didUploadProgress',
    value: function __didUploadProgress(requestId, progress, total) {
      if (requestId === this._requestId) {
        this.upload.dispatchEvent({
          type: 'progress',
          lengthComputable: true,
          loaded: progress,
          total: total
        });
      }
    }
  }, {
    key: '__didReceiveResponse',
    value: function __didReceiveResponse(requestId, status, responseHeaders, responseURL) {
      if (requestId === this._requestId) {
        this.status = status;
        this.setResponseHeaders(responseHeaders);
        this.setReadyState(this.HEADERS_RECEIVED);
        if (responseURL || responseURL === '') {
          this.responseURL = responseURL;
        } else {
          delete this.responseURL;
        }

        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.responseReceived(requestId, responseURL || this._url || '', status, responseHeaders || {});
      }
    }
  }, {
    key: '__didReceiveData',
    value: function __didReceiveData(requestId, response) {
      if (requestId !== this._requestId) {
        return;
      }
      this._response = response;
      this._cachedResponse = undefined;
      this.setReadyState(this.LOADING);

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, response);
    }
  }, {
    key: '__didReceiveIncrementalData',
    value: function __didReceiveIncrementalData(requestId, responseText, progress, total) {
      if (requestId !== this._requestId) {
        return;
      }
      if (!this._response) {
        this._response = responseText;
      } else {
        this._response += responseText;
      }

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, responseText);

      this.setReadyState(this.LOADING);
      this.__didReceiveDataProgress(requestId, progress, total);
    }
  }, {
    key: '__didReceiveDataProgress',
    value: function __didReceiveDataProgress(requestId, loaded, total) {
      if (requestId !== this._requestId) {
        return;
      }
      this.dispatchEvent({
        type: 'progress',
        lengthComputable: total >= 0,
        loaded: loaded,
        total: total
      });
    }
  }, {
    key: '__didCompleteResponse',
    value: function __didCompleteResponse(requestId, error, timeOutError) {
      if (requestId === this._requestId) {
        if (error) {
          if (this._responseType === '' || this._responseType === 'text') {
            this._response = error;
          }
          this._hasError = true;
          if (timeOutError) {
            this._timedOut = true;
          }
        }
        this._clearSubscriptions();
        this._requestId = null;
        this.setReadyState(this.DONE);

        if (error) {
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFailed(requestId, error);
        } else {
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFinished(requestId, this._response.length);
        }
      }
    }
  }, {
    key: '_clearSubscriptions',
    value: function _clearSubscriptions() {
      (this._subscriptions || []).forEach(function (sub) {
        sub.remove();
      });
      this._subscriptions = [];
    }
  }, {
    key: 'getAllResponseHeaders',
    value: function getAllResponseHeaders() {
      if (!this.responseHeaders) {
        return null;
      }
      var headers = this.responseHeaders || {};
      return Object.keys(headers).map(function (headerName) {
        return headerName + ': ' + headers[headerName];
      }).join('\r\n');
    }
  }, {
    key: 'getResponseHeader',
    value: function getResponseHeader(header) {
      var value = this._lowerCaseResponseHeaders[header.toLowerCase()];
      return value !== undefined ? value : null;
    }
  }, {
    key: 'setRequestHeader',
    value: function setRequestHeader(header, value) {
      if (this.readyState !== this.OPENED) {
        throw new Error('Request has not been opened');
      }
      this._headers[header.toLowerCase()] = String(value);
    }
  }, {
    key: 'setTrackingName',
    value: function setTrackingName(trackingName) {
      this._trackingName = trackingName;
      return this;
    }
  }, {
    key: 'open',
    value: function open(method, url, async) {
      if (this.readyState !== this.UNSENT) {
        throw new Error('Cannot open, already sending');
      }
      if (async !== undefined && !async) {
        throw new Error('Synchronous http requests are not supported');
      }
      if (!url) {
        throw new Error('Cannot load an empty url');
      }
      this._method = method.toUpperCase();
      this._url = url;
      this._aborted = false;
      this.setReadyState(this.OPENED);
    }
  }, {
    key: 'send',
    value: function send(data) {
      var _this3 = this;

      if (this.readyState !== this.OPENED) {
        throw new Error('Request has not been opened');
      }
      if (this._sent) {
        throw new Error('Request has already been sent');
      }
      this._sent = true;
      var incrementalEvents = this._incrementalEvents || !!this.onreadystatechange || !!this.onprogress;

      this._subscriptions.push(RCTNetworking.addListener('didSendNetworkData', function (args) {
        return _this3.__didUploadProgress.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkResponse', function (args) {
        return _this3.__didReceiveResponse.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkData', function (args) {
        return _this3.__didReceiveData.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkIncrementalData', function (args) {
        return _this3.__didReceiveIncrementalData.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkDataProgress', function (args) {
        return _this3.__didReceiveDataProgress.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didCompleteNetworkResponse', function (args) {
        return _this3.__didCompleteResponse.apply(_this3, babelHelpers.toConsumableArray(args));
      }));

      var nativeResponseType = 'text';
      if (this._responseType === 'arraybuffer' || this._responseType === 'blob') {
        nativeResponseType = 'base64';
      }

      invariant(this._method, 'Request method needs to be defined.');
      invariant(this._url, 'Request URL needs to be defined.');
      RCTNetworking.sendRequest(this._method, this._trackingName, this._url, this._headers, data, nativeResponseType, incrementalEvents, this.timeout, this.__didCreateRequest.bind(this), this.withCredentials);
    }
  }, {
    key: 'abort',
    value: function abort() {
      this._aborted = true;
      if (this._requestId) {
        RCTNetworking.abortRequest(this._requestId);
      }

      if (!(this.readyState === this.UNSENT || this.readyState === this.OPENED && !this._sent || this.readyState === this.DONE)) {
        this._reset();
        this.setReadyState(this.DONE);
      }

      this._reset();
    }
  }, {
    key: 'setResponseHeaders',
    value: function setResponseHeaders(responseHeaders) {
      this.responseHeaders = responseHeaders || null;
      var headers = responseHeaders || {};
      this._lowerCaseResponseHeaders = Object.keys(headers).reduce(function (lcaseHeaders, headerName) {
        lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
        return lcaseHeaders;
      }, {});
    }
  }, {
    key: 'setReadyState',
    value: function setReadyState(newState) {
      this.readyState = newState;
      this.dispatchEvent({ type: 'readystatechange' });
      if (newState === this.DONE) {
        if (this._aborted) {
          this.dispatchEvent({ type: 'abort' });
        } else if (this._hasError) {
          if (this._timedOut) {
            this.dispatchEvent({ type: 'timeout' });
          } else {
            this.dispatchEvent({ type: 'error' });
          }
        } else {
          this.dispatchEvent({ type: 'load' });
        }
        this.dispatchEvent({ type: 'loadend' });
      }
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, listener) {
      if (type === 'readystatechange' || type === 'progress') {
        this._incrementalEvents = true;
      }
      babelHelpers.get(XMLHttpRequest.prototype.__proto__ || Object.getPrototypeOf(XMLHttpRequest.prototype), 'addEventListener', this).call(this, type, listener);
    }
  }, {
    key: 'responseType',
    get: function get() {
      return this._responseType;
    },
    set: function set(responseType) {
      if (this._sent) {
        throw new Error('Failed to set the \'responseType\' property on \'XMLHttpRequest\': The ' + 'response type cannot be set after the request has been sent.');
      }
      if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {
        warning(false, 'The provided value \'' + responseType + '\' is not a valid \'responseType\'.');
        return;
      }

      invariant(SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document', 'The provided value \'' + responseType + '\' is unsupported in this environment.');
      this._responseType = responseType;
    }
  }, {
    key: 'responseText',
    get: function get() {
      if (this._responseType !== '' && this._responseType !== 'text') {
        throw new Error("The 'responseText' property is only available if 'responseType' " + ('is set to \'\' or \'text\', but it is \'' + this._responseType + '\'.'));
      }
      if (this.readyState < LOADING) {
        return '';
      }
      return this._response;
    }
  }, {
    key: 'response',
    get: function get() {
      var responseType = this.responseType;

      if (responseType === '' || responseType === 'text') {
        return this.readyState < LOADING || this._hasError ? '' : this._response;
      }

      if (this.readyState !== DONE) {
        return null;
      }

      if (this._cachedResponse !== undefined) {
        return this._cachedResponse;
      }

      switch (responseType) {
        case 'document':
          this._cachedResponse = null;
          break;

        case 'arraybuffer':
          this._cachedResponse = base64.toByteArray(this._response).buffer;
          break;

        case 'blob':
          this._cachedResponse = new global.Blob([base64.toByteArray(this._response).buffer], { type: this.getResponseHeader('content-type') || '' });
          break;

        case 'json':
          try {
            this._cachedResponse = JSON.parse(this._response);
          } catch (_) {
            this._cachedResponse = null;
          }
          break;

        default:
          this._cachedResponse = null;
      }

      return this._cachedResponse;
    }
  }]);
  return XMLHttpRequest;
}(EventTarget.apply(undefined, babelHelpers.toConsumableArray(XHR_EVENTS)));

XMLHttpRequest.UNSENT = UNSENT;
XMLHttpRequest.OPENED = OPENED;
XMLHttpRequest.HEADERS_RECEIVED = HEADERS_RECEIVED;
XMLHttpRequest.LOADING = LOADING;
XMLHttpRequest.DONE = DONE;
XMLHttpRequest._interceptor = null;


module.exports = XMLHttpRequest;
}, 87, null, "XMLHttpRequest");
__d(/* event-target-shim/lib/event-target.js */function(global, require, module, exports) {

"use strict";

var Commons = require(89         ); // 89 = ./commons
var CustomEventTarget = require(90                     ); // 90 = ./custom-event-target
var EventWrapper = require(91               ); // 91 = ./event-wrapper
var LISTENERS = Commons.LISTENERS;
var CAPTURE = Commons.CAPTURE;
var BUBBLE = Commons.BUBBLE;
var ATTRIBUTE = Commons.ATTRIBUTE;
var newNode = Commons.newNode;
var defineCustomEventTarget = CustomEventTarget.defineCustomEventTarget;
var createEventWrapper = EventWrapper.createEventWrapper;
var STOP_IMMEDIATE_PROPAGATION_FLAG = EventWrapper.STOP_IMMEDIATE_PROPAGATION_FLAG;

var HAS_EVENTTARGET_INTERFACE = typeof window !== "undefined" && typeof window.EventTarget !== "undefined";

var EventTarget = module.exports = function EventTarget() {
    if (this instanceof EventTarget) {
        Object.defineProperty(this, LISTENERS, { value: Object.create(null) });
    } else if (arguments.length === 1 && Array.isArray(arguments[0])) {
        return defineCustomEventTarget(EventTarget, arguments[0]);
    } else if (arguments.length > 0) {
        var types = Array(arguments.length);
        for (var i = 0; i < arguments.length; ++i) {
            types[i] = arguments[i];
        }

        return defineCustomEventTarget(EventTarget, types);
    } else {
        throw new TypeError("Cannot call a class as a function");
    }
};

EventTarget.prototype = Object.create((HAS_EVENTTARGET_INTERFACE ? window.EventTarget : Object).prototype, {
    constructor: {
        value: EventTarget,
        writable: true,
        configurable: true
    },

    addEventListener: {
        value: function addEventListener(type, listener, capture) {
            if (listener == null) {
                return false;
            }
            if (typeof listener !== "function" && typeof listener !== "object") {
                throw new TypeError("\"listener\" is not an object.");
            }

            var kind = capture ? CAPTURE : BUBBLE;
            var node = this[LISTENERS][type];
            if (node == null) {
                this[LISTENERS][type] = newNode(listener, kind);
                return true;
            }

            var prev = null;
            while (node != null) {
                if (node.listener === listener && node.kind === kind) {
                    return false;
                }
                prev = node;
                node = node.next;
            }

            prev.next = newNode(listener, kind);
            return true;
        },
        configurable: true,
        writable: true
    },

    removeEventListener: {
        value: function removeEventListener(type, listener, capture) {
            if (listener == null) {
                return false;
            }

            var kind = capture ? CAPTURE : BUBBLE;
            var prev = null;
            var node = this[LISTENERS][type];
            while (node != null) {
                if (node.listener === listener && node.kind === kind) {
                    if (prev == null) {
                        this[LISTENERS][type] = node.next;
                    } else {
                        prev.next = node.next;
                    }
                    return true;
                }

                prev = node;
                node = node.next;
            }

            return false;
        },
        configurable: true,
        writable: true
    },

    dispatchEvent: {
        value: function dispatchEvent(event) {
            var node = this[LISTENERS][event.type];
            if (node == null) {
                return true;
            }

            var wrapped = createEventWrapper(event, this);

            while (node != null) {
                if (typeof node.listener === "function") {
                    node.listener.call(this, wrapped);
                } else if (node.kind !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
                    node.listener.handleEvent(wrapped);
                }

                if (wrapped[STOP_IMMEDIATE_PROPAGATION_FLAG]) {
                    break;
                }
                node = node.next;
            }

            return !wrapped.defaultPrevented;
        },
        configurable: true,
        writable: true
    }
});
}, 88, null, "event-target-shim/lib/event-target.js");
__d(/* event-target-shim/lib/commons.js */function(global, require, module, exports) {

"use strict";

var createUniqueKey = exports.createUniqueKey = typeof Symbol !== "undefined" ? Symbol : function createUniqueKey(name) {
  return "[[" + name + "_" + Math.random().toFixed(8).slice(2) + "]]";
};

exports.LISTENERS = createUniqueKey("listeners");

exports.CAPTURE = 1;

exports.BUBBLE = 2;

exports.ATTRIBUTE = 3;

exports.newNode = function newNode(listener, kind) {
  return { listener: listener, kind: kind, next: null };
};
}, 89, null, "event-target-shim/lib/commons.js");
__d(/* event-target-shim/lib/custom-event-target.js */function(global, require, module, exports) {

"use strict";

var Commons = require(89         ); // 89 = ./commons
var LISTENERS = Commons.LISTENERS;
var ATTRIBUTE = Commons.ATTRIBUTE;
var newNode = Commons.newNode;

function getAttributeListener(eventTarget, type) {
    var node = eventTarget[LISTENERS][type];
    while (node != null) {
        if (node.kind === ATTRIBUTE) {
            return node.listener;
        }
        node = node.next;
    }
    return null;
}

function setAttributeListener(eventTarget, type, listener) {
    if (typeof listener !== "function" && typeof listener !== "object") {
        listener = null;
    }

    var prev = null;
    var node = eventTarget[LISTENERS][type];
    while (node != null) {
        if (node.kind === ATTRIBUTE) {
            if (prev == null) {
                eventTarget[LISTENERS][type] = node.next;
            } else {
                prev.next = node.next;
            }
        } else {
            prev = node;
        }

        node = node.next;
    }

    if (listener != null) {
        if (prev == null) {
            eventTarget[LISTENERS][type] = newNode(listener, ATTRIBUTE);
        } else {
            prev.next = newNode(listener, ATTRIBUTE);
        }
    }
}

exports.defineCustomEventTarget = function (EventTargetBase, types) {
    function EventTarget() {
        EventTargetBase.call(this);
    }

    var descripter = {
        constructor: {
            value: EventTarget,
            configurable: true,
            writable: true
        }
    };

    types.forEach(function (type) {
        descripter["on" + type] = {
            get: function get() {
                return getAttributeListener(this, type);
            },
            set: function set(listener) {
                setAttributeListener(this, type, listener);
            },
            configurable: true,
            enumerable: true
        };
    });

    EventTarget.prototype = Object.create(EventTargetBase.prototype, descripter);

    return EventTarget;
};
}, 90, null, "event-target-shim/lib/custom-event-target.js");
__d(/* event-target-shim/lib/event-wrapper.js */function(global, require, module, exports) {

"use strict";

var createUniqueKey = require(89         ).createUniqueKey; // 89 = ./commons

var STOP_IMMEDIATE_PROPAGATION_FLAG = createUniqueKey("stop_immediate_propagation_flag");

var CANCELED_FLAG = createUniqueKey("canceled_flag");

var ORIGINAL_EVENT = createUniqueKey("original_event");

var wrapperPrototypeDefinition = Object.freeze({
    stopPropagation: Object.freeze({
        value: function stopPropagation() {
            var e = this[ORIGINAL_EVENT];
            if (typeof e.stopPropagation === "function") {
                e.stopPropagation();
            }
        },
        writable: true,
        configurable: true
    }),

    stopImmediatePropagation: Object.freeze({
        value: function stopImmediatePropagation() {
            this[STOP_IMMEDIATE_PROPAGATION_FLAG] = true;

            var e = this[ORIGINAL_EVENT];
            if (typeof e.stopImmediatePropagation === "function") {
                e.stopImmediatePropagation();
            }
        },
        writable: true,
        configurable: true
    }),

    preventDefault: Object.freeze({
        value: function preventDefault() {
            if (this.cancelable === true) {
                this[CANCELED_FLAG] = true;
            }

            var e = this[ORIGINAL_EVENT];
            if (typeof e.preventDefault === "function") {
                e.preventDefault();
            }
        },
        writable: true,
        configurable: true
    }),

    defaultPrevented: Object.freeze({
        get: function defaultPrevented() {
            return this[CANCELED_FLAG];
        },
        enumerable: true,
        configurable: true
    })
});

exports.STOP_IMMEDIATE_PROPAGATION_FLAG = STOP_IMMEDIATE_PROPAGATION_FLAG;

exports.createEventWrapper = function createEventWrapper(event, eventTarget) {
    var timeStamp = typeof event.timeStamp === "number" ? event.timeStamp : Date.now();
    var propertyDefinition = {
        type: { value: event.type, enumerable: true },
        target: { value: eventTarget, enumerable: true },
        currentTarget: { value: eventTarget, enumerable: true },
        eventPhase: { value: 2, enumerable: true },
        bubbles: { value: Boolean(event.bubbles), enumerable: true },
        cancelable: { value: Boolean(event.cancelable), enumerable: true },
        timeStamp: { value: timeStamp, enumerable: true },
        isTrusted: { value: false, enumerable: true }
    };
    propertyDefinition[STOP_IMMEDIATE_PROPAGATION_FLAG] = { value: false, writable: true };
    propertyDefinition[CANCELED_FLAG] = { value: false, writable: true };
    propertyDefinition[ORIGINAL_EVENT] = { value: event };

    if (typeof event.detail !== "undefined") {
        propertyDefinition.detail = { value: event.detail, enumerable: true };
    }

    return Object.create(Object.create(event, wrapperPrototypeDefinition), propertyDefinition);
};
}, 91, null, "event-target-shim/lib/event-wrapper.js");
__d(/* RCTNetworking */function(global, require, module, exports) {
'use strict';

var MissingNativeEventEmitterShim = require(56                             ); // 56 = MissingNativeEventEmitterShim
var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter
var RCTNetworkingNative = require(28             ).Networking; // 28 = NativeModules
var convertRequestBody = require(93                  ); // 93 = convertRequestBody

function convertHeadersMapToArray(headers) {
  var headerArray = [];
  for (var name in headers) {
    headerArray.push([name, headers[name]]);
  }
  return headerArray;
}

var _requestId = 1;
function generateRequestId() {
  return _requestId++;
}

var RCTNetworking = function (_NativeEventEmitter) {
  babelHelpers.inherits(RCTNetworking, _NativeEventEmitter);

  function RCTNetworking() {
    babelHelpers.classCallCheck(this, RCTNetworking);

    var _this = babelHelpers.possibleConstructorReturn(this, (RCTNetworking.__proto__ || Object.getPrototypeOf(RCTNetworking)).call(this, RCTNetworkingNative));

    _this.isAvailable = true;
    return _this;
  }

  babelHelpers.createClass(RCTNetworking, [{
    key: 'sendRequest',
    value: function sendRequest(method, trackingName, url, headers, data, responseType, incrementalUpdates, timeout, callback, withCredentials) {
      var body = convertRequestBody(data);
      if (body && body.formData) {
        body.formData = body.formData.map(function (part) {
          return babelHelpers.extends({}, part, {
            headers: convertHeadersMapToArray(part.headers)
          });
        });
      }
      var requestId = generateRequestId();
      RCTNetworkingNative.sendRequest(method, url, requestId, convertHeadersMapToArray(headers), babelHelpers.extends({}, body, { trackingName: trackingName }), responseType, incrementalUpdates, timeout, withCredentials);
      callback(requestId);
    }
  }, {
    key: 'abortRequest',
    value: function abortRequest(requestId) {
      RCTNetworkingNative.abortRequest(requestId);
    }
  }, {
    key: 'clearCookies',
    value: function clearCookies(callback) {
      RCTNetworkingNative.clearCookies(callback);
    }
  }]);
  return RCTNetworking;
}(NativeEventEmitter);

if (__DEV__ && !RCTNetworkingNative) {
  var MissingNativeRCTNetworkingShim = function (_MissingNativeEventEm) {
    babelHelpers.inherits(MissingNativeRCTNetworkingShim, _MissingNativeEventEm);

    function MissingNativeRCTNetworkingShim() {
      babelHelpers.classCallCheck(this, MissingNativeRCTNetworkingShim);
      return babelHelpers.possibleConstructorReturn(this, (MissingNativeRCTNetworkingShim.__proto__ || Object.getPrototypeOf(MissingNativeRCTNetworkingShim)).call(this, 'RCTAppState', 'AppState'));
    }

    babelHelpers.createClass(MissingNativeRCTNetworkingShim, [{
      key: 'sendRequest',
      value: function sendRequest() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'abortRequest',
      value: function abortRequest() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'clearCookies',
      value: function clearCookies() {
        this.throwMissingNativeModule();
      }
    }]);
    return MissingNativeRCTNetworkingShim;
  }(MissingNativeEventEmitterShim);

  RCTNetworking = new MissingNativeRCTNetworkingShim();
} else {
  RCTNetworking = new RCTNetworking();
}

module.exports = RCTNetworking;
}, 92, null, "RCTNetworking");
__d(/* convertRequestBody */function(global, require, module, exports) {
'use strict';

var binaryToBase64 = require(94              ); // 94 = binaryToBase64

var FormData = require(96        ); // 96 = FormData

function convertRequestBody(body) {
  if (typeof body === 'string') {
    return { string: body };
  }
  if (body instanceof FormData) {
    return { formData: body.getParts() };
  }
  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {
    return { base64: binaryToBase64(body) };
  }
  return body;
}

module.exports = convertRequestBody;
}, 93, null, "convertRequestBody");
__d(/* binaryToBase64 */function(global, require, module, exports) {
'use strict';

var base64 = require(95         ); // 95 = base64-js

function binaryToBase64(data) {
  if (data instanceof ArrayBuffer) {
    data = new Uint8Array(data);
  }
  if (data instanceof Uint8Array) {
    return base64.fromByteArray(data);
  }
  if (!ArrayBuffer.isView(data)) {
    throw new Error('data must be ArrayBuffer or typed array');
  }
  var _data = data,
      buffer = _data.buffer,
      byteOffset = _data.byteOffset,
      byteLength = _data.byteLength;

  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));
}

module.exports = binaryToBase64;
}, 94, null, "binaryToBase64");
__d(/* base64-js/index.js */function(global, require, module, exports) {'use strict';

exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;

var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i];
  revLookup[code.charCodeAt(i)] = i;
}

revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;

function placeHoldersCount(b64) {
  var len = b64.length;
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4');
  }

  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;
}

function byteLength(b64) {
  return b64.length * 3 / 4 - placeHoldersCount(b64);
}

function toByteArray(b64) {
  var i, l, tmp, placeHolders, arr;
  var len = b64.length;
  placeHolders = placeHoldersCount(b64);

  arr = new Arr(len * 3 / 4 - placeHolders);

  l = placeHolders > 0 ? len - 4 : len;

  var L = 0;

  for (i = 0; i < l; i += 4) {
    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
    arr[L++] = tmp >> 16 & 0xFF;
    arr[L++] = tmp >> 8 & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  if (placeHolders === 2) {
    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
    arr[L++] = tmp & 0xFF;
  } else if (placeHolders === 1) {
    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
    arr[L++] = tmp >> 8 & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  return arr;
}

function tripletToBase64(num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
}

function encodeChunk(uint8, start, end) {
  var tmp;
  var output = [];
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
    output.push(tripletToBase64(tmp));
  }
  return output.join('');
}

function fromByteArray(uint8) {
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3;
  var output = '';
  var parts = [];
  var maxChunkLength = 16383;
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
  }

  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    output += lookup[tmp >> 2];
    output += lookup[tmp << 4 & 0x3F];
    output += '==';
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
    output += lookup[tmp >> 10];
    output += lookup[tmp >> 4 & 0x3F];
    output += lookup[tmp << 2 & 0x3F];
    output += '=';
  }

  parts.push(output);

  return parts.join('');
}
}, 95, null, "base64-js/index.js");
__d(/* FormData */function(global, require, module, exports) {
'use strict';

var FormData = function () {
  function FormData() {
    babelHelpers.classCallCheck(this, FormData);

    this._parts = [];
  }

  babelHelpers.createClass(FormData, [{
    key: 'append',
    value: function append(key, value) {
      this._parts.push([key, value]);
    }
  }, {
    key: 'getParts',
    value: function getParts() {
      return this._parts.map(function (_ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            name = _ref2[0],
            value = _ref2[1];

        var contentDisposition = 'form-data; name="' + name + '"';

        var headers = { 'content-disposition': contentDisposition };

        if (typeof value === 'object' && value) {
          if (typeof value.name === 'string') {
            headers['content-disposition'] += '; filename="' + value.name + '"';
          }
          if (typeof value.type === 'string') {
            headers['content-type'] = value.type;
          }
          return babelHelpers.extends({}, value, { headers: headers, fieldName: name });
        }

        return { string: String(value), headers: headers, fieldName: name };
      });
    }
  }]);
  return FormData;
}();

module.exports = FormData;
}, 96, null, "FormData");
__d(/* WebSocket */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter
var Platform = require(36        ); // 36 = Platform
var RCTWebSocketModule = require(28             ).WebSocketModule; // 28 = NativeModules
var WebSocketEvent = require(98              ); // 98 = WebSocketEvent
var binaryToBase64 = require(94              ); // 94 = binaryToBase64

var EventTarget = require(88                 ); // 88 = event-target-shim
var base64 = require(95         ); // 95 = base64-js

var CONNECTING = 0;
var OPEN = 1;
var CLOSING = 2;
var CLOSED = 3;

var CLOSE_NORMAL = 1000;

var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];

var nextWebSocketId = 0;

var WebSocket = function (_EventTarget) {
  babelHelpers.inherits(WebSocket, _EventTarget);

  function WebSocket(url, protocols, options) {
    babelHelpers.classCallCheck(this, WebSocket);

    var _this = babelHelpers.possibleConstructorReturn(this, (WebSocket.__proto__ || Object.getPrototypeOf(WebSocket)).call(this));

    _this.CONNECTING = CONNECTING;
    _this.OPEN = OPEN;
    _this.CLOSING = CLOSING;
    _this.CLOSED = CLOSED;
    _this.readyState = CONNECTING;

    if (typeof protocols === 'string') {
      protocols = [protocols];
    }

    if (!Array.isArray(protocols)) {
      protocols = null;
    }

    if (!WebSocket.isAvailable) {
      throw new Error('Cannot initialize WebSocket module. ' + 'Native module RCTWebSocketModule is missing.');
    }

    _this._eventEmitter = new NativeEventEmitter(RCTWebSocketModule);
    _this._socketId = nextWebSocketId++;
    _this._registerEvents();
    RCTWebSocketModule.connect(url, protocols, options, _this._socketId);
    return _this;
  }

  babelHelpers.createClass(WebSocket, [{
    key: 'close',
    value: function close(code, reason) {
      if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {
        return;
      }

      this.readyState = this.CLOSING;
      this._close(code, reason);
    }
  }, {
    key: 'send',
    value: function send(data) {
      if (this.readyState === this.CONNECTING) {
        throw new Error('INVALID_STATE_ERR');
      }

      if (typeof data === 'string') {
        RCTWebSocketModule.send(data, this._socketId);
        return;
      }

      if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {
        RCTWebSocketModule.sendBinary(binaryToBase64(data), this._socketId);
        return;
      }

      throw new Error('Unsupported data type');
    }
  }, {
    key: 'ping',
    value: function ping() {
      if (this.readyState === this.CONNECTING) {
        throw new Error('INVALID_STATE_ERR');
      }

      RCTWebSocketModule.ping(this._socketId);
    }
  }, {
    key: '_close',
    value: function _close(code, reason) {
      if (Platform.OS === 'android') {
        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;
        var closeReason = typeof reason === 'string' ? reason : '';
        RCTWebSocketModule.close(statusCode, closeReason, this._socketId);
      } else {
        RCTWebSocketModule.close(this._socketId);
      }
    }
  }, {
    key: '_unregisterEvents',
    value: function _unregisterEvents() {
      this._subscriptions.forEach(function (e) {
        return e.remove();
      });
      this._subscriptions = [];
    }
  }, {
    key: '_registerEvents',
    value: function _registerEvents() {
      var _this2 = this;

      this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.dispatchEvent(new WebSocketEvent('message', {
          data: ev.type === 'binary' ? base64.toByteArray(ev.data).buffer : ev.data
        }));
      }), this._eventEmitter.addListener('websocketOpen', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.OPEN;
        _this2.dispatchEvent(new WebSocketEvent('open'));
      }), this._eventEmitter.addListener('websocketClosed', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.CLOSED;
        _this2.dispatchEvent(new WebSocketEvent('close', {
          code: ev.code,
          reason: ev.reason
        }));
        _this2._unregisterEvents();
        _this2.close();
      }), this._eventEmitter.addListener('websocketFailed', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.CLOSED;
        _this2.dispatchEvent(new WebSocketEvent('error', {
          message: ev.message
        }));
        _this2.dispatchEvent(new WebSocketEvent('close', {
          message: ev.message
        }));
        _this2._unregisterEvents();
        _this2.close();
      })];
    }
  }]);
  return WebSocket;
}(EventTarget.apply(undefined, WEBSOCKET_EVENTS));

WebSocket.CONNECTING = CONNECTING;
WebSocket.OPEN = OPEN;
WebSocket.CLOSING = CLOSING;
WebSocket.CLOSED = CLOSED;
WebSocket.isAvailable = !!RCTWebSocketModule;


module.exports = WebSocket;
}, 97, null, "WebSocket");
__d(/* WebSocketEvent */function(global, require, module, exports) {

'use strict';

var WebSocketEvent = function WebSocketEvent(type, eventInitDict) {
  babelHelpers.classCallCheck(this, WebSocketEvent);

  this.type = type.toString();
  babelHelpers.extends(this, eventInitDict);
};

module.exports = WebSocketEvent;
}, 98, null, "WebSocketEvent");
__d(/* Alert */function(global, require, module, exports) {
'use strict';

var AlertIOS = require(100       ); // 100 = AlertIOS
var NativeModules = require(28             ); // 28 = NativeModules
var Platform = require(36        ); // 36 = Platform

var Alert = function () {
  function Alert() {
    babelHelpers.classCallCheck(this, Alert);
  }

  babelHelpers.createClass(Alert, null, [{
    key: 'alert',
    value: function alert(title, message, buttons, options, type) {
      if (Platform.OS === 'ios') {
        if (typeof type !== 'undefined') {
          console.warn('Alert.alert() with a 5th "type" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');
          AlertIOS.alert(title, message, buttons, type);
          return;
        }
        AlertIOS.alert(title, message, buttons);
      } else if (Platform.OS === 'android') {
        AlertAndroid.alert(title, message, buttons, options);
      }
    }
  }]);
  return Alert;
}();

var AlertAndroid = function () {
  function AlertAndroid() {
    babelHelpers.classCallCheck(this, AlertAndroid);
  }

  babelHelpers.createClass(AlertAndroid, null, [{
    key: 'alert',
    value: function alert(title, message, buttons, options) {
      var config = {
        title: title || '',
        message: message || ''
      };

      if (options) {
        config = babelHelpers.extends({}, config, { cancelable: options.cancelable });
      }

      var validButtons = buttons ? buttons.slice(0, 3) : [{ text: 'OK' }];
      var buttonPositive = validButtons.pop();
      var buttonNegative = validButtons.pop();
      var buttonNeutral = validButtons.pop();
      if (buttonNeutral) {
        config = babelHelpers.extends({}, config, { buttonNeutral: buttonNeutral.text || '' });
      }
      if (buttonNegative) {
        config = babelHelpers.extends({}, config, { buttonNegative: buttonNegative.text || '' });
      }
      if (buttonPositive) {
        config = babelHelpers.extends({}, config, { buttonPositive: buttonPositive.text || '' });
      }
      NativeModules.DialogManagerAndroid.showAlert(config, function (errorMessage) {
        return console.warn(errorMessage);
      }, function (action, buttonKey) {
        if (action === NativeModules.DialogManagerAndroid.buttonClicked) {
          if (buttonKey === NativeModules.DialogManagerAndroid.buttonNeutral) {
            buttonNeutral.onPress && buttonNeutral.onPress();
          } else if (buttonKey === NativeModules.DialogManagerAndroid.buttonNegative) {
            buttonNegative.onPress && buttonNegative.onPress();
          } else if (buttonKey === NativeModules.DialogManagerAndroid.buttonPositive) {
            buttonPositive.onPress && buttonPositive.onPress();
          }
        } else if (action === NativeModules.DialogManagerAndroid.dismissed) {
          options && options.onDismiss && options.onDismiss();
        }
      });
    }
  }]);
  return AlertAndroid;
}();

module.exports = Alert;
}, 99, null, "Alert");
__d(/* AlertIOS */function(global, require, module, exports) {
'use strict';

var RCTAlertManager = require(28             ).AlertManager; // 28 = NativeModules

var AlertIOS = function () {
  function AlertIOS() {
    babelHelpers.classCallCheck(this, AlertIOS);
  }

  babelHelpers.createClass(AlertIOS, null, [{
    key: 'alert',
    value: function alert(title, message, callbackOrButtons, type) {
      if (typeof type !== 'undefined') {
        console.warn('AlertIOS.alert() with a 4th "type" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');
        this.prompt(title, message, callbackOrButtons, type);
        return;
      }
      this.prompt(title, message, callbackOrButtons, 'default');
    }
  }, {
    key: 'prompt',
    value: function prompt(title, message, callbackOrButtons) {
      var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'plain-text';
      var defaultValue = arguments[4];
      var keyboardType = arguments[5];

      if (typeof type === 'function') {
        console.warn('You passed a callback function as the "type" argument to AlertIOS.prompt(). React Native is ' + 'assuming  you want to use the deprecated AlertIOS.prompt(title, defaultValue, buttons, callback) ' + 'signature. The current signature is AlertIOS.prompt(title, message, callbackOrButtons, type, defaultValue, ' + 'keyboardType) and the old syntax will be removed in a future version.');

        var callback = type;
        var defaultValue = message;
        RCTAlertManager.alertWithArgs({
          title: title || undefined,
          type: 'plain-text',
          defaultValue: defaultValue
        }, function (id, value) {
          callback(value);
        });
        return;
      }

      var callbacks = [];
      var buttons = [];
      var cancelButtonKey;
      var destructiveButtonKey;
      if (typeof callbackOrButtons === 'function') {
        callbacks = [callbackOrButtons];
      } else if (callbackOrButtons instanceof Array) {
        callbackOrButtons.forEach(function (btn, index) {
          callbacks[index] = btn.onPress;
          if (btn.style === 'cancel') {
            cancelButtonKey = String(index);
          } else if (btn.style === 'destructive') {
            destructiveButtonKey = String(index);
          }
          if (btn.text || index < (callbackOrButtons || []).length - 1) {
            var btnDef = {};
            btnDef[index] = btn.text || '';
            buttons.push(btnDef);
          }
        });
      }

      RCTAlertManager.alertWithArgs({
        title: title || undefined,
        message: message || undefined,
        buttons: buttons,
        type: type || undefined,
        defaultValue: defaultValue,
        cancelButtonKey: cancelButtonKey,
        destructiveButtonKey: destructiveButtonKey,
        keyboardType: keyboardType
      }, function (id, value) {
        var cb = callbacks[id];
        cb && cb(value);
      });
    }
  }]);
  return AlertIOS;
}();

module.exports = AlertIOS;
}, 100, null, "AlertIOS");
__d(/* Geolocation */function(global, require, module, exports) {
'use strict';

var regeneratorRuntime = require(67                   ); // 67 = regenerator-runtime

var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter
var RCTLocationObserver = require(28             ).LocationObserver; // 28 = NativeModules

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var logError = require(57        ); // 57 = logError
var warning = require(15                ); // 15 = fbjs/lib/warning

var LocationEventEmitter = new NativeEventEmitter(RCTLocationObserver);

var Platform = require(36        ); // 36 = Platform
var PermissionsAndroid = require(102                 ); // 102 = PermissionsAndroid

var subscriptions = [];
var updatesEnabled = false;

var Geolocation = {
  requestAuthorization: function requestAuthorization() {
    RCTLocationObserver.requestAuthorization();
  },

  getCurrentPosition: function getCurrentPosition(geo_success, geo_error, geo_options) {
    var hasPermission, status;
    return regeneratorRuntime.async(function getCurrentPosition$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            invariant(typeof geo_success === 'function', 'Must provide a valid geo_success callback.');
            hasPermission = true;

            if (!(Platform.OS === 'android' && Platform.Version >= 23)) {
              _context.next = 11;
              break;
            }

            _context.next = 5;
            return regeneratorRuntime.awrap(PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));

          case 5:
            hasPermission = _context.sent;

            if (hasPermission) {
              _context.next = 11;
              break;
            }

            _context.next = 9;
            return regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));

          case 9:
            status = _context.sent;

            hasPermission = status === PermissionsAndroid.RESULTS.GRANTED;

          case 11:
            if (hasPermission) {
              RCTLocationObserver.getCurrentPosition(geo_options || {}, geo_success, geo_error || logError);
            }

          case 12:
          case 'end':
            return _context.stop();
        }
      }
    }, null, this);
  },

  watchPosition: function watchPosition(success, error, options) {
    if (!updatesEnabled) {
      RCTLocationObserver.startObserving(options || {});
      updatesEnabled = true;
    }
    var watchID = subscriptions.length;
    subscriptions.push([LocationEventEmitter.addListener('geolocationDidChange', success), error ? LocationEventEmitter.addListener('geolocationError', error) : null]);
    return watchID;
  },

  clearWatch: function clearWatch(watchID) {
    var sub = subscriptions[watchID];
    if (!sub) {
      return;
    }

    sub[0].remove();

    var sub1 = sub[1];sub1 && sub1.remove();
    subscriptions[watchID] = undefined;
    var noWatchers = true;
    for (var ii = 0; ii < subscriptions.length; ii++) {
      if (subscriptions[ii]) {
        noWatchers = false;
      }
    }
    if (noWatchers) {
      Geolocation.stopObserving();
    }
  },

  stopObserving: function stopObserving() {
    if (updatesEnabled) {
      RCTLocationObserver.stopObserving();
      updatesEnabled = false;
      for (var ii = 0; ii < subscriptions.length; ii++) {
        var sub = subscriptions[ii];
        if (sub) {
          warning(false, 'Called stopObserving with existing subscriptions.');
          sub[0].remove();

          var sub1 = sub[1];sub1 && sub1.remove();
        }
      }
      subscriptions = [];
    }
  }
};

module.exports = Geolocation;
}, 101, null, "Geolocation");
__d(/* PermissionsAndroid */function(global, require, module, exports) {
'use strict';

var regeneratorRuntime = require(67                   ); // 67 = regenerator-runtime

var NativeModules = require(28             ); // 28 = NativeModules

var PermissionsAndroid = function () {
  function PermissionsAndroid() {
    babelHelpers.classCallCheck(this, PermissionsAndroid);

    this.PERMISSIONS = {
      READ_CALENDAR: 'android.permission.READ_CALENDAR',
      WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',
      CAMERA: 'android.permission.CAMERA',
      READ_CONTACTS: 'android.permission.READ_CONTACTS',
      WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',
      GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',
      ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',
      ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',
      RECORD_AUDIO: 'android.permission.RECORD_AUDIO',
      READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',
      CALL_PHONE: 'android.permission.CALL_PHONE',
      READ_CALL_LOG: 'android.permission.READ_CALL_LOG',
      WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',
      ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',
      USE_SIP: 'android.permission.USE_SIP',
      PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',
      BODY_SENSORS: 'android.permission.BODY_SENSORS',
      SEND_SMS: 'android.permission.SEND_SMS',
      RECEIVE_SMS: 'android.permission.RECEIVE_SMS',
      READ_SMS: 'android.permission.READ_SMS',
      RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',
      RECEIVE_MMS: 'android.permission.RECEIVE_MMS',
      READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',
      WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE'
    };

    this.RESULTS = {
      GRANTED: 'granted',
      DENIED: 'denied',
      NEVER_ASK_AGAIN: 'never_ask_again'
    };
  }

  babelHelpers.createClass(PermissionsAndroid, [{
    key: 'checkPermission',
    value: function checkPermission(permission) {
      console.warn('"PermissionsAndroid.checkPermission" is deprecated. Use "PermissionsAndroid.check" instead');
      return NativeModules.PermissionsAndroid.checkPermission(permission);
    }
  }, {
    key: 'check',
    value: function check(permission) {
      return NativeModules.PermissionsAndroid.checkPermission(permission);
    }
  }, {
    key: 'requestPermission',
    value: function requestPermission(permission, rationale) {
      var response;
      return regeneratorRuntime.async(function requestPermission$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.warn('"PermissionsAndroid.requestPermission" is deprecated. Use "PermissionsAndroid.request" instead');
              _context.next = 3;
              return regeneratorRuntime.awrap(this.request(permission, rationale));

            case 3:
              response = _context.sent;
              return _context.abrupt('return', response === this.RESULTS.GRANTED);

            case 5:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'request',
    value: function request(permission, rationale) {
      var shouldShowRationale;
      return regeneratorRuntime.async(function request$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!rationale) {
                _context2.next = 6;
                break;
              }

              _context2.next = 3;
              return regeneratorRuntime.awrap(NativeModules.PermissionsAndroid.shouldShowRequestPermissionRationale(permission));

            case 3:
              shouldShowRationale = _context2.sent;

              if (!shouldShowRationale) {
                _context2.next = 6;
                break;
              }

              return _context2.abrupt('return', new Promise(function (resolve, reject) {
                NativeModules.DialogManagerAndroid.showAlert(rationale, function () {
                  return reject(new Error('Error showing rationale'));
                }, function () {
                  return resolve(NativeModules.PermissionsAndroid.requestPermission(permission));
                });
              }));

            case 6:
              return _context2.abrupt('return', NativeModules.PermissionsAndroid.requestPermission(permission));

            case 7:
            case 'end':
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'requestMultiple',
    value: function requestMultiple(permissions) {
      return NativeModules.PermissionsAndroid.requestMultiplePermissions(permissions);
    }
  }]);
  return PermissionsAndroid;
}();

PermissionsAndroid = new PermissionsAndroid();

module.exports = PermissionsAndroid;
}, 102, null, "PermissionsAndroid");
__d(/* HeapCapture */function(global, require, module, exports) {
'use strict';

var HeapCapture = {
  captureHeap: function captureHeap(path) {
    var error = null;
    try {
      global.nativeCaptureHeap(path);
      console.log('HeapCapture.captureHeap succeeded: ' + path);
    } catch (e) {
      console.log('HeapCapture.captureHeap error: ' + e.toString());
      error = e.toString();
    }
    require(28             ).JSCHeapCapture.captureComplete(path, error); // 28 = NativeModules
  }
};

module.exports = HeapCapture;
}, 103, null, "HeapCapture");
__d(/* SamplingProfiler */function(global, require, module, exports) {
'use strict';

var SamplingProfiler = {
  poke: function poke(token) {
    var error = null;
    var result = null;
    try {
      result = global.pokeSamplingProfiler();
      if (result === null) {
        console.log('The JSC Sampling Profiler has started');
      } else {
        console.log('The JSC Sampling Profiler has stopped');
      }
    } catch (e) {
      console.log('Error occured when restarting Sampling Profiler: ' + e.toString());
      error = e.toString();
    }
    require(28             ).JSCSamplingProfiler.operationComplete(token, result, error); // 28 = NativeModules
  }
};

module.exports = SamplingProfiler;
}, 104, null, "SamplingProfiler");
__d(/* RCTLog */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var levelsMap = {
  log: 'log',
  info: 'info',
  warn: 'warn',
  error: 'error',
  fatal: 'error'
};

var RCTLog = function () {
  function RCTLog() {
    babelHelpers.classCallCheck(this, RCTLog);
  }

  babelHelpers.createClass(RCTLog, null, [{
    key: 'logIfNoNativeHook',
    value: function logIfNoNativeHook() {
      if (typeof global.nativeLoggingHook === 'undefined') {
        RCTLog.logToConsole.apply(RCTLog, arguments);
      }

      return true;
    }
  }, {
    key: 'logToConsole',
    value: function logToConsole(level) {
      var _console;

      var logFn = levelsMap[level];
      invariant(logFn, 'Level "' + level + '" not one of ' + Object.keys(levelsMap));

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      (_console = console)[logFn].apply(_console, args);

      return true;
    }
  }]);
  return RCTLog;
}();

module.exports = RCTLog;
}, 105, null, "RCTLog");
__d(/* RCTNativeAppEventEmitter */function(global, require, module, exports) {
'use strict';

var RCTDeviceEventEmitter = require(44                     ); // 44 = RCTDeviceEventEmitter

var RCTNativeAppEventEmitter = RCTDeviceEventEmitter;
module.exports = RCTNativeAppEventEmitter;
}, 106, null, "RCTNativeAppEventEmitter");
__d(/* PerformanceLogger */function(global, require, module, exports) {
'use strict';

var Systrace = require(32        ); // 32 = Systrace

var infoLog = require(108      ); // 108 = infoLog
var performanceNow = global.nativePerformanceNow || require(37                       ); // 37 = fbjs/lib/performanceNow

var timespans = {};
var extras = {};
var cookies = {};

var PRINT_TO_CONSOLE = false;

var PerformanceLogger = {
  addTimespan: function addTimespan(key, lengthInMs, description) {
    if (timespans[key]) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to add a timespan that already exists ', key);
      }
      return;
    }

    timespans[key] = {
      description: description,
      totalTime: lengthInMs
    };
  },
  startTimespan: function startTimespan(key, description) {
    if (timespans[key]) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to start a timespan that already exists ', key);
      }
      return;
    }

    timespans[key] = {
      description: description,
      startTime: performanceNow()
    };
    cookies[key] = Systrace.beginAsyncEvent(key);
    if (__DEV__ && PRINT_TO_CONSOLE) {
      infoLog('PerformanceLogger.js', 'start: ' + key);
    }
  },
  stopTimespan: function stopTimespan(key) {
    var timespan = timespans[key];
    if (!timespan || !timespan.startTime) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to end a timespan that has not started ', key);
      }
      return;
    }
    if (timespan.endTime) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to end a timespan that has already ended ', key);
      }
      return;
    }

    timespan.endTime = performanceNow();
    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
    if (__DEV__ && PRINT_TO_CONSOLE) {
      infoLog('PerformanceLogger.js', 'end: ' + key);
    }

    Systrace.endAsyncEvent(key, cookies[key]);
    delete cookies[key];
  },
  clear: function clear() {
    timespans = {};
    extras = {};
  },
  clearCompleted: function clearCompleted() {
    for (var _key in timespans) {
      if (timespans[_key].totalTime) {
        delete timespans[_key];
      }
    }
    extras = {};
  },
  clearExceptTimespans: function clearExceptTimespans(keys) {
    timespans = Object.keys(timespans).reduce(function (previous, key) {
      if (keys.indexOf(key) !== -1) {
        previous[key] = timespans[key];
      }
      return previous;
    }, {});
    extras = {};
  },
  currentTimestamp: function currentTimestamp() {
    return performanceNow();
  },
  getTimespans: function getTimespans() {
    return timespans;
  },
  hasTimespan: function hasTimespan(key) {
    return !!timespans[key];
  },
  logTimespans: function logTimespans() {
    for (var _key2 in timespans) {
      if (timespans[_key2].totalTime) {
        infoLog(_key2 + ': ' + timespans[_key2].totalTime + 'ms');
      }
    }
  },
  addTimespans: function addTimespans(newTimespans, labels) {
    for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
      var label = labels[ii / 2];
      PerformanceLogger.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
    }
  },
  setExtra: function setExtra(key, value) {
    if (extras[key]) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to set an extra that already exists ', { key: key, currentValue: extras[key], attemptedValue: value });
      }
      return;
    }
    extras[key] = value;
  },
  getExtras: function getExtras() {
    return extras;
  }
};

module.exports = PerformanceLogger;
}, 107, null, "PerformanceLogger");
__d(/* infoLog */function(global, require, module, exports) {
'use strict';

function infoLog() {
  var _console;

  return (_console = console).log.apply(_console, arguments);
}

module.exports = infoLog;
}, 108, null, "infoLog");
__d(/* HMRClient */function(global, require, module, exports) {
'use strict';

var Platform = require(36        ); // 36 = Platform
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var HMRClient = {
  enable: function enable(platform, bundleEntry, host, port) {
    invariant(platform, 'Missing required parameter `platform`');
    invariant(bundleEntry, 'Missing required paramenter `bundleEntry`');
    invariant(host, 'Missing required paramenter `host`');

    var WebSocket = require(97         ); // 97 = WebSocket

    var wsHostPort = port !== null && port !== '' ? host + ':' + port : host;

    var wsUrl = 'ws://' + wsHostPort + '/hot?' + ('platform=' + platform + '&') + ('bundleEntry=' + bundleEntry.replace('.bundle', '.js'));

    var activeWS = new WebSocket(wsUrl);
    activeWS.onerror = function (e) {
      var error = 'Hot loading isn\'t working because it cannot connect to the development server.\n\nTry the following to fix the issue:\n- Ensure that the packager server is running and available on the same network';

      if (Platform.OS === 'ios') {
        error += '\n- Ensure that the Packager server URL is correctly set in AppDelegate';
      } else {
        error += '\n- Ensure that your device/emulator is connected to your machine and has USB debugging enabled - run \'adb devices\' to see a list of connected devices\n- If you\'re on a physical device connected to the same machine, run \'adb reverse tcp:8081 tcp:8081\' to forward requests from your device\n- If your device is on the same Wi-Fi network, set \'Debug server host & port for device\' in \'Dev settings\' to your machine\'s IP address and the port of the local dev server - e.g. 10.0.1.1:8081';
      }

      error += '\n\nURL: ' + host + ':' + port + '\n\nError: ' + e.message;

      throw new Error(error);
    };
    activeWS.onmessage = function (_ref) {
      var data = _ref.data;

      var HMRLoadingView = require(110             ); // 110 = HMRLoadingView

      data = JSON.parse(data);

      switch (data.type) {
        case 'update-start':
          {
            HMRLoadingView.showMessage('Hot Loading...');
            break;
          }
        case 'update':
          {
            var _data$body = data.body,
                modules = _data$body.modules,
                sourceMappingURLs = _data$body.sourceMappingURLs,
                sourceURLs = _data$body.sourceURLs,
                inverseDependencies = _data$body.inverseDependencies;


            if (Platform.OS === 'ios') {
              var RCTRedBox = require(28             ).RedBox; // 28 = NativeModules
              RCTRedBox && RCTRedBox.dismiss && RCTRedBox.dismiss();
            } else {
              var RCTExceptionsManager = require(28             ).ExceptionsManager; // 28 = NativeModules
              RCTExceptionsManager && RCTExceptionsManager.dismissRedbox && RCTExceptionsManager.dismissRedbox();
            }

            modules.forEach(function (_ref2, i) {
              var id = _ref2.id,
                  code = _ref2.code;

              code = code + '\n\n' + sourceMappingURLs[i];

              var injectFunction = typeof global.nativeInjectHMRUpdate === 'function' ? global.nativeInjectHMRUpdate : eval;

              code = ['__accept(', id + ',', 'function(global,require,module,exports){', '' + code, '\n},', '' + JSON.stringify(inverseDependencies), ');'].join('');

              injectFunction(code, sourceURLs[i]);
            });

            HMRLoadingView.hide();
            break;
          }
        case 'update-done':
          {
            HMRLoadingView.hide();
            break;
          }
        case 'error':
          {
            HMRLoadingView.hide();
            throw new Error(data.body.type + ' ' + data.body.description);
          }
        default:
          {
            throw new Error('Unexpected message: ' + data);
          }
      }
    };
  }
};

module.exports = HMRClient;
}, 109, null, "HMRClient");
__d(/* HMRLoadingView */function(global, require, module, exports) {

'use strict';

var ToastAndroid = require(111           ); // 111 = ToastAndroid

var TOAST_SHORT_DELAY = 2000;

var HMRLoadingView = function () {
  function HMRLoadingView() {
    babelHelpers.classCallCheck(this, HMRLoadingView);
  }

  babelHelpers.createClass(HMRLoadingView, null, [{
    key: 'showMessage',
    value: function showMessage(message) {
      if (HMRLoadingView._showing) {
        return;
      }
      ToastAndroid.show(message, ToastAndroid.SHORT);
      HMRLoadingView._showing = true;
      setTimeout(function () {
        HMRLoadingView._showing = false;
      }, TOAST_SHORT_DELAY);
    }
  }, {
    key: 'hide',
    value: function hide() {}
  }]);
  return HMRLoadingView;
}();

module.exports = HMRLoadingView;
}, 110, null, "HMRLoadingView");
__d(/* ToastAndroid */function(global, require, module, exports) {

'use strict';

var RCTToastAndroid = require(28             ).ToastAndroid; // 28 = NativeModules

var ToastAndroid = {
  SHORT: RCTToastAndroid.SHORT,
  LONG: RCTToastAndroid.LONG,

  TOP: RCTToastAndroid.TOP,
  BOTTOM: RCTToastAndroid.BOTTOM,
  CENTER: RCTToastAndroid.CENTER,

  show: function show(message, duration) {
    RCTToastAndroid.show(message, duration);
  },

  showWithGravity: function showWithGravity(message, duration, gravity) {
    RCTToastAndroid.showWithGravity(message, duration, gravity);
  }
};

module.exports = ToastAndroid;
}, 111, null, "ToastAndroid");
__d(/* setupDevtools */function(global, require, module, exports) {
'use strict';

if (__DEV__) {
  var AppState = require(55        ); // 55 = AppState
  var WebSocket = require(97         ); // 97 = WebSocket

  var _require = require(28             ), // 28 = NativeModules
      PlatformConstants = _require.PlatformConstants;

  var _require2 = require(113                  ), // 113 = react-devtools-core
      connectToDevTools = _require2.connectToDevTools;

  if (WebSocket.isAvailable) {
    connectToDevTools({
      isAppActive: function isAppActive() {
        return AppState.currentState !== 'background';
      },

      host: PlatformConstants && PlatformConstants.ServerHost ? PlatformConstants.ServerHost.split(':')[0] : 'localhost',

      port: window.__REACT_DEVTOOLS_PORT__,
      resolveRNStyle: require(114           ) // 114 = flattenStyle
    });
  }
}
}, 112, null, "setupDevtools");
__d(/* react-devtools-core/build/backend.js */function(global, require, module, exports) {!function (root, factory) {
    "object" == typeof exports && "object" == typeof module ? module.exports = factory() : "function" == typeof define && define.amd ? define([], factory) : "object" == typeof exports ? exports.ReactDevToolsBackend = factory() : root.ReactDevToolsBackend = factory();
}(this, function () {
    return function (modules) {
        function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) return installedModules[moduleId].exports;
            var module = installedModules[moduleId] = {
                exports: {},
                id: moduleId,
                loaded: !1
            };
            return modules[moduleId].call(module.exports, module, module.exports, __webpack_require__), module.loaded = !0, module.exports;
        }
        var installedModules = {};
        return __webpack_require__.m = modules, __webpack_require__.c = installedModules, __webpack_require__.p = "", __webpack_require__(0);
    }([function (module, exports, __webpack_require__) {
        "use strict";

        function connectToDevTools(options) {
            function scheduleRetry() {
                setTimeout(function () {
                    return connectToDevTools(options);
                }, 2e3);
            }
            function handleClose() {
                hasClosed || (hasClosed = !0, scheduleRetry(), closeListeners.forEach(function (fn) {
                    return fn();
                }));
            }
            function handleMessage(evt) {
                var data;
                if (0 !== evt.data.indexOf("eval:")) {
                    try {
                        data = JSON.parse(evt.data);
                    } catch (e) {
                        return void console.error("failed to parse json: " + evt.data);
                    }
                    messageListeners.forEach(function (fn) {
                        try {
                            fn(data);
                        } catch (e) {
                            throw console.log(data), e;
                        }
                    });
                }
            }
            var _ref = options || {},
                _ref$host = _ref.host,
                host = void 0 === _ref$host ? "localhost" : _ref$host,
                _ref$port = _ref.port,
                port = void 0 === _ref$port ? 8097 : _ref$port,
                _ref$resolveRNStyle = _ref.resolveRNStyle,
                resolveRNStyle = void 0 === _ref$resolveRNStyle ? null : _ref$resolveRNStyle,
                _ref$isAppActive = _ref.isAppActive,
                isAppActive = void 0 === _ref$isAppActive ? function () {
                return !0;
            } : _ref$isAppActive;
            if (!isAppActive()) return void scheduleRetry();
            var messageListeners = [],
                closeListeners = [],
                uri = "ws://" + host + ":" + port,
                ws = new window.WebSocket(uri);
            ws.onclose = handleClose, ws.onerror = handleClose, ws.onmessage = handleMessage, ws.onopen = function () {
                var wall = {
                    listen: function listen(fn) {
                        messageListeners.push(fn);
                    },
                    onClose: function onClose(fn) {
                        closeListeners.push(fn);
                    },
                    send: function send(data) {
                        ws.send(JSON.stringify(data));
                    }
                };
                setupBackend(wall, resolveRNStyle);
            };
            var hasClosed = !1;
        }
        function setupBackend(wall, resolveRNStyle) {
            wall.onClose(function () {
                agent && agent.emit("shutdown"), window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit("shutdown"), bridge = null, agent = null, console.log("closing devtools");
            });
            var bridge = new Bridge(wall),
                agent = new Agent(window, {
                rnStyle: !!resolveRNStyle,
                rnStyleMeasure: !!resolveRNStyle
            });
            agent.addBridge(bridge), resolveRNStyle && setupRNStyle(bridge, agent, resolveRNStyle), setupRelay(bridge, agent, window.__REACT_DEVTOOLS_GLOBAL_HOOK__);
            var _connectTimeout = setTimeout(function () {
                console.warn("react-devtools agent got no connection");
            }, 2e4);
            agent.once("connected", function () {
                agent && (inject(window.__REACT_DEVTOOLS_GLOBAL_HOOK__, agent), clearTimeout(_connectTimeout));
            });
        }
        var Agent = __webpack_require__(1),
            Bridge = __webpack_require__(6),
            installGlobalHook = __webpack_require__(31),
            installRelayHook = __webpack_require__(32),
            inject = __webpack_require__(33),
            setupRNStyle = __webpack_require__(43),
            setupRelay = __webpack_require__(45);
        installGlobalHook(window), installRelayHook(window), window.document && window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on("react-devtools", function (agent) {
            var setupHighlighter = __webpack_require__(46);
            setupHighlighter(agent);
        }), module.exports = {
            connectToDevTools: connectToDevTools
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _possibleConstructorReturn(self, call) {
            if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !call || "object" != typeof call && "function" != typeof call ? self : call;
        }
        function _inherits(subClass, superClass) {
            if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            _require = __webpack_require__(2),
            EventEmitter = _require.EventEmitter,
            assign = __webpack_require__(3),
            guid = __webpack_require__(4),
            getIn = __webpack_require__(5),
            Agent = function (_EventEmitter) {
            function Agent(global, capabilities) {
                _classCallCheck(this, Agent);
                var _this = _possibleConstructorReturn(this, (Agent.__proto__ || Object.getPrototypeOf(Agent)).call(this));
                _this.global = global, _this.internalInstancesById = new Map(), _this.idsByInternalInstances = new WeakMap(), _this.renderers = new Map(), _this.elementData = new Map(), _this.roots = new Set(), _this.reactInternals = {};
                var lastSelected;
                _this.on("selected", function (id) {
                    var data = _this.elementData.get(id);
                    data && data.publicInstance && _this.global.$r === lastSelected && (_this.global.$r = data.publicInstance, lastSelected = data.publicInstance);
                }), _this._prevSelected = null, _this._scrollUpdate = !1;
                var isReactDOM = window.document && "function" == typeof window.document.createElement;
                return _this.capabilities = assign({
                    scroll: isReactDOM && "function" == typeof window.document.body.scrollIntoView,
                    dom: isReactDOM,
                    editTextContent: !1
                }, capabilities), isReactDOM && (_this._updateScroll = _this._updateScroll.bind(_this), window.addEventListener("scroll", _this._onScroll.bind(_this), !0), window.addEventListener("click", _this._onClick.bind(_this), !0), window.addEventListener("mouseover", _this._onMouseOver.bind(_this), !0), window.addEventListener("resize", _this._onResize.bind(_this), !0)), _this;
            }
            return _inherits(Agent, _EventEmitter), _createClass(Agent, [{
                key: "sub",
                value: function value(ev, fn) {
                    var _this2 = this;
                    return this.on(ev, fn), function () {
                        _this2.removeListener(ev, fn);
                    };
                }
            }, {
                key: "setReactInternals",
                value: function value(renderer, reactInternals) {
                    this.reactInternals[renderer] = reactInternals;
                }
            }, {
                key: "addBridge",
                value: function value(bridge) {
                    var _this3 = this;
                    bridge.on("requestCapabilities", function () {
                        bridge.send("capabilities", _this3.capabilities), _this3.emit("connected");
                    }), bridge.on("setState", this._setState.bind(this)), bridge.on("setProps", this._setProps.bind(this)), bridge.on("setContext", this._setContext.bind(this)), bridge.on("makeGlobal", this._makeGlobal.bind(this)), bridge.on("highlight", function (id) {
                        return _this3.highlight(id);
                    }), bridge.on("highlightMany", function (id) {
                        return _this3.highlightMany(id);
                    }), bridge.on("hideHighlight", function () {
                        return _this3.emit("hideHighlight");
                    }), bridge.on("startInspecting", function () {
                        return _this3.emit("startInspecting");
                    }), bridge.on("stopInspecting", function () {
                        return _this3.emit("stopInspecting");
                    }), bridge.on("selected", function (id) {
                        return _this3.emit("selected", id);
                    }), bridge.on("setInspectEnabled", function (enabled) {
                        _this3._inspectEnabled = enabled, _this3.emit("stopInspecting");
                    }), bridge.on("shutdown", function () {
                        return _this3.emit("shutdown");
                    }), bridge.on("changeTextContent", function (_ref) {
                        var id = _ref.id,
                            text = _ref.text,
                            node = _this3.getNodeForID(id);
                        node && (node.textContent = text);
                    }), bridge.on("putSelectedNode", function (id) {
                        window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$node = _this3.getNodeForID(id);
                    }), bridge.on("putSelectedInstance", function (id) {
                        var node = _this3.elementData.get(id);
                        node ? window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$type = node.type : window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$type = null, node && node.publicInstance ? window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$inst = node.publicInstance : window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$inst = null;
                    }), bridge.on("checkSelection", function () {
                        var newSelected = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0;
                        if (newSelected !== _this3._prevSelected) {
                            _this3._prevSelected = newSelected;
                            var sentSelected = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$node;
                            newSelected !== sentSelected && _this3.selectFromDOMNode(newSelected, !0);
                        }
                    }), bridge.on("scrollToNode", function (id) {
                        return _this3.scrollToNode(id);
                    }), bridge.on("traceupdatesstatechange", function (value) {
                        return _this3.emit("traceupdatesstatechange", value);
                    }), bridge.on("colorizerchange", function (value) {
                        return _this3.emit("colorizerchange", value);
                    }), this.on("root", function (id) {
                        return bridge.send("root", id);
                    }), this.on("mount", function (data) {
                        return bridge.send("mount", data);
                    }), this.on("update", function (data) {
                        return bridge.send("update", data);
                    }), this.on("unmount", function (id) {
                        bridge.send("unmount", id), bridge.forget(id);
                    }), this.on("setSelection", function (data) {
                        return bridge.send("select", data);
                    }), this.on("setInspectEnabled", function (data) {
                        return bridge.send("setInspectEnabled", data);
                    });
                }
            }, {
                key: "scrollToNode",
                value: function value(id) {
                    var node = this.getNodeForID(id);
                    if (!node) return void console.warn("unable to get the node for scrolling");
                    var domElement = node.nodeType === Node.ELEMENT_NODE ? node : node.parentElement;
                    return domElement ? ("function" == typeof domElement.scrollIntoViewIfNeeded ? domElement.scrollIntoViewIfNeeded() : "function" == typeof domElement.scrollIntoView && domElement.scrollIntoView(), void this.highlight(id)) : void console.warn("unable to get the domElement for scrolling");
                }
            }, {
                key: "highlight",
                value: function value(id) {
                    var data = this.elementData.get(id),
                        node = this.getNodeForID(id);
                    data && node && this.emit("highlight", {
                        node: node,
                        name: data.name,
                        props: data.props
                    });
                }
            }, {
                key: "highlightMany",
                value: function value(ids) {
                    var _this4 = this,
                        nodes = [];
                    ids.forEach(function (id) {
                        var node = _this4.getNodeForID(id);
                        node && nodes.push(node);
                    }), nodes.length && this.emit("highlightMany", nodes);
                }
            }, {
                key: "getNodeForID",
                value: function value(id) {
                    var component = this.internalInstancesById.get(id);
                    if (!component) return null;
                    var renderer = this.renderers.get(id);
                    return renderer && this.reactInternals[renderer].getNativeFromReactElement ? this.reactInternals[renderer].getNativeFromReactElement(component) : null;
                }
            }, {
                key: "selectFromDOMNode",
                value: function value(node, quiet) {
                    var offsetFromLeaf = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        id = this.getIDForNode(node);
                    id && this.emit("setSelection", {
                        id: id,
                        quiet: quiet,
                        offsetFromLeaf: offsetFromLeaf
                    });
                }
            }, {
                key: "selectFromReactInstance",
                value: function value(instance, quiet) {
                    var id = this.getId(instance);
                    return id ? void this.emit("setSelection", {
                        id: id,
                        quiet: quiet
                    }) : void console.log("no instance id", instance);
                }
            }, {
                key: "getIDForNode",
                value: function value(node) {
                    if (!this.reactInternals) return null;
                    var component;
                    for (var renderer in this.reactInternals) {
                        try {
                            component = this.reactInternals[renderer].getReactElementFromNative(node);
                        } catch (e) {}
                        if (component) return this.getId(component);
                    }
                    return null;
                }
            }, {
                key: "_setProps",
                value: function value(_ref2) {
                    var id = _ref2.id,
                        path = _ref2.path,
                        value = _ref2.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInProps ? data.updater.setInProps(path, value) : console.warn("trying to set props on a component that doesn't support it");
                }
            }, {
                key: "_setState",
                value: function value(_ref3) {
                    var id = _ref3.id,
                        path = _ref3.path,
                        value = _ref3.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInState ? data.updater.setInState(path, value) : console.warn("trying to set state on a component that doesn't support it");
                }
            }, {
                key: "_setContext",
                value: function value(_ref4) {
                    var id = _ref4.id,
                        path = _ref4.path,
                        value = _ref4.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInContext ? data.updater.setInContext(path, value) : console.warn("trying to set context on a component that doesn't support it");
                }
            }, {
                key: "_makeGlobal",
                value: function value(_ref5) {
                    var id = _ref5.id,
                        path = _ref5.path,
                        data = this.elementData.get(id);
                    if (data) {
                        var value;
                        value = "instance" === path ? data.publicInstance : getIn(data, path), this.global.$tmp = value, console.log("$tmp =", value);
                    }
                }
            }, {
                key: "getId",
                value: function value(internalInstance) {
                    return "object" === ("undefined" == typeof internalInstance ? "undefined" : _typeof(internalInstance)) && internalInstance ? (this.idsByInternalInstances.has(internalInstance) || (this.idsByInternalInstances.set(internalInstance, guid()), this.internalInstancesById.set(this.idsByInternalInstances.get(internalInstance), internalInstance)), this.idsByInternalInstances.get(internalInstance)) : internalInstance;
                }
            }, {
                key: "addRoot",
                value: function value(renderer, internalInstance) {
                    var id = this.getId(internalInstance);
                    this.roots.add(id), this.emit("root", id);
                }
            }, {
                key: "onMounted",
                value: function value(renderer, component, data) {
                    var _this5 = this,
                        id = this.getId(component);
                    this.renderers.set(id, renderer), this.elementData.set(id, data);
                    var send = assign({}, data);
                    send.children && send.children.map && (send.children = send.children.map(function (c) {
                        return _this5.getId(c);
                    })), send.id = id, send.canUpdate = send.updater && !!send.updater.forceUpdate, delete send.type, delete send.updater, this.emit("mount", send);
                }
            }, {
                key: "onUpdated",
                value: function value(component, data) {
                    var _this6 = this,
                        id = this.getId(component);
                    this.elementData.set(id, data);
                    var send = assign({}, data);
                    send.children && send.children.map && (send.children = send.children.map(function (c) {
                        return _this6.getId(c);
                    })), send.id = id, send.canUpdate = send.updater && !!send.updater.forceUpdate, delete send.type, delete send.updater, this.emit("update", send);
                }
            }, {
                key: "onUnmounted",
                value: function value(component) {
                    var id = this.getId(component);
                    this.elementData["delete"](id), this.roots["delete"](id), this.renderers["delete"](id), this.emit("unmount", id), this.idsByInternalInstances["delete"](component);
                }
            }, {
                key: "_onScroll",
                value: function value() {
                    this._scrollUpdate || (this._scrollUpdate = !0, window.requestAnimationFrame(this._updateScroll));
                }
            }, {
                key: "_updateScroll",
                value: function value() {
                    this.emit("refreshMultiOverlay"), this.emit("stopInspecting"), this._scrollUpdate = !1;
                }
            }, {
                key: "_onClick",
                value: function value(event) {
                    if (this._inspectEnabled) {
                        var id = this.getIDForNode(event.target);
                        id && (event.stopPropagation(), event.preventDefault(), this.emit("setSelection", {
                            id: id
                        }), this.emit("setInspectEnabled", !1));
                    }
                }
            }, {
                key: "_onMouseOver",
                value: function value(event) {
                    if (this._inspectEnabled) {
                        var id = this.getIDForNode(event.target);
                        if (!id) return;
                        this.highlight(id);
                    }
                }
            }, {
                key: "_onResize",
                value: function value(event) {
                    this.emit("stopInspecting");
                }
            }]), Agent;
        }(EventEmitter);
        module.exports = Agent;
    }, function (module, exports) {
        function EventEmitter() {
            this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0;
        }
        function isFunction(arg) {
            return "function" == typeof arg;
        }
        function isNumber(arg) {
            return "number" == typeof arg;
        }
        function isObject(arg) {
            return "object" == typeof arg && null !== arg;
        }
        function isUndefined(arg) {
            return void 0 === arg;
        }
        module.exports = EventEmitter, EventEmitter.EventEmitter = EventEmitter, EventEmitter.prototype._events = void 0, EventEmitter.prototype._maxListeners = void 0, EventEmitter.defaultMaxListeners = 10, EventEmitter.prototype.setMaxListeners = function (n) {
            if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError("n must be a positive number");
            return this._maxListeners = n, this;
        }, EventEmitter.prototype.emit = function (type) {
            var er, handler, len, args, i, listeners;
            if (this._events || (this._events = {}), "error" === type && (!this._events.error || isObject(this._events.error) && !this._events.error.length)) {
                if (er = arguments[1], er instanceof Error) throw er;
                var err = new Error('Uncaught, unspecified "error" event. (' + er + ")");
                throw err.context = er, err;
            }
            if (handler = this._events[type], isUndefined(handler)) return !1;
            if (isFunction(handler)) switch (arguments.length) {
                case 1:
                    handler.call(this);
                    break;

                case 2:
                    handler.call(this, arguments[1]);
                    break;

                case 3:
                    handler.call(this, arguments[1], arguments[2]);
                    break;

                default:
                    args = Array.prototype.slice.call(arguments, 1), handler.apply(this, args);
            } else if (isObject(handler)) for (args = Array.prototype.slice.call(arguments, 1), listeners = handler.slice(), len = listeners.length, i = 0; i < len; i++) {
                listeners[i].apply(this, args);
            }return !0;
        }, EventEmitter.prototype.addListener = function (type, listener) {
            var m;
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", type, isFunction(listener.listener) ? listener.listener : listener), this._events[type] ? isObject(this._events[type]) ? this._events[type].push(listener) : this._events[type] = [this._events[type], listener] : this._events[type] = listener, isObject(this._events[type]) && !this._events[type].warned && (m = isUndefined(this._maxListeners) ? EventEmitter.defaultMaxListeners : this._maxListeners, m && m > 0 && this._events[type].length > m && (this._events[type].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[type].length), "function" == typeof console.trace && console.trace())), this;
        }, EventEmitter.prototype.on = EventEmitter.prototype.addListener, EventEmitter.prototype.once = function (type, listener) {
            function g() {
                this.removeListener(type, g), fired || (fired = !0, listener.apply(this, arguments));
            }
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            var fired = !1;
            return g.listener = listener, this.on(type, g), this;
        }, EventEmitter.prototype.removeListener = function (type, listener) {
            var list, position, length, i;
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            if (!this._events || !this._events[type]) return this;
            if (list = this._events[type], length = list.length, position = -1, list === listener || isFunction(list.listener) && list.listener === listener) delete this._events[type], this._events.removeListener && this.emit("removeListener", type, listener);else if (isObject(list)) {
                for (i = length; i-- > 0;) {
                    if (list[i] === listener || list[i].listener && list[i].listener === listener) {
                        position = i;
                        break;
                    }
                }if (position < 0) return this;
                1 === list.length ? (list.length = 0, delete this._events[type]) : list.splice(position, 1), this._events.removeListener && this.emit("removeListener", type, listener);
            }
            return this;
        }, EventEmitter.prototype.removeAllListeners = function (type) {
            var key, listeners;
            if (!this._events) return this;
            if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[type] && delete this._events[type], this;
            if (0 === arguments.length) {
                for (key in this._events) {
                    "removeListener" !== key && this.removeAllListeners(key);
                }return this.removeAllListeners("removeListener"), this._events = {}, this;
            }
            if (listeners = this._events[type], isFunction(listeners)) this.removeListener(type, listeners);else if (listeners) for (; listeners.length;) {
                this.removeListener(type, listeners[listeners.length - 1]);
            }return delete this._events[type], this;
        }, EventEmitter.prototype.listeners = function (type) {
            var ret;
            return ret = this._events && this._events[type] ? isFunction(this._events[type]) ? [this._events[type]] : this._events[type].slice() : [];
        }, EventEmitter.prototype.listenerCount = function (type) {
            if (this._events) {
                var evlistener = this._events[type];
                if (isFunction(evlistener)) return 1;
                if (evlistener) return evlistener.length;
            }
            return 0;
        }, EventEmitter.listenerCount = function (emitter, type) {
            return emitter.listenerCount(type);
        };
    }, function (module, exports) {
        "use strict";

        function toObject(val) {
            if (null === val || void 0 === val) throw new TypeError("Object.assign cannot be called with null or undefined");
            return Object(val);
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty,
            propIsEnumerable = Object.prototype.propertyIsEnumerable;
        module.exports = Object.assign || function (target, source) {
            for (var from, symbols, to = toObject(target), s = 1; s < arguments.length; s++) {
                from = Object(arguments[s]);
                for (var key in from) {
                    hasOwnProperty.call(from, key) && (to[key] = from[key]);
                }if (Object.getOwnPropertySymbols) {
                    symbols = Object.getOwnPropertySymbols(from);
                    for (var i = 0; i < symbols.length; i++) {
                        propIsEnumerable.call(from, symbols[i]) && (to[symbols[i]] = from[symbols[i]]);
                    }
                }
            }
            return to;
        };
    }, function (module, exports) {
        "use strict";

        function guid() {
            return "g" + Math.random().toString(16).substr(2);
        }
        module.exports = guid;
    }, function (module, exports) {
        "use strict";

        function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }return arr2;
            }
            return Array.from(arr);
        }
        function getIn(base, path) {
            return path.reduce(function (obj, attr) {
                if (obj) {
                    if (obj.hasOwnProperty(attr)) return obj[attr];
                    if ("function" == typeof obj[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) return [].concat(_toConsumableArray(obj))[attr];
                }
                return null;
            }, base);
        }
        module.exports = getIn;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }return arr2;
            }
            return Array.from(arr);
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function getWindowFunction(name, polyfill) {
            return String(window[name]).indexOf("[native code]") === -1 ? polyfill : window[name];
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        },
            _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            consts = __webpack_require__(7),
            hydrate = __webpack_require__(26),
            dehydrate = __webpack_require__(27),
            getIn = __webpack_require__(5),
            performanceNow = __webpack_require__(28),
            lastRunTimeMS = 5,
            cancelIdleCallback = getWindowFunction("cancelIdleCallback", clearTimeout),
            requestIdleCallback = getWindowFunction("requestIdleCallback", function (cb, options) {
            var delayMS = 3e3 * lastRunTimeMS;
            return delayMS > 500 && (delayMS = 500), setTimeout(function () {
                var startTime = performanceNow();
                cb({
                    didTimeout: !1,
                    timeRemaining: function timeRemaining() {
                        return 1 / 0;
                    }
                });
                var endTime = performanceNow();
                lastRunTimeMS = (endTime - startTime) / 1e3;
            }, delayMS);
        }),
            Bridge = function () {
            function Bridge(wall) {
                _classCallCheck(this, Bridge), this._cbs = new Map(), this._inspectables = new Map(), this._cid = 0, this._listeners = {}, this._buffer = [], this._flushHandle = null, this._callers = {}, this._paused = !1, this._wall = wall, wall.listen(this._handleMessage.bind(this));
            }
            return _createClass(Bridge, [{
                key: "inspect",
                value: function value(id, path, cb) {
                    var _cid = this._cid++;
                    this._cbs.set(_cid, function (data, cleaned, proto, protoclean) {
                        cleaned.length && hydrate(data, cleaned), proto && protoclean.length && hydrate(proto, protoclean), proto && (data[consts.proto] = proto), cb(data);
                    }), this._wall.send({
                        type: "inspect",
                        callback: _cid,
                        path: path,
                        id: id
                    });
                }
            }, {
                key: "call",
                value: function value(name, args, cb) {
                    var _cid = this._cid++;
                    this._cbs.set(_cid, cb), this._wall.send({
                        type: "call",
                        callback: _cid,
                        args: args,
                        name: name
                    });
                }
            }, {
                key: "onCall",
                value: function value(name, handler) {
                    if (this._callers[name]) throw new Error("only one call handler per call name allowed");
                    this._callers[name] = handler;
                }
            }, {
                key: "pause",
                value: function value() {
                    this._wall.send({
                        type: "pause"
                    });
                }
            }, {
                key: "resume",
                value: function value() {
                    this._wall.send({
                        type: "resume"
                    });
                }
            }, {
                key: "setInspectable",
                value: function value(id, data) {
                    var prev = this._inspectables.get(id);
                    return prev ? void this._inspectables.set(id, _extends({}, prev, data)) : void this._inspectables.set(id, data);
                }
            }, {
                key: "send",
                value: function value(evt, data) {
                    this._buffer.push({
                        evt: evt,
                        data: data
                    }), this.scheduleFlush();
                }
            }, {
                key: "scheduleFlush",
                value: function value() {
                    if (!this._flushHandle && this._buffer.length) {
                        var timeout = this._paused ? 5e3 : 500;
                        this._flushHandle = requestIdleCallback(this.flushBufferWhileIdle.bind(this), {
                            timeout: timeout
                        });
                    }
                }
            }, {
                key: "cancelFlush",
                value: function value() {
                    this._flushHandle && (cancelIdleCallback(this._flushHandle), this._flushHandle = null);
                }
            }, {
                key: "flushBufferWhileIdle",
                value: function value(deadline) {
                    this._flushHandle = null;
                    for (var chunkCount = this._paused ? 20 : 10, chunkSize = Math.round(this._buffer.length / chunkCount), minChunkSize = this._paused ? 50 : 100; this._buffer.length && (deadline.timeRemaining() > 0 || deadline.didTimeout);) {
                        var take = Math.min(this._buffer.length, Math.max(minChunkSize, chunkSize)),
                            currentBuffer = this._buffer.splice(0, take);
                        this.flushBufferSlice(currentBuffer);
                    }
                    this._buffer.length && this.scheduleFlush();
                }
            }, {
                key: "flushBufferSlice",
                value: function value(bufferSlice) {
                    var _this = this,
                        events = bufferSlice.map(function (_ref) {
                        var evt = _ref.evt,
                            data = _ref.data,
                            cleaned = [],
                            san = dehydrate(data, cleaned);
                        return cleaned.length && _this.setInspectable(data.id, data), {
                            type: "event",
                            evt: evt,
                            data: san,
                            cleaned: cleaned
                        };
                    });
                    this._wall.send({
                        type: "many-events",
                        events: events
                    });
                }
            }, {
                key: "forget",
                value: function value(id) {
                    this._inspectables["delete"](id);
                }
            }, {
                key: "on",
                value: function value(evt, fn) {
                    this._listeners[evt] ? this._listeners[evt].push(fn) : this._listeners[evt] = [fn];
                }
            }, {
                key: "off",
                value: function value(evt, fn) {
                    if (this._listeners[evt]) {
                        var ix = this._listeners[evt].indexOf(fn);
                        ix !== -1 && this._listeners[evt].splice(ix, 1);
                    }
                }
            }, {
                key: "once",
                value: function value(evt, fn) {
                    var self = this,
                        listener = function listener() {
                        fn.apply(this, arguments), self.off(evt, listener);
                    };
                    this.on(evt, listener);
                }
            }, {
                key: "_handleMessage",
                value: function value(payload) {
                    var _this2 = this;
                    if ("resume" === payload.type) return this._paused = !1, void this.scheduleFlush();
                    if ("pause" === payload.type) return this._paused = !0, void this.cancelFlush();
                    if ("callback" === payload.type) {
                        var callback = this._cbs.get(payload.id);
                        return void (callback && (callback.apply(void 0, _toConsumableArray(payload.args)), this._cbs["delete"](payload.id)));
                    }
                    if ("call" === payload.type) return void this._handleCall(payload.name, payload.args, payload.callback);
                    if ("inspect" === payload.type) return void this._inspectResponse(payload.id, payload.path, payload.callback);
                    if ("event" === payload.type) {
                        payload.cleaned && hydrate(payload.data, payload.cleaned);
                        var fns = this._listeners[payload.evt],
                            data = payload.data;
                        fns && fns.forEach(function (fn) {
                            return fn(data);
                        });
                    }
                    "many-events" === payload.type && payload.events.forEach(function (event) {
                        event.cleaned && hydrate(event.data, event.cleaned);
                        var handlers = _this2._listeners[event.evt];
                        handlers && handlers.forEach(function (fn) {
                            return fn(event.data);
                        });
                    });
                }
            }, {
                key: "_handleCall",
                value: function value(name, args, callback) {
                    if (!this._callers[name]) return void console.warn('unknown call: "' + name + '"');
                    args = Array.isArray(args) ? args : [args];
                    var result;
                    try {
                        result = this._callers[name].apply(null, args);
                    } catch (e) {
                        return void console.error("Failed to call", e);
                    }
                    this._wall.send({
                        type: "callback",
                        id: callback,
                        args: [result]
                    });
                }
            }, {
                key: "_inspectResponse",
                value: function value(id, path, callback) {
                    var inspectable = this._inspectables.get(id),
                        result = {},
                        cleaned = [],
                        proto = null,
                        protoclean = [];
                    if (inspectable) {
                        var val = getIn(inspectable, path),
                            protod = !1,
                            isFn = "function" == typeof val;
                        if (val && "function" == typeof val[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) {
                            var iterVal = Object.create({}),
                                count = 0,
                                _iteratorNormalCompletion = !0,
                                _didIteratorError = !1,
                                _iteratorError = void 0;
                            try {
                                for (var _step, _iterator = val[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = !0) {
                                    var entry = _step.value;
                                    if (count > 100) break;
                                    iterVal[count] = entry, count++;
                                }
                            } catch (err) {
                                _didIteratorError = !0, _iteratorError = err;
                            } finally {
                                try {
                                    !_iteratorNormalCompletion && _iterator["return"] && _iterator["return"]();
                                } finally {
                                    if (_didIteratorError) throw _iteratorError;
                                }
                            }
                            val = iterVal;
                        }
                        if (Object.getOwnPropertyNames(val).forEach(function (name) {
                            "__proto__" === name && (protod = !0), (!isFn || "arguments" !== name && "callee" !== name && "caller" !== name) && (result[name] = dehydrate(val[name], cleaned, [name]));
                        }), !protod && val.__proto__ && "Object" !== val.constructor.name) {
                            var newProto = {},
                                pIsFn = "function" == typeof val.__proto__;
                            Object.getOwnPropertyNames(val.__proto__).forEach(function (name) {
                                (!pIsFn || "arguments" !== name && "callee" !== name && "caller" !== name) && (newProto[name] = dehydrate(val.__proto__[name], protoclean, [name]));
                            }), proto = newProto;
                        }
                    }
                    this._wall.send({
                        type: "callback",
                        id: callback,
                        args: [result, cleaned, proto, protoclean]
                    });
                }
            }]), Bridge;
        }();
        module.exports = Bridge;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var _Symbol = __webpack_require__(8);
        module.exports = {
            name: _Symbol("name"),
            type: _Symbol("type"),
            inspected: _Symbol("inspected"),
            meta: _Symbol("meta"),
            proto: _Symbol("proto")
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(9)() ? Symbol : __webpack_require__(10);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            var symbol;
            if ("function" != typeof Symbol) return !1;
            symbol = Symbol("test symbol");
            try {
                String(symbol);
            } catch (e) {
                return !1;
            }
            return "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") || "object" == typeof (typeof Symbol === "function" ? Symbol.isConcatSpreadable : "@@isConcatSpreadable") && "object" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") && "object" == typeof (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") && "object" == typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") && "object" == typeof (typeof Symbol === "function" ? Symbol.unscopables : "@@unscopables");
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var NativeSymbol,
            SymbolPolyfill,
            _HiddenSymbol,
            d = __webpack_require__(11),
            validateSymbol = __webpack_require__(24),
            create = Object.create,
            defineProperties = Object.defineProperties,
            defineProperty = Object.defineProperty,
            objPrototype = Object.prototype,
            globalSymbols = create(null);
        "function" == typeof Symbol && (NativeSymbol = Symbol);
        var generateName = function () {
            var created = create(null);
            return function (desc) {
                for (var name, ie11BugWorkaround, postfix = 0; created[desc + (postfix || "")];) {
                    ++postfix;
                }return desc += postfix || "", created[desc] = !0, name = "@@" + desc, defineProperty(objPrototype, name, d.gs(null, function (value) {
                    ie11BugWorkaround || (ie11BugWorkaround = !0, defineProperty(this, name, d(value)), ie11BugWorkaround = !1);
                })), name;
            };
        }();
        _HiddenSymbol = function HiddenSymbol(description) {
            if (this instanceof _HiddenSymbol) throw new TypeError("TypeError: Symbol is not a constructor");
            return SymbolPolyfill(description);
        }, module.exports = SymbolPolyfill = function Symbol(description) {
            var symbol;
            if (this instanceof Symbol) throw new TypeError("TypeError: Symbol is not a constructor");
            return symbol = create(_HiddenSymbol.prototype), description = void 0 === description ? "" : String(description), defineProperties(symbol, {
                __description__: d("", description),
                __name__: d("", generateName(description))
            });
        }, defineProperties(SymbolPolyfill, {
            "for": d(function (key) {
                return globalSymbols[key] ? globalSymbols[key] : globalSymbols[key] = SymbolPolyfill(String(key));
            }),
            keyFor: d(function (s) {
                var key;
                validateSymbol(s);
                for (key in globalSymbols) {
                    if (globalSymbols[key] === s) return key;
                }
            }),
            hasInstance: d("", NativeSymbol && NativeSymbol.hasInstance || SymbolPolyfill("hasInstance")),
            isConcatSpreadable: d("", NativeSymbol && NativeSymbol.isConcatSpreadable || SymbolPolyfill("isConcatSpreadable")),
            iterator: d("", NativeSymbol && NativeSymbol.iterator || SymbolPolyfill("iterator")),
            match: d("", NativeSymbol && NativeSymbol.match || SymbolPolyfill("match")),
            replace: d("", NativeSymbol && NativeSymbol.replace || SymbolPolyfill("replace")),
            search: d("", NativeSymbol && NativeSymbol.search || SymbolPolyfill("search")),
            species: d("", NativeSymbol && NativeSymbol.species || SymbolPolyfill("species")),
            split: d("", NativeSymbol && NativeSymbol.split || SymbolPolyfill("split")),
            toPrimitive: d("", NativeSymbol && NativeSymbol.toPrimitive || SymbolPolyfill("toPrimitive")),
            toStringTag: d("", NativeSymbol && NativeSymbol.toStringTag || SymbolPolyfill("toStringTag")),
            unscopables: d("", NativeSymbol && NativeSymbol.unscopables || SymbolPolyfill("unscopables"))
        }), defineProperties(_HiddenSymbol.prototype, {
            constructor: d(SymbolPolyfill),
            toString: d("", function () {
                return this.__name__;
            })
        }), defineProperties(SymbolPolyfill.prototype, {
            toString: d(function () {
                return "Symbol (" + validateSymbol(this).__description__ + ")";
            }),
            valueOf: d(function () {
                return validateSymbol(this);
            })
        }), defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d("", function () {
            return validateSymbol(this);
        })), defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d("c", "Symbol")), defineProperty(_HiddenSymbol.prototype, SymbolPolyfill.toStringTag, d("c", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])), defineProperty(_HiddenSymbol.prototype, SymbolPolyfill.toPrimitive, d("c", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var d,
            assign = __webpack_require__(12),
            normalizeOpts = __webpack_require__(19),
            isCallable = __webpack_require__(20),
            contains = __webpack_require__(21);
        d = module.exports = function (dscr, value) {
            var c, e, w, options, desc;
            return arguments.length < 2 || "string" != typeof dscr ? (options = value, value = dscr, dscr = null) : options = arguments[2], null == dscr ? (c = w = !0, e = !1) : (c = contains.call(dscr, "c"), e = contains.call(dscr, "e"), w = contains.call(dscr, "w")), desc = {
                value: value,
                configurable: c,
                enumerable: e,
                writable: w
            }, options ? assign(normalizeOpts(options), desc) : desc;
        }, d.gs = function (dscr, get, set) {
            var c, e, options, desc;
            return "string" != typeof dscr ? (options = set, set = get, get = dscr, dscr = null) : options = arguments[3], null == get ? get = void 0 : isCallable(get) ? null == set ? set = void 0 : isCallable(set) || (options = set, set = void 0) : (options = get, get = set = void 0), null == dscr ? (c = !0, e = !1) : (c = contains.call(dscr, "c"), e = contains.call(dscr, "e")), desc = {
                get: get,
                set: set,
                configurable: c,
                enumerable: e
            }, options ? assign(normalizeOpts(options), desc) : desc;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(13)() ? Object.assign : __webpack_require__(14);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            var obj,
                assign = Object.assign;
            return "function" == typeof assign && (obj = {
                foo: "raz"
            }, assign(obj, {
                bar: "dwa"
            }, {
                trzy: "trzy"
            }), obj.foo + obj.bar + obj.trzy === "razdwatrzy");
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var keys = __webpack_require__(15),
            value = __webpack_require__(18),
            max = Math.max;
        module.exports = function (dest, src) {
            var error,
                i,
                assign,
                l = max(arguments.length, 2);
            for (dest = Object(value(dest)), assign = function assign(key) {
                try {
                    dest[key] = src[key];
                } catch (e) {
                    error || (error = e);
                }
            }, i = 1; i < l; ++i) {
                src = arguments[i], keys(src).forEach(assign);
            }if (void 0 !== error) throw error;
            return dest;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(16)() ? Object.keys : __webpack_require__(17);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            try {
                return Object.keys("primitive"), !0;
            } catch (e) {
                return !1;
            }
        };
    }, function (module, exports) {
        "use strict";

        var keys = Object.keys;
        module.exports = function (object) {
            return keys(null == object ? object : Object(object));
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (value) {
            if (null == value) throw new TypeError("Cannot use null or undefined");
            return value;
        };
    }, function (module, exports) {
        "use strict";

        var forEach = Array.prototype.forEach,
            create = Object.create,
            process = function process(src, obj) {
            var key;
            for (key in src) {
                obj[key] = src[key];
            }
        };
        module.exports = function (options) {
            var result = create(null);
            return forEach.call(arguments, function (options) {
                null != options && process(Object(options), result);
            }), result;
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (obj) {
            return "function" == typeof obj;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(22)() ? String.prototype.contains : __webpack_require__(23);
    }, function (module, exports) {
        "use strict";

        var str = "razdwatrzy";
        module.exports = function () {
            return "function" == typeof str.contains && str.contains("dwa") === !0 && str.contains("foo") === !1;
        };
    }, function (module, exports) {
        "use strict";

        var indexOf = String.prototype.indexOf;
        module.exports = function (searchString) {
            return indexOf.call(this, searchString, arguments[1]) > -1;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var isSymbol = __webpack_require__(25);
        module.exports = function (value) {
            if (!isSymbol(value)) throw new TypeError(value + " is not a symbol");
            return value;
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (x) {
            return x && ("symbol" == typeof x || "Symbol" === x["@@toStringTag"]) || !1;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function hydrate(data, cleaned) {
            cleaned.forEach(function (path) {
                var last = path.pop(),
                    obj = path.reduce(function (obj_, attr) {
                    return obj_ ? obj_[attr] : null;
                }, data);
                if (obj && obj[last]) {
                    var replace = {};
                    replace[consts.name] = obj[last].name, replace[consts.type] = obj[last].type, replace[consts.meta] = obj[last].meta, replace[consts.inspected] = !1, obj[last] = replace;
                }
            });
        }
        var consts = __webpack_require__(7);
        module.exports = hydrate;
    }, function (module, exports) {
        "use strict";

        function getPropType(data) {
            if (!data) return null;
            var type = "undefined" == typeof data ? "undefined" : _typeof(data);
            if ("object" === type) {
                if (data._reactFragment) return "react_fragment";
                if (Array.isArray(data)) return "array";
                if (ArrayBuffer.isView(data)) return data instanceof DataView ? "data_view" : "typed_array";
                if (data instanceof ArrayBuffer) return "array_buffer";
                if ("function" == typeof data[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) return "iterator";
                if ("[object Date]" === Object.prototype.toString.call(data)) return "date";
            }
            return type;
        }
        function createDehydrated(type, data, cleaned, path) {
            var meta = {};
            return "array" !== type && "typed_array" !== type || (meta.length = data.length), "iterator" !== type && "typed_array" !== type || (meta.readOnly = !0), cleaned.push(path), {
                type: type,
                meta: meta,
                name: data.constructor && "Object" !== data.constructor.name ? data.constructor.name : ""
            };
        }
        function dehydrate(data, cleaned) {
            var path = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                level = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                type = getPropType(data);
            switch (type) {
                case "function":
                    return cleaned.push(path), {
                        name: data.name,
                        type: "function"
                    };

                case "string":
                    return data.length <= 500 ? data : data.slice(0, 500) + "...";

                case "symbol":
                    return cleaned.push(path), {
                        type: "symbol",
                        name: data.toString()
                    };

                case "react_fragment":
                    return "A React Fragment";

                case "array_buffer":
                case "data_view":
                    return cleaned.push(path), {
                        type: type,
                        name: "data_view" === type ? "DataView" : "ArrayBuffer",
                        meta: {
                            length: data.byteLength,
                            uninspectable: !0
                        }
                    };

                case "array":
                    return level > 2 ? createDehydrated(type, data, cleaned, path) : data.map(function (item, i) {
                        return dehydrate(item, cleaned, path.concat([i]), level + 1);
                    });

                case "typed_array":
                case "iterator":
                    return createDehydrated(type, data, cleaned, path);

                case "date":
                    return cleaned.push(path), {
                        name: data.toString(),
                        type: "date",
                        meta: {
                            uninspectable: !0
                        }
                    };

                case "object":
                    if (level > 2 || data.constructor && "function" == typeof data.constructor && "Object" !== data.constructor.name) return createDehydrated(type, data, cleaned, path);
                    var res = {};
                    for (var name in data) {
                        res[name] = dehydrate(data[name], cleaned, path.concat([name]), level + 1);
                    }return res;

                default:
                    return data;
            }
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        };
        module.exports = dehydrate;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var performanceNow,
            performance = __webpack_require__(29);
        performanceNow = performance.now ? function () {
            return performance.now();
        } : function () {
            return Date.now();
        }, module.exports = performanceNow;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var performance,
            ExecutionEnvironment = __webpack_require__(30);
        ExecutionEnvironment.canUseDOM && (performance = window.performance || window.msPerformance || window.webkitPerformance), module.exports = performance || {};
    }, function (module, exports) {
        "use strict";

        var canUseDOM = !("undefined" == typeof window || !window.document || !window.document.createElement),
            ExecutionEnvironment = {
            canUseDOM: canUseDOM,
            canUseWorkers: "undefined" != typeof Worker,
            canUseEventListeners: canUseDOM && !(!window.addEventListener && !window.attachEvent),
            canUseViewport: canUseDOM && !!window.screen,
            isInWorker: !canUseDOM
        };
        module.exports = ExecutionEnvironment;
    }, function (module, exports) {
        "use strict";

        function installGlobalHook(window) {
            function detectReactBuildType(renderer) {
                try {
                    var toString = Function.prototype.toString;
                    if ("string" == typeof renderer.version) {
                        if (renderer.bundleType > 0) return "development";
                        var findFiberCode = toString.call(renderer.findFiberByHostInstance);
                        return 0 !== findFiberCode.indexOf("function") ? "production" : findFiberCode.indexOf("getClosestInstanceFromNode") !== -1 ? "unminified" : "production";
                    }
                    if (renderer.Mount && renderer.Mount._renderNewRootComponent) {
                        var renderRootCode = toString.call(renderer.Mount._renderNewRootComponent);
                        return 0 !== renderRootCode.indexOf("function") ? "production" : renderRootCode.indexOf("storedMeasure") !== -1 ? "development" : renderRootCode.indexOf("should be a pure function") !== -1 ? renderRootCode.indexOf("NODE_ENV") !== -1 ? "development" : renderRootCode.indexOf("development") !== -1 ? "development" : renderRootCode.indexOf("true") !== -1 ? "development" : renderRootCode.indexOf("nextElement") !== -1 || renderRootCode.indexOf("nextComponent") !== -1 ? "unminified" : "development" : renderRootCode.indexOf("nextElement") !== -1 || renderRootCode.indexOf("nextComponent") !== -1 ? "unminified" : renderRootCode.indexOf("._registerComponent") !== -1 ? "outdated" : "production";
                    }
                } catch (err) {}
                return "production";
            }
            if (!window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
                var hook = {
                    _renderers: {},
                    helpers: {},
                    inject: function inject(renderer) {
                        var id = Math.random().toString(16).slice(2);
                        hook._renderers[id] = renderer;
                        var reactBuildType = detectReactBuildType(renderer);
                        return hook.emit("renderer", {
                            id: id,
                            renderer: renderer,
                            reactBuildType: reactBuildType
                        }), id;
                    },
                    _listeners: {},
                    sub: function sub(evt, fn) {
                        return hook.on(evt, fn), function () {
                            return hook.off(evt, fn);
                        };
                    },
                    on: function on(evt, fn) {
                        hook._listeners[evt] || (hook._listeners[evt] = []), hook._listeners[evt].push(fn);
                    },
                    off: function off(evt, fn) {
                        if (hook._listeners[evt]) {
                            var ix = hook._listeners[evt].indexOf(fn);
                            ix !== -1 && hook._listeners[evt].splice(ix, 1), hook._listeners[evt].length || (hook._listeners[evt] = null);
                        }
                    },
                    emit: function emit(evt, data) {
                        hook._listeners[evt] && hook._listeners[evt].map(function (fn) {
                            return fn(data);
                        });
                    },
                    supportsFiber: !0,
                    _fiberRoots: {},
                    getFiberRoots: function getFiberRoots(rendererID) {
                        var roots = hook._fiberRoots;
                        return roots[rendererID] || (roots[rendererID] = new Set()), roots[rendererID];
                    },
                    onCommitFiberUnmount: function onCommitFiberUnmount(rendererID, fiber) {
                        hook.helpers[rendererID] && hook.helpers[rendererID].handleCommitFiberUnmount(fiber);
                    },
                    onCommitFiberRoot: function onCommitFiberRoot(rendererID, root) {
                        var mountedRoots = hook.getFiberRoots(rendererID),
                            current = root.current,
                            isKnownRoot = mountedRoots.has(root),
                            isUnmounting = null == current.memoizedState || null == current.memoizedState.element;
                        isKnownRoot || isUnmounting ? isKnownRoot && isUnmounting && mountedRoots["delete"](root) : mountedRoots.add(root), hook.helpers[rendererID] && hook.helpers[rendererID].handleCommitFiberRoot(root);
                    }
                };
                Object.defineProperty(window, "__REACT_DEVTOOLS_GLOBAL_HOOK__", {
                    value: hook
                });
            }
        }
        module.exports = installGlobalHook;
    }, function (module, exports) {
        "use strict";

        function installRelayHook(window) {
            function decorate(obj, attr, fn) {
                var old = obj[attr];
                obj[attr] = function () {
                    var res = old.apply(this, arguments);
                    return fn.apply(this, arguments), res;
                };
            }
            function emit(name, data) {
                _eventQueue.push({
                    name: name,
                    data: data
                }), _listener && _listener(name, data);
            }
            function setRequestListener(listener) {
                if (_listener) throw new Error("Relay Devtools: Called only call setRequestListener once.");
                return _listener = listener, _eventQueue.forEach(function (_ref) {
                    var name = _ref.name,
                        data = _ref.data;
                    listener(name, data);
                }), function () {
                    _listener = null;
                };
            }
            function recordRequest(type, start, request, requestNumber) {
                var id = Math.random().toString(16).substr(2);
                request.then(function (response) {
                    emit("relay:success", {
                        id: id,
                        end: performanceNow(),
                        response: response.response
                    });
                }, function (error) {
                    emit("relay:failure", {
                        id: id,
                        end: performanceNow(),
                        error: error
                    });
                });
                for (var textChunks = [], text = request.getQueryString(); text.length > 0;) {
                    textChunks.push(text.substr(0, TEXT_CHUNK_LENGTH)), text = text.substr(TEXT_CHUNK_LENGTH);
                }return {
                    id: id,
                    name: request.getDebugName(),
                    requestNumber: requestNumber,
                    start: start,
                    text: textChunks,
                    type: type,
                    variables: request.getVariables()
                };
            }
            function instrumentRelayRequests(relayInternals) {
                var NetworkLayer = relayInternals.NetworkLayer;
                decorate(NetworkLayer, "sendMutation", function (mutation) {
                    requestNumber++, emit("relay:pending", [recordRequest("mutation", performanceNow(), mutation, requestNumber)]);
                }), decorate(NetworkLayer, "sendQueries", function (queries) {
                    requestNumber++;
                    var start = performanceNow();
                    emit("relay:pending", queries.map(function (query) {
                        return recordRequest("query", start, query, requestNumber);
                    }));
                });
                var instrumented = {};
                for (var key in relayInternals) {
                    relayInternals.hasOwnProperty(key) && (instrumented[key] = relayInternals[key]);
                }return instrumented.setRequestListener = setRequestListener, instrumented;
            }
            var performanceNow,
                performance = window.performance;
            performanceNow = performance && "function" == typeof performance.now ? function () {
                return performance.now();
            } : function () {
                return Date.now();
            };
            var TEXT_CHUNK_LENGTH = 500,
                hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook) {
                var _eventQueue = [],
                    _listener = null,
                    requestNumber = 0,
                    _relayInternals = null;
                Object.defineProperty(hook, "_relayInternals", {
                    configurable: !0,
                    set: function set(relayInternals) {
                        _relayInternals = instrumentRelayRequests(relayInternals);
                    },
                    get: function get() {
                        return _relayInternals;
                    }
                });
            }
        }
        module.exports = installRelayHook;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var setupBackend = __webpack_require__(34);
        module.exports = function (hook, agent) {
            var subs = [hook.sub("renderer-attached", function (_ref) {
                var id = _ref.id,
                    helpers = (_ref.renderer, _ref.helpers);
                agent.setReactInternals(id, helpers), helpers.walkTree(agent.onMounted.bind(agent, id), agent.addRoot.bind(agent, id));
            }), hook.sub("root", function (_ref2) {
                var renderer = _ref2.renderer,
                    internalInstance = _ref2.internalInstance;
                return agent.addRoot(renderer, internalInstance);
            }), hook.sub("mount", function (_ref3) {
                var renderer = _ref3.renderer,
                    internalInstance = _ref3.internalInstance,
                    data = _ref3.data;
                return agent.onMounted(renderer, internalInstance, data);
            }), hook.sub("update", function (_ref4) {
                var internalInstance = (_ref4.renderer, _ref4.internalInstance),
                    data = _ref4.data;
                return agent.onUpdated(internalInstance, data);
            }), hook.sub("unmount", function (_ref5) {
                var internalInstance = (_ref5.renderer, _ref5.internalInstance);
                return agent.onUnmounted(internalInstance);
            })],
                success = setupBackend(hook);
            success && (hook.emit("react-devtools", agent), hook.reactDevtoolsAgent = agent, agent.on("shutdown", function () {
                subs.forEach(function (fn) {
                    return fn();
                }), hook.reactDevtoolsAgent = null;
            }));
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var attachRenderer = __webpack_require__(35);
        module.exports = function (hook) {
            var oldReact = window.React && window.React.__internals;
            oldReact && 0 === Object.keys(hook._renderers).length && hook.inject(oldReact);
            for (var rid in hook._renderers) {
                hook.helpers[rid] = attachRenderer(hook, rid, hook._renderers[rid]), hook.emit("renderer-attached", {
                    id: rid,
                    renderer: hook._renderers[rid],
                    helpers: hook.helpers[rid]
                });
            }hook.on("renderer", function (_ref) {
                var id = _ref.id,
                    renderer = _ref.renderer;
                hook.helpers[id] = attachRenderer(hook, id, renderer), hook.emit("renderer-attached", {
                    id: id,
                    renderer: renderer,
                    helpers: hook.helpers[id]
                });
            });
            var shutdown = function shutdown() {
                for (var id in hook.helpers) {
                    hook.helpers[id].cleanup();
                }hook.off("shutdown", shutdown);
            };
            return hook.on("shutdown", shutdown), !0;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function attachRenderer(hook, rid, renderer) {
            var rootNodeIDMap = new Map(),
                extras = {},
                isPre013 = !renderer.Reconciler;
            if ("function" == typeof renderer.findFiberByHostInstance) return attachRendererFiber(hook, rid, renderer);
            renderer.Mount.findNodeHandle && renderer.Mount.nativeTagToRootNodeID ? (extras.getNativeFromReactElement = function (component) {
                return renderer.Mount.findNodeHandle(component);
            }, extras.getReactElementFromNative = function (nativeTag) {
                var id = renderer.Mount.nativeTagToRootNodeID(nativeTag);
                return rootNodeIDMap.get(id);
            }) : renderer.ComponentTree ? (extras.getNativeFromReactElement = function (component) {
                return renderer.ComponentTree.getNodeFromInstance(component);
            }, extras.getReactElementFromNative = function (node) {
                return renderer.ComponentTree.getClosestInstanceFromNode(node);
            }) : renderer.Mount.getID && renderer.Mount.getNode ? (extras.getNativeFromReactElement = function (component) {
                try {
                    return renderer.Mount.getNode(component._rootNodeID);
                } catch (e) {
                    return;
                }
            }, extras.getReactElementFromNative = function (node) {
                for (var id = renderer.Mount.getID(node); node && node.parentNode && !id;) {
                    node = node.parentNode, id = renderer.Mount.getID(node);
                }return rootNodeIDMap.get(id);
            }) : console.warn("Unknown react version (does not have getID), probably an unshimmed React Native");
            var oldMethods, oldRenderComponent, oldRenderRoot;
            return renderer.Mount._renderNewRootComponent ? oldRenderRoot = decorateResult(renderer.Mount, "_renderNewRootComponent", function (internalInstance) {
                hook.emit("root", {
                    renderer: rid,
                    internalInstance: internalInstance
                });
            }) : renderer.Mount.renderComponent && (oldRenderComponent = decorateResult(renderer.Mount, "renderComponent", function (internalInstance) {
                hook.emit("root", {
                    renderer: rid,
                    internalInstance: internalInstance._reactInternalInstance
                });
            })), renderer.Component ? (console.error("You are using a version of React with limited support in this version of the devtools.\nPlease upgrade to use at least 0.13, or you can downgrade to use the old version of the devtools:\ninstructions here https://github.com/facebook/react-devtools/tree/devtools-next#how-do-i-use-this-for-react--013"), oldMethods = decorateMany(renderer.Component.Mixin, {
                mountComponent: function mountComponent() {
                    var _this = this;
                    rootNodeIDMap.set(this._rootNodeID, this), setTimeout(function () {
                        hook.emit("mount", {
                            internalInstance: _this,
                            data: getData012(_this),
                            renderer: rid
                        });
                    }, 0);
                },
                updateComponent: function updateComponent() {
                    var _this2 = this;
                    setTimeout(function () {
                        hook.emit("update", {
                            internalInstance: _this2,
                            data: getData012(_this2),
                            renderer: rid
                        });
                    }, 0);
                },
                unmountComponent: function unmountComponent() {
                    hook.emit("unmount", {
                        internalInstance: this,
                        renderer: rid
                    }), rootNodeIDMap["delete"](this._rootNodeID, this);
                }
            })) : renderer.Reconciler && (oldMethods = decorateMany(renderer.Reconciler, {
                mountComponent: function mountComponent(internalInstance, rootID, transaction, context) {
                    var data = getData(internalInstance);
                    rootNodeIDMap.set(internalInstance._rootNodeID, internalInstance), hook.emit("mount", {
                        internalInstance: internalInstance,
                        data: data,
                        renderer: rid
                    });
                },
                performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, nextChild, transaction, context) {
                    hook.emit("update", {
                        internalInstance: internalInstance,
                        data: getData(internalInstance),
                        renderer: rid
                    });
                },
                receiveComponent: function receiveComponent(internalInstance, nextChild, transaction, context) {
                    hook.emit("update", {
                        internalInstance: internalInstance,
                        data: getData(internalInstance),
                        renderer: rid
                    });
                },
                unmountComponent: function unmountComponent(internalInstance) {
                    hook.emit("unmount", {
                        internalInstance: internalInstance,
                        renderer: rid
                    }), rootNodeIDMap["delete"](internalInstance._rootNodeID, internalInstance);
                }
            })), extras.walkTree = function (visit, visitRoot) {
                var onMount = function onMount(component, data) {
                    rootNodeIDMap.set(component._rootNodeID, component), visit(component, data);
                };
                walkRoots(renderer.Mount._instancesByReactRootID || renderer.Mount._instancesByContainerID, onMount, visitRoot, isPre013);
            }, extras.cleanup = function () {
                oldMethods && (renderer.Component ? restoreMany(renderer.Component.Mixin, oldMethods) : restoreMany(renderer.Reconciler, oldMethods)), oldRenderRoot && (renderer.Mount._renderNewRootComponent = oldRenderRoot), oldRenderComponent && (renderer.Mount.renderComponent = oldRenderComponent), oldMethods = null, oldRenderRoot = null, oldRenderComponent = null;
            }, extras;
        }
        function walkRoots(roots, onMount, onRoot, isPre013) {
            for (var name in roots) {
                walkNode(roots[name], onMount, isPre013), onRoot(roots[name]);
            }
        }
        function walkNode(internalInstance, onMount, isPre013) {
            var data = isPre013 ? getData012(internalInstance) : getData(internalInstance);
            data.children && Array.isArray(data.children) && data.children.forEach(function (child) {
                return walkNode(child, onMount, isPre013);
            }), onMount(internalInstance, data);
        }
        function decorateResult(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function (instance) {
                var res = old.apply(this, arguments);
                return fn(res), res;
            }, old;
        }
        function decorate(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function (instance) {
                var res = old.apply(this, arguments);
                return fn.apply(this, arguments), res;
            }, old;
        }
        function decorateMany(source, fns) {
            var olds = {};
            for (var name in fns) {
                olds[name] = decorate(source, name, fns[name]);
            }return olds;
        }
        function restoreMany(source, olds) {
            for (var name in olds) {
                source[name] = olds[name];
            }
        }
        var getData = __webpack_require__(36),
            getData012 = __webpack_require__(39),
            attachRendererFiber = __webpack_require__(40);
        module.exports = attachRenderer;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getData(internalInstance) {
            var children = null,
                props = null,
                state = null,
                context = null,
                updater = null,
                name = null,
                type = null,
                key = null,
                ref = null,
                source = null,
                text = null,
                publicInstance = null,
                nodeType = "Native";
            if ("object" !== ("undefined" == typeof internalInstance ? "undefined" : _typeof(internalInstance)) ? (nodeType = "Text", text = internalInstance + "") : null === internalInstance._currentElement || internalInstance._currentElement === !1 ? nodeType = "Empty" : internalInstance._renderedComponent ? (nodeType = "NativeWrapper", children = [internalInstance._renderedComponent], props = internalInstance._instance.props, state = internalInstance._instance.state, context = internalInstance._instance.context, context && 0 === Object.keys(context).length && (context = null)) : internalInstance._renderedChildren ? children = childrenList(internalInstance._renderedChildren) : internalInstance._currentElement && internalInstance._currentElement.props && (children = internalInstance._currentElement.props.children), !props && internalInstance._currentElement && internalInstance._currentElement.props && (props = internalInstance._currentElement.props), null != internalInstance._currentElement && (type = internalInstance._currentElement.type, internalInstance._currentElement.key && (key = String(internalInstance._currentElement.key)), source = internalInstance._currentElement._source, ref = internalInstance._currentElement.ref, "string" == typeof type ? (name = type, null != internalInstance._nativeNode && (publicInstance = internalInstance._nativeNode), null != internalInstance._hostNode && (publicInstance = internalInstance._hostNode)) : "function" == typeof type ? (nodeType = "Composite", name = getDisplayName(type), internalInstance._renderedComponent && (internalInstance._currentElement.props === internalInstance._renderedComponent._currentElement || internalInstance._currentElement.type.isReactTopLevelWrapper) && (nodeType = "Wrapper"), null === name && (name = "No display name")) : "string" == typeof internalInstance._stringText ? (nodeType = "Text", text = internalInstance._stringText) : name = getDisplayName(type)), internalInstance._instance) {
                var inst = internalInstance._instance;
                updater = {
                    setState: inst.setState && inst.setState.bind(inst),
                    forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),
                    setInProps: inst.forceUpdate && setInProps.bind(null, internalInstance),
                    setInState: inst.forceUpdate && setInState.bind(null, inst),
                    setInContext: inst.forceUpdate && setInContext.bind(null, inst)
                }, "function" == typeof type && (publicInstance = inst), inst._renderedChildren && (children = childrenList(inst._renderedChildren));
            }
            return "function" == typeof internalInstance.setNativeProps && (updater = {
                setNativeProps: function setNativeProps(nativeProps) {
                    internalInstance.setNativeProps(nativeProps);
                }
            }), {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: source,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(internalInst, path, value) {
            var element = internalInst._currentElement;
            internalInst._currentElement = _extends({}, element, {
                props: copyWithSet(element.props, path, value)
            }), internalInst._instance.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        function childrenList(children) {
            var res = [];
            for (var name in children) {
                res.push(children[name]);
            }return res;
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        },
            _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            copyWithSet = __webpack_require__(37),
            getDisplayName = __webpack_require__(38);
        module.exports = getData;
    }, function (module, exports) {
        "use strict";

        function copyWithSetImpl(obj, path, idx, value) {
            if (idx >= path.length) return value;
            var key = path[idx],
                updated = Array.isArray(obj) ? obj.slice() : _extends({}, obj);
            return updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value), updated;
        }
        function copyWithSet(obj, path, value) {
            return copyWithSetImpl(obj, path, 0, value);
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        };
        module.exports = copyWithSet;
    }, function (module, exports) {
        "use strict";

        function getDisplayName(type) {
            if (cachedDisplayNames.has(type)) return cachedDisplayNames.get(type);
            var displayName = type.displayName || type.name || "Unknown",
                match = displayName.match(FB_MODULE_RE);
            if (match) {
                var componentName = match[1],
                    moduleName = match[2];
                componentName && moduleName && (moduleName === componentName || moduleName.startsWith(componentName + ".")) && (displayName = componentName);
            }
            return cachedDisplayNames.set(type, displayName), displayName;
        }
        var FB_MODULE_RE = /^(.*) \[from (.*)\]$/,
            cachedDisplayNames = new WeakMap();
        module.exports = getDisplayName;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getData012(internalInstance) {
            var children = null,
                props = internalInstance.props,
                state = internalInstance.state,
                context = internalInstance.context,
                updater = null,
                name = null,
                type = null,
                key = null,
                ref = null,
                text = null,
                publicInstance = null,
                nodeType = "Native";
            return internalInstance._renderedComponent ? (nodeType = "Wrapper", children = [internalInstance._renderedComponent], context && 0 === Object.keys(context).length && (context = null)) : internalInstance._renderedChildren ? (name = internalInstance.constructor.displayName, children = childrenList(internalInstance._renderedChildren)) : "string" == typeof props.children && (name = internalInstance.constructor.displayName, children = props.children, nodeType = "Native"), !props && internalInstance._currentElement && internalInstance._currentElement.props && (props = internalInstance._currentElement.props), internalInstance._currentElement && (type = internalInstance._currentElement.type, internalInstance._currentElement.key && (key = String(internalInstance._currentElement.key)), ref = internalInstance._currentElement.ref, "string" == typeof type ? name = type : (nodeType = "Composite", name = type.displayName, name || (name = "No display name"))), name || (name = internalInstance.constructor.displayName || "No display name", nodeType = "Composite"), "string" == typeof props && (nodeType = "Text", text = props, props = null, name = null), internalInstance.forceUpdate && (updater = {
                setState: internalInstance.setState.bind(internalInstance),
                forceUpdate: internalInstance.forceUpdate.bind(internalInstance),
                setInProps: internalInstance.forceUpdate && setInProps.bind(null, internalInstance),
                setInState: internalInstance.forceUpdate && setInState.bind(null, internalInstance),
                setInContext: internalInstance.forceUpdate && setInContext.bind(null, internalInstance)
            }, publicInstance = internalInstance), {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: null,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(inst, path, value) {
            inst.props = copyWithSet(inst.props, path, value), inst.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        function childrenList(children) {
            var res = [];
            for (var name in children) {
                res.push(children[name]);
            }return res;
        }
        var copyWithSet = __webpack_require__(37);
        module.exports = getData012;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function attachRendererFiber(hook, rid, renderer) {
            function getOpaqueNode(fiber) {
                if (opaqueNodes.has(fiber)) return fiber;
                var alternate = fiber.alternate;
                return null != alternate && opaqueNodes.has(alternate) ? alternate : (opaqueNodes.add(fiber), fiber);
            }
            function hasDataChanged(prevFiber, nextFiber) {
                if (prevFiber.tag === ClassComponent) {
                    if (prevFiber.stateNode.context !== nextFiber.stateNode.context) return !0;
                    if (null != nextFiber.updateQueue && nextFiber.updateQueue.hasForceUpdate) return !0;
                }
                return prevFiber.memoizedProps !== nextFiber.memoizedProps || prevFiber.memoizedState !== nextFiber.memoizedState || prevFiber.ref !== nextFiber.ref || prevFiber._debugSource !== nextFiber._debugSource;
            }
            function flushPendingEvents() {
                var events = pendingEvents;
                pendingEvents = [];
                for (var i = 0; i < events.length; i++) {
                    var event = events[i];
                    hook.emit(event.type, event);
                }
            }
            function enqueueMount(fiber) {
                pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    data: getDataFiber(fiber, getOpaqueNode),
                    renderer: rid,
                    type: "mount"
                });
                var isRoot = fiber.tag === HostRoot;
                isRoot && pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    renderer: rid,
                    type: "root"
                });
            }
            function enqueueUpdateIfNecessary(fiber, hasChildOrderChanged) {
                (hasChildOrderChanged || hasDataChanged(fiber.alternate, fiber)) && pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    data: getDataFiber(fiber, getOpaqueNode),
                    renderer: rid,
                    type: "update"
                });
            }
            function enqueueUnmount(fiber) {
                var isRoot = fiber.tag === HostRoot,
                    opaqueNode = getOpaqueNode(fiber),
                    event = {
                    internalInstance: opaqueNode,
                    renderer: rid,
                    type: "unmount"
                };
                isRoot ? pendingEvents.push(event) : pendingEvents.unshift(event), opaqueNodes["delete"](opaqueNode);
            }
            function mountFiber(fiber) {
                var node = fiber;
                outer: for (;;) {
                    if (node.child) node.child["return"] = node, node = node.child;else {
                        if (enqueueMount(node), node == fiber) return;
                        if (!node.sibling) {
                            for (; node["return"];) {
                                if (node = node["return"], enqueueMount(node), node == fiber) return;
                                if (node.sibling) {
                                    node.sibling["return"] = node["return"], node = node.sibling;
                                    continue outer;
                                }
                            }
                            return;
                        }
                        node.sibling["return"] = node["return"], node = node.sibling;
                    }
                }
            }
            function updateFiber(nextFiber, prevFiber) {
                var hasChildOrderChanged = !1;
                if (nextFiber.child !== prevFiber.child) {
                    for (var nextChild = nextFiber.child, prevChildAtSameIndex = prevFiber.child; nextChild;) {
                        if (nextChild.alternate) {
                            var prevChild = nextChild.alternate;
                            updateFiber(nextChild, prevChild), hasChildOrderChanged || prevChild === prevChildAtSameIndex || (hasChildOrderChanged = !0);
                        } else mountFiber(nextChild), hasChildOrderChanged || (hasChildOrderChanged = !0);
                        nextChild = nextChild.sibling, hasChildOrderChanged || null == prevChildAtSameIndex || (prevChildAtSameIndex = prevChildAtSameIndex.sibling);
                    }
                    hasChildOrderChanged || null == prevChildAtSameIndex || (hasChildOrderChanged = !0);
                }
                enqueueUpdateIfNecessary(nextFiber, hasChildOrderChanged);
            }
            function walkTree() {
                hook.getFiberRoots(rid).forEach(function (root) {
                    mountFiber(root.current);
                }), flushPendingEvents();
            }
            function cleanup() {}
            function handleCommitFiberUnmount(fiber) {
                enqueueUnmount(fiber);
            }
            function handleCommitFiberRoot(root) {
                var current = root.current,
                    alternate = current.alternate;
                if (alternate) {
                    var wasMounted = null != alternate.memoizedState && null != alternate.memoizedState.element,
                        isMounted = null != current.memoizedState && null != current.memoizedState.element;
                    !wasMounted && isMounted ? mountFiber(current) : wasMounted && isMounted ? updateFiber(current, alternate) : wasMounted && !isMounted && enqueueUnmount(current);
                } else mountFiber(current);
                flushPendingEvents();
            }
            function getNativeFromReactElement(fiber) {
                try {
                    var opaqueNode = fiber,
                        hostInstance = renderer.findHostInstanceByFiber(opaqueNode);
                    return hostInstance;
                } catch (err) {
                    return null;
                }
            }
            function getReactElementFromNative(hostInstance) {
                var fiber = renderer.findFiberByHostInstance(hostInstance);
                if (null != fiber) {
                    var opaqueNode = getOpaqueNode(fiber);
                    return opaqueNode;
                }
                return null;
            }
            var opaqueNodes = new Set(),
                pendingEvents = [];
            return {
                getNativeFromReactElement: getNativeFromReactElement,
                getReactElementFromNative: getReactElementFromNative,
                handleCommitFiberRoot: handleCommitFiberRoot,
                handleCommitFiberUnmount: handleCommitFiberUnmount,
                cleanup: cleanup,
                walkTree: walkTree
            };
        }
        var getDataFiber = __webpack_require__(41),
            _require = __webpack_require__(42),
            ClassComponent = _require.ClassComponent,
            HostRoot = _require.HostRoot;
        module.exports = attachRendererFiber;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getDataFiber(fiber, getOpaqueNode) {
            var type = fiber.type,
                key = fiber.key,
                ref = fiber.ref,
                source = fiber._debugSource,
                publicInstance = null,
                props = null,
                state = null,
                children = null,
                context = null,
                updater = null,
                nodeType = null,
                name = null,
                text = null;
            switch (fiber.tag) {
                case FunctionalComponent:
                case ClassComponent:
                    nodeType = "Composite", name = getDisplayName(fiber.type), publicInstance = fiber.stateNode, props = fiber.memoizedProps, state = fiber.memoizedState, null != publicInstance && (context = publicInstance.context, context && 0 === Object.keys(context).length && (context = null));
                    var inst = publicInstance;
                    inst && (updater = {
                        setState: inst.setState && inst.setState.bind(inst),
                        forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),
                        setInProps: inst.forceUpdate && setInProps.bind(null, fiber),
                        setInState: inst.forceUpdate && setInState.bind(null, inst),
                        setInContext: inst.forceUpdate && setInContext.bind(null, inst)
                    }), children = [];
                    break;

                case HostRoot:
                    nodeType = "Wrapper", children = [];
                    break;

                case HostPortal:
                    nodeType = "Portal", name = "ReactPortal", props = {
                        target: fiber.stateNode.containerInfo
                    }, children = [];
                    break;

                case HostComponent:
                    nodeType = "Native", name = fiber.type, name = name.replace("topsecret-", ""), publicInstance = fiber.stateNode, props = fiber.memoizedProps, children = "string" == typeof props.children || "number" == typeof props.children ? props.children.toString() : [], "function" == typeof fiber.stateNode.setNativeProps && (updater = {
                        setNativeProps: function setNativeProps(nativeProps) {
                            fiber.stateNode.setNativeProps(nativeProps);
                        }
                    });
                    break;

                case HostText:
                    nodeType = "Text", text = fiber.memoizedProps;
                    break;

                case Fragment:
                    nodeType = "Wrapper", children = [];
                    break;

                default:
                    nodeType = "Native", props = fiber.memoizedProps, name = "TODO_NOT_IMPLEMENTED_YET", children = [];
            }
            if (Array.isArray(children)) for (var child = fiber.child; child;) {
                children.push(getOpaqueNode(child)), child = child.sibling;
            }return {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: source,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(fiber, path, value) {
            var inst = fiber.stateNode;
            fiber.pendingProps = copyWithSet(inst.props, path, value), fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps), fiber.stateNode.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        var copyWithSet = __webpack_require__(37),
            getDisplayName = __webpack_require__(38),
            _require = __webpack_require__(42),
            FunctionalComponent = _require.FunctionalComponent,
            ClassComponent = _require.ClassComponent,
            HostRoot = _require.HostRoot,
            HostPortal = _require.HostPortal,
            HostComponent = _require.HostComponent,
            HostText = _require.HostText,
            Fragment = _require.Fragment;
        module.exports = getDataFiber;
    }, function (module, exports) {
        "use strict";

        module.exports = {
            IndeterminateComponent: 0,
            FunctionalComponent: 1,
            ClassComponent: 2,
            HostRoot: 3,
            HostPortal: 4,
            HostComponent: 5,
            HostText: 6,
            CoroutineComponent: 7,
            CoroutineHandlerPhase: 8,
            YieldComponent: 9,
            Fragment: 10
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _defineProperty(obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, {
                value: value,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : obj[key] = value, obj;
        }
        function measureStyle(agent, bridge, resolveRNStyle, id) {
            var node = agent.elementData.get(id);
            if (!node || !node.props) return void bridge.send("rn-style:measure", {});
            var style = resolveRNStyle(node.props.style);
            styleOverridesByHostComponentId[id] && (style = babelHelpers.extends({}, style, styleOverridesByHostComponentId[id]));
            var instance = node.publicInstance;
            return instance && instance.measure ? void instance.measure(function (x, y, width, height, left, top) {
                if ("number" != typeof x) return void bridge.send("rn-style:measure", {
                    style: style
                });
                var margin = style && resolveBoxStyle("margin", style) || blank,
                    padding = style && resolveBoxStyle("padding", style) || blank;
                bridge.send("rn-style:measure", {
                    style: style,
                    measuredLayout: {
                        x: x,
                        y: y,
                        width: width,
                        height: height,
                        left: left,
                        top: top,
                        margin: margin,
                        padding: padding
                    }
                });
            }) : void bridge.send("rn-style:measure", {
                style: style
            });
        }
        function shallowClone(obj) {
            var nobj = {};
            for (var n in obj) {
                nobj[n] = obj[n];
            }return nobj;
        }
        function renameStyle(agent, id, oldName, newName, val) {
            var _ref3,
                data = agent.elementData.get(id),
                newStyle = newName ? (_ref3 = {}, _defineProperty(_ref3, oldName, void 0), _defineProperty(_ref3, newName, val), _ref3) : _defineProperty({}, oldName, void 0);
            if (data && data.updater && data.updater.setInProps) {
                var customStyle,
                    style = data && data.props && data.props.style;
                if (Array.isArray(style)) {
                    var lastLength = style.length - 1;
                    "object" !== _typeof(style[lastLength]) || Array.isArray(style[lastLength]) ? (style = style.concat([newStyle]), data.updater.setInProps(["style"], style)) : (customStyle = shallowClone(style[lastLength]), delete customStyle[oldName], newName ? customStyle[newName] = val : customStyle[oldName] = void 0, data.updater.setInProps(["style", lastLength], customStyle));
                } else "object" === ("undefined" == typeof style ? "undefined" : _typeof(style)) ? (customStyle = shallowClone(style), delete customStyle[oldName], newName ? customStyle[newName] = val : customStyle[oldName] = void 0, data.updater.setInProps(["style"], customStyle)) : (style = [style, newStyle], data.updater.setInProps(["style"], style));
            } else {
                if (!(data && data.updater && data.updater.setNativeProps)) return;
                styleOverridesByHostComponentId[id] ? babelHelpers.extends(styleOverridesByHostComponentId[id], newStyle) : styleOverridesByHostComponentId[id] = newStyle, data.updater.setNativeProps({
                    style: newStyle
                });
            }
            agent.emit("hideHighlight");
        }
        function setStyle(agent, id, attr, val) {
            var data = agent.elementData.get(id),
                newStyle = _defineProperty({}, attr, val);
            if (data && data.updater && data.updater.setInProps) {
                var style = data.props && data.props.style;
                if (Array.isArray(style)) {
                    var lastLength = style.length - 1;
                    "object" !== _typeof(style[lastLength]) || Array.isArray(style[lastLength]) ? (style = style.concat([newStyle]), data.updater.setInProps(["style"], style)) : data.updater.setInProps(["style", lastLength, attr], val);
                } else style = [style, newStyle], data.updater.setInProps(["style"], style);
            } else {
                if (!(data && data.updater && data.updater.setNativeProps)) return;
                styleOverridesByHostComponentId[id] ? babelHelpers.extends(styleOverridesByHostComponentId[id], newStyle) : styleOverridesByHostComponentId[id] = newStyle, data.updater.setNativeProps({
                    style: newStyle
                });
            }
            agent.emit("hideHighlight");
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            resolveBoxStyle = __webpack_require__(44),
            styleOverridesByHostComponentId = {};
        module.exports = function (bridge, agent, resolveRNStyle) {
            bridge.onCall("rn-style:get", function (id) {
                var node = agent.elementData.get(id);
                return node && node.props ? resolveRNStyle(node.props.style) : null;
            }), bridge.on("rn-style:measure", function (id) {
                measureStyle(agent, bridge, resolveRNStyle, id);
            }), bridge.on("rn-style:rename", function (_ref) {
                var id = _ref.id,
                    oldName = _ref.oldName,
                    newName = _ref.newName,
                    val = _ref.val;
                renameStyle(agent, id, oldName, newName, val), setTimeout(function () {
                    return measureStyle(agent, bridge, resolveRNStyle, id);
                });
            }), bridge.on("rn-style:set", function (_ref2) {
                var id = _ref2.id,
                    attr = _ref2.attr,
                    val = _ref2.val;
                setStyle(agent, id, attr, val), setTimeout(function () {
                    return measureStyle(agent, bridge, resolveRNStyle, id);
                });
            });
        };
        var blank = {
            top: 0,
            left: 0,
            right: 0,
            bottom: 0
        };
    }, function (module, exports) {
        "use strict";

        function resolveBoxStyle(prefix, style) {
            var res = {},
                subs = ["top", "left", "bottom", "right"],
                set = !1;
            return subs.forEach(function (sub) {
                res[sub] = style[prefix] || 0;
            }), style[prefix] && (set = !0), style[prefix + "Vertical"] && (res.top = res.bottom = style[prefix + "Vertical"], set = !0), style[prefix + "Horizontal"] && (res.left = res.right = style[prefix + "Horizontal"], set = !0), subs.forEach(function (sub) {
                var val = style[prefix + capFirst(sub)];
                val && (res[sub] = val, set = !0);
            }), set ? res : null;
        }
        function capFirst(text) {
            return text[0].toUpperCase() + text.slice(1);
        }
        module.exports = resolveBoxStyle;
    }, function (module, exports) {
        "use strict";

        function decorate(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function () {
                var res = old.apply(this, arguments);
                return fn.apply(this, arguments), res;
            }, function () {
                obj[attr] = old;
            };
        }
        var subscriptionEnabled = !1;
        module.exports = function (bridge, agent, hook) {
            function sendStoreData() {
                subscriptionEnabled && bridge.send("relay:store", {
                    id: "relay:store",
                    nodes: DefaultStoreData.getNodeData()
                });
            }
            var shouldEnable = !!hook._relayInternals;
            if (bridge.onCall("relay:check", function () {
                return shouldEnable;
            }), shouldEnable) {
                var _hook$_relayInternals = hook._relayInternals,
                    DefaultStoreData = _hook$_relayInternals.DefaultStoreData,
                    setRequestListener = _hook$_relayInternals.setRequestListener;
                bridge.onCall("relay:store:enable", function () {
                    subscriptionEnabled = !0, sendStoreData();
                }), bridge.onCall("relay:store:disable", function () {
                    subscriptionEnabled = !1;
                }), sendStoreData(), decorate(DefaultStoreData, "handleUpdatePayload", sendStoreData), decorate(DefaultStoreData, "handleQueryPayload", sendStoreData);
                var removeListener = setRequestListener(function (event, data) {
                    bridge.send(event, data);
                });
                hook.on("shutdown", removeListener);
            }
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var Highlighter = __webpack_require__(47);
        module.exports = function (agent) {
            var hl = new Highlighter(window, function (node) {
                agent.selectFromDOMNode(node);
            });
            agent.on("highlight", function (data) {
                return hl.highlight(data.node, data.name);
            }), agent.on("highlightMany", function (nodes) {
                return hl.highlightMany(nodes);
            }), agent.on("hideHighlight", function () {
                return hl.hideHighlight();
            }), agent.on("refreshMultiOverlay", function () {
                return hl.refreshMultiOverlay();
            }), agent.on("startInspecting", function () {
                return hl.startInspecting();
            }), agent.on("stopInspecting", function () {
                return hl.stopInspecting();
            }), agent.on("shutdown", function () {
                hl.remove();
            });
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function captureSubscription(obj, evt, cb) {
            return obj.addEventListener(evt, cb, !0), function () {
                return obj.removeEventListener(evt, cb, !0);
            };
        }
        function makeMagnifier() {
            var button = window.document.createElement("button");
            return button.innerHTML = "&#128269;", button.style.backgroundColor = "transparent", button.style.border = "none", button.style.outline = "none", button.style.cursor = "pointer", button.style.position = "fixed", button.style.bottom = "10px", button.style.right = "10px", button.style.fontSize = "30px", button.style.zIndex = 1e7, button;
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            Overlay = __webpack_require__(48),
            MultiOverlay = __webpack_require__(50),
            Highlighter = function () {
            function Highlighter(win, onSelect) {
                _classCallCheck(this, Highlighter), this._win = win, this._onSelect = onSelect, this._overlay = null, this._multiOverlay = null, this._subs = [];
            }
            return _createClass(Highlighter, [{
                key: "startInspecting",
                value: function value() {
                    this._inspecting = !0, this._subs = [captureSubscription(this._win, "mouseover", this.onHover.bind(this)), captureSubscription(this._win, "mousedown", this.onMouseDown.bind(this)), captureSubscription(this._win, "click", this.onClick.bind(this))];
                }
            }, {
                key: "stopInspecting",
                value: function value() {
                    this._subs.forEach(function (unsub) {
                        return unsub();
                    }), this.hideHighlight();
                }
            }, {
                key: "remove",
                value: function value() {
                    this.stopInspecting(), this._button && this._button.parentNode && this._button.parentNode.removeChild(this._button);
                }
            }, {
                key: "highlight",
                value: function value(node, name) {
                    this.removeMultiOverlay(), node.nodeType !== Node.COMMENT_NODE && (this._overlay || (this._overlay = new Overlay(this._win)), this._overlay.inspect(node, name));
                }
            }, {
                key: "highlightMany",
                value: function value(nodes) {
                    this.removeOverlay(), this._multiOverlay || (this._multiOverlay = new MultiOverlay(this._win)), this._multiOverlay.highlightMany(nodes);
                }
            }, {
                key: "hideHighlight",
                value: function value() {
                    this._inspecting = !1, this.removeOverlay(), this.removeMultiOverlay();
                }
            }, {
                key: "refreshMultiOverlay",
                value: function value() {
                    this._multiOverlay && this._multiOverlay.refresh();
                }
            }, {
                key: "removeOverlay",
                value: function value() {
                    this._overlay && (this._overlay.remove(), this._overlay = null);
                }
            }, {
                key: "removeMultiOverlay",
                value: function value() {
                    this._multiOverlay && (this._multiOverlay.remove(), this._multiOverlay = null);
                }
            }, {
                key: "onMouseDown",
                value: function value(evt) {
                    this._inspecting && (evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this._onSelect(evt.target));
                }
            }, {
                key: "onClick",
                value: function value(evt) {
                    this._inspecting && (this._subs.forEach(function (unsub) {
                        return unsub();
                    }), evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this.hideHighlight());
                }
            }, {
                key: "onHover",
                value: function value(evt) {
                    this._inspecting && (evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this.highlight(evt.target));
                }
            }, {
                key: "injectButton",
                value: function value() {
                    this._button = makeMagnifier(), this._button.onclick = this.startInspecting.bind(this), this._win.document.body.appendChild(this._button);
                }
            }]), Highlighter;
        }();
        module.exports = Highlighter;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function findTipPos(dims, win) {
            var top,
                tipHeight = 20,
                margin = 5;
            return top = dims.top + dims.height + tipHeight <= win.innerHeight ? dims.top + dims.height < 0 ? margin : dims.top + dims.height + margin : dims.top - tipHeight <= win.innerHeight ? dims.top - tipHeight - margin < margin ? margin : dims.top - tipHeight - margin : win.innerHeight - tipHeight - margin, top += "px", dims.left < 0 ? {
                top: top,
                left: margin
            } : dims.left + 200 > win.innerWidth ? {
                top: top,
                right: margin
            } : {
                top: top,
                left: dims.left + margin + "px"
            };
        }
        function getElementDimensions(domElement) {
            var calculatedStyle = window.getComputedStyle(domElement);
            return {
                borderLeft: +calculatedStyle.borderLeftWidth.match(/[0-9]*/)[0],
                borderRight: +calculatedStyle.borderRightWidth.match(/[0-9]*/)[0],
                borderTop: +calculatedStyle.borderTopWidth.match(/[0-9]*/)[0],
                borderBottom: +calculatedStyle.borderBottomWidth.match(/[0-9]*/)[0],
                marginLeft: +calculatedStyle.marginLeft.match(/[0-9]*/)[0],
                marginRight: +calculatedStyle.marginRight.match(/[0-9]*/)[0],
                marginTop: +calculatedStyle.marginTop.match(/[0-9]*/)[0],
                marginBottom: +calculatedStyle.marginBottom.match(/[0-9]*/)[0],
                paddingLeft: +calculatedStyle.paddingLeft.match(/[0-9]*/)[0],
                paddingRight: +calculatedStyle.paddingRight.match(/[0-9]*/)[0],
                paddingTop: +calculatedStyle.paddingTop.match(/[0-9]*/)[0],
                paddingBottom: +calculatedStyle.paddingBottom.match(/[0-9]*/)[0]
            };
        }
        function getOwnerWindow(node) {
            return node.ownerDocument ? node.ownerDocument.defaultView : null;
        }
        function getOwnerIframe(node) {
            var nodeWindow = getOwnerWindow(node);
            return nodeWindow ? nodeWindow.frameElement : null;
        }
        function getBoundingClientRectWithBorderOffset(node) {
            var dimensions = getElementDimensions(node);
            return mergeRectOffsets([node.getBoundingClientRect(), {
                top: dimensions.borderTop,
                left: dimensions.borderLeft,
                bottom: dimensions.borderBottom,
                right: dimensions.borderRight,
                width: 0,
                height: 0
            }]);
        }
        function mergeRectOffsets(rects) {
            return rects.reduce(function (previousRect, rect) {
                return null == previousRect ? rect : {
                    top: previousRect.top + rect.top,
                    left: previousRect.left + rect.left,
                    width: previousRect.width,
                    height: previousRect.height,
                    bottom: previousRect.bottom + rect.bottom,
                    right: previousRect.right + rect.right
                };
            });
        }
        function getNestedBoundingClientRect(node, boundaryWindow) {
            var ownerIframe = getOwnerIframe(node);
            if (ownerIframe && ownerIframe !== boundaryWindow) {
                for (var rects = [node.getBoundingClientRect()], currentIframe = ownerIframe, onlyOneMore = !1; currentIframe;) {
                    var rect = getBoundingClientRectWithBorderOffset(currentIframe);
                    if (rects.push(rect), currentIframe = getOwnerIframe(currentIframe), onlyOneMore) break;
                    currentIframe && getOwnerWindow(currentIframe) === boundaryWindow && (onlyOneMore = !0);
                }
                return mergeRectOffsets(rects);
            }
            return node.getBoundingClientRect();
        }
        function boxWrap(dims, what, node) {
            assign(node.style, {
                borderTopWidth: dims[what + "Top"] + "px",
                borderLeftWidth: dims[what + "Left"] + "px",
                borderRightWidth: dims[what + "Right"] + "px",
                borderBottomWidth: dims[what + "Bottom"] + "px",
                borderStyle: "solid"
            });
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            assign = __webpack_require__(3),
            _require = __webpack_require__(49),
            monospace = _require.monospace,
            Overlay = function () {
            function Overlay(window) {
                _classCallCheck(this, Overlay);
                var doc = window.document;
                this.win = window, this.container = doc.createElement("div"), this.node = doc.createElement("div"), this.border = doc.createElement("div"), this.padding = doc.createElement("div"), this.content = doc.createElement("div"), this.border.style.borderColor = overlayStyles.border, this.padding.style.borderColor = overlayStyles.padding, this.content.style.backgroundColor = overlayStyles.background, assign(this.node.style, {
                    borderColor: overlayStyles.margin,
                    pointerEvents: "none",
                    position: "fixed"
                }), this.tip = doc.createElement("div"), assign(this.tip.style, {
                    backgroundColor: "#333740",
                    borderRadius: "2px",
                    fontFamily: monospace.family,
                    fontWeight: "bold",
                    padding: "3px 5px",
                    position: "fixed",
                    fontSize: monospace.sizes.normal
                }), this.nameSpan = doc.createElement("span"), this.tip.appendChild(this.nameSpan), assign(this.nameSpan.style, {
                    color: "#ee78e6",
                    borderRight: "1px solid #aaaaaa",
                    paddingRight: "0.5rem",
                    marginRight: "0.5rem"
                }), this.dimSpan = doc.createElement("span"), this.tip.appendChild(this.dimSpan), assign(this.dimSpan.style, {
                    color: "#d7d7d7"
                }), this.container.style.zIndex = 1e7, this.node.style.zIndex = 1e7, this.tip.style.zIndex = 1e7, this.container.appendChild(this.node), this.container.appendChild(this.tip), this.node.appendChild(this.border), this.border.appendChild(this.padding), this.padding.appendChild(this.content), doc.body.appendChild(this.container);
            }
            return _createClass(Overlay, [{
                key: "remove",
                value: function value() {
                    this.container.parentNode && this.container.parentNode.removeChild(this.container);
                }
            }, {
                key: "inspect",
                value: function value(node, name) {
                    if (node.nodeType === Node.ELEMENT_NODE) {
                        var box = getNestedBoundingClientRect(node, this.win),
                            dims = getElementDimensions(node);
                        boxWrap(dims, "margin", this.node), boxWrap(dims, "border", this.border), boxWrap(dims, "padding", this.padding), assign(this.content.style, {
                            height: box.height - dims.borderTop - dims.borderBottom - dims.paddingTop - dims.paddingBottom + "px",
                            width: box.width - dims.borderLeft - dims.borderRight - dims.paddingLeft - dims.paddingRight + "px"
                        }), assign(this.node.style, {
                            top: box.top - dims.marginTop + "px",
                            left: box.left - dims.marginLeft + "px"
                        }), this.nameSpan.textContent = name || node.nodeName.toLowerCase(), this.dimSpan.textContent = box.width + "px × " + box.height + "px";
                        var tipPos = findTipPos({
                            top: box.top - dims.marginTop,
                            left: box.left - dims.marginLeft,
                            height: box.height + dims.marginTop + dims.marginBottom,
                            width: box.width + dims.marginLeft + dims.marginRight
                        }, this.win);
                        assign(this.tip.style, tipPos);
                    }
                }
            }]), Overlay;
        }(),
            overlayStyles = {
            background: "rgba(120, 170, 210, 0.7)",
            padding: "rgba(77, 200, 0, 0.3)",
            margin: "rgba(255, 155, 0, 0.3)",
            border: "rgba(255, 200, 50, 0.3)"
        };
        module.exports = Overlay;
    }, function (module, exports) {
        "use strict";

        module.exports = {
            monospace: {
                family: "Menlo, Consolas, monospace",
                sizes: {
                    normal: 11,
                    large: 14
                }
            },
            sansSerif: {
                family: '"Helvetica Neue", "Lucida Grande", -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, sans-serif',
                sizes: {
                    small: 10,
                    normal: 12,
                    large: 14
                }
            }
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            assign = __webpack_require__(3),
            MultiOverlay = function () {
            function MultiOverlay(window) {
                _classCallCheck(this, MultiOverlay), this.win = window;
                var doc = window.document;
                this.container = doc.createElement("div"), doc.body.appendChild(this.container), this._currentNodes = null;
            }
            return _createClass(MultiOverlay, [{
                key: "highlightMany",
                value: function value(nodes) {
                    var _this = this;
                    this._currentNodes = nodes, this.container.innerHTML = "", nodes.forEach(function (node) {
                        var div = _this.win.document.createElement("div");
                        if ("function" == typeof node.getBoundingClientRect) {
                            var box = node.getBoundingClientRect();
                            box.bottom < 0 || box.top > window.innerHeight || (assign(div.style, {
                                top: box.top + "px",
                                left: box.left + "px",
                                width: box.width + "px",
                                height: box.height + "px",
                                border: "2px dotted rgba(200, 100, 100, .8)",
                                boxSizing: "border-box",
                                backgroundColor: "rgba(200, 100, 100, .2)",
                                position: "fixed",
                                zIndex: 1e7,
                                pointerEvents: "none"
                            }), _this.container.appendChild(div));
                        }
                    });
                }
            }, {
                key: "refresh",
                value: function value() {
                    this._currentNodes && this.highlightMany(this._currentNodes);
                }
            }, {
                key: "remove",
                value: function value() {
                    this.container.parentNode && (this.container.parentNode.removeChild(this.container), this._currentNodes = null);
                }
            }]), MultiOverlay;
        }();
        module.exports = MultiOverlay;
    }]);
});
}, 113, null, "react-devtools-core/build/backend.js");
__d(/* flattenStyle */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var ReactNativePropRegistry;

function getStyle(style) {
  if (ReactNativePropRegistry === undefined) {
    ReactNativePropRegistry = require(115                      ); // 115 = ReactNativePropRegistry
  }
  if (typeof style === 'number') {
    return ReactNativePropRegistry.getByID(style);
  }
  return style;
}

function flattenStyle(style) {
  if (!style) {
    return undefined;
  }
  invariant(style !== true, 'style may be false but not true');

  if (!Array.isArray(style)) {
    return getStyle(style);
  }

  var result = {};
  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {
    var computedStyle = flattenStyle(style[i]);
    if (computedStyle) {
      for (var key in computedStyle) {
        result[key] = computedStyle[key];
      }
    }
  }
  return result;
}

module.exports = flattenStyle;
}, 114, null, "flattenStyle");
__d(/* ReactNativePropRegistry */function(global, require, module, exports) {

'use strict';

var _require = require(62           ), // 62 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactNativePropRegistry;
}, 115, null, "ReactNativePropRegistry");
__d(/* RCTDebugComponentOwnership */function(global, require, module, exports) {

'use strict';

var BatchedBridge = require(29             ); // 29 = BatchedBridge

var RCTDebugComponentOwnership = {
  getOwnerHierarchy: function getOwnerHierarchy(requestID, tag) {
    throw new Error('This seems to be unused. Will disable until it is needed again.');
  }
};

BatchedBridge.registerCallableModule('RCTDebugComponentOwnership', RCTDebugComponentOwnership);

module.exports = RCTDebugComponentOwnership;
}, 116, null, "RCTDebugComponentOwnership");
__d(/* JSInspector */function(global, require, module, exports) {
'use strict';

var JSInspector = {
  registerAgent: function registerAgent(type) {
    if (global.__registerInspectorAgent) {
      global.__registerInspectorAgent(type);
    }
  },
  getTimestamp: function getTimestamp() {
    return global.__inspectorTimestamp();
  }
};

module.exports = JSInspector;
}, 117, null, "JSInspector");
__d(/* NetworkAgent */function(global, require, module, exports) {
'use strict';

var InspectorAgent = require(119             ); // 119 = InspectorAgent
var JSInspector = require(117          ); // 117 = JSInspector
var Map = require(73   ); // 73 = Map
var XMLHttpRequest = require(87              ); // 87 = XMLHttpRequest

var Interceptor = function () {
  function Interceptor(agent) {
    babelHelpers.classCallCheck(this, Interceptor);

    this._agent = agent;
    this._requests = new Map();
  }

  babelHelpers.createClass(Interceptor, [{
    key: 'getData',
    value: function getData(requestId) {
      return this._requests.get(requestId);
    }
  }, {
    key: 'requestSent',
    value: function requestSent(id, url, method, headers) {
      var requestId = String(id);
      this._requests.set(requestId, '');

      var request = {
        url: url,
        method: method,
        headers: headers,
        initialPriority: 'Medium'
      };
      var event = {
        requestId: requestId,
        documentURL: '',
        frameId: '1',
        loaderId: '1',
        request: request,
        timestamp: JSInspector.getTimestamp(),
        initiator: {
          type: 'other'
        },
        type: 'Other'
      };
      this._agent.sendEvent('requestWillBeSent', event);
    }
  }, {
    key: 'responseReceived',
    value: function responseReceived(id, url, status, headers) {
      var requestId = String(id);
      var response = {
        url: url,
        status: status,
        statusText: String(status),
        headers: headers,

        requestHeaders: {},
        mimeType: this._getMimeType(headers),
        connectionReused: false,
        connectionId: -1,
        encodedDataLength: 0,
        securityState: 'unknown'
      };

      var event = {
        requestId: requestId,
        frameId: '1',
        loaderId: '1',
        timestamp: JSInspector.getTimestamp(),
        type: 'Other',
        response: response
      };
      this._agent.sendEvent('responseReceived', event);
    }
  }, {
    key: 'dataReceived',
    value: function dataReceived(id, data) {
      var requestId = String(id);
      var existingData = this._requests.get(requestId) || '';
      this._requests.set(requestId, existingData.concat(data));
      var event = {
        requestId: requestId,
        timestamp: JSInspector.getTimestamp(),
        dataLength: data.length,
        encodedDataLength: data.length
      };
      this._agent.sendEvent('dataReceived', event);
    }
  }, {
    key: 'loadingFinished',
    value: function loadingFinished(id, encodedDataLength) {
      var event = {
        requestId: String(id),
        timestamp: JSInspector.getTimestamp(),
        encodedDataLength: encodedDataLength
      };
      this._agent.sendEvent('loadingFinished', event);
    }
  }, {
    key: 'loadingFailed',
    value: function loadingFailed(id, error) {
      var event = {
        requestId: String(id),
        timestamp: JSInspector.getTimestamp(),
        type: 'Other',
        errorText: error
      };
      this._agent.sendEvent('loadingFailed', event);
    }
  }, {
    key: '_getMimeType',
    value: function _getMimeType(headers) {
      var contentType = headers['Content-Type'] || '';
      return contentType.split(';')[0];
    }
  }]);
  return Interceptor;
}();

var NetworkAgent = function (_InspectorAgent) {
  babelHelpers.inherits(NetworkAgent, _InspectorAgent);

  function NetworkAgent() {
    babelHelpers.classCallCheck(this, NetworkAgent);
    return babelHelpers.possibleConstructorReturn(this, (NetworkAgent.__proto__ || Object.getPrototypeOf(NetworkAgent)).apply(this, arguments));
  }

  babelHelpers.createClass(NetworkAgent, [{
    key: 'enable',
    value: function enable(_ref) {
      var maxResourceBufferSize = _ref.maxResourceBufferSize,
          maxTotalBufferSize = _ref.maxTotalBufferSize;

      this._interceptor = new Interceptor(this);
      XMLHttpRequest.setInterceptor(this._interceptor);
    }
  }, {
    key: 'disable',
    value: function disable() {
      XMLHttpRequest.setInterceptor(null);
      this._interceptor = null;
    }
  }, {
    key: 'getResponseBody',
    value: function getResponseBody(_ref2) {
      var requestId = _ref2.requestId;

      return { body: this.interceptor().getData(requestId), base64Encoded: false };
    }
  }, {
    key: 'interceptor',
    value: function interceptor() {
      if (this._interceptor) {
        return this._interceptor;
      } else {
        throw Error('_interceptor can not be null');
      }
    }
  }]);
  return NetworkAgent;
}(InspectorAgent);

NetworkAgent.DOMAIN = 'Network';


module.exports = NetworkAgent;
}, 118, null, "NetworkAgent");
__d(/* InspectorAgent */function(global, require, module, exports) {
'use strict';

var InspectorAgent = function () {
  function InspectorAgent(eventSender) {
    babelHelpers.classCallCheck(this, InspectorAgent);

    this._eventSender = eventSender;
  }

  babelHelpers.createClass(InspectorAgent, [{
    key: 'sendEvent',
    value: function sendEvent(name, params) {
      this._eventSender(name, params);
    }
  }]);
  return InspectorAgent;
}();

module.exports = InspectorAgent;
}, 119, null, "InspectorAgent");
__d(/* RCTEventEmitter */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(29             ); // 29 = BatchedBridge

var RCTEventEmitter = {
  register: function register(eventEmitter) {
    BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);
  }
};

module.exports = RCTEventEmitter;
}, 120, null, "RCTEventEmitter");
__d(/* fbjs/lib/shallowEqual.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
}, 121, null, "fbjs/lib/shallowEqual.js");
__d(/* deepDiffer */function(global, require, module, exports) {
'use strict';

var deepDiffer = function deepDiffer(one, two) {
  if (one === two) {
    return false;
  }
  if (typeof one === 'function' && typeof two === 'function') {
    return false;
  }
  if (typeof one !== 'object' || one === null) {
    return one !== two;
  }
  if (typeof two !== 'object' || two === null) {
    return true;
  }
  if (one.constructor !== two.constructor) {
    return true;
  }
  if (Array.isArray(one)) {
    var len = one.length;
    if (two.length !== len) {
      return true;
    }
    for (var ii = 0; ii < len; ii++) {
      if (deepDiffer(one[ii], two[ii])) {
        return true;
      }
    }
  } else {
    for (var key in one) {
      if (deepDiffer(one[key], two[key])) {
        return true;
      }
    }
    for (var twoKey in two) {
      if (one[twoKey] === undefined && two[twoKey] !== undefined) {
        return true;
      }
    }
  }
  return false;
};

module.exports = deepDiffer;
}, 122, null, "deepDiffer");
__d(/* ReactNativeStack-dev */function(global, require, module, exports) {
"use strict";

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

require(72              ); // 72 = InitializeCore

var warning = require(15                ), // 15 = fbjs/lib/warning
    RCTEventEmitter = require(120              ), // 120 = RCTEventEmitter
    emptyFunction = require(16                      ), // 16 = fbjs/lib/emptyFunction
    UIManager = require(54         ), // 54 = UIManager
    React = require(12     ), // 12 = react
    ExecutionEnvironment = require(39                             ), // 39 = fbjs/lib/ExecutionEnvironment
    performanceNow = require(37                       ), // 37 = fbjs/lib/performanceNow
    emptyObject = require(17                    ), // 17 = fbjs/lib/emptyObject
    checkPropTypes = require(22                         ), // 22 = prop-types/checkPropTypes
    shallowEqual = require(121                    ), // 121 = fbjs/lib/shallowEqual
    deepDiffer = require(122         ), // 122 = deepDiffer
    flattenStyle = require(114           ), // 114 = flattenStyle
    TextInputState = require(53              ), // 53 = TextInputState
    deepFreezeAndThrowOnMutationInDev = require(33                                 ), // 33 = deepFreezeAndThrowOnMutationInDev
    instanceCache = {},
    instanceProps = {};

function getRenderedHostOrTextFromComponent(component) {
    for (var rendered; rendered = component._renderedComponent;) {
        component = rendered;
    }return component;
}

function precacheNode(inst, tag) {
    var nativeInst = getRenderedHostOrTextFromComponent(inst);
    instanceCache[tag] = nativeInst;
}

function precacheFiberNode(hostInst, tag) {
    instanceCache[tag] = hostInst;
}

function uncacheNode(inst) {
    var tag = inst._rootNodeID;
    tag && delete instanceCache[tag];
}

function uncacheFiberNode(tag) {
    delete instanceCache[tag], delete instanceProps[tag];
}

function getInstanceFromTag(tag) {
    return instanceCache[tag] || null;
}

function getTagFromInstance(inst) {
    var tag = "number" != typeof inst.tag ? inst._rootNodeID : inst.stateNode._nativeTag;
    return invariant(tag, "All native instances should have a tag."), tag;
}

function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps[stateNode._nativeTag] || null;
}

function updateFiberProps(tag, props) {
    instanceProps[tag] = props;
}

var ReactNativeComponentTree = {
    getClosestInstanceFromNode: getInstanceFromTag,
    getInstanceFromNode: getInstanceFromTag,
    getNodeFromInstance: getTagFromInstance,
    precacheFiberNode: precacheFiberNode,
    precacheNode: precacheNode,
    uncacheFiberNode: uncacheFiberNode,
    uncacheNode: uncacheNode,
    getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode,
    updateFiberProps: updateFiberProps
},
    ReactNativeComponentTree_1 = ReactNativeComponentTree,
    eventPluginOrder = null,
    namesToPlugins = {};

function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName],
            pluginIndex = eventPluginOrder.indexOf(pluginName);
        if (invariant(pluginIndex > -1, "EventPluginRegistry: Cannot inject event plugins that do not exist in " + "the plugin ordering, `%s`.", pluginName), !EventPluginRegistry.plugins[pluginIndex]) {
            invariant(pluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` " + "method, but `%s` does not.", pluginName), EventPluginRegistry.plugins[pluginIndex] = pluginModule;
            var publishedEvents = pluginModule.eventTypes;
            for (var eventName in publishedEvents) {
                invariant(publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName), "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName);
            }
        }
    }
}

function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
    invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), "EventPluginHub: More than one plugin attempted to publish the same " + "event name, `%s`.", eventName), EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
    var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
    if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
            if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                var phasedRegistrationName = phasedRegistrationNames[phaseName];
                publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
            }
        }return !0;
    }
    return !!dispatchConfig.registrationName && (publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName), !0);
}

function publishRegistrationName(registrationName, pluginModule, eventName) {
    invariant(!EventPluginRegistry.registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same " + "registration name, `%s`.", registrationName), EventPluginRegistry.registrationNameModules[registrationName] = pluginModule, EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName, "onDoubleClick" === registrationName && (EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName);
}

var EventPluginRegistry = {
    plugins: [],
    eventNameDispatchConfigs: {},
    registrationNameModules: {},
    registrationNameDependencies: {},
    possibleRegistrationNames: {},
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
        invariant(!eventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than " + "once. You are likely trying to load more than one copy of React."), eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder), recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
        var isOrderingDirty = !1;
        for (var pluginName in injectedNamesToPlugins) {
            if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                var pluginModule = injectedNamesToPlugins[pluginName];
                namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins " + "using the same name, `%s`.", pluginName), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = !0);
            }
        }isOrderingDirty && recomputePluginOrdering();
    }
},
    EventPluginRegistry_1 = EventPluginRegistry,
    caughtError = null,
    _invokeGuardedCallback = function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);
    try {
        func.apply(context, funcArgs);
    } catch (error) {
        return error;
    }
    return null;
};

if ("undefined" != typeof window && "function" == typeof window.dispatchEvent && "undefined" != typeof document && "function" == typeof document.createEvent) {
    var fakeNode = document.createElement("react"),
        depth = 0;
    _invokeGuardedCallback = function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        depth++;
        var thisDepth = depth,
            funcArgs = Array.prototype.slice.call(arguments, 3),
            boundFunc = function boundFunc() {
            func.apply(context, funcArgs);
        },
            fakeEventError = null,
            onFakeEventError = function onFakeEventError(event) {
            depth === thisDepth && (fakeEventError = event.error);
        },
            evtType = "react-" + (name || "invokeguardedcallback") + "-" + depth;
        window.addEventListener("error", onFakeEventError), fakeNode.addEventListener(evtType, boundFunc, !1);
        var evt = document.createEvent("Event");
        return evt.initEvent(evtType, !1, !1), fakeNode.dispatchEvent(evt), fakeNode.removeEventListener(evtType, boundFunc, !1), window.removeEventListener("error", onFakeEventError), depth--, fakeEventError;
    };
}

var _rethrowCaughtError = function _rethrowCaughtError() {
    if (caughtError) {
        var error = caughtError;
        throw caughtError = null, error;
    }
},
    ReactErrorUtils = {
    injection: {
        injectErrorUtils: function injectErrorUtils(injectedErrorUtils) {
            invariant("function" == typeof injectedErrorUtils.invokeGuardedCallback, "Injected invokeGuardedCallback() must be a function."), _invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
        }
    },
    invokeGuardedCallback: function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        return _invokeGuardedCallback.apply(this, arguments);
    },
    invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        var error = ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
        null !== error && null === caughtError && (caughtError = error);
    },
    rethrowCaughtError: function rethrowCaughtError() {
        return _rethrowCaughtError.apply(this, arguments);
    }
},
    ReactErrorUtils_1 = ReactErrorUtils,
    ComponentTree,
    injection = {
    injectComponentTree: function injectComponentTree(Injected) {
        ComponentTree = Injected, warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, "EventPluginUtils.injection.injectComponentTree(...): Injected " + "module is missing getNodeFromInstance or getInstanceFromNode.");
    }
};

function isEndish(topLevelType) {
    return "topMouseUp" === topLevelType || "topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType;
}

function isMoveish(topLevelType) {
    return "topMouseMove" === topLevelType || "topTouchMove" === topLevelType;
}

function isStartish(topLevelType) {
    return "topMouseDown" === topLevelType || "topTouchStart" === topLevelType;
}

var validateEventDispatches;

validateEventDispatches = function validateEventDispatches(event) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances,
        listenersIsArr = Array.isArray(dispatchListeners),
        listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0,
        instancesIsArr = Array.isArray(dispatchInstances),
        instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
    warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, "EventPluginUtils: Invalid `event`.");
};

function executeDispatch(event, simulated, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = EventPluginUtils.getNodeFromInstance(inst), ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event), event.currentTarget = null;
}

function executeDispatchesInOrder(event, simulated) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (validateEventDispatches(event), Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
        executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    } else dispatchListeners && executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
    event._dispatchListeners = null, event._dispatchInstances = null;
}

function executeDispatchesInOrderStopAtTrueImpl(event) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (validateEventDispatches(event), Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
            if (dispatchListeners[i](event, dispatchInstances[i])) return dispatchInstances[i];
        }
    } else if (dispatchListeners && dispatchListeners(event, dispatchInstances)) return dispatchInstances;
    return null;
}

function executeDispatchesInOrderStopAtTrue(event) {
    var ret = executeDispatchesInOrderStopAtTrueImpl(event);
    return event._dispatchInstances = null, event._dispatchListeners = null, ret;
}

function executeDirectDispatch(event) {
    validateEventDispatches(event);
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`."), event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
    var res = dispatchListener ? dispatchListener(event) : null;
    return event.currentTarget = null, event._dispatchListeners = null, event._dispatchInstances = null, res;
}

function hasDispatches(event) {
    return !!event._dispatchListeners;
}

var EventPluginUtils = {
    isEndish: isEndish,
    isMoveish: isMoveish,
    isStartish: isStartish,
    executeDirectDispatch: executeDirectDispatch,
    executeDispatchesInOrder: executeDispatchesInOrder,
    executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
    hasDispatches: hasDispatches,
    getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(node) {
        return ComponentTree.getFiberCurrentPropsFromNode(node);
    },
    getInstanceFromNode: function getInstanceFromNode(node) {
        return ComponentTree.getInstanceFromNode(node);
    },
    getNodeFromInstance: function getNodeFromInstance(node) {
        return ComponentTree.getNodeFromInstance(node);
    },
    injection: injection
},
    EventPluginUtils_1 = EventPluginUtils;

function accumulateInto(current, next) {
    return invariant(null != next, "accumulateInto(...): Accumulated items must not be null or undefined."), null == current ? next : Array.isArray(current) ? Array.isArray(next) ? (current.push.apply(current, next), current) : (current.push(next), current) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulateInto_1 = accumulateInto;

function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
}

var forEachAccumulated_1 = forEachAccumulated,
    eventQueue = null,
    executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
    event && (EventPluginUtils_1.executeDispatchesInOrder(event, simulated), event.isPersistent() || event.constructor.release(event));
},
    executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
    return executeDispatchesAndRelease(e, !0);
},
    executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
    return executeDispatchesAndRelease(e, !1);
};

function isInteractive(tag) {
    return "button" === tag || "input" === tag || "select" === tag || "textarea" === tag;
}

function shouldPreventMouseEvent(name, type, props) {
    switch (name) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
            return !(!props.disabled || !isInteractive(type));

        default:
            return !1;
    }
}

var EventPluginHub = {
    injection: {
        injectEventPluginOrder: EventPluginRegistry_1.injectEventPluginOrder,
        injectEventPluginsByName: EventPluginRegistry_1.injectEventPluginsByName
    },
    getListener: function getListener(inst, registrationName) {
        var listener;
        if ("number" == typeof inst.tag) {
            var stateNode = inst.stateNode;
            if (!stateNode) return null;
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(stateNode);
            if (!props) return null;
            if (listener = props[registrationName], shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        } else {
            var currentElement = inst._currentElement;
            if ("string" == typeof currentElement || "number" == typeof currentElement) return null;
            if (!inst._rootNodeID) return null;
            var _props = currentElement.props;
            if (listener = _props[registrationName], shouldPreventMouseEvent(registrationName, currentElement.type, _props)) return null;
        }
        return invariant(!listener || "function" == typeof listener, "Expected %s listener to be a function, instead got type %s", registrationName, typeof listener), listener;
    },
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        for (var events, plugins = EventPluginRegistry_1.plugins, i = 0; i < plugins.length; i++) {
            var possiblePlugin = plugins[i];
            if (possiblePlugin) {
                var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
                extractedEvents && (events = accumulateInto_1(events, extractedEvents));
            }
        }
        return events;
    },
    enqueueEvents: function enqueueEvents(events) {
        events && (eventQueue = accumulateInto_1(eventQueue, events));
    },
    processEventQueue: function processEventQueue(simulated) {
        var processingEventQueue = eventQueue;
        eventQueue = null, simulated ? forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseSimulated) : forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseTopLevel), invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing " + "an event queue. Support for this has not yet been implemented."), ReactErrorUtils_1.rethrowCaughtError();
    }
},
    EventPluginHub_1 = EventPluginHub,
    ReactTypeOfWork = {
    IndeterminateComponent: 0,
    FunctionalComponent: 1,
    ClassComponent: 2,
    HostRoot: 3,
    HostPortal: 4,
    HostComponent: 5,
    HostText: 6,
    CoroutineComponent: 7,
    CoroutineHandlerPhase: 8,
    YieldComponent: 9,
    Fragment: 10
},
    HostComponent = ReactTypeOfWork.HostComponent;

function getParent(inst) {
    if (void 0 !== inst._hostParent) return inst._hostParent;
    if ("number" == typeof inst.tag) {
        do {
            inst = inst.return;
        } while (inst && inst.tag !== HostComponent);
        if (inst) return inst;
    }
    return null;
}

function getLowestCommonAncestor(instA, instB) {
    for (var depthA = 0, tempA = instA; tempA; tempA = getParent(tempA)) {
        depthA++;
    }for (var depthB = 0, tempB = instB; tempB; tempB = getParent(tempB)) {
        depthB++;
    }for (; depthA - depthB > 0;) {
        instA = getParent(instA), depthA--;
    }for (; depthB - depthA > 0;) {
        instB = getParent(instB), depthB--;
    }for (var depth = depthA; depth--;) {
        if (instA === instB || instA === instB.alternate) return instA;
        instA = getParent(instA), instB = getParent(instB);
    }
    return null;
}

function isAncestor(instA, instB) {
    for (; instB;) {
        if (instA === instB || instA === instB.alternate) return !0;
        instB = getParent(instB);
    }
    return !1;
}

function getParentInstance(inst) {
    return getParent(inst);
}

function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
        path.push(inst), inst = getParent(inst);
    }var i;
    for (i = path.length; i-- > 0;) {
        fn(path[i], "captured", arg);
    }for (i = 0; i < path.length; i++) {
        fn(path[i], "bubbled", arg);
    }
}

function traverseEnterLeave(from, to, fn, argFrom, argTo) {
    for (var common = from && to ? getLowestCommonAncestor(from, to) : null, pathFrom = []; from && from !== common;) {
        pathFrom.push(from), from = getParent(from);
    }for (var pathTo = []; to && to !== common;) {
        pathTo.push(to), to = getParent(to);
    }var i;
    for (i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], "bubbled", argFrom);
    }for (i = pathTo.length; i-- > 0;) {
        fn(pathTo[i], "captured", argTo);
    }
}

var ReactTreeTraversal = {
    isAncestor: isAncestor,
    getLowestCommonAncestor: getLowestCommonAncestor,
    getParentInstance: getParentInstance,
    traverseTwoPhase: traverseTwoPhase,
    traverseEnterLeave: traverseEnterLeave
},
    getListener = EventPluginHub_1.getListener;

function listenerAtPhase(inst, event, propagationPhase) {
    var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
    return getListener(inst, registrationName);
}

function accumulateDirectionalDispatches(inst, phase, event) {
    warning(inst, "Dispatching inst must not be null");
    var listener = listenerAtPhase(inst, event, phase);
    listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
}

function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && ReactTreeTraversal.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
}

function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
        var targetInst = event._targetInst,
            parentInst = targetInst ? ReactTreeTraversal.getParentInstance(targetInst) : null;
        ReactTreeTraversal.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
    }
}

function accumulateDispatches(inst, ignoredDirection, event) {
    if (inst && event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName,
            listener = getListener(inst, registrationName);
        listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
    }
}

function accumulateDirectDispatchesSingle(event) {
    event && event.dispatchConfig.registrationName && accumulateDispatches(event._targetInst, null, event);
}

function accumulateTwoPhaseDispatches(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
    ReactTreeTraversal.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
    forEachAccumulated_1(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = {
    accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
    accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
    accumulateDirectDispatches: accumulateDirectDispatches,
    accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
},
    EventPropagators_1 = EventPropagators,
    oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, copyFieldsFrom), instance;
    }
    return new Klass(copyFieldsFrom);
},
    twoArgumentPooler = function twoArgumentPooler(a1, a2) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2), instance;
    }
    return new Klass(a1, a2);
},
    threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2, a3), instance;
    }
    return new Klass(a1, a2, a3);
},
    fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2, a3, a4), instance;
    }
    return new Klass(a1, a2, a3, a4);
},
    standardReleaser = function standardReleaser(instance) {
    var Klass = this;
    invariant(instance instanceof Klass, "Trying to release an instance into a pool of a different type."), instance.destructor(), Klass.instancePool.length < Klass.poolSize && Klass.instancePool.push(instance);
},
    DEFAULT_POOL_SIZE = 10,
    DEFAULT_POOLER = oneArgumentPooler,
    addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
    var NewKlass = CopyConstructor;
    return NewKlass.instancePool = [], NewKlass.getPooled = pooler || DEFAULT_POOLER, NewKlass.poolSize || (NewKlass.poolSize = DEFAULT_POOL_SIZE), NewKlass.release = standardReleaser, NewKlass;
},
    PooledClass = {
    addPoolingTo: addPoolingTo,
    oneArgumentPooler: oneArgumentPooler,
    twoArgumentPooler: twoArgumentPooler,
    threeArgumentPooler: threeArgumentPooler,
    fourArgumentPooler: fourArgumentPooler
},
    PooledClass_1 = PooledClass,
    didWarnForAddedNewProperty = !1,
    isProxySupported = "function" == typeof Proxy,
    shouldBeReleasedProperties = ["dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances"],
    EventInterface = {
    type: null,
    target: null,
    currentTarget: emptyFunction.thatReturnsNull,
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
        return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
};

function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    delete this.nativeEvent, delete this.preventDefault, delete this.stopPropagation, this.dispatchConfig = dispatchConfig, this._targetInst = targetInst, this.nativeEvent = nativeEvent;
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
        if (Interface.hasOwnProperty(propName)) {
            delete this[propName];
            var normalize = Interface[propName];
            normalize ? this[propName] = normalize(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName];
        }
    }var defaultPrevented = null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue;
    return this.isDefaultPrevented = defaultPrevented ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse, this.isPropagationStopped = emptyFunction.thatReturnsFalse, this;
}

babelHelpers.extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
        this.defaultPrevented = !0;
        var event = this.nativeEvent;
        event && (event.preventDefault ? event.preventDefault() : "unknown" != typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = emptyFunction.thatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
        var event = this.nativeEvent;
        event && (event.stopPropagation ? event.stopPropagation() : "unknown" != typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = emptyFunction.thatReturnsTrue);
    },
    persist: function persist() {
        this.isPersistent = emptyFunction.thatReturnsTrue;
    },
    isPersistent: emptyFunction.thatReturnsFalse,
    destructor: function destructor() {
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
        }for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
            this[shouldBeReleasedProperties[i]] = null;
        }Object.defineProperty(this, "nativeEvent", getPooledWarningPropertyDefinition("nativeEvent", null)), Object.defineProperty(this, "preventDefault", getPooledWarningPropertyDefinition("preventDefault", emptyFunction)), Object.defineProperty(this, "stopPropagation", getPooledWarningPropertyDefinition("stopPropagation", emptyFunction));
    }
}), SyntheticEvent.Interface = EventInterface, SyntheticEvent.augmentClass = function (Class, Interface) {
    var Super = this,
        E = function E() {};
    E.prototype = Super.prototype;
    var prototype = new E();
    babelHelpers.extends(prototype, Class.prototype), Class.prototype = prototype, Class.prototype.constructor = Class, Class.Interface = babelHelpers.extends({}, Super.Interface, Interface), Class.augmentClass = Super.augmentClass, PooledClass_1.addPoolingTo(Class, PooledClass_1.fourArgumentPooler);
}, isProxySupported && (SyntheticEvent = new Proxy(SyntheticEvent, {
    construct: function construct(target, args) {
        return this.apply(target, Object.create(target.prototype), args);
    },
    apply: function apply(constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
            set: function set(target, prop, value) {
                return "isPersistent" === prop || target.constructor.Interface.hasOwnProperty(prop) || -1 !== shouldBeReleasedProperties.indexOf(prop) || (warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + "The property is never released. See " + "https://fb.me/react-event-pooling for more information."), didWarnForAddedNewProperty = !0), target[prop] = value, !0;
            }
        });
    }
})), PooledClass_1.addPoolingTo(SyntheticEvent, PooledClass_1.fourArgumentPooler);

var SyntheticEvent_1 = SyntheticEvent;

function getPooledWarningPropertyDefinition(propName, getVal) {
    var isFunction = "function" == typeof getVal;
    return {
        configurable: !0,
        set: set,
        get: get
    };
    function set(val) {
        return warn(isFunction ? "setting the method" : "setting the property", "This is effectively a no-op"), val;
    }
    function get() {
        return warn(isFunction ? "accessing the method" : "accessing the property", isFunction ? "This is a no-op function" : "This is set to null"), getVal;
    }
    function warn(action, result) {
        warning(!1, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + "If you must keep the original synthetic event around, use event.persist(). " + "See https://fb.me/react-event-pooling for more information.", action, propName, result);
    }
}

var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
},
    customBubblingEventTypes = UIManager.customBubblingEventTypes,
    customDirectEventTypes = UIManager.customDirectEventTypes,
    allTypesByEventName = {};

for (var bubblingTypeName in customBubblingEventTypes) {
    allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];
}for (var directTypeName in customDirectEventTypes) {
    warning(!customBubblingEventTypes[directTypeName], "Event cannot be both direct and bubbling: %s", directTypeName), allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];
}var ReactNativeBridgeEventPlugin = {
    eventTypes: _extends({}, customBubblingEventTypes, customDirectEventTypes),
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType],
            event = SyntheticEvent_1.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) EventPropagators_1.accumulateTwoPhaseDispatches(event);else {
            if (!directDispatchConfig) return null;
            EventPropagators_1.accumulateDirectDispatches(event);
        }
        return event;
    }
},
    ReactNativeBridgeEventPlugin_1 = ReactNativeBridgeEventPlugin;

function runEventQueueInBatch(events) {
    EventPluginHub_1.enqueueEvents(events), EventPluginHub_1.processEventQueue(!1);
}

var ReactEventEmitterMixin = {
    handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        runEventQueueInBatch(EventPluginHub_1.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget));
    }
},
    ReactEventEmitterMixin_1 = ReactEventEmitterMixin,
    INITIAL_TAG_COUNT = 1,
    ReactNativeTagHandles = {
    tagsStartAt: INITIAL_TAG_COUNT,
    tagCount: INITIAL_TAG_COUNT,
    allocateTag: function allocateTag() {
        for (; this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount);) {
            ReactNativeTagHandles.tagCount++;
        }var tag = ReactNativeTagHandles.tagCount;
        return ReactNativeTagHandles.tagCount++, tag;
    },
    assertRootTag: function assertRootTag(tag) {
        invariant(this.reactTagIsNativeTopRootID(tag), "Expect a native root tag, instead got %s", tag);
    },
    reactTagIsNativeTopRootID: function reactTagIsNativeTopRootID(reactTag) {
        return reactTag % 10 == 1;
    }
},
    ReactNativeTagHandles_1 = ReactNativeTagHandles,
    fiberHostComponent = null,
    ReactControlledComponentInjection = {
    injectFiberControlledHostComponent: function injectFiberControlledHostComponent(hostComponentImpl) {
        fiberHostComponent = hostComponentImpl;
    }
},
    restoreTarget = null,
    restoreQueue = null;

function restoreStateOfTarget(target) {
    var internalInstance = EventPluginUtils_1.getInstanceFromNode(target);
    if (internalInstance) {
        if ("number" == typeof internalInstance.tag) {
            invariant(fiberHostComponent && "function" == typeof fiberHostComponent.restoreControlledState, "Fiber needs to be injected to handle a fiber target for controlled " + "events.");
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(internalInstance.stateNode);
            return void fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
        }
        invariant("function" == typeof internalInstance.restoreControlledState, "The internal instance must be a React host component."), internalInstance.restoreControlledState();
    }
}

var ReactControlledComponent = {
    injection: ReactControlledComponentInjection,
    enqueueStateRestore: function enqueueStateRestore(target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [target] : restoreTarget = target;
    },
    restoreStateIfNeeded: function restoreStateIfNeeded() {
        if (restoreTarget) {
            var target = restoreTarget,
                queuedTargets = restoreQueue;
            if (restoreTarget = null, restoreQueue = null, restoreStateOfTarget(target), queuedTargets) for (var i = 0; i < queuedTargets.length; i++) {
                restoreStateOfTarget(queuedTargets[i]);
            }
        }
    }
},
    ReactControlledComponent_1 = ReactControlledComponent,
    stackBatchedUpdates = function stackBatchedUpdates(fn, a, b, c, d, e) {
    return fn(a, b, c, d, e);
},
    fiberBatchedUpdates = function fiberBatchedUpdates(fn, bookkeeping) {
    return fn(bookkeeping);
};

function performFiberBatchedUpdates(fn, bookkeeping) {
    return fiberBatchedUpdates(fn, bookkeeping);
}

function batchedUpdates(fn, bookkeeping) {
    return stackBatchedUpdates(performFiberBatchedUpdates, fn, bookkeeping);
}

var isNestingBatched = !1;

function batchedUpdatesWithControlledComponents(fn, bookkeeping) {
    if (isNestingBatched) return batchedUpdates(fn, bookkeeping);
    isNestingBatched = !0;
    try {
        return batchedUpdates(fn, bookkeeping);
    } finally {
        isNestingBatched = !1, ReactControlledComponent_1.restoreStateIfNeeded();
    }
}

var ReactGenericBatchingInjection = {
    injectStackBatchedUpdates: function injectStackBatchedUpdates(_batchedUpdates) {
        stackBatchedUpdates = _batchedUpdates;
    },
    injectFiberBatchedUpdates: function injectFiberBatchedUpdates(_batchedUpdates) {
        fiberBatchedUpdates = _batchedUpdates;
    }
},
    ReactGenericBatching = {
    batchedUpdates: batchedUpdatesWithControlledComponents,
    injection: ReactGenericBatchingInjection
},
    ReactGenericBatching_1 = ReactGenericBatching,
    _extends$1 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
},
    EMPTY_NATIVE_EVENT = {},
    touchSubsequence = function touchSubsequence(touches, indices) {
    for (var ret = [], i = 0; i < indices.length; i++) {
        ret.push(touches[indices[i]]);
    }return ret;
},
    removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {
    for (var rippedOut = [], temp = touches, i = 0; i < indices.length; i++) {
        var index = indices[i];
        rippedOut.push(touches[index]), temp[index] = null;
    }
    for (var fillAt = 0, j = 0; j < temp.length; j++) {
        var cur = temp[j];
        null !== cur && (temp[fillAt++] = cur);
    }
    return temp.length = fillAt, rippedOut;
},
    ReactNativeEventEmitter = _extends$1({}, ReactEventEmitterMixin_1, {
    registrationNames: EventPluginRegistry_1.registrationNameModules,
    getListener: EventPluginHub_1.getListener,
    _receiveRootNodeIDEvent: function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
        var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
            inst = ReactNativeComponentTree_1.getInstanceFromNode(rootNodeID);
        ReactGenericBatching_1.batchedUpdates(function () {
            ReactNativeEventEmitter.handleTopLevel(topLevelType, inst, nativeEvent, nativeEvent.target);
        });
    },
    receiveEvent: function receiveEvent(tag, topLevelType, nativeEventParam) {
        var rootNodeID = tag;
        ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
        for (var changedTouches = "topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices), jj = 0; jj < changedTouches.length; jj++) {
            var touch = changedTouches[jj];
            touch.changedTouches = changedTouches, touch.touches = touches;
            var nativeEvent = touch,
                rootNodeID = null,
                target = nativeEvent.target;
            null !== target && void 0 !== target && (target < ReactNativeTagHandles_1.tagsStartAt ? warning(!1, "A view is reporting that a touch occurred on tag zero.") : rootNodeID = target), ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);
        }
    }
}),
    ReactNativeEventEmitter_1 = ReactNativeEventEmitter,
    ReactNativeEventPluginOrder = ["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"],
    ReactNativeEventPluginOrder_1 = ReactNativeEventPluginOrder,
    ReactNativeGlobalResponderHandler = {
    onChange: function onChange(from, to, blockNativeResponder) {
        if (null !== to) {
            var tag = "number" != typeof to.tag ? to._rootNodeID : to.stateNode._nativeTag;
            UIManager.setJSResponder(tag, blockNativeResponder);
        } else UIManager.clearJSResponder();
    }
},
    ReactNativeGlobalResponderHandler_1 = ReactNativeGlobalResponderHandler,
    ResponderEventInterface = {
    touchHistory: function touchHistory(nativeEvent) {
        return null;
    }
};

function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent_1.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

var ResponderSyntheticEvent_1 = ResponderSyntheticEvent,
    isEndish$2 = EventPluginUtils_1.isEndish,
    isMoveish$2 = EventPluginUtils_1.isMoveish,
    isStartish$2 = EventPluginUtils_1.isStartish,
    MAX_TOUCH_BANK = 20,
    touchBank = [],
    touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
};

function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
}

function createTouchRecord(touch) {
    return {
        touchActive: !0,
        startPageX: touch.pageX,
        startPageY: touch.pageY,
        startTimeStamp: timestampForTouch(touch),
        currentPageX: touch.pageX,
        currentPageY: touch.pageY,
        currentTimeStamp: timestampForTouch(touch),
        previousPageX: touch.pageX,
        previousPageY: touch.pageY,
        previousTimeStamp: timestampForTouch(touch)
    };
}

function resetTouchRecord(touchRecord, touch) {
    touchRecord.touchActive = !0, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch);
}

function getTouchIdentifier(_ref) {
    var identifier = _ref.identifier;
    return invariant(null != identifier, "Touch object is missing identifier."), warning(identifier <= MAX_TOUCH_BANK, "Touch identifier %s is greater than maximum supported %s which causes " + "performance issues backfilling array locations for all of the indices.", identifier, MAX_TOUCH_BANK), identifier;
}

function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? resetTouchRecord(touchRecord, touch) : touchBank[identifier] = createTouchRecord(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
}

function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !0, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch move without a touch start.\n" + "Touch Move: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !1, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch end without a touch start.\n" + "Touch End: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function printTouch(touch) {
    return JSON.stringify({
        identifier: touch.identifier,
        pageX: touch.pageX,
        pageY: touch.pageY,
        timestamp: timestampForTouch(touch)
    });
}

function printTouchBank() {
    var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
    return touchBank.length > MAX_TOUCH_BANK && (printed += " (original size: " + touchBank.length + ")"), printed;
}

var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
        if (isMoveish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if (isEndish$2(topLevelType) && (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches)) {
            for (var i = 0; i < touchBank.length; i++) {
                var touchTrackToCheck = touchBank[i];
                if (null != touchTrackToCheck && touchTrackToCheck.touchActive) {
                    touchHistory.indexOfSingleActiveTouch = i;
                    break;
                }
            }
            var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];
            warning(null != activeRecord && activeRecord.touchActive, "Cannot find single active touch.");
        }
    },
    touchHistory: touchHistory
},
    ResponderTouchHistoryStore_1 = ResponderTouchHistoryStore;

function accumulate(current, next) {
    return invariant(null != next, "accumulate(...): Accumulated items must be not be null or undefined."), null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulate_1 = accumulate,
    isStartish$1 = EventPluginUtils_1.isStartish,
    isMoveish$1 = EventPluginUtils_1.isMoveish,
    isEndish$1 = EventPluginUtils_1.isEndish,
    executeDirectDispatch$1 = EventPluginUtils_1.executeDirectDispatch,
    hasDispatches$1 = EventPluginUtils_1.hasDispatches,
    executeDispatchesInOrderStopAtTrue$1 = EventPluginUtils_1.executeDispatchesInOrderStopAtTrue,
    responderInst = null,
    trackedTouchCount = 0,
    previousActiveTouches = 0,
    changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst, null !== ResponderEventPlugin.GlobalResponderHandler && ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
},
    eventTypes = {
    startShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onStartShouldSetResponder",
            captured: "onStartShouldSetResponderCapture"
        }
    },
    scrollShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onScrollShouldSetResponder",
            captured: "onScrollShouldSetResponderCapture"
        }
    },
    selectionChangeShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onSelectionChangeShouldSetResponder",
            captured: "onSelectionChangeShouldSetResponderCapture"
        }
    },
    moveShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onMoveShouldSetResponder",
            captured: "onMoveShouldSetResponderCapture"
        }
    },
    responderStart: {
        registrationName: "onResponderStart"
    },
    responderMove: {
        registrationName: "onResponderMove"
    },
    responderEnd: {
        registrationName: "onResponderEnd"
    },
    responderRelease: {
        registrationName: "onResponderRelease"
    },
    responderTerminationRequest: {
        registrationName: "onResponderTerminationRequest"
    },
    responderGrant: {
        registrationName: "onResponderGrant"
    },
    responderReject: {
        registrationName: "onResponderReject"
    },
    responderTerminate: {
        registrationName: "onResponderTerminate"
    }
};

function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var shouldSetEventType = isStartish$1(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish$1(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder,
        bubbleShouldSetFrom = responderInst ? ReactTreeTraversal.getLowestCommonAncestor(responderInst, targetInst) : targetInst,
        skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst,
        shouldSetEvent = ResponderSyntheticEvent_1.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
    shouldSetEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, skipOverBubbleShouldSetFrom ? EventPropagators_1.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent) : EventPropagators_1.accumulateTwoPhaseDispatches(shouldSetEvent);
    var wantsResponderInst = executeDispatchesInOrderStopAtTrue$1(shouldSetEvent);
    if (shouldSetEvent.isPersistent() || shouldSetEvent.constructor.release(shouldSetEvent), !wantsResponderInst || wantsResponderInst === responderInst) return null;
    var extracted,
        grantEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
    grantEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(grantEvent);
    var blockHostResponder = !0 === executeDirectDispatch$1(grantEvent);
    if (responderInst) {
        var terminationRequestEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
        terminationRequestEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminationRequestEvent);
        var shouldSwitch = !hasDispatches$1(terminationRequestEvent) || executeDirectDispatch$1(terminationRequestEvent);
        if (terminationRequestEvent.isPersistent() || terminationRequestEvent.constructor.release(terminationRequestEvent), shouldSwitch) {
            var terminateEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
            terminateEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminateEvent), extracted = accumulate_1(extracted, [grantEvent, terminateEvent]), changeResponder(wantsResponderInst, blockHostResponder);
        } else {
            var rejectEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
            rejectEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(rejectEvent), extracted = accumulate_1(extracted, rejectEvent);
        }
    } else extracted = accumulate_1(extracted, grantEvent), changeResponder(wantsResponderInst, blockHostResponder);
    return extracted;
}

function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
    return topLevelInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && "topSelectionChange" === topLevelType || isStartish$1(topLevelType) || isMoveish$1(topLevelType));
}

function noResponderTouches(nativeEvent) {
    var touches = nativeEvent.touches;
    if (!touches || 0 === touches.length) return !0;
    for (var i = 0; i < touches.length; i++) {
        var activeTouch = touches[i],
            target = activeTouch.target;
        if (null !== target && void 0 !== target && 0 !== target) {
            var targetInst = EventPluginUtils_1.getInstanceFromNode(target);
            if (ReactTreeTraversal.isAncestor(responderInst, targetInst)) return !1;
        }
    }
    return !0;
}

var ResponderEventPlugin = {
    _getResponder: function _getResponder() {
        return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (isStartish$1(topLevelType)) trackedTouchCount += 1;else if (isEndish$1(topLevelType)) {
            if (!(trackedTouchCount >= 0)) return console.error("Ended a touch event which was not counted in `trackedTouchCount`."), null;
            trackedTouchCount -= 1;
        }
        ResponderTouchHistoryStore_1.recordTouchTrack(topLevelType, nativeEvent);
        var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null,
            isResponderTouchStart = responderInst && isStartish$1(topLevelType),
            isResponderTouchMove = responderInst && isMoveish$1(topLevelType),
            isResponderTouchEnd = responderInst && isEndish$1(topLevelType),
            incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;
        if (incrementalTouch) {
            var gesture = ResponderSyntheticEvent_1.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
            gesture.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(gesture), extracted = accumulate_1(extracted, gesture);
        }
        var isResponderTerminate = responderInst && "topTouchCancel" === topLevelType,
            isResponderRelease = responderInst && !isResponderTerminate && isEndish$1(topLevelType) && noResponderTouches(nativeEvent),
            finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
        if (finalTouch) {
            var finalEvent = ResponderSyntheticEvent_1.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
            finalEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(finalEvent), extracted = accumulate_1(extracted, finalEvent), changeResponder(null);
        }
        var numberActiveTouches = ResponderTouchHistoryStore_1.touchHistory.numberActiveTouches;
        return ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches && ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches), previousActiveTouches = numberActiveTouches, extracted;
    },
    GlobalResponderHandler: null,
    GlobalInteractionHandler: null,
    injection: {
        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
            ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
        },
        injectGlobalInteractionHandler: function injectGlobalInteractionHandler(GlobalInteractionHandler) {
            ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
        }
    }
},
    ResponderEventPlugin_1 = ResponderEventPlugin;

function inject() {
    RCTEventEmitter.register(ReactNativeEventEmitter_1), EventPluginHub_1.injection.injectEventPluginOrder(ReactNativeEventPluginOrder_1), EventPluginUtils_1.injection.injectComponentTree(ReactNativeComponentTree_1), ResponderEventPlugin_1.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler_1), EventPluginHub_1.injection.injectEventPluginsByName({
        ResponderEventPlugin: ResponderEventPlugin_1,
        ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1
    });
}

var ReactNativeInjection = {
    inject: inject
},
    ReactInvalidSetStateWarningHook = {},
    processingChildContext = !1,
    warnInvalidSetState = function warnInvalidSetState() {
    warning(!processingChildContext, "setState(...): Cannot call setState() inside getChildContext()");
};

ReactInvalidSetStateWarningHook = {
    onBeginProcessingChildContext: function onBeginProcessingChildContext() {
        processingChildContext = !0;
    },
    onEndProcessingChildContext: function onEndProcessingChildContext() {
        processingChildContext = !1;
    },
    onSetState: function onSetState() {
        warnInvalidSetState();
    }
};

var ReactInvalidSetStateWarningHook_1 = ReactInvalidSetStateWarningHook,
    ReactHostOperationHistoryHook = null,
    history = [];

ReactHostOperationHistoryHook = {
    onHostOperation: function onHostOperation(operation) {
        history.push(operation);
    },
    clearHistory: function clearHistory() {
        ReactHostOperationHistoryHook._preventClearing || (history = []);
    },
    getHistory: function getHistory() {
        return history;
    }
};

var ReactHostOperationHistoryHook_1 = ReactHostOperationHistoryHook,
    ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    ReactGlobalSharedState = {
    ReactCurrentOwner: ReactInternals.ReactCurrentOwner
};

babelHelpers.extends(ReactGlobalSharedState, {
    ReactComponentTreeHook: ReactInternals.ReactComponentTreeHook,
    ReactDebugCurrentFrame: ReactInternals.ReactDebugCurrentFrame
});

var ReactGlobalSharedState_1 = ReactGlobalSharedState,
    ReactComponentTreeHook = ReactGlobalSharedState_1.ReactComponentTreeHook,
    ReactDebugTool$1 = null,
    hooks = [],
    didHookThrowForEvent = {},
    callHook = function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
    try {
        fn.call(context, arg1, arg2, arg3, arg4, arg5);
    } catch (e) {
        warning(didHookThrowForEvent[event], "Exception thrown by hook while handling %s: %s", event, e + "\n" + e.stack), didHookThrowForEvent[event] = !0;
    }
},
    emitEvent = function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
    for (var i = 0; i < hooks.length; i++) {
        var hook = hooks[i],
            fn = hook[event];
        fn && callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
},
    _isProfiling = !1,
    flushHistory = [],
    lifeCycleTimerStack = [],
    currentFlushNesting = 0,
    currentFlushMeasurements = [],
    currentFlushStartTime = 0,
    currentTimerDebugID = null,
    currentTimerStartTime = 0,
    currentTimerNestedFlushDuration = 0,
    currentTimerType = null,
    lifeCycleTimerHasWarned = !1,
    clearHistory = function clearHistory() {
    ReactComponentTreeHook.purgeUnmountedComponents(), ReactHostOperationHistoryHook_1.clearHistory();
},
    getTreeSnapshot = function getTreeSnapshot(registeredIDs) {
    return registeredIDs.reduce(function (tree, id) {
        var ownerID = ReactComponentTreeHook.getOwnerID(id),
            parentID = ReactComponentTreeHook.getParentID(id);
        return tree[id] = {
            displayName: ReactComponentTreeHook.getDisplayName(id),
            text: ReactComponentTreeHook.getText(id),
            updateCount: ReactComponentTreeHook.getUpdateCount(id),
            childIDs: ReactComponentTreeHook.getChildIDs(id),
            ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
            parentID: parentID
        }, tree;
    }, {});
},
    resetMeasurements = function resetMeasurements() {
    var previousStartTime = currentFlushStartTime,
        previousMeasurements = currentFlushMeasurements,
        previousOperations = ReactHostOperationHistoryHook_1.getHistory();
    if (0 === currentFlushNesting) return currentFlushStartTime = 0, currentFlushMeasurements = [], void clearHistory();
    if (previousMeasurements.length || previousOperations.length) {
        var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
        flushHistory.push({
            duration: performanceNow() - previousStartTime,
            measurements: previousMeasurements || [],
            operations: previousOperations || [],
            treeSnapshot: getTreeSnapshot(registeredIDs)
        });
    }
    clearHistory(), currentFlushStartTime = performanceNow(), currentFlushMeasurements = [];
},
    checkDebugID = function checkDebugID(debugID) {
    arguments.length > 1 && void 0 !== arguments[1] && arguments[1] && 0 === debugID || debugID || warning(!1, "ReactDebugTool: debugID may not be empty.");
},
    beginLifeCycleTimer = function beginLifeCycleTimer(debugID, timerType) {
    0 !== currentFlushNesting && (currentTimerType && !lifeCycleTimerHasWarned && (warning(!1, "There is an internal error in the React performance measurement code." + "\n\nDid not expect %s timer to start while %s timer is still in " + "progress for %s instance.", timerType, currentTimerType || "no", debugID === currentTimerDebugID ? "the same" : "another"), lifeCycleTimerHasWarned = !0), currentTimerStartTime = performanceNow(), currentTimerNestedFlushDuration = 0, currentTimerDebugID = debugID, currentTimerType = timerType);
},
    endLifeCycleTimer = function endLifeCycleTimer(debugID, timerType) {
    0 !== currentFlushNesting && (currentTimerType === timerType || lifeCycleTimerHasWarned || (warning(!1, "There is an internal error in the React performance measurement code. " + "We did not expect %s timer to stop while %s timer is still in " + "progress for %s instance. Please report this as a bug in React.", timerType, currentTimerType || "no", debugID === currentTimerDebugID ? "the same" : "another"), lifeCycleTimerHasWarned = !0), _isProfiling && currentFlushMeasurements.push({
        timerType: timerType,
        instanceID: debugID,
        duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    }), currentTimerStartTime = 0, currentTimerNestedFlushDuration = 0, currentTimerDebugID = null, currentTimerType = null);
},
    pauseCurrentLifeCycleTimer = function pauseCurrentLifeCycleTimer() {
    var currentTimer = {
        startTime: currentTimerStartTime,
        nestedFlushStartTime: performanceNow(),
        debugID: currentTimerDebugID,
        timerType: currentTimerType
    };
    lifeCycleTimerStack.push(currentTimer), currentTimerStartTime = 0, currentTimerNestedFlushDuration = 0, currentTimerDebugID = null, currentTimerType = null;
},
    resumeCurrentLifeCycleTimer = function resumeCurrentLifeCycleTimer() {
    var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
        startTime = _lifeCycleTimerStack$.startTime,
        nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
        debugID = _lifeCycleTimerStack$.debugID,
        timerType = _lifeCycleTimerStack$.timerType,
        nestedFlushDuration = performanceNow() - nestedFlushStartTime;
    currentTimerStartTime = startTime, currentTimerNestedFlushDuration += nestedFlushDuration, currentTimerDebugID = debugID, currentTimerType = timerType;
},
    lastMarkTimeStamp = 0,
    canUsePerformanceMeasure = "undefined" != typeof performance && "function" == typeof performance.mark && "function" == typeof performance.clearMarks && "function" == typeof performance.measure && "function" == typeof performance.clearMeasures,
    shouldMark = function shouldMark(debugID) {
    if (!_isProfiling || !canUsePerformanceMeasure) return !1;
    var element = ReactComponentTreeHook.getElement(debugID);
    return null != element && "object" == typeof element && !("string" == typeof element.type);
},
    markBegin = function markBegin(debugID, markType) {
    if (shouldMark(debugID)) {
        var markName = debugID + "::" + markType;
        lastMarkTimeStamp = performanceNow(), performance.mark(markName);
    }
},
    markEnd = function markEnd(debugID, markType) {
    if (shouldMark(debugID)) {
        var markName = debugID + "::" + markType,
            displayName = ReactComponentTreeHook.getDisplayName(debugID) || "Unknown";
        if (performanceNow() - lastMarkTimeStamp > .1) {
            var measurementName = displayName + " [" + markType + "]";
            performance.measure(measurementName, markName);
        }
        performance.clearMarks(markName), measurementName && performance.clearMeasures(measurementName);
    }
};

ReactDebugTool$1 = {
    addHook: function addHook(hook) {
        hooks.push(hook);
    },
    removeHook: function removeHook(hook) {
        for (var i = 0; i < hooks.length; i++) {
            hooks[i] === hook && (hooks.splice(i, 1), i--);
        }
    },
    isProfiling: function isProfiling() {
        return _isProfiling;
    },
    beginProfiling: function beginProfiling() {
        _isProfiling || (_isProfiling = !0, flushHistory.length = 0, resetMeasurements(), ReactDebugTool$1.addHook(ReactHostOperationHistoryHook_1));
    },
    endProfiling: function endProfiling() {
        _isProfiling && (_isProfiling = !1, resetMeasurements(), ReactDebugTool$1.removeHook(ReactHostOperationHistoryHook_1));
    },
    getFlushHistory: function getFlushHistory() {
        return flushHistory;
    },
    onBeginFlush: function onBeginFlush() {
        currentFlushNesting++, resetMeasurements(), pauseCurrentLifeCycleTimer(), emitEvent("onBeginFlush");
    },
    onEndFlush: function onEndFlush() {
        resetMeasurements(), currentFlushNesting--, resumeCurrentLifeCycleTimer(), emitEvent("onEndFlush");
    },
    onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
        checkDebugID(debugID), emitEvent("onBeginLifeCycleTimer", debugID, timerType), markBegin(debugID, timerType), beginLifeCycleTimer(debugID, timerType);
    },
    onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
        checkDebugID(debugID), endLifeCycleTimer(debugID, timerType), markEnd(debugID, timerType), emitEvent("onEndLifeCycleTimer", debugID, timerType);
    },
    onBeginProcessingChildContext: function onBeginProcessingChildContext() {
        emitEvent("onBeginProcessingChildContext");
    },
    onEndProcessingChildContext: function onEndProcessingChildContext() {
        emitEvent("onEndProcessingChildContext");
    },
    onHostOperation: function onHostOperation(operation) {
        checkDebugID(operation.instanceID), emitEvent("onHostOperation", operation);
    },
    onSetState: function onSetState() {
        emitEvent("onSetState");
    },
    onSetChildren: function onSetChildren(debugID, childDebugIDs) {
        checkDebugID(debugID), childDebugIDs.forEach(checkDebugID), emitEvent("onSetChildren", debugID, childDebugIDs);
    },
    onBeforeMountComponent: function onBeforeMountComponent(debugID, element, parentDebugID) {
        checkDebugID(debugID), checkDebugID(parentDebugID, !0), emitEvent("onBeforeMountComponent", debugID, element, parentDebugID), markBegin(debugID, "mount");
    },
    onMountComponent: function onMountComponent(debugID) {
        checkDebugID(debugID), markEnd(debugID, "mount"), emitEvent("onMountComponent", debugID);
    },
    onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
        checkDebugID(debugID), emitEvent("onBeforeUpdateComponent", debugID, element), markBegin(debugID, "update");
    },
    onUpdateComponent: function onUpdateComponent(debugID) {
        checkDebugID(debugID), markEnd(debugID, "update"), emitEvent("onUpdateComponent", debugID);
    },
    onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
        checkDebugID(debugID), emitEvent("onBeforeUnmountComponent", debugID), markBegin(debugID, "unmount");
    },
    onUnmountComponent: function onUnmountComponent(debugID) {
        checkDebugID(debugID), markEnd(debugID, "unmount"), emitEvent("onUnmountComponent", debugID);
    },
    onTestEvent: function onTestEvent() {
        emitEvent("onTestEvent");
    }
}, ReactDebugTool$1.addHook(ReactInvalidSetStateWarningHook_1), ReactDebugTool$1.addHook(ReactComponentTreeHook);

var url = ExecutionEnvironment.canUseDOM && window.location.href || "";

/[?&]react_perf\b/.test(url) && ReactDebugTool$1.beginProfiling();

var ReactDebugTool_1 = ReactDebugTool$1,
    debugTool = null,
    ReactDebugTool = ReactDebugTool_1;

debugTool = ReactDebugTool;

var ReactInstrumentation = {
    debugTool: debugTool
};

function ReactNativeContainerInfo(tag) {
    return {
        _tag: tag
    };
}

var ReactNativeContainerInfo_1 = ReactNativeContainerInfo,
    ClassComponent = ReactTypeOfWork.ClassComponent;

function isValidOwner(object) {
    return !(!object || "function" != typeof object.attachRef || "function" != typeof object.detachRef);
}

var ReactOwner = {
    addComponentAsRefTo: function addComponentAsRefTo(component, ref, owner) {
        if (owner && owner.tag === ClassComponent) {
            var inst = owner.stateNode;
            (inst.refs === emptyObject ? inst.refs = {} : inst.refs)[ref] = component.getPublicInstance();
        } else invariant(isValidOwner(owner), "addComponentAsRefTo(...): Only a ReactOwner can have refs. You might " + "be adding a ref to a component that was not created inside a component's " + "`render` method, or you have multiple copies of React loaded " + "(details: https://fb.me/react-refs-must-have-owner)."), owner.attachRef(ref, component);
    },
    removeComponentAsRefFrom: function removeComponentAsRefFrom(component, ref, owner) {
        if (owner && owner.tag === ClassComponent) {
            var inst = owner.stateNode;
            inst && inst.refs[ref] === component.getPublicInstance() && delete inst.refs[ref];
        } else {
            invariant(isValidOwner(owner), "removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might " + "be removing a ref to a component that was not created inside a component's " + "`render` method, or you have multiple copies of React loaded " + "(details: https://fb.me/react-refs-must-have-owner).");
            var ownerPublicInstance = owner.getPublicInstance();
            ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance() && owner.detachRef(ref);
        }
    }
},
    ReactOwner_1 = ReactOwner,
    ReactCompositeComponentTypes$1 = {
    ImpureClass: 0,
    PureClass: 1,
    StatelessFunctional: 2
},
    ReactRef = {},
    ReactCompositeComponentTypes = ReactCompositeComponentTypes$1,
    _require$1 = ReactGlobalSharedState_1,
    ReactComponentTreeHook$1 = _require$1.ReactComponentTreeHook,
    warning$2 = warning,
    warnedAboutStatelessRefs = {};

function attachRef(ref, component, owner) {
    if (component._compositeType === ReactCompositeComponentTypes.StatelessFunctional) {
        var info = "",
            ownerName = void 0;
        owner && ("function" == typeof owner.getName && (ownerName = owner.getName()), ownerName && (info += "\n\nCheck the render method of `" + ownerName + "`."));
        var warningKey = ownerName || component._debugID,
            element = component._currentElement;
        element && element._source && (warningKey = element._source.fileName + ":" + element._source.lineNumber), warnedAboutStatelessRefs[warningKey] || (warnedAboutStatelessRefs[warningKey] = !0, warning$2(!1, "Stateless function components cannot be given refs. " + "Attempts to access this ref will fail.%s%s", info, ReactComponentTreeHook$1.getStackAddendumByID(component._debugID)));
    }
    "function" == typeof ref ? ref(component.getPublicInstance()) : ReactOwner_1.addComponentAsRefTo(component, ref, owner);
}

function detachRef(ref, component, owner) {
    "function" == typeof ref ? ref(null) : ReactOwner_1.removeComponentAsRefFrom(component, ref, owner);
}

ReactRef.attachRefs = function (instance, element) {
    if (null !== element && "object" == typeof element) {
        var ref = element.ref;
        null != ref && attachRef(ref, instance, element._owner);
    }
}, ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
    var prevRef = null,
        prevOwner = null;
    null !== prevElement && "object" == typeof prevElement && (prevRef = prevElement.ref, prevOwner = prevElement._owner);
    var nextRef = null,
        nextOwner = null;
    return null !== nextElement && "object" == typeof nextElement && (nextRef = nextElement.ref, nextOwner = nextElement._owner), prevRef !== nextRef || "string" == typeof nextRef && nextOwner !== prevOwner;
}, ReactRef.detachRefs = function (instance, element) {
    if (null !== element && "object" == typeof element) {
        var ref = element.ref;
        null != ref && detachRef(ref, instance, element._owner);
    }
};

var ReactRef_1 = ReactRef;

function attachRefs() {
    ReactRef_1.attachRefs(this, this._currentElement);
}

var ReactReconciler = {
    mountComponent: function mountComponent(internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) {
        0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
        var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
        return internalInstance._currentElement && null != internalInstance._currentElement.ref && transaction.getReactMountReady().enqueue(attachRefs, internalInstance), 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID), markup;
    },
    getHostNode: function getHostNode(internalInstance) {
        return internalInstance.getHostNode();
    },
    unmountComponent: function unmountComponent(internalInstance, safely, skipLifecycle) {
        0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID), ReactRef_1.detachRefs(internalInstance, internalInstance._currentElement), internalInstance.unmountComponent(safely, skipLifecycle), 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
    },
    receiveComponent: function receiveComponent(internalInstance, nextElement, transaction, context) {
        var prevElement = internalInstance._currentElement;
        if (nextElement !== prevElement || context !== internalInstance._context) {
            0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
            var refsChanged = ReactRef_1.shouldUpdateRefs(prevElement, nextElement);
            refsChanged && ReactRef_1.detachRefs(internalInstance, prevElement), internalInstance.receiveComponent(nextElement, transaction, context), refsChanged && internalInstance._currentElement && null != internalInstance._currentElement.ref && transaction.getReactMountReady().enqueue(attachRefs, internalInstance), 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
        }
    },
    performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, transaction, updateBatchNumber) {
        if (internalInstance._updateBatchNumber !== updateBatchNumber) return void warning(null == internalInstance._updateBatchNumber || internalInstance._updateBatchNumber === updateBatchNumber + 1, "performUpdateIfNecessary: Unexpected batch number (current %s, " + "pending %s)", updateBatchNumber, internalInstance._updateBatchNumber);
        0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement), internalInstance.performUpdateIfNecessary(transaction), 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
    }
},
    ReactReconciler_1 = ReactReconciler,
    ReactInstanceMap = {
    remove: function remove(key) {
        key._reactInternalInstance = void 0;
    },
    get: function get(key) {
        return key._reactInternalInstance;
    },
    has: function has(key) {
        return void 0 !== key._reactInternalInstance;
    },
    set: function set(key, value) {
        key._reactInternalInstance = value;
    }
},
    ReactInstanceMap_1 = ReactInstanceMap,
    OBSERVED_ERROR = {},
    TransactionImpl = {
    reinitializeTransaction: function reinitializeTransaction() {
        this.transactionWrappers = this.getTransactionWrappers(), this.wrapperInitData ? this.wrapperInitData.length = 0 : this.wrapperInitData = [], this._isInTransaction = !1;
    },
    _isInTransaction: !1,
    getTransactionWrappers: null,
    isInTransaction: function isInTransaction() {
        return !!this._isInTransaction;
    },
    perform: function perform(method, scope, a, b, c, d, e, f) {
        invariant(!this.isInTransaction(), "Transaction.perform(...): Cannot initialize a transaction when there " + "is already an outstanding transaction.");
        var errorThrown, ret;
        try {
            this._isInTransaction = !0, errorThrown = !0, this.initializeAll(0), ret = method.call(scope, a, b, c, d, e, f), errorThrown = !1;
        } finally {
            try {
                if (errorThrown) try {
                    this.closeAll(0);
                } catch (err) {} else this.closeAll(0);
            } finally {
                this._isInTransaction = !1;
            }
        }
        return ret;
    },
    initializeAll: function initializeAll(startIndex) {
        for (var transactionWrappers = this.transactionWrappers, i = startIndex; i < transactionWrappers.length; i++) {
            var wrapper = transactionWrappers[i];
            try {
                this.wrapperInitData[i] = OBSERVED_ERROR, this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
            } finally {
                if (this.wrapperInitData[i] === OBSERVED_ERROR) try {
                    this.initializeAll(i + 1);
                } catch (err) {}
            }
        }
    },
    closeAll: function closeAll(startIndex) {
        invariant(this.isInTransaction(), "Transaction.closeAll(): Cannot close transaction when none are open.");
        for (var transactionWrappers = this.transactionWrappers, i = startIndex; i < transactionWrappers.length; i++) {
            var errorThrown,
                wrapper = transactionWrappers[i],
                initData = this.wrapperInitData[i];
            try {
                errorThrown = !0, initData !== OBSERVED_ERROR && wrapper.close && wrapper.close.call(this, initData), errorThrown = !1;
            } finally {
                if (errorThrown) try {
                    this.closeAll(i + 1);
                } catch (e) {}
            }
        }
        this.wrapperInitData.length = 0;
    }
},
    Transaction = TransactionImpl,
    dirtyComponents = [],
    updateBatchNumber = 0,
    batchingStrategy = null;

function ensureInjected() {
    invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy, "ReactUpdates: must inject a reconcile transaction class and batching " + "strategy");
}

var NESTED_UPDATES = {
    initialize: function initialize() {
        this.dirtyComponentsLength = dirtyComponents.length;
    },
    close: function close() {
        this.dirtyComponentsLength !== dirtyComponents.length ? (dirtyComponents.splice(0, this.dirtyComponentsLength), flushBatchedUpdates()) : dirtyComponents.length = 0;
    }
},
    TRANSACTION_WRAPPERS = [NESTED_UPDATES];

function ReactUpdatesFlushTransaction() {
    this.reinitializeTransaction(), this.dirtyComponentsLength = null, this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(!0);
}

babelHelpers.extends(ReactUpdatesFlushTransaction.prototype, Transaction, {
    getTransactionWrappers: function getTransactionWrappers() {
        return TRANSACTION_WRAPPERS;
    },
    destructor: function destructor() {
        this.dirtyComponentsLength = null, ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction), this.reconcileTransaction = null;
    },
    perform: function perform(method, scope, a) {
        return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
    }
}), PooledClass_1.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates$1(callback, a, b, c, d, e) {
    return ensureInjected(), batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

function mountOrderComparator(c1, c2) {
    return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
    var len = transaction.dirtyComponentsLength;
    invariant(len === dirtyComponents.length, "Expected flush transaction's stored dirty-components length (%s) to " + "match dirty-components array length (%s).", len, dirtyComponents.length), dirtyComponents.sort(mountOrderComparator), updateBatchNumber++;
    for (var i = 0; i < len; i++) {
        var component = dirtyComponents[i];
        ReactReconciler_1.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
    }
}

var flushBatchedUpdates = function flushBatchedUpdates() {
    for (; dirtyComponents.length;) {
        var transaction = ReactUpdatesFlushTransaction.getPooled();
        transaction.perform(runBatchedUpdates, null, transaction), ReactUpdatesFlushTransaction.release(transaction);
    }
};

function enqueueUpdate$1(component) {
    if (ensureInjected(), !batchingStrategy.isBatchingUpdates) return void batchingStrategy.batchedUpdates(enqueueUpdate$1, component);
    dirtyComponents.push(component), null == component._updateBatchNumber && (component._updateBatchNumber = updateBatchNumber + 1);
}

var ReactUpdatesInjection = {
    injectReconcileTransaction: function injectReconcileTransaction(ReconcileTransaction) {
        invariant(ReconcileTransaction, "ReactUpdates: must provide a reconcile transaction class"), ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
    },
    injectBatchingStrategy: function injectBatchingStrategy(_batchingStrategy) {
        invariant(_batchingStrategy, "ReactUpdates: must provide a batching strategy"), invariant("function" == typeof _batchingStrategy.batchedUpdates, "ReactUpdates: must provide a batchedUpdates() function"), invariant("boolean" == typeof _batchingStrategy.isBatchingUpdates, "ReactUpdates: must provide an isBatchingUpdates boolean attribute"), batchingStrategy = _batchingStrategy;
    },
    getBatchingStrategy: function getBatchingStrategy() {
        return batchingStrategy;
    }
},
    ReactUpdates = {
    ReactReconcileTransaction: null,
    batchedUpdates: batchedUpdates$1,
    enqueueUpdate: enqueueUpdate$1,
    flushBatchedUpdates: flushBatchedUpdates,
    injection: ReactUpdatesInjection
},
    ReactUpdates_1 = ReactUpdates,
    ReactCurrentOwner = ReactGlobalSharedState_1.ReactCurrentOwner,
    warning$3 = warning,
    warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {
    warning$3(null === callback || "function" == typeof callback, "%s(...): Expected the last optional `callback` argument to be a " + "function. Instead received: %s.", callerName, "" + callback);
};

function enqueueUpdate(internalInstance) {
    ReactUpdates_1.enqueueUpdate(internalInstance);
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
    var internalInstance = ReactInstanceMap_1.get(publicInstance);
    if (!internalInstance) {
        var ctor = publicInstance.constructor;
        return warning$3(!1, "Can only update a mounted or mounting component. This usually means " + "you called setState, replaceState, or forceUpdate on an unmounted " + "component. This is a no-op.\n\nPlease check the code for the " + "%s component.", ctor && (ctor.displayName || ctor.name) || "ReactClass"), null;
    }
    return warning$3(null == ReactCurrentOwner.current, "Cannot update during an existing state transition (such as within " + "`render` or another component's constructor). Render methods should " + "be a pure function of props and state; constructor side-effects are " + "an anti-pattern, but can be moved to `componentWillMount`."), internalInstance;
}

var ReactUpdateQueue = {
    isMounted: function isMounted(publicInstance) {
        var owner = ReactCurrentOwner.current;
        null !== owner && (warning$3(owner._warnedAboutRefsInRender, "%s is accessing isMounted inside its render() function. " + "render() should be a pure function of props and state. It should " + "never access something that requires stale data from the previous " + "render, such as refs. Move this logic to componentDidMount and " + "componentDidUpdate instead.", owner.getName() || "A component"), owner._warnedAboutRefsInRender = !0);
        var internalInstance = ReactInstanceMap_1.get(publicInstance);
        return !!internalInstance && !!internalInstance._renderedComponent;
    },
    enqueueCallbackInternal: function enqueueCallbackInternal(internalInstance, callback) {
        internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback], enqueueUpdate(internalInstance);
    },
    enqueueForceUpdate: function enqueueForceUpdate(publicInstance, callback, callerName) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
        internalInstance && (callback = void 0 === callback ? null : callback, null !== callback && (warnOnInvalidCallback(callback, callerName), internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback]), internalInstance._pendingForceUpdate = !0, enqueueUpdate(internalInstance));
    },
    enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState, callback, callerName) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
        internalInstance && (internalInstance._pendingStateQueue = [completeState], internalInstance._pendingReplaceState = !0, callback = void 0 === callback ? null : callback, null !== callback && (warnOnInvalidCallback(callback, callerName), internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback]), enqueueUpdate(internalInstance));
    },
    enqueueSetState: function enqueueSetState(publicInstance, partialState, callback, callerName) {
        ReactInstrumentation.debugTool.onSetState(), warning$3(null != partialState, "setState(...): You passed an undefined or null state object; " + "instead, use forceUpdate().");
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
        if (internalInstance) {
            (internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = [])).push(partialState), callback = void 0 === callback ? null : callback, null !== callback && (warnOnInvalidCallback(callback, callerName), internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback]), enqueueUpdate(internalInstance);
        }
    },
    enqueueElementInternal: function enqueueElementInternal(internalInstance, nextElement, nextContext) {
        internalInstance._pendingElement = nextElement, internalInstance._context = nextContext, enqueueUpdate(internalInstance);
    }
},
    ReactUpdateQueue_1 = ReactUpdateQueue,
    injected = !1,
    ReactComponentEnvironment = {
    replaceNodeWithMarkup: null,
    processChildrenUpdates: null,
    injection: {
        injectEnvironment: function injectEnvironment(environment) {
            invariant(!injected, "ReactCompositeComponent: injectEnvironment() can only be called once."), ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup, ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates, injected = !0;
        }
    }
},
    ReactComponentEnvironment_1 = ReactComponentEnvironment,
    ReactNodeTypes = {
    HOST: 0,
    COMPOSITE: 1,
    EMPTY: 2,
    getType: function getType(node) {
        return null === node || !1 === node ? ReactNodeTypes.EMPTY : React.isValidElement(node) ? "function" == typeof node.type ? ReactNodeTypes.COMPOSITE : ReactNodeTypes.HOST : void invariant(!1, "Unexpected node: %s", node);
    }
},
    ReactNodeTypes_1 = ReactNodeTypes;

function shouldUpdateReactComponent(prevElement, nextElement) {
    var prevEmpty = null === prevElement || !1 === prevElement,
        nextEmpty = null === nextElement || !1 === nextElement;
    if (prevEmpty || nextEmpty) return prevEmpty === nextEmpty;
    var prevType = typeof prevElement,
        nextType = typeof nextElement;
    return "string" === prevType || "number" === prevType ? "string" === nextType || "number" === nextType : "object" === nextType && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
}

var shouldUpdateReactComponent_1 = shouldUpdateReactComponent,
    ReactCurrentOwner$1 = ReactGlobalSharedState_1.ReactCurrentOwner,
    _require2 = ReactGlobalSharedState_1,
    ReactDebugCurrentFrame = _require2.ReactDebugCurrentFrame,
    warningAboutMissingGetChildContext = {};

function StatelessComponent(Component) {}

StatelessComponent.prototype.render = function () {
    return (0, ReactInstanceMap_1.get(this)._currentElement.type)(this.props, this.context, this.updater);
};

function shouldConstruct(Component) {
    return !(!Component.prototype || !Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
    return !(!Component.prototype || !Component.prototype.isPureReactComponent);
}

function measureLifeCyclePerf(fn, debugID, timerType) {
    if (0 === debugID) return fn();
    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
    try {
        return fn();
    } finally {
        ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
    }
}

var nextMountID = 1,
    ReactCompositeComponent = {
    construct: function construct(element) {
        this._currentElement = element, this._rootNodeID = 0, this._compositeType = null, this._instance = null, this._hostParent = null, this._hostContainerInfo = null, this._updateBatchNumber = null, this._pendingElement = null, this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._renderedNodeType = null, this._renderedComponent = null, this._context = null, this._mountOrder = 0, this._topLevelWrapper = null, this._pendingCallbacks = null, this._calledComponentWillUnmount = !1, this._warnedAboutRefsInRender = !1;
    },
    mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
        var _this = this;
        this._context = context, this._mountOrder = nextMountID++, this._hostParent = hostParent, this._hostContainerInfo = hostContainerInfo;
        var renderedElement,
            publicProps = this._currentElement.props,
            publicContext = this._processContext(context),
            Component = this._currentElement.type,
            updateQueue = transaction.getUpdateQueue(),
            doConstruct = shouldConstruct(Component),
            inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
        doConstruct || null != inst && null != inst.render ? isPureComponent(Component) ? this._compositeType = ReactCompositeComponentTypes$1.PureClass : this._compositeType = ReactCompositeComponentTypes$1.ImpureClass : (renderedElement = inst, warning(!Component.childContextTypes, "%s(...): childContextTypes cannot be defined on a functional component.", Component.displayName || Component.name || "Component"), invariant(null === inst || !1 === inst || React.isValidElement(inst), "%s(...): A valid React element (or null) must be returned. You may have " + "returned undefined, an array or some other invalid object.", Component.displayName || Component.name || "Component"), inst = new StatelessComponent(Component), this._compositeType = ReactCompositeComponentTypes$1.StatelessFunctional), null == inst.render && warning(!1, "%s(...): No `render` method found on the returned component " + "instance: you may have forgotten to define `render`.", Component.displayName || Component.name || "Component");
        var propsMutated = inst.props !== publicProps,
            componentName = Component.displayName || Component.name || "Component";
        warning(void 0 === inst.props || !propsMutated, "%s(...): When calling super() in `%s`, make sure to pass " + "up the same props that your component's constructor was passed.", componentName, componentName), inst.props = publicProps, inst.context = publicContext, inst.refs = emptyObject, inst.updater = updateQueue, this._instance = inst, ReactInstanceMap_1.set(inst, this), warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, "getInitialState was defined on %s, a plain JavaScript class. " + "This is only supported for classes created using React.createClass. " + "Did you mean to define a state property instead?", this.getName() || "a component"), warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, "getDefaultProps was defined on %s, a plain JavaScript class. " + "This is only supported for classes created using React.createClass. " + "Use a static property to define defaultProps instead.", this.getName() || "a component"), warning(!inst.propTypes, "propTypes was defined as an instance property on %s. Use a static " + "property to define propTypes instead.", this.getName() || "a component"), warning(!inst.contextTypes, "contextTypes was defined as an instance property on %s. Use a " + "static property to define contextTypes instead.", this.getName() || "a component"), warning("function" != typeof inst.componentShouldUpdate, "%s has a method called " + "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " + "The name is phrased as a question because the function is " + "expected to return a value.", this.getName() || "A component"), warning("function" != typeof inst.componentDidUnmount, "%s has a method called " + "componentDidUnmount(). But there is no such lifecycle method. " + "Did you mean componentWillUnmount()?", this.getName() || "A component"), warning("function" != typeof inst.componentWillRecieveProps, "%s has a method called " + "componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", this.getName() || "A component"), isPureComponent(Component) && void 0 !== inst.shouldComponentUpdate && warning(!1, "%s has a method called shouldComponentUpdate(). " + "shouldComponentUpdate should not be used when extending React.PureComponent. " + "Please extend React.Component if shouldComponentUpdate is used.", this.getName() || "A pure component"), warning(!inst.defaultProps, "Setting defaultProps as an instance property on %s is not supported and will be ignored." + " Instead, define defaultProps as a static property on %s.", this.getName() || "a component", this.getName() || "a component");
        var initialState = inst.state;
        void 0 === initialState && (inst.state = initialState = null), invariant("object" == typeof initialState && !Array.isArray(initialState), "%s.state: must be set to an object or null", this.getName() || "ReactCompositeComponent"), this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, inst.componentWillMount && (measureLifeCyclePerf(function () {
            return inst.componentWillMount();
        }, this._debugID, "componentWillMount"), this._pendingStateQueue && (inst.state = this._processPendingState(inst.props, inst.context)));
        var markup;
        markup = inst.unstable_handleError ? this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) : this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context), inst.componentDidMount && transaction.getReactMountReady().enqueue(function () {
            measureLifeCyclePerf(function () {
                return inst.componentDidMount();
            }, _this._debugID, "componentDidMount");
        });
        var callbacks = this._pendingCallbacks;
        if (callbacks) {
            this._pendingCallbacks = null;
            for (var i = 0; i < callbacks.length; i++) {
                transaction.getReactMountReady().enqueue(callbacks[i], inst);
            }
        }
        return markup;
    },
    _constructComponent: function _constructComponent(doConstruct, publicProps, publicContext, updateQueue) {
        ReactCurrentOwner$1.current = this;
        try {
            return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
        } finally {
            ReactCurrentOwner$1.current = null;
        }
    },
    _constructComponentWithoutOwner: function _constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue) {
        var Component = this._currentElement.type;
        return doConstruct ? measureLifeCyclePerf(function () {
            return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, "ctor") : measureLifeCyclePerf(function () {
            return Component(publicProps, publicContext, updateQueue);
        }, this._debugID, "render");
    },
    performInitialMountWithErrorHandling: function performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) {
        var markup,
            checkpoint = transaction.checkpoint();
        try {
            markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        } catch (e) {
            transaction.rollback(checkpoint), this._instance.unstable_handleError(e), this._pendingStateQueue && (this._instance.state = this._processPendingState(this._instance.props, this._instance.context)), checkpoint = transaction.checkpoint(), this._renderedComponent.unmountComponent(!0, !0), transaction.rollback(checkpoint), markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        }
        return markup;
    },
    performInitialMount: function performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context) {
        void 0 === renderedElement && (renderedElement = this._renderValidatedComponent());
        var nodeType = ReactNodeTypes_1.getType(renderedElement);
        this._renderedNodeType = nodeType;
        var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes_1.EMPTY);
        this._renderedComponent = child;
        var debugID = 0;
        debugID = this._debugID;
        var markup = ReactReconciler_1.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
        if (0 !== debugID) {
            var childDebugIDs = 0 !== child._debugID ? [child._debugID] : [];
            ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
        return markup;
    },
    getHostNode: function getHostNode() {
        return ReactReconciler_1.getHostNode(this._renderedComponent);
    },
    unmountComponent: function unmountComponent(safely, skipLifecycle) {
        if (this._renderedComponent) {
            var inst = this._instance;
            if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) if (inst._calledComponentWillUnmount = !0, safely) {
                if (!skipLifecycle) {
                    var name = this.getName() + ".componentWillUnmount()";
                    ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(name, inst.componentWillUnmount, inst);
                }
            } else measureLifeCyclePerf(function () {
                return inst.componentWillUnmount();
            }, this._debugID, "componentWillUnmount");
            this._renderedComponent && (ReactReconciler_1.unmountComponent(this._renderedComponent, safely, skipLifecycle), this._renderedNodeType = null, this._renderedComponent = null, this._instance = null), this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._pendingCallbacks = null, this._pendingElement = null, this._context = null, this._rootNodeID = 0, this._topLevelWrapper = null, ReactInstanceMap_1.remove(inst);
        }
    },
    _maskContext: function _maskContext(context) {
        var Component = this._currentElement.type,
            contextTypes = Component.contextTypes;
        if (!contextTypes) return emptyObject;
        var maskedContext = {};
        for (var contextName in contextTypes) {
            maskedContext[contextName] = context[contextName];
        }return maskedContext;
    },
    _processContext: function _processContext(context) {
        var maskedContext = this._maskContext(context),
            Component = this._currentElement.type;
        return Component.contextTypes && this._checkContextTypes(Component.contextTypes, maskedContext, "context"), maskedContext;
    },
    _processChildContext: function _processChildContext(currentContext) {
        var childContext,
            Component = this._currentElement.type,
            inst = this._instance;
        if ("function" == typeof inst.getChildContext) {
            ReactInstrumentation.debugTool.onBeginProcessingChildContext();
            try {
                childContext = inst.getChildContext();
            } finally {
                ReactInstrumentation.debugTool.onEndProcessingChildContext();
            }
            invariant("object" == typeof Component.childContextTypes, "%s.getChildContext(): childContextTypes must be defined in order to " + "use getChildContext().", this.getName() || "ReactCompositeComponent"), this._checkContextTypes(Component.childContextTypes, childContext, "child context");
            for (var name in childContext) {
                invariant(name in Component.childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || "ReactCompositeComponent", name);
            }return babelHelpers.extends({}, currentContext, childContext);
        }
        var componentName = this.getName();
        return warningAboutMissingGetChildContext[componentName] || (warningAboutMissingGetChildContext[componentName] = !0, warning(!Component.childContextTypes, "%s.childContextTypes is specified but there is no getChildContext() method " + "on the instance. You can either define getChildContext() on %s or remove " + "childContextTypes from it.", componentName, componentName)), currentContext;
    },
    _checkContextTypes: function _checkContextTypes(typeSpecs, values, location) {
        ReactDebugCurrentFrame.current = this._debugID, checkPropTypes(typeSpecs, values, location, this.getName(), ReactDebugCurrentFrame.getStackAddendum), ReactDebugCurrentFrame.current = null;
    },
    receiveComponent: function receiveComponent(nextElement, transaction, nextContext) {
        var prevElement = this._currentElement,
            prevContext = this._context;
        this._pendingElement = null, this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
    },
    performUpdateIfNecessary: function performUpdateIfNecessary(transaction) {
        if (null != this._pendingElement) ReactReconciler_1.receiveComponent(this, this._pendingElement, transaction, this._context);else if (null !== this._pendingStateQueue || this._pendingForceUpdate) this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);else {
            var callbacks = this._pendingCallbacks;
            if (this._pendingCallbacks = null, callbacks) for (var j = 0; j < callbacks.length; j++) {
                transaction.getReactMountReady().enqueue(callbacks[j], this.getPublicInstance());
            }this._updateBatchNumber = null;
        }
    },
    updateComponent: function updateComponent(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
        var inst = this._instance;
        invariant(null != inst, "Attempted to update component `%s` that has already been unmounted " + "(or failed to mount).", this.getName() || "ReactCompositeComponent");
        var nextContext,
            willReceive = !1;
        this._context === nextUnmaskedContext ? nextContext = inst.context : (nextContext = this._processContext(nextUnmaskedContext), willReceive = !0);
        var prevProps = prevParentElement.props,
            nextProps = nextParentElement.props;
        if (prevParentElement !== nextParentElement && (willReceive = !0), willReceive && inst.componentWillReceiveProps) {
            var beforeState = inst.state;
            measureLifeCyclePerf(function () {
                return inst.componentWillReceiveProps(nextProps, nextContext);
            }, this._debugID, "componentWillReceiveProps");
            var afterState = inst.state;
            beforeState !== afterState && (inst.state = beforeState, inst.updater.enqueueReplaceState(inst, afterState), warning(!1, "%s.componentWillReceiveProps(): Assigning directly to " + "this.state is deprecated (except inside a component's " + "constructor). Use setState instead.", this.getName() || "ReactCompositeComponent"));
        }
        var callbacks = this._pendingCallbacks;
        this._pendingCallbacks = null;
        var nextState = this._processPendingState(nextProps, nextContext),
            shouldUpdate = !0;
        if (!this._pendingForceUpdate) {
            var prevState = inst.state;
            shouldUpdate = willReceive || nextState !== prevState, inst.shouldComponentUpdate ? shouldUpdate = measureLifeCyclePerf(function () {
                return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
            }, this._debugID, "shouldComponentUpdate") : this._compositeType === ReactCompositeComponentTypes$1.PureClass && (shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState));
        }
        if (warning(void 0 !== shouldUpdate, "%s.shouldComponentUpdate(): Returned undefined instead of a " + "boolean value. Make sure to return true or false.", this.getName() || "ReactCompositeComponent"), this._updateBatchNumber = null, shouldUpdate ? (this._pendingForceUpdate = !1, this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext)) : (this._currentElement = nextParentElement, this._context = nextUnmaskedContext, inst.props = nextProps, inst.state = nextState, inst.context = nextContext), callbacks) for (var j = 0; j < callbacks.length; j++) {
            transaction.getReactMountReady().enqueue(callbacks[j], this.getPublicInstance());
        }
    },
    _processPendingState: function _processPendingState(props, context) {
        var inst = this._instance,
            queue = this._pendingStateQueue,
            replace = this._pendingReplaceState;
        if (this._pendingReplaceState = !1, this._pendingStateQueue = null, !queue) return inst.state;
        if (replace && 1 === queue.length) return queue[0];
        for (var nextState = replace ? queue[0] : inst.state, dontMutate = !0, i = replace ? 1 : 0; i < queue.length; i++) {
            var partial = queue[i],
                partialState = "function" == typeof partial ? partial.call(inst, nextState, props, context) : partial;
            partialState && (dontMutate ? (dontMutate = !1, nextState = babelHelpers.extends({}, nextState, partialState)) : babelHelpers.extends(nextState, partialState));
        }
        return nextState;
    },
    _performComponentUpdate: function _performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
        var prevProps,
            prevState,
            _this2 = this,
            inst = this._instance,
            hasComponentDidUpdate = !!inst.componentDidUpdate;
        hasComponentDidUpdate && (prevProps = inst.props, prevState = inst.state), inst.componentWillUpdate && measureLifeCyclePerf(function () {
            return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, "componentWillUpdate"), this._currentElement = nextElement, this._context = unmaskedContext, inst.props = nextProps, inst.state = nextState, inst.context = nextContext, inst.unstable_handleError ? this._updateRenderedComponentWithErrorHandling(transaction, unmaskedContext) : this._updateRenderedComponent(transaction, unmaskedContext), hasComponentDidUpdate && transaction.getReactMountReady().enqueue(function () {
            measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState), _this2._debugID, "componentDidUpdate");
        });
    },
    _updateRenderedComponentWithErrorHandling: function _updateRenderedComponentWithErrorHandling(transaction, context) {
        var checkpoint = transaction.checkpoint();
        try {
            this._updateRenderedComponent(transaction, context);
        } catch (e) {
            transaction.rollback(checkpoint), this._instance.unstable_handleError(e), this._pendingStateQueue && (this._instance.state = this._processPendingState(this._instance.props, this._instance.context)), checkpoint = transaction.checkpoint(), this._updateRenderedComponentWithNextElement(transaction, context, null, !0), this._updateRenderedComponent(transaction, context);
        }
    },
    _updateRenderedComponent: function _updateRenderedComponent(transaction, context) {
        var nextRenderedElement = this._renderValidatedComponent();
        this._updateRenderedComponentWithNextElement(transaction, context, nextRenderedElement, !1);
    },
    _updateRenderedComponentWithNextElement: function _updateRenderedComponentWithNextElement(transaction, context, nextRenderedElement, safely) {
        var prevComponentInstance = this._renderedComponent,
            prevRenderedElement = prevComponentInstance._currentElement,
            debugID = 0;
        if (debugID = this._debugID, shouldUpdateReactComponent_1(prevRenderedElement, nextRenderedElement)) ReactReconciler_1.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));else {
            var oldHostNode = ReactReconciler_1.getHostNode(prevComponentInstance),
                nodeType = ReactNodeTypes_1.getType(nextRenderedElement);
            this._renderedNodeType = nodeType;
            var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes_1.EMPTY);
            this._renderedComponent = child;
            var nextMarkup = ReactReconciler_1.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
            if (ReactReconciler_1.unmountComponent(prevComponentInstance, safely, !1), 0 !== debugID) {
                var childDebugIDs = 0 !== child._debugID ? [child._debugID] : [];
                ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
            }
            this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
        }
    },
    _replaceNodeWithMarkup: function _replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance) {
        ReactComponentEnvironment_1.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
    },
    _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
        var renderedElement,
            inst = this._instance;
        return renderedElement = measureLifeCyclePerf(function () {
            return inst.render();
        }, this._debugID, "render"), void 0 === renderedElement && inst.render._isMockFunction && (renderedElement = null), renderedElement;
    },
    _renderValidatedComponent: function _renderValidatedComponent() {
        var renderedElement;
        if (0 && this._compositeType === ReactCompositeComponentTypes$1.StatelessFunctional) renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();else {
            ReactCurrentOwner$1.current = this;
            try {
                renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
            } finally {
                ReactCurrentOwner$1.current = null;
            }
        }
        return invariant(null === renderedElement || !1 === renderedElement || React.isValidElement(renderedElement), "%s.render(): A valid React element (or null) must be returned. You may have " + "returned undefined, an array or some other invalid object.", this.getName() || "ReactCompositeComponent"), renderedElement;
    },
    attachRef: function attachRef(ref, component) {
        var inst = this.getPublicInstance();
        invariant(null != inst, "Stateless function components cannot have refs.");
        var publicComponentInstance = component.getPublicInstance();
        (inst.refs === emptyObject ? inst.refs = {} : inst.refs)[ref] = publicComponentInstance;
    },
    detachRef: function detachRef(ref) {
        delete this.getPublicInstance().refs[ref];
    },
    getName: function getName() {
        var type = this._currentElement.type,
            constructor = this._instance && this._instance.constructor;
        return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
    },
    getPublicInstance: function getPublicInstance() {
        var inst = this._instance;
        return this._compositeType === ReactCompositeComponentTypes$1.StatelessFunctional ? null : inst;
    },
    _instantiateReactComponent: null
},
    ReactCompositeComponent_1 = ReactCompositeComponent,
    emptyComponentFactory,
    ReactEmptyComponentInjection = {
    injectEmptyComponentFactory: function injectEmptyComponentFactory(factory) {
        emptyComponentFactory = factory;
    }
},
    ReactEmptyComponent = {
    create: function create(instantiate) {
        return emptyComponentFactory(instantiate);
    }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

var ReactEmptyComponent_1 = ReactEmptyComponent,
    genericComponentClass = null,
    textComponentClass = null,
    ReactHostComponentInjection = {
    injectGenericComponentClass: function injectGenericComponentClass(componentClass) {
        genericComponentClass = componentClass;
    },
    injectTextComponentClass: function injectTextComponentClass(componentClass) {
        textComponentClass = componentClass;
    }
};

function createInternalComponent(element) {
    return invariant(genericComponentClass, "There is no registered component for the tag %s", element.type), new genericComponentClass(element);
}

function createInstanceForText(text) {
    return new textComponentClass(text);
}

function isTextComponent(component) {
    return component instanceof textComponentClass;
}

var ReactHostComponent = {
    createInternalComponent: createInternalComponent,
    createInstanceForText: createInstanceForText,
    isTextComponent: isTextComponent,
    injection: ReactHostComponentInjection
},
    ReactHostComponent_1 = ReactHostComponent,
    nextDebugID = 1,
    ReactCompositeComponentWrapper = function ReactCompositeComponentWrapper(element) {
    this.construct(element);
};

function getDeclarationErrorAddendum(owner) {
    if (owner) {
        var name = owner.getName();
        if (name) return "\n\nCheck the render method of `" + name + "`.";
    }
    return "";
}

function isInternalComponentType(type) {
    return "function" == typeof type && void 0 !== type.prototype && "function" == typeof type.prototype.mountComponent && "function" == typeof type.prototype.receiveComponent;
}

function instantiateReactComponent(node, shouldHaveDebugID) {
    var instance;
    if (null === node || !1 === node) instance = ReactEmptyComponent_1.create(instantiateReactComponent);else if ("object" == typeof node) {
        var element = node,
            type = element.type;
        if ("function" != typeof type && "string" != typeof type) {
            var info = "";
            (void 0 === type || "object" == typeof type && null !== type && 0 === Object.keys(type).length) && (info += " You likely forgot to export your component from the file " + "it's defined in."), info += getDeclarationErrorAddendum(element._owner), invariant(!1, "Element type is invalid: expected a string (for built-in components) " + "or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, info);
        }
        "string" == typeof element.type ? instance = ReactHostComponent_1.createInternalComponent(element) : isInternalComponentType(element.type) ? (instance = new element.type(element), instance.getHostNode || (instance.getHostNode = instance.getNativeNode)) : instance = new ReactCompositeComponentWrapper(element);
    } else "string" == typeof node || "number" == typeof node ? instance = ReactHostComponent_1.createInstanceForText(node) : invariant(!1, "Encountered invalid React node of type %s", typeof node);
    return warning("function" == typeof instance.mountComponent && "function" == typeof instance.receiveComponent && "function" == typeof instance.getHostNode && "function" == typeof instance.unmountComponent, "Only React Components can be mounted."), instance._mountIndex = 0, instance._mountImage = null, instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0, Object.preventExtensions && Object.preventExtensions(instance), instance;
}

babelHelpers.extends(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent_1, {
    _instantiateReactComponent: instantiateReactComponent
});

var instantiateReactComponent_1 = instantiateReactComponent,
    DevOnlyStubShim = null,
    ReactNativeFeatureFlags = require(63                       ), // 63 = ReactNativeFeatureFlags
    ReactCurrentOwner$2 = ReactGlobalSharedState_1.ReactCurrentOwner,
    injectedFindNode = ReactNativeFeatureFlags.useFiber ? function (fiber) {
    return DevOnlyStubShim.findHostInstance(fiber);
} : function (instance) {
    return instance;
};

function findNodeHandle(componentOrHandle) {
    var owner = ReactCurrentOwner$2.current;
    if (null !== owner && (warning(owner._warnedAboutRefsInRender, "%s is accessing findNodeHandle inside its render(). " + "render() should be a pure function of props and state. It should " + "never access something that requires stale data from the previous " + "render, such as refs. Move this logic to componentDidMount and " + "componentDidUpdate instead.", owner.getName() || "A component"), owner._warnedAboutRefsInRender = !0), null == componentOrHandle) return null;
    if ("number" == typeof componentOrHandle) return componentOrHandle;
    var component = componentOrHandle,
        internalInstance = ReactInstanceMap_1.get(component);
    return internalInstance ? injectedFindNode(internalInstance) : component || (invariant("object" == typeof component && ("_rootNodeID" in component || "_nativeTag" in component) || null != component.render && "function" == typeof component.render, "findNodeHandle(...): Argument is not a component " + "(type: %s, keys: %s)", typeof component, Object.keys(component)), void invariant(!1, "findNodeHandle(...): Unable to find node handle for unmounted " + "component."));
}

var findNodeHandle_1 = findNodeHandle,
    TopLevelWrapper = function TopLevelWrapper() {};

TopLevelWrapper.prototype.isReactComponent = {}, TopLevelWrapper.displayName = "TopLevelWrapper", TopLevelWrapper.prototype.render = function () {
    return this.props.child;
}, TopLevelWrapper.isReactTopLevelWrapper = !0;

function mountComponentIntoNode(componentInstance, containerTag, transaction) {
    var markup = ReactReconciler_1.mountComponent(componentInstance, transaction, null, ReactNativeContainerInfo_1(containerTag), emptyObject, 0);
    componentInstance._renderedComponent._topLevelWrapper = componentInstance, ReactNativeMount._mountImageIntoNode(markup, containerTag);
}

function batchedMountComponentIntoNode(componentInstance, containerTag) {
    var transaction = ReactUpdates_1.ReactReconcileTransaction.getPooled();
    transaction.perform(mountComponentIntoNode, null, componentInstance, containerTag, transaction), ReactUpdates_1.ReactReconcileTransaction.release(transaction);
}

var ReactNativeMount = {
    _instancesByContainerID: {},
    findNodeHandle: findNodeHandle_1,
    renderComponent: function renderComponent(nextElement, containerTag, callback) {
        var nextWrappedElement = React.createElement(TopLevelWrapper, {
            child: nextElement
        }),
            topRootNodeID = containerTag,
            prevComponent = ReactNativeMount._instancesByContainerID[topRootNodeID];
        if (prevComponent) {
            var prevWrappedElement = prevComponent._currentElement,
                prevElement = prevWrappedElement.props.child;
            if (shouldUpdateReactComponent_1(prevElement, nextElement)) return ReactUpdateQueue_1.enqueueElementInternal(prevComponent, nextWrappedElement, emptyObject), callback && ReactUpdateQueue_1.enqueueCallbackInternal(prevComponent, callback), prevComponent;
            ReactNativeMount.unmountComponentAtNode(containerTag);
        }
        if (!ReactNativeTagHandles_1.reactTagIsNativeTopRootID(containerTag)) return console.error("You cannot render into anything but a top root"), null;
        ReactNativeTagHandles_1.assertRootTag(containerTag);
        var instance = instantiateReactComponent_1(nextWrappedElement, !1);
        if (ReactNativeMount._instancesByContainerID[containerTag] = instance, callback) {
            var nonNullCallback = callback;
            instance._pendingCallbacks = [function () {
                nonNullCallback.call(instance._renderedComponent.getPublicInstance());
            }];
        }
        return ReactUpdates_1.batchedUpdates(batchedMountComponentIntoNode, instance, containerTag), instance._renderedComponent.getPublicInstance();
    },
    _mountImageIntoNode: function _mountImageIntoNode(mountImage, containerID) {
        var childTag = mountImage;
        UIManager.setChildren(containerID, [childTag]);
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
        ReactNativeMount.unmountComponentAtNode(containerTag), UIManager.removeRootView(containerTag);
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
        if (!ReactNativeTagHandles_1.reactTagIsNativeTopRootID(containerTag)) return console.error("You cannot render into anything but a top root"), !1;
        var instance = ReactNativeMount._instancesByContainerID[containerTag];
        return !!instance && (ReactInstrumentation.debugTool.onBeginFlush(), ReactNativeMount.unmountComponentFromNode(instance, containerTag), delete ReactNativeMount._instancesByContainerID[containerTag], ReactInstrumentation.debugTool.onEndFlush(), !0);
    },
    unmountComponentFromNode: function unmountComponentFromNode(instance, containerID) {
        ReactReconciler_1.unmountComponent(instance), UIManager.removeSubviewsFromContainerWithID(containerID);
    }
},
    ReactNativeMount_1 = ReactNativeMount,
    RESET_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: function close() {
        ReactDefaultBatchingStrategy.isBatchingUpdates = !1;
    }
},
    FLUSH_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: ReactUpdates_1.flushBatchedUpdates.bind(ReactUpdates_1)
},
    TRANSACTION_WRAPPERS$1 = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
    this.reinitializeTransaction();
}

babelHelpers.extends(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
    getTransactionWrappers: function getTransactionWrappers() {
        return TRANSACTION_WRAPPERS$1;
    }
});

var transaction = new ReactDefaultBatchingStrategyTransaction(),
    ReactDefaultBatchingStrategy = {
    isBatchingUpdates: !1,
    batchedUpdates: function batchedUpdates(callback, a, b, c, d, e) {
        var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
        return ReactDefaultBatchingStrategy.isBatchingUpdates = !0, alreadyBatchingUpdates ? callback(a, b, c, d, e) : transaction.perform(callback, null, a, b, c, d, e);
    }
},
    ReactDefaultBatchingStrategy_1 = ReactDefaultBatchingStrategy,
    dangerouslyProcessChildrenUpdates = function dangerouslyProcessChildrenUpdates(inst, childrenUpdates) {
    if (childrenUpdates.length) {
        for (var moveFromIndices, moveToIndices, addChildTags, addAtIndices, removeAtIndices, containerTag = ReactNativeComponentTree_1.getNodeFromInstance(inst), i = 0; i < childrenUpdates.length; i++) {
            var update = childrenUpdates[i];
            if ("MOVE_EXISTING" === update.type) (moveFromIndices || (moveFromIndices = [])).push(update.fromIndex), (moveToIndices || (moveToIndices = [])).push(update.toIndex);else if ("REMOVE_NODE" === update.type) (removeAtIndices || (removeAtIndices = [])).push(update.fromIndex);else if ("INSERT_MARKUP" === update.type) {
                var mountImage = update.content,
                    tag = mountImage;
                (addAtIndices || (addAtIndices = [])).push(update.toIndex), (addChildTags || (addChildTags = [])).push(tag);
            }
        }
        UIManager.manageChildren(containerTag, moveFromIndices, moveToIndices, addChildTags, addAtIndices, removeAtIndices);
    }
},
    ReactNativeDOMIDOperations = {
    dangerouslyProcessChildrenUpdates: dangerouslyProcessChildrenUpdates,
    dangerouslyReplaceNodeWithMarkupByID: function dangerouslyReplaceNodeWithMarkupByID(id, mountImage) {
        var oldTag = id;
        UIManager.replaceExistingNonRootView(oldTag, mountImage);
    }
},
    ReactNativeDOMIDOperations_1 = ReactNativeDOMIDOperations;

function validateCallback(callback) {
    invariant(!callback || "function" == typeof callback, "Invalid argument passed as callback. Expected a function. Instead " + "received: %s", callback);
}

var validateCallback_1 = validateCallback;

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var CallbackQueue = function () {
    function CallbackQueue() {
        _classCallCheck(this, CallbackQueue), this._callbacks = null, this._contexts = null;
    }
    return CallbackQueue.prototype.enqueue = function (callback, context) {
        this._callbacks = this._callbacks || [], this._callbacks.push(callback), this._contexts = this._contexts || [], this._contexts.push(context);
    }, CallbackQueue.prototype.notifyAll = function () {
        var callbacks = this._callbacks,
            contexts = this._contexts;
        if (callbacks && contexts) {
            invariant(callbacks.length === contexts.length, "Mismatched list of contexts in callback queue"), this._callbacks = null, this._contexts = null;
            for (var i = 0; i < callbacks.length; i++) {
                validateCallback_1(callbacks[i]), callbacks[i].call(contexts[i]);
            }callbacks.length = 0, contexts.length = 0;
        }
    }, CallbackQueue.prototype.checkpoint = function () {
        return this._callbacks ? this._callbacks.length : 0;
    }, CallbackQueue.prototype.rollback = function (len) {
        this._callbacks && this._contexts && (this._callbacks.length = len, this._contexts.length = len);
    }, CallbackQueue.prototype.reset = function () {
        this._callbacks = null, this._contexts = null;
    }, CallbackQueue.prototype.destructor = function () {
        this.reset();
    }, CallbackQueue;
}(),
    CallbackQueue_1 = PooledClass_1.addPoolingTo(CallbackQueue),
    ON_DOM_READY_QUEUEING = {
    initialize: function initialize() {
        this.reactMountReady.reset();
    },
    close: function close() {
        this.reactMountReady.notifyAll();
    }
},
    TRANSACTION_WRAPPERS$2 = [ON_DOM_READY_QUEUEING];

TRANSACTION_WRAPPERS$2.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
});

function ReactNativeReconcileTransaction() {
    this.reinitializeTransaction(), this.reactMountReady = CallbackQueue_1.getPooled();
}

var Mixin = {
    getTransactionWrappers: function getTransactionWrappers() {
        return TRANSACTION_WRAPPERS$2;
    },
    getReactMountReady: function getReactMountReady() {
        return this.reactMountReady;
    },
    getUpdateQueue: function getUpdateQueue() {
        return ReactUpdateQueue_1;
    },
    checkpoint: function checkpoint() {
        return this.reactMountReady.checkpoint();
    },
    rollback: function rollback(checkpoint) {
        this.reactMountReady.rollback(checkpoint);
    },
    destructor: function destructor() {
        CallbackQueue_1.release(this.reactMountReady), this.reactMountReady = null;
    }
};

babelHelpers.extends(ReactNativeReconcileTransaction.prototype, Transaction, ReactNativeReconcileTransaction, Mixin), PooledClass_1.addPoolingTo(ReactNativeReconcileTransaction);

var ReactNativeReconcileTransaction_1 = ReactNativeReconcileTransaction,
    ReactNativeComponentEnvironment = {
    processChildrenUpdates: ReactNativeDOMIDOperations_1.dangerouslyProcessChildrenUpdates,
    replaceNodeWithMarkup: ReactNativeDOMIDOperations_1.dangerouslyReplaceNodeWithMarkupByID,
    clearNode: function clearNode() {},
    ReactReconcileTransaction: ReactNativeReconcileTransaction_1
},
    ReactNativeComponentEnvironment_1 = ReactNativeComponentEnvironment,
    ReactNativeTextComponent = function ReactNativeTextComponent(text) {
    this._currentElement = text, this._stringText = "" + text, this._hostParent = null, this._rootNodeID = 0;
};

babelHelpers.extends(ReactNativeTextComponent.prototype, {
    mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
        invariant(context.isInAParentText, 'RawText "%s" must be wrapped in an explicit <Text> component.', this._stringText), this._hostParent = hostParent;
        var tag = ReactNativeTagHandles_1.allocateTag();
        this._rootNodeID = tag;
        var nativeTopRootTag = hostContainerInfo._tag;
        return UIManager.createView(tag, "RCTRawText", nativeTopRootTag, {
            text: this._stringText
        }), ReactNativeComponentTree_1.precacheNode(this, tag), tag;
    },
    getHostNode: function getHostNode() {
        return this._rootNodeID;
    },
    receiveComponent: function receiveComponent(nextText, transaction, context) {
        if (nextText !== this._currentElement) {
            this._currentElement = nextText;
            var nextStringText = "" + nextText;
            nextStringText !== this._stringText && (this._stringText = nextStringText, UIManager.updateView(this._rootNodeID, "RCTRawText", {
                text: this._stringText
            }));
        }
    },
    unmountComponent: function unmountComponent() {
        ReactNativeComponentTree_1.uncacheNode(this), this._currentElement = null, this._stringText = null, this._rootNodeID = 0;
    }
});

var ReactNativeTextComponent_1 = ReactNativeTextComponent,
    ReactSimpleEmptyComponent = function ReactSimpleEmptyComponent(placeholderElement, instantiate) {
    this._currentElement = null, this._renderedComponent = instantiate(placeholderElement);
};

babelHelpers.extends(ReactSimpleEmptyComponent.prototype, {
    mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID) {
        return ReactReconciler_1.mountComponent(this._renderedComponent, transaction, hostParent, hostContainerInfo, context, parentDebugID);
    },
    receiveComponent: function receiveComponent() {},
    getHostNode: function getHostNode() {
        return ReactReconciler_1.getHostNode(this._renderedComponent);
    },
    unmountComponent: function unmountComponent(safely, skipLifecycle) {
        ReactReconciler_1.unmountComponent(this._renderedComponent, safely, skipLifecycle), this._renderedComponent = null;
    }
});

var ReactSimpleEmptyComponent_1 = ReactSimpleEmptyComponent;

function inject$1() {
    ReactGenericBatching_1.injection.injectStackBatchedUpdates(ReactUpdates_1.batchedUpdates), ReactUpdates_1.injection.injectReconcileTransaction(ReactNativeComponentEnvironment_1.ReactReconcileTransaction), ReactUpdates_1.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy_1), ReactComponentEnvironment_1.injection.injectEnvironment(ReactNativeComponentEnvironment_1);
    var EmptyComponent = function EmptyComponent(instantiate) {
        var View = require(124   ); // 124 = View
        return new ReactSimpleEmptyComponent_1(React.createElement(View, {
            collapsable: !0,
            style: {
                position: "absolute"
            }
        }), instantiate);
    };
    ReactEmptyComponent_1.injection.injectEmptyComponentFactory(EmptyComponent), ReactHostComponent_1.injection.injectTextComponentClass(ReactNativeTextComponent_1), ReactHostComponent_1.injection.injectGenericComponentClass(function (tag) {
        var info = "";
        "string" == typeof tag && /^[a-z]/.test(tag) && (info += " Each component name should start with an uppercase letter."), invariant(!1, "Expected a component class, got %s.%s", tag, info);
    });
}

var ReactNativeStackInjection = {
    inject: inject$1
};

function getComponentName(instanceOrFiber) {
    if ("function" == typeof instanceOrFiber.getName) {
        return instanceOrFiber.getName();
    }
    if ("number" == typeof instanceOrFiber.tag) {
        var fiber = instanceOrFiber,
            type = fiber.type;
        if ("string" == typeof type) return type;
        if ("function" == typeof type) return type.displayName || type.name;
    }
    return null;
}

var getComponentName_1 = getComponentName,
    getInspectorDataForViewTag = void 0,
    traverseOwnerTreeUp = function traverseOwnerTreeUp(hierarchy, instance) {
    instance && (hierarchy.unshift(instance), traverseOwnerTreeUp(hierarchy, instance._currentElement._owner));
},
    getOwnerHierarchy = function getOwnerHierarchy(instance) {
    var hierarchy = [];
    return traverseOwnerTreeUp(hierarchy, instance), hierarchy;
},
    lastNotNativeInstance = function lastNotNativeInstance(hierarchy) {
    for (var i = hierarchy.length - 1; i > 1; i--) {
        var instance = hierarchy[i];
        if (!instance.viewConfig) return instance;
    }
    return hierarchy[0];
},
    getHostProps = function getHostProps(component) {
    var instance = component._instance;
    return instance ? instance.props || emptyObject : emptyObject;
},
    createHierarchy = function createHierarchy(componentHierarchy) {
    return componentHierarchy.map(function (component) {
        return {
            name: getComponentName_1(component),
            getInspectorData: function getInspectorData() {
                return {
                    measure: function measure(callback) {
                        return UIManager.measure(component.getHostNode(), callback);
                    },
                    props: getHostProps(component),
                    source: component._currentElement && component._currentElement._source
                };
            }
        };
    });
};

getInspectorDataForViewTag = function getInspectorDataForViewTag(viewTag) {
    var component = ReactNativeComponentTree_1.getClosestInstanceFromNode(viewTag);
    if (!component) return {
        hierarchy: [],
        props: emptyObject,
        selection: null,
        source: null
    };
    var componentHierarchy = getOwnerHierarchy(component),
        instance = lastNotNativeInstance(componentHierarchy),
        hierarchy = createHierarchy(componentHierarchy),
        props = getHostProps(instance),
        source = instance._currentElement && instance._currentElement._source;
    return {
        hierarchy: hierarchy,
        props: props,
        selection: componentHierarchy.indexOf(instance),
        source: source
    };
};

var ReactNativeStackInspector = {
    getInspectorDataForViewTag: getInspectorDataForViewTag
},
    findNumericNodeHandleStack = function findNumericNodeHandleStack(componentOrHandle) {
    var nodeHandle = findNodeHandle_1(componentOrHandle);
    return null == nodeHandle || "number" == typeof nodeHandle ? nodeHandle : nodeHandle.getHostNode();
};

function _classCallCheck$2(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var objects = {},
    uniqueID = 1,
    emptyObject$3 = {},
    ReactNativePropRegistry = function () {
    function ReactNativePropRegistry() {
        _classCallCheck$2(this, ReactNativePropRegistry);
    }
    return ReactNativePropRegistry.register = function (object) {
        var id = ++uniqueID;
        return Object.freeze(object), objects[id] = object, id;
    }, ReactNativePropRegistry.getByID = function (id) {
        if (!id) return emptyObject$3;
        var object = objects[id];
        return object || (console.warn("Invalid style with id `" + id + "`. Skipping ..."), emptyObject$3);
    }, ReactNativePropRegistry;
}(),
    ReactNativePropRegistry_1 = ReactNativePropRegistry,
    emptyObject$2 = {},
    removedKeys = null,
    removedKeyCount = 0;

function defaultDiffer(prevProp, nextProp) {
    return "object" != typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp);
}

function resolveObject(idOrObject) {
    return "number" == typeof idOrObject ? ReactNativePropRegistry_1.getByID(idOrObject) : idOrObject;
}

function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && removedKeyCount > 0;) {
        restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && removedKeyCount > 0) {
        var obj = resolveObject(node);
        for (var propKey in removedKeys) {
            if (removedKeys[propKey]) {
                var nextProp = obj[propKey];
                if (void 0 !== nextProp) {
                    var attributeConfig = validAttributes[propKey];
                    if (attributeConfig) {
                        if ("function" == typeof nextProp && (nextProp = !0), void 0 === nextProp && (nextProp = null), "object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                            var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                            updatePayload[propKey] = nextValue;
                        }
                        removedKeys[propKey] = !1, removedKeyCount--;
                    }
                }
            }
        }
    }
}

function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
    var i,
        minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
    for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
    }for (; i < prevArray.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
    }for (; i < nextArray.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
    }return updatePayload;
}

function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    return updatePayload || prevProp !== nextProp ? prevProp && nextProp ? Array.isArray(prevProp) || Array.isArray(nextProp) ? Array.isArray(prevProp) && Array.isArray(nextProp) ? diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes) : Array.isArray(prevProp) ? diffProperties(updatePayload, flattenStyle(prevProp), resolveObject(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), flattenStyle(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), resolveObject(nextProp), validAttributes) : nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload : updatePayload;
}

function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return addProperties(updatePayload, resolveObject(nextProp), validAttributes);
    for (var i = 0; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }return updatePayload;
}

function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return clearProperties(updatePayload, resolveObject(prevProp), validAttributes);
    for (var i = 0; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }return updatePayload;
}

function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, nextProp, prevProp;
    for (var propKey in nextProps) {
        if (attributeConfig = validAttributes[propKey]) if (prevProp = prevProps[propKey], nextProp = nextProps[propKey], "function" == typeof nextProp && (nextProp = !0, "function" == typeof prevProp && (prevProp = !0)), void 0 === nextProp && (nextProp = null, void 0 === prevProp && (prevProp = null)), removedKeys && (removedKeys[propKey] = !1), updatePayload && void 0 !== updatePayload[propKey]) {
            if ("object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                updatePayload[propKey] = nextValue;
            }
        } else if (prevProp !== nextProp) if ("object" != typeof attributeConfig) defaultDiffer(prevProp, nextProp) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
            var shouldUpdate = void 0 === prevProp || ("function" == typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
            shouldUpdate && (nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = nextValue);
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), removedKeyCount > 0 && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
    }for (propKey in prevProps) {
        void 0 === nextProps[propKey] && (attributeConfig = validAttributes[propKey]) && (updatePayload && void 0 !== updatePayload[propKey] || void 0 !== (prevProp = prevProps[propKey]) && ("object" != typeof attributeConfig || "function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[propKey] = null, removedKeys || (removedKeys = {}), removedKeys[propKey] || (removedKeys[propKey] = !0, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig)));
    }return updatePayload;
}

function addProperties(updatePayload, props, validAttributes) {
    return diffProperties(updatePayload, emptyObject$2, props, validAttributes);
}

function clearProperties(updatePayload, prevProps, validAttributes) {
    return diffProperties(updatePayload, prevProps, emptyObject$2, validAttributes);
}

var ReactNativeAttributePayload = {
    create: function create(props, validAttributes) {
        return addProperties(null, props, validAttributes);
    },
    diff: function diff(prevProps, nextProps, validAttributes) {
        return diffProperties(null, prevProps, nextProps, validAttributes);
    }
},
    ReactNativeAttributePayload_1 = ReactNativeAttributePayload;

function mountSafeCallback$1(context, callback) {
    return function () {
        if (callback) {
            if ("boolean" == typeof context.__isMounted) {
                if (!context.__isMounted) return;
            } else if ("function" == typeof context.isMounted && !context.isMounted()) return;
            return callback.apply(context, arguments);
        }
    };
}

function throwOnStylesProp(component, props) {
    if (void 0 !== props.styles) {
        var owner = component._owner || null,
            name = component.constructor.displayName,
            msg = "`styles` is not a supported property of `" + name + "`, did " + "you mean `style` (singular)?";
        throw owner && owner.constructor && owner.constructor.displayName && (msg += "\n\nCheck the `" + owner.constructor.displayName + "` parent " + " component."), new Error(msg);
    }
}

function warnForStyleProps(props, validAttributes) {
    for (var key in validAttributes.style) {
        validAttributes[key] || void 0 === props[key] || console.error("You are setting the style `{ " + key + ": ... }` as a prop. You " + "should nest it in a style object. " + "E.g. `{ style: { " + key + ": ... } }`");
    }
}

var NativeMethodsMixinUtils = {
    mountSafeCallback: mountSafeCallback$1,
    throwOnStylesProp: throwOnStylesProp,
    warnForStyleProps: warnForStyleProps
};

function _classCallCheck$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return !call || "object" != typeof call && "function" != typeof call ? self : call;
}

function _inherits(subClass, superClass) {
    if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: !1,
            writable: !0,
            configurable: !0
        }
    }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
}

var ReactNativeFeatureFlags$1 = require(63                       ), // 63 = ReactNativeFeatureFlags
    mountSafeCallback = NativeMethodsMixinUtils.mountSafeCallback,
    findNumericNodeHandle = ReactNativeFeatureFlags$1.useFiber ? DevOnlyStubShim : findNumericNodeHandleStack,
    ReactNativeComponent = function (_React$Component) {
    _inherits(ReactNativeComponent, _React$Component);
    function ReactNativeComponent() {
        return _classCallCheck$1(this, ReactNativeComponent), _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }
    return ReactNativeComponent.prototype.blur = function () {
        TextInputState.blurTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.focus = function () {
        TextInputState.focusTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.measure = function (callback) {
        UIManager.measure(findNumericNodeHandle(this), mountSafeCallback(this, callback));
    }, ReactNativeComponent.prototype.measureInWindow = function (callback) {
        UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback(this, callback));
    }, ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
    }, ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
        injectedSetNativeProps(this, nativeProps);
    }, ReactNativeComponent;
}(React.Component);

function setNativePropsFiber(componentOrHandle, nativeProps) {
    var maybeInstance = void 0;
    try {
        maybeInstance = findNodeHandle_1(componentOrHandle);
    } catch (error) {}
    if (null != maybeInstance) {
        var viewConfig = maybeInstance.viewConfig,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    }
}

function setNativePropsStack(componentOrHandle, nativeProps) {
    var maybeInstance = findNodeHandle_1(componentOrHandle);
    if (null != maybeInstance) {
        var viewConfig = void 0;
        if (void 0 !== maybeInstance.viewConfig) viewConfig = maybeInstance.viewConfig;else if (void 0 !== maybeInstance._instance && void 0 !== maybeInstance._instance.viewConfig) viewConfig = maybeInstance._instance.viewConfig;else {
            for (; void 0 !== maybeInstance._renderedComponent;) {
                maybeInstance = maybeInstance._renderedComponent;
            }viewConfig = maybeInstance.viewConfig;
        }
        var tag = "function" == typeof maybeInstance.getHostNode ? maybeInstance.getHostNode() : maybeInstance._rootNodeID,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(tag, viewConfig.uiViewClassName, updatePayload);
    }
}

var injectedSetNativeProps = void 0;

injectedSetNativeProps = ReactNativeFeatureFlags$1.useFiber ? setNativePropsFiber : setNativePropsStack;

var ReactNativeComponent_1 = ReactNativeComponent,
    ReactNativeFeatureFlags$2 = require(63                       ), // 63 = ReactNativeFeatureFlags
    mountSafeCallback$2 = NativeMethodsMixinUtils.mountSafeCallback,
    throwOnStylesProp$1 = NativeMethodsMixinUtils.throwOnStylesProp,
    warnForStyleProps$1 = NativeMethodsMixinUtils.warnForStyleProps,
    findNumericNodeHandle$1 = ReactNativeFeatureFlags$2.useFiber ? DevOnlyStubShim : findNumericNodeHandleStack,
    NativeMethodsMixin = {
    measure: function measure(callback) {
        UIManager.measure(findNumericNodeHandle$1(this), mountSafeCallback$2(this, callback));
    },
    measureInWindow: function measureInWindow(callback) {
        UIManager.measureInWindow(findNumericNodeHandle$1(this), mountSafeCallback$2(this, callback));
    },
    measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle$1(this), relativeToNativeNode, mountSafeCallback$2(this, onFail), mountSafeCallback$2(this, onSuccess));
    },
    setNativeProps: function setNativeProps(nativeProps) {
        injectedSetNativeProps$1(this, nativeProps);
    },
    focus: function focus() {
        TextInputState.focusTextInput(findNumericNodeHandle$1(this));
    },
    blur: function blur() {
        TextInputState.blurTextInput(findNumericNodeHandle$1(this));
    }
};

function setNativePropsFiber$1(componentOrHandle, nativeProps) {
    var maybeInstance = void 0;
    try {
        maybeInstance = findNodeHandle_1(componentOrHandle);
    } catch (error) {}
    if (null != maybeInstance) {
        var viewConfig = maybeInstance.viewConfig;
        warnForStyleProps$1(nativeProps, viewConfig.validAttributes);
        var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    }
}

function setNativePropsStack$1(componentOrHandle, nativeProps) {
    var maybeInstance = findNodeHandle_1(componentOrHandle);
    if (null != maybeInstance) {
        var viewConfig = void 0;
        if (void 0 !== maybeInstance.viewConfig) viewConfig = maybeInstance.viewConfig;else if (void 0 !== maybeInstance._instance && void 0 !== maybeInstance._instance.viewConfig) viewConfig = maybeInstance._instance.viewConfig;else {
            for (; void 0 !== maybeInstance._renderedComponent;) {
                maybeInstance = maybeInstance._renderedComponent;
            }viewConfig = maybeInstance.viewConfig;
        }
        var tag = "function" == typeof maybeInstance.getHostNode ? maybeInstance.getHostNode() : maybeInstance._rootNodeID;
        warnForStyleProps$1(nativeProps, viewConfig.validAttributes);
        var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(tag, viewConfig.uiViewClassName, updatePayload);
    }
}

var injectedSetNativeProps$1 = void 0;

injectedSetNativeProps$1 = ReactNativeFeatureFlags$2.useFiber ? setNativePropsFiber$1 : setNativePropsStack$1;

var NativeMethodsMixin_DEV = NativeMethodsMixin;

invariant(!NativeMethodsMixin_DEV.componentWillMount && !NativeMethodsMixin_DEV.componentWillReceiveProps, "Do not override existing functions."), NativeMethodsMixin_DEV.componentWillMount = function () {
    throwOnStylesProp$1(this, this.props);
}, NativeMethodsMixin_DEV.componentWillReceiveProps = function (newProps) {
    throwOnStylesProp$1(this, newProps);
};

var NativeMethodsMixin_1 = NativeMethodsMixin,
    TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
        var touchBank = touchHistory.touchBank,
            total = 0,
            count = 0,
            oneTouchData = 1 === touchHistory.numberActiveTouches ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
        if (null !== oneTouchData) oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter && (total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY, count = 1);else for (var i = 0; i < touchBank.length; i++) {
            var touchTrack = touchBank[i];
            if (null !== touchTrack && void 0 !== touchTrack && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
                var toAdd;
                toAdd = ofCurrent && isXAxis ? touchTrack.currentPageX : ofCurrent && !isXAxis ? touchTrack.currentPageY : !ofCurrent && isXAxis ? touchTrack.previousPageX : touchTrack.previousPageY, total += toAdd, count++;
            }
        }
        return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !0);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !0);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !1);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !1);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !0, !0);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !1, !0);
    },
    noCentroid: -1
},
    TouchHistoryMath_1 = TouchHistoryMath;

function escape(key) {
    var escaperLookup = {
        "=": "=0",
        ":": "=2"
    };
    return "$" + ("" + key).replace(/[=:]/g, function (match) {
        return escaperLookup[match];
    });
}

var unescapeInDev = emptyFunction;

unescapeInDev = function unescapeInDev(key) {
    var unescapeRegex = /(=0|=2)/g,
        unescaperLookup = {
        "=0": "=",
        "=2": ":"
    };
    return ("" + ("." === key[0] && "$" === key[1] ? key.substring(2) : key.substring(1))).replace(unescapeRegex, function (match) {
        return unescaperLookup[match];
    });
};

var KeyEscapeUtils = {
    escape: escape,
    unescapeInDev: unescapeInDev
},
    KeyEscapeUtils_1 = KeyEscapeUtils,
    ITERATOR_SYMBOL = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
    FAUX_ITERATOR_SYMBOL = "@@iterator",
    REACT_ELEMENT_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 60103,
    getCurrentStackAddendum = ReactGlobalSharedState_1.ReactComponentTreeHook.getCurrentStackAddendum,
    SEPARATOR = ".",
    SUBSEPARATOR = ":",
    didWarnAboutMaps = !1;

function getComponentKey(component, index) {
    return component && "object" == typeof component && null != component.key ? KeyEscapeUtils_1.escape(component.key) : index.toString(36);
}

function traverseStackChildrenImpl(children, nameSoFar, callback, traverseContext) {
    var type = typeof children;
    if ("undefined" !== type && "boolean" !== type || (children = null), null === children || "string" === type || "number" === type || "object" === type && children.$$typeof === REACT_ELEMENT_TYPE) return callback(traverseContext, children, "" === nameSoFar ? SEPARATOR + getComponentKey(children, 0) : nameSoFar), 1;
    var child,
        nextName,
        subtreeCount = 0,
        nextNamePrefix = "" === nameSoFar ? SEPARATOR : nameSoFar + SUBSEPARATOR;
    if (Array.isArray(children)) for (var i = 0; i < children.length; i++) {
        child = children[i], nextName = nextNamePrefix + getComponentKey(child, i), subtreeCount += traverseStackChildrenImpl(child, nextName, callback, traverseContext);
    } else {
        var iteratorFn = ITERATOR_SYMBOL && children[ITERATOR_SYMBOL] || children[FAUX_ITERATOR_SYMBOL];
        if ("function" == typeof iteratorFn) {
            iteratorFn === children.entries && (warning(didWarnAboutMaps, "Using Maps as children is unsupported and will likely yield " + "unexpected results. Convert it to a sequence/iterable of keyed " + "ReactElements instead.%s", getCurrentStackAddendum()), didWarnAboutMaps = !0);
            for (var step, iterator = iteratorFn.call(children), ii = 0; !(step = iterator.next()).done;) {
                child = step.value, nextName = nextNamePrefix + getComponentKey(child, ii++), subtreeCount += traverseStackChildrenImpl(child, nextName, callback, traverseContext);
            }
        } else if ("object" === type) {
            var addendum = "";
            addendum = " If you meant to render a collection of children, use an array " + "instead." + getCurrentStackAddendum();
            var childrenString = "" + children;
            invariant(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === childrenString ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString, addendum);
        }
    }
    return subtreeCount;
}

function traverseStackChildren(children, callback, traverseContext) {
    return null == children ? 0 : traverseStackChildrenImpl(children, "", callback, traverseContext);
}

var traverseStackChildren_1 = traverseStackChildren,
    ReactComponentTreeHook$2;

"undefined" != typeof process && process.env && "development" == "test" && (ReactComponentTreeHook$2 = ReactGlobalSharedState_1.ReactComponentTreeHook);

function instantiateChild(childInstances, child, name, selfDebugID) {
    var keyUnique = void 0 === childInstances[name];
    ReactComponentTreeHook$2 || (ReactComponentTreeHook$2 = ReactGlobalSharedState_1.ReactComponentTreeHook), keyUnique || warning(!1, "flattenChildren(...):" + "Encountered two children with the same key, `%s`. " + "Keys should be unique so that components maintain their identity " + "across updates. Non-unique keys may cause children to be " + "duplicated and/or omitted — the behavior is unsupported and " + "could change in a future version.%s", KeyEscapeUtils_1.unescapeInDev(name), ReactComponentTreeHook$2.getStackAddendumByID(selfDebugID)), null != child && keyUnique && (childInstances[name] = instantiateReactComponent_1(child, !0));
}

var ReactChildReconciler = {
    instantiateChildren: function instantiateChildren(nestedChildNodes, transaction, context, selfDebugID) {
        if (null == nestedChildNodes) return null;
        var childInstances = {};
        return traverseStackChildren_1(nestedChildNodes, function (childInsts, child, name) {
            return instantiateChild(childInsts, child, name, selfDebugID);
        }, childInstances), childInstances;
    },
    updateChildren: function updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) {
        if (nextChildren || prevChildren) {
            var name, prevChild;
            for (name in nextChildren) {
                if (nextChildren.hasOwnProperty(name)) {
                    prevChild = prevChildren && prevChildren[name];
                    var prevElement = prevChild && prevChild._currentElement,
                        nextElement = nextChildren[name];
                    if (null != prevChild && shouldUpdateReactComponent_1(prevElement, nextElement)) ReactReconciler_1.receiveComponent(prevChild, nextElement, transaction, context), nextChildren[name] = prevChild;else {
                        var nextChildInstance = instantiateReactComponent_1(nextElement, !0);
                        nextChildren[name] = nextChildInstance;
                        var nextChildMountImage = ReactReconciler_1.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
                        mountImages.push(nextChildMountImage), prevChild && (removedNodes[name] = ReactReconciler_1.getHostNode(prevChild), ReactReconciler_1.unmountComponent(prevChild, !1, !1));
                    }
                }
            }for (name in prevChildren) {
                !prevChildren.hasOwnProperty(name) || nextChildren && nextChildren.hasOwnProperty(name) || (prevChild = prevChildren[name], removedNodes[name] = ReactReconciler_1.getHostNode(prevChild), ReactReconciler_1.unmountComponent(prevChild, !1, !1));
            }
        }
    },
    unmountChildren: function unmountChildren(renderedChildren, safely, skipLifecycle) {
        for (var name in renderedChildren) {
            if (renderedChildren.hasOwnProperty(name)) {
                var renderedChild = renderedChildren[name];
                ReactReconciler_1.unmountComponent(renderedChild, safely, skipLifecycle);
            }
        }
    }
},
    ReactChildReconciler_1 = ReactChildReconciler,
    ReactComponentTreeHook$3;

"undefined" != typeof process && process.env && "development" == "test" && (ReactComponentTreeHook$3 = ReactGlobalSharedState_1.ReactComponentTreeHook);

function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
    if (traverseContext && "object" == typeof traverseContext) {
        var result = traverseContext,
            keyUnique = void 0 === result[name];
        ReactComponentTreeHook$3 || (ReactComponentTreeHook$3 = ReactGlobalSharedState_1.ReactComponentTreeHook), keyUnique || warning(!1, "flattenChildren(...): Encountered two children with the same key, " + "`%s`. " + "Keys should be unique so that components maintain their identity " + "across updates. Non-unique keys may cause children to be " + "duplicated and/or omitted — the behavior is unsupported and " + "could change in a future version.%s", KeyEscapeUtils_1.unescapeInDev(name), ReactComponentTreeHook$3.getStackAddendumByID(selfDebugID)), keyUnique && null != child && (result[name] = child);
    }
}

function flattenStackChildren(children, selfDebugID) {
    if (null == children) return children;
    var result = {};
    return traverseStackChildren_1(children, function (traverseContext, child, name) {
        return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result), result;
}

var flattenStackChildren_1 = flattenStackChildren,
    ReactCurrentOwner$3 = ReactGlobalSharedState_1.ReactCurrentOwner;

function makeInsertMarkup(markup, afterNode, toIndex) {
    return {
        type: "INSERT_MARKUP",
        content: markup,
        fromIndex: null,
        fromNode: null,
        toIndex: toIndex,
        afterNode: afterNode
    };
}

function makeMove(child, afterNode, toIndex) {
    return {
        type: "MOVE_EXISTING",
        content: null,
        fromIndex: child._mountIndex,
        fromNode: ReactReconciler_1.getHostNode(child),
        toIndex: toIndex,
        afterNode: afterNode
    };
}

function makeRemove(child, node) {
    return {
        type: "REMOVE_NODE",
        content: null,
        fromIndex: child._mountIndex,
        fromNode: node,
        toIndex: null,
        afterNode: null
    };
}

function makeSetMarkup(markup) {
    return {
        type: "SET_MARKUP",
        content: markup,
        fromIndex: null,
        fromNode: null,
        toIndex: null,
        afterNode: null
    };
}

function makeTextContent(textContent) {
    return {
        type: "TEXT_CONTENT",
        content: textContent,
        fromIndex: null,
        fromNode: null,
        toIndex: null,
        afterNode: null
    };
}

function enqueue(queue, update) {
    return update && (queue = queue || [], queue.push(update)), queue;
}

function processQueue(inst, updateQueue) {
    ReactComponentEnvironment_1.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction,
    getDebugID = function getDebugID(inst) {
    if (!inst._debugID) {
        var internal;
        (internal = ReactInstanceMap_1.get(inst)) && (inst = internal);
    }
    return inst._debugID;
};

setChildrenForInstrumentation = function setChildrenForInstrumentation(children) {
    var debugID = getDebugID(this);
    0 !== debugID && ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
    }) : []);
};

var ReactMultiChild = {
    _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) try {
            return ReactCurrentOwner$3.current = this._currentElement._owner, ReactChildReconciler_1.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
        } finally {
            ReactCurrentOwner$3.current = null;
        }
        return ReactChildReconciler_1.instantiateChildren(nestedChildren, transaction, context);
    },
    _reconcilerUpdateChildren: function _reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
        var nextChildren,
            selfDebugID = 0;
        if (selfDebugID = getDebugID(this), this._currentElement) {
            try {
                ReactCurrentOwner$3.current = this._currentElement._owner, nextChildren = flattenStackChildren_1(nextNestedChildrenElements, selfDebugID);
            } finally {
                ReactCurrentOwner$3.current = null;
            }
            return ReactChildReconciler_1.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID), nextChildren;
        }
        return nextChildren = flattenStackChildren_1(nextNestedChildrenElements, selfDebugID), ReactChildReconciler_1.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID), nextChildren;
    },
    mountChildren: function mountChildren(nestedChildren, transaction, context) {
        var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
        this._renderedChildren = children;
        var mountImages = [],
            index = 0;
        for (var name in children) {
            if (children.hasOwnProperty(name)) {
                var child = children[name],
                    selfDebugID = 0;
                selfDebugID = getDebugID(this);
                var mountImage = ReactReconciler_1.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
                child._mountIndex = index++, mountImages.push(mountImage);
            }
        }return setChildrenForInstrumentation.call(this, children), mountImages;
    },
    updateTextContent: function updateTextContent(nextContent) {
        var prevChildren = this._renderedChildren;
        ReactChildReconciler_1.unmountChildren(prevChildren, !1, !1);
        for (var name in prevChildren) {
            prevChildren.hasOwnProperty(name) && invariant(!1, "updateTextContent called on non-empty component.");
        }processQueue(this, [makeTextContent(nextContent)]);
    },
    updateMarkup: function updateMarkup(nextMarkup) {
        var prevChildren = this._renderedChildren;
        ReactChildReconciler_1.unmountChildren(prevChildren, !1, !1);
        for (var name in prevChildren) {
            prevChildren.hasOwnProperty(name) && invariant(!1, "updateTextContent called on non-empty component.");
        }processQueue(this, [makeSetMarkup(nextMarkup)]);
    },
    updateChildren: function updateChildren(nextNestedChildrenElements, transaction, context) {
        this._updateChildren(nextNestedChildrenElements, transaction, context);
    },
    _updateChildren: function _updateChildren(nextNestedChildrenElements, transaction, context) {
        var prevChildren = this._renderedChildren,
            removedNodes = {},
            mountImages = [],
            nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
        if (nextChildren || prevChildren) {
            var name,
                updates = null,
                nextIndex = 0,
                lastIndex = 0,
                nextMountIndex = 0,
                lastPlacedNode = null;
            for (name in nextChildren) {
                if (nextChildren.hasOwnProperty(name)) {
                    var prevChild = prevChildren && prevChildren[name],
                        nextChild = nextChildren[name];
                    prevChild === nextChild ? (updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex)), lastIndex = Math.max(prevChild._mountIndex, lastIndex), prevChild._mountIndex = nextIndex) : (prevChild && (lastIndex = Math.max(prevChild._mountIndex, lastIndex)), updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context)), nextMountIndex++), nextIndex++, lastPlacedNode = ReactReconciler_1.getHostNode(nextChild);
                }
            }for (name in removedNodes) {
                removedNodes.hasOwnProperty(name) && (updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name])));
            }updates && processQueue(this, updates), this._renderedChildren = nextChildren, setChildrenForInstrumentation.call(this, nextChildren);
        }
    },
    unmountChildren: function unmountChildren(safely, skipLifecycle) {
        var renderedChildren = this._renderedChildren;
        ReactChildReconciler_1.unmountChildren(renderedChildren, safely, skipLifecycle), this._renderedChildren = null;
    },
    moveChild: function moveChild(child, afterNode, toIndex, lastIndex) {
        if (child._mountIndex < lastIndex) return makeMove(child, afterNode, toIndex);
    },
    createChild: function createChild(child, afterNode, mountImage) {
        return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },
    removeChild: function removeChild(child, node) {
        return makeRemove(child, node);
    },
    _mountChildAtIndex: function _mountChildAtIndex(child, mountImage, afterNode, index, transaction, context) {
        return child._mountIndex = index, this.createChild(child, afterNode, mountImage);
    },
    _unmountChild: function _unmountChild(child, node) {
        var update = this.removeChild(child, node);
        return child._mountIndex = null, update;
    }
},
    ReactMultiChild_1 = ReactMultiChild,
    ReactNativeBaseComponent = function ReactNativeBaseComponent(viewConfig) {
    this.viewConfig = viewConfig;
};

ReactNativeBaseComponent.Mixin = {
    getPublicInstance: function getPublicInstance() {
        return this;
    },
    unmountComponent: function unmountComponent(safely, skipLifecycle) {
        ReactNativeComponentTree_1.uncacheNode(this), this.unmountChildren(safely, skipLifecycle), this._rootNodeID = 0;
    },
    initializeChildren: function initializeChildren(children, containerTag, transaction, context) {
        var mountImages = this.mountChildren(children, transaction, context);
        if (mountImages.length) {
            for (var createdTags = [], i = 0, l = mountImages.length; i < l; i++) {
                var mountImage = mountImages[i],
                    childTag = mountImage;
                createdTags[i] = childTag;
            }
            UIManager.setChildren(containerTag, createdTags);
        }
    },
    receiveComponent: function receiveComponent(nextElement, transaction, context) {
        var prevElement = this._currentElement;
        this._currentElement = nextElement;
        for (var key in this.viewConfig.validAttributes) {
            nextElement.props.hasOwnProperty(key) && deepFreezeAndThrowOnMutationInDev(nextElement.props[key]);
        }var updatePayload = ReactNativeAttributePayload_1.diff(prevElement.props, nextElement.props, this.viewConfig.validAttributes);
        updatePayload && UIManager.updateView(this._rootNodeID, this.viewConfig.uiViewClassName, updatePayload), this.updateChildren(nextElement.props.children, transaction, context);
    },
    getName: function getName() {
        return this.constructor.displayName || this.constructor.name || "Unknown";
    },
    getHostNode: function getHostNode() {
        return this._rootNodeID;
    },
    mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
        var tag = ReactNativeTagHandles_1.allocateTag();
        this._rootNodeID = tag, this._hostParent = hostParent, this._hostContainerInfo = hostContainerInfo;
        for (var key in this.viewConfig.validAttributes) {
            this._currentElement.props.hasOwnProperty(key) && deepFreezeAndThrowOnMutationInDev(this._currentElement.props[key]);
        }var updatePayload = ReactNativeAttributePayload_1.create(this._currentElement.props, this.viewConfig.validAttributes),
            nativeTopRootTag = hostContainerInfo._tag;
        return UIManager.createView(tag, this.viewConfig.uiViewClassName, nativeTopRootTag, updatePayload), ReactNativeComponentTree_1.precacheNode(this, tag), this.initializeChildren(this._currentElement.props.children, tag, transaction, context), tag;
    }
}, babelHelpers.extends(ReactNativeBaseComponent.prototype, ReactMultiChild_1, ReactNativeBaseComponent.Mixin, NativeMethodsMixin_1);

var ReactNativeBaseComponent_1 = ReactNativeBaseComponent,
    createReactNativeComponentClassStack = function createReactNativeComponentClassStack(viewConfig) {
    var Constructor = function Constructor(element) {
        this._currentElement = element, this._topLevelWrapper = null, this._hostParent = null, this._hostContainerInfo = null, this._rootNodeID = 0, this._renderedChildren = null;
    };
    return Constructor.displayName = viewConfig.uiViewClassName, Constructor.viewConfig = viewConfig, Constructor.propTypes = viewConfig.propTypes, Constructor.prototype = new ReactNativeBaseComponent_1(viewConfig), Constructor.prototype.constructor = Constructor, Constructor;
},
    createReactNativeComponentClassStack_1 = createReactNativeComponentClassStack,
    ReactNativeFeatureFlags$3 = require(63                       ), // 63 = ReactNativeFeatureFlags
    createReactNativeComponentClass = ReactNativeFeatureFlags$3.useFiber ? DevOnlyStubShim : createReactNativeComponentClassStack_1,
    ReactNativeFeatureFlags$4 = require(63                       ), // 63 = ReactNativeFeatureFlags
    findNumericNodeHandle$2 = ReactNativeFeatureFlags$4.useFiber ? DevOnlyStubShim : findNumericNodeHandleStack;

function takeSnapshot(view, options) {
    return "number" != typeof view && "window" !== view && (view = findNumericNodeHandle$2(view) || "window"), UIManager.__takeSnapshot(view, options);
}

var takeSnapshot_1 = takeSnapshot,
    lowPriorityWarning = function lowPriorityWarning() {},
    printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
    }var argIndex = 0,
        message = "Warning: " + format.replace(/%s/g, function () {
        return args[argIndex++];
    });
    "undefined" != typeof console && console.warn(message);
    try {
        throw new Error(message);
    } catch (x) {}
};

lowPriorityWarning = function lowPriorityWarning(condition, format) {
    if (void 0 === format) throw new Error("`warning(condition, format, ...args)` requires a warning " + "message argument");
    if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
        }printWarning.apply(void 0, [format].concat(args));
    }
};

var lowPriorityWarning_1 = lowPriorityWarning,
    _extends$2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
};

function roundFloat(val) {
    var base = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2,
        n = Math.pow(10, base);
    return Math.floor(val * n) / n;
}

function consoleTable(table) {
    console.table(table);
}

function getLastMeasurements() {
    return ReactDebugTool_1.getFlushHistory();
}

function getExclusive() {
    var flushHistory = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : getLastMeasurements(),
        aggregatedStats = {},
        affectedIDs = {};
    function updateAggregatedStats(treeSnapshot, instanceID, timerType, applyUpdate) {
        var displayName = treeSnapshot[instanceID].displayName,
            key = displayName,
            stats = aggregatedStats[key];
        stats || (affectedIDs[key] = {}, stats = aggregatedStats[key] = {
            key: key,
            instanceCount: 0,
            counts: {},
            durations: {},
            totalDuration: 0
        }), stats.durations[timerType] || (stats.durations[timerType] = 0), stats.counts[timerType] || (stats.counts[timerType] = 0), affectedIDs[key][instanceID] = !0, applyUpdate(stats);
    }
    return flushHistory.forEach(function (flush) {
        var measurements = flush.measurements,
            treeSnapshot = flush.treeSnapshot;
        measurements.forEach(function (measurement) {
            var duration = measurement.duration,
                instanceID = measurement.instanceID,
                timerType = measurement.timerType;
            updateAggregatedStats(treeSnapshot, instanceID, timerType, function (stats) {
                stats.totalDuration += duration, stats.durations[timerType] += duration, stats.counts[timerType]++;
            });
        });
    }), Object.keys(aggregatedStats).map(function (key) {
        return _extends$2({}, aggregatedStats[key], {
            instanceCount: Object.keys(affectedIDs[key]).length
        });
    }).sort(function (a, b) {
        return b.totalDuration - a.totalDuration;
    });
}

function getInclusive() {
    var flushHistory = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : getLastMeasurements(),
        aggregatedStats = {},
        affectedIDs = {};
    function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
        var _treeSnapshot$instanc = treeSnapshot[instanceID],
            displayName = _treeSnapshot$instanc.displayName,
            ownerID = _treeSnapshot$instanc.ownerID,
            owner = treeSnapshot[ownerID],
            key = (owner ? owner.displayName + " > " : "") + displayName,
            stats = aggregatedStats[key];
        stats || (affectedIDs[key] = {}, stats = aggregatedStats[key] = {
            key: key,
            instanceCount: 0,
            inclusiveRenderDuration: 0,
            renderCount: 0
        }), affectedIDs[key][instanceID] = !0, applyUpdate(stats);
    }
    var isCompositeByID = {};
    return flushHistory.forEach(function (flush) {
        flush.measurements.forEach(function (measurement) {
            var instanceID = measurement.instanceID;
            "render" === measurement.timerType && (isCompositeByID[instanceID] = !0);
        });
    }), flushHistory.forEach(function (flush) {
        var measurements = flush.measurements,
            treeSnapshot = flush.treeSnapshot;
        measurements.forEach(function (measurement) {
            var duration = measurement.duration,
                instanceID = measurement.instanceID;
            if ("render" === measurement.timerType) {
                updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
                    stats.renderCount++;
                });
                for (var nextParentID = instanceID; nextParentID;) {
                    isCompositeByID[nextParentID] && updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
                        stats.inclusiveRenderDuration += duration;
                    }), nextParentID = treeSnapshot[nextParentID].parentID;
                }
            }
        });
    }), Object.keys(aggregatedStats).map(function (key) {
        return _extends$2({}, aggregatedStats[key], {
            instanceCount: Object.keys(affectedIDs[key]).length
        });
    }).sort(function (a, b) {
        return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
    });
}

function getWasted() {
    var flushHistory = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : getLastMeasurements(),
        aggregatedStats = {},
        affectedIDs = {};
    function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
        var _treeSnapshot$instanc2 = treeSnapshot[instanceID],
            displayName = _treeSnapshot$instanc2.displayName,
            ownerID = _treeSnapshot$instanc2.ownerID,
            owner = treeSnapshot[ownerID],
            key = (owner ? owner.displayName + " > " : "") + displayName,
            stats = aggregatedStats[key];
        stats || (affectedIDs[key] = {}, stats = aggregatedStats[key] = {
            key: key,
            instanceCount: 0,
            inclusiveRenderDuration: 0,
            renderCount: 0
        }), affectedIDs[key][instanceID] = !0, applyUpdate(stats);
    }
    return flushHistory.forEach(function (flush) {
        var measurements = flush.measurements,
            treeSnapshot = flush.treeSnapshot,
            operations = flush.operations,
            isDefinitelyNotWastedByID = {};
        operations.forEach(function (operation) {
            for (var instanceID = operation.instanceID, nextParentID = instanceID; nextParentID;) {
                isDefinitelyNotWastedByID[nextParentID] = !0, nextParentID = treeSnapshot[nextParentID].parentID;
            }
        });
        var renderedCompositeIDs = {};
        measurements.forEach(function (measurement) {
            var instanceID = measurement.instanceID;
            "render" === measurement.timerType && (renderedCompositeIDs[instanceID] = !0);
        }), measurements.forEach(function (measurement) {
            var duration = measurement.duration,
                instanceID = measurement.instanceID;
            if ("render" === measurement.timerType) {
                var updateCount = treeSnapshot[instanceID].updateCount;
                if (!isDefinitelyNotWastedByID[instanceID] && 0 !== updateCount) {
                    updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
                        stats.renderCount++;
                    });
                    for (var nextParentID = instanceID; nextParentID;) {
                        renderedCompositeIDs[nextParentID] && !isDefinitelyNotWastedByID[nextParentID] && updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
                            stats.inclusiveRenderDuration += duration;
                        }), nextParentID = treeSnapshot[nextParentID].parentID;
                    }
                }
            }
        });
    }), Object.keys(aggregatedStats).map(function (key) {
        return _extends$2({}, aggregatedStats[key], {
            instanceCount: Object.keys(affectedIDs[key]).length
        });
    }).sort(function (a, b) {
        return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
    });
}

function getOperations() {
    var flushHistory = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : getLastMeasurements(),
        stats = [];
    return flushHistory.forEach(function (flush, flushIndex) {
        var operations = flush.operations,
            treeSnapshot = flush.treeSnapshot;
        operations.forEach(function (operation) {
            var instanceID = operation.instanceID,
                type = operation.type,
                payload = operation.payload,
                _treeSnapshot$instanc3 = treeSnapshot[instanceID],
                displayName = _treeSnapshot$instanc3.displayName,
                ownerID = _treeSnapshot$instanc3.ownerID,
                owner = treeSnapshot[ownerID],
                key = (owner ? owner.displayName + " > " : "") + displayName;
            stats.push({
                flushIndex: flushIndex,
                instanceID: instanceID,
                key: key,
                type: type,
                ownerID: ownerID,
                payload: payload
            });
        });
    }), stats;
}

function printExclusive(flushHistory) {
    consoleTable(getExclusive(flushHistory).map(function (item) {
        var key = item.key,
            instanceCount = item.instanceCount,
            totalDuration = item.totalDuration,
            renderCount = item.counts.render || 0,
            renderDuration = item.durations.render || 0;
        return {
            Component: key,
            "Total time (ms)": roundFloat(totalDuration),
            "Instance count": instanceCount,
            "Total render time (ms)": roundFloat(renderDuration),
            "Average render time (ms)": renderCount ? roundFloat(renderDuration / renderCount) : void 0,
            "Render count": renderCount,
            "Total lifecycle time (ms)": roundFloat(totalDuration - renderDuration)
        };
    }));
}

function printInclusive(flushHistory) {
    consoleTable(getInclusive(flushHistory).map(function (item) {
        var key = item.key,
            instanceCount = item.instanceCount,
            inclusiveRenderDuration = item.inclusiveRenderDuration,
            renderCount = item.renderCount;
        return {
            "Owner > Component": key,
            "Inclusive render time (ms)": roundFloat(inclusiveRenderDuration),
            "Instance count": instanceCount,
            "Render count": renderCount
        };
    }));
}

function printWasted(flushHistory) {
    consoleTable(getWasted(flushHistory).map(function (item) {
        var key = item.key,
            instanceCount = item.instanceCount,
            inclusiveRenderDuration = item.inclusiveRenderDuration,
            renderCount = item.renderCount;
        return {
            "Owner > Component": key,
            "Inclusive wasted time (ms)": roundFloat(inclusiveRenderDuration),
            "Instance count": instanceCount,
            "Render count": renderCount
        };
    }));
}

function printOperations(flushHistory) {
    consoleTable(getOperations(flushHistory).map(function (stat) {
        return {
            "Owner > Node": stat.key,
            Operation: stat.type,
            Payload: "object" == typeof stat.payload ? JSON.stringify(stat.payload) : stat.payload,
            "Flush index": stat.flushIndex,
            "Owner Component ID": stat.ownerID,
            "DOM Component ID": stat.instanceID
        };
    }));
}

var warnedAboutPrintDOM = !1;

function printDOM(measurements) {
    return lowPriorityWarning_1(warnedAboutPrintDOM, "`ReactPerf.printDOM(...)` is deprecated. Use " + "`ReactPerf.printOperations(...)` instead."), warnedAboutPrintDOM = !0, printOperations(measurements);
}

var warnedAboutGetMeasurementsSummaryMap = !1;

function getMeasurementsSummaryMap(measurements) {
    return lowPriorityWarning_1(warnedAboutGetMeasurementsSummaryMap, "`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use " + "`ReactPerf.getWasted(...)` instead."), warnedAboutGetMeasurementsSummaryMap = !0, getWasted(measurements);
}

function start() {
    ReactDebugTool_1.beginProfiling();
}

function stop() {
    ReactDebugTool_1.endProfiling();
}

function isRunning() {
    return ReactDebugTool_1.isProfiling();
}

var ReactPerfAnalysis = {
    getLastMeasurements: getLastMeasurements,
    getExclusive: getExclusive,
    getInclusive: getInclusive,
    getWasted: getWasted,
    getOperations: getOperations,
    printExclusive: printExclusive,
    printInclusive: printInclusive,
    printWasted: printWasted,
    printOperations: printOperations,
    start: start,
    stop: stop,
    isRunning: isRunning,
    printDOM: printDOM,
    getMeasurementsSummaryMap: getMeasurementsSummaryMap
},
    ReactPerf = ReactPerfAnalysis;

ReactNativeInjection.inject(), ReactNativeStackInjection.inject();

var render = function render(element, mountInto, callback) {
    return ReactNativeMount_1.renderComponent(element, mountInto, callback);
},
    ReactNativeStack = {
    NativeComponent: ReactNativeComponent_1,
    hasReactNativeInitialized: !1,
    findNodeHandle: findNumericNodeHandleStack,
    render: render,
    unmountComponentAtNode: ReactNativeMount_1.unmountComponentAtNode,
    unstable_batchedUpdates: ReactUpdates_1.batchedUpdates,
    unmountComponentAtNodeAndRemoveContainer: ReactNativeMount_1.unmountComponentAtNodeAndRemoveContainer,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        NativeMethodsMixin: NativeMethodsMixin_1,
        ReactGlobalSharedState: ReactGlobalSharedState_1,
        ReactNativeComponentTree: ReactNativeComponentTree_1,
        ReactNativePropRegistry: ReactNativePropRegistry_1,
        TouchHistoryMath: TouchHistoryMath_1,
        createReactNativeComponentClass: createReactNativeComponentClass,
        takeSnapshot: takeSnapshot_1
    }
};

babelHelpers.extends(ReactNativeStack.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
    ReactDebugTool: ReactDebugTool_1,
    ReactPerf: ReactPerf
}), "undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject && __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
        getClosestInstanceFromNode: function getClosestInstanceFromNode(node) {
            return ReactNativeComponentTree_1.getClosestInstanceFromNode(node);
        },
        getNodeFromInstance: function getNodeFromInstance(inst) {
            for (; inst._renderedComponent;) {
                inst = inst._renderedComponent;
            }return inst ? ReactNativeComponentTree_1.getNodeFromInstance(inst) : null;
        }
    },
    Mount: ReactNativeMount_1,
    Reconciler: ReactReconciler_1,
    getInspectorDataForViewTag: ReactNativeStackInspector.getInspectorDataForViewTag
});

var ReactNativeStackEntry = ReactNativeStack;

module.exports = ReactNativeStackEntry;
}, 123, null, "ReactNativeStack-dev");
__d(/* View */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\View\\View.js';
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var Platform = require(36        ); // 36 = Platform
var PropTypes = require(19          ); // 19 = prop-types
var React = require(125    ); // 125 = React
var ReactNativeStyleAttributes = require(126                         ); // 126 = ReactNativeStyleAttributes
var ReactNativeViewAttributes = require(140                        ); // 140 = ReactNativeViewAttributes
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var createReactClass = require(150                 ); // 150 = create-react-class
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent

var View = createReactClass({
  displayName: 'View',

  mixins: [NativeMethodsMixin],

  propTypes: ViewPropTypes,

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  contextTypes: {
    isInAParentText: PropTypes.bool
  },

  render: function render() {
    invariant(!(this.context.isInAParentText && Platform.OS === 'android'), 'Nesting of <View> within <Text> is not supported on Android.');

    return React.createElement(RCTView, babelHelpers.extends({}, this.props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 113
      }
    }));
  }
});

var RCTView = requireNativeComponent('RCTView', View, {
  nativeOnly: {
    nativeBackgroundAndroid: true,
    nativeForegroundAndroid: true
  }
});

if (__DEV__) {
  var UIManager = require(54         ); // 54 = UIManager
  var viewConfig = UIManager.viewConfigs && UIManager.viewConfigs.RCTView || {};
  for (var prop in viewConfig.nativeProps) {
    var viewAny = View;
    if (!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]) {
      throw new Error('View is missing propType for native prop `' + prop + '`');
    }
  }
}

var ViewToExport = RCTView;
if (__DEV__) {
  ViewToExport = View;
}

module.exports = ViewToExport;
}, 124, null, "View");
__d(/* React */function(global, require, module, exports) {

'use strict';

module.exports = require(12     ); // 12 = react
}, 125, null, "React");
__d(/* ReactNativeStyleAttributes */function(global, require, module, exports) {

'use strict';

var ImageStylePropTypes = require(127                  ); // 127 = ImageStylePropTypes
var TextStylePropTypes = require(134                 ); // 134 = TextStylePropTypes
var ViewStylePropTypes = require(135                 ); // 135 = ViewStylePropTypes

var keyMirror = require(129                 ); // 129 = fbjs/lib/keyMirror
var processColor = require(136           ); // 136 = processColor
var processTransform = require(137               ); // 137 = processTransform
var sizesDiffer = require(139          ); // 139 = sizesDiffer

var ReactNativeStyleAttributes = babelHelpers.extends({}, keyMirror(ViewStylePropTypes), keyMirror(TextStylePropTypes), keyMirror(ImageStylePropTypes));

ReactNativeStyleAttributes.transform = { process: processTransform };
ReactNativeStyleAttributes.shadowOffset = { diff: sizesDiffer };

var colorAttributes = { process: processColor };
ReactNativeStyleAttributes.backgroundColor = colorAttributes;
ReactNativeStyleAttributes.borderBottomColor = colorAttributes;
ReactNativeStyleAttributes.borderColor = colorAttributes;
ReactNativeStyleAttributes.borderLeftColor = colorAttributes;
ReactNativeStyleAttributes.borderRightColor = colorAttributes;
ReactNativeStyleAttributes.borderTopColor = colorAttributes;
ReactNativeStyleAttributes.color = colorAttributes;
ReactNativeStyleAttributes.shadowColor = colorAttributes;
ReactNativeStyleAttributes.textDecorationColor = colorAttributes;
ReactNativeStyleAttributes.tintColor = colorAttributes;
ReactNativeStyleAttributes.textShadowColor = colorAttributes;
ReactNativeStyleAttributes.overlayColor = colorAttributes;

module.exports = ReactNativeStyleAttributes;
}, 126, null, "ReactNativeStyleAttributes");
__d(/* ImageStylePropTypes */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(59             ); // 59 = ColorPropType
var ImageResizeMode = require(128              ); // 128 = ImageResizeMode
var LayoutPropTypes = require(130              ); // 130 = LayoutPropTypes
var ReactPropTypes = require(19          ); // 19 = prop-types
var ShadowPropTypesIOS = require(131                 ); // 131 = ShadowPropTypesIOS
var TransformPropTypes = require(132                 ); // 132 = TransformPropTypes

var ImageStylePropTypes = babelHelpers.extends({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  resizeMode: ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderWidth: ReactPropTypes.number,
  borderRadius: ReactPropTypes.number,
  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),

  tintColor: ColorPropType,
  opacity: ReactPropTypes.number,

  overlayColor: ReactPropTypes.string,

  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number
});

module.exports = ImageStylePropTypes;
}, 127, null, "ImageStylePropTypes");
__d(/* ImageResizeMode */function(global, require, module, exports) {
'use strict';

var keyMirror = require(129                 ); // 129 = fbjs/lib/keyMirror

var ImageResizeMode = keyMirror({
  contain: null,

  cover: null,

  stretch: null,

  center: null,

  repeat: null
});

module.exports = ImageResizeMode;
}, 128, null, "ImageResizeMode");
__d(/* fbjs/lib/keyMirror.js */function(global, require, module, exports) {

'use strict';

var invariant = require(18           ); // 18 = ./invariant

var keyMirror = function keyMirror(obj) {
  var ret = {};
  var key;
  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;
}, 129, null, "fbjs/lib/keyMirror.js");
__d(/* LayoutPropTypes */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(19          ); // 19 = prop-types

var LayoutPropTypes = {
  display: ReactPropTypes.oneOf(['none', 'flex']),

  width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  borderWidth: ReactPropTypes.number,

  borderTopWidth: ReactPropTypes.number,

  borderRightWidth: ReactPropTypes.number,

  borderBottomWidth: ReactPropTypes.number,

  borderLeftWidth: ReactPropTypes.number,

  position: ReactPropTypes.oneOf(['absolute', 'relative']),

  flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),

  flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap']),

  justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around']),

  alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),

  overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),

  flex: ReactPropTypes.number,
  flexGrow: ReactPropTypes.number,
  flexShrink: ReactPropTypes.number,
  flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  aspectRatio: ReactPropTypes.number,

  zIndex: ReactPropTypes.number,

  direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
};

module.exports = LayoutPropTypes;
}, 130, null, "LayoutPropTypes");
__d(/* ShadowPropTypesIOS */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(59             ); // 59 = ColorPropType
var ReactPropTypes = require(19          ); // 19 = prop-types

var ShadowPropTypesIOS = {
  shadowColor: ColorPropType,

  shadowOffset: ReactPropTypes.shape({
    width: ReactPropTypes.number,
    height: ReactPropTypes.number
  }),

  shadowOpacity: ReactPropTypes.number,

  shadowRadius: ReactPropTypes.number
};

module.exports = ShadowPropTypesIOS;
}, 131, null, "ShadowPropTypesIOS");
__d(/* TransformPropTypes */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(19          ); // 19 = prop-types

var deprecatedPropType = require(133                 ); // 133 = deprecatedPropType

var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The transformMatrix style property is deprecated. ' + 'Use `transform: [{ matrix: ... }]` instead.');
  }
};

var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The decomposedMatrix style property is deprecated. ' + 'Use `transform: [...]` instead.');
  }
};

var TransformPropTypes = {
  transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({ perspective: ReactPropTypes.number }), ReactPropTypes.shape({ rotate: ReactPropTypes.string }), ReactPropTypes.shape({ rotateX: ReactPropTypes.string }), ReactPropTypes.shape({ rotateY: ReactPropTypes.string }), ReactPropTypes.shape({ rotateZ: ReactPropTypes.string }), ReactPropTypes.shape({ scale: ReactPropTypes.number }), ReactPropTypes.shape({ scaleX: ReactPropTypes.number }), ReactPropTypes.shape({ scaleY: ReactPropTypes.number }), ReactPropTypes.shape({ translateX: ReactPropTypes.number }), ReactPropTypes.shape({ translateY: ReactPropTypes.number }), ReactPropTypes.shape({ skewX: ReactPropTypes.string }), ReactPropTypes.shape({ skewY: ReactPropTypes.string })])),

  transformMatrix: TransformMatrixPropType,
  decomposedMatrix: DecomposedMatrixPropType,

  scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
};

module.exports = TransformPropTypes;
}, 132, null, "TransformPropTypes");
__d(/* deprecatedPropType */function(global, require, module, exports) {
'use strict';

var UIManager = require(54         ); // 54 = UIManager

function deprecatedPropType(propType, explanation) {
  return function validate(props, propName, componentName) {
    if (!UIManager[componentName] && props[propName] !== undefined) {
      console.warn('`' + propName + '` supplied to `' + componentName + '` has been deprecated. ' + explanation);
    }

    for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    return propType.apply(undefined, [props, propName, componentName].concat(rest));
  };
}

module.exports = deprecatedPropType;
}, 133, null, "deprecatedPropType");
__d(/* TextStylePropTypes */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(59             ); // 59 = ColorPropType
var ReactPropTypes = require(19          ); // 19 = prop-types
var ViewStylePropTypes = require(135                 ); // 135 = ViewStylePropTypes

var TextStylePropTypes = babelHelpers.extends({}, ViewStylePropTypes, {

  color: ColorPropType,
  fontFamily: ReactPropTypes.string,
  fontSize: ReactPropTypes.number,
  fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),

  fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),

  fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
  textShadowOffset: ReactPropTypes.shape({ width: ReactPropTypes.number, height: ReactPropTypes.number }),
  textShadowRadius: ReactPropTypes.number,
  textShadowColor: ColorPropType,

  letterSpacing: ReactPropTypes.number,
  lineHeight: ReactPropTypes.number,

  textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),

  textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),

  includeFontPadding: ReactPropTypes.bool,
  textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),

  textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),

  textDecorationColor: ColorPropType,

  writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
});

module.exports = TextStylePropTypes;
}, 134, null, "TextStylePropTypes");
__d(/* ViewStylePropTypes */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(59             ); // 59 = ColorPropType
var LayoutPropTypes = require(130              ); // 130 = LayoutPropTypes
var ReactPropTypes = require(19          ); // 19 = prop-types
var ShadowPropTypesIOS = require(131                 ); // 131 = ShadowPropTypesIOS
var TransformPropTypes = require(132                 ); // 132 = TransformPropTypes

var ViewStylePropTypes = babelHelpers.extends({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderTopColor: ColorPropType,
  borderRightColor: ColorPropType,
  borderBottomColor: ColorPropType,
  borderLeftColor: ColorPropType,
  borderRadius: ReactPropTypes.number,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number,
  borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
  borderWidth: ReactPropTypes.number,
  borderTopWidth: ReactPropTypes.number,
  borderRightWidth: ReactPropTypes.number,
  borderBottomWidth: ReactPropTypes.number,
  borderLeftWidth: ReactPropTypes.number,
  opacity: ReactPropTypes.number,

  elevation: ReactPropTypes.number
});

module.exports = ViewStylePropTypes;
}, 135, null, "ViewStylePropTypes");
__d(/* processColor */function(global, require, module, exports) {
'use strict';

var Platform = require(36        ); // 36 = Platform

var normalizeColor = require(60              ); // 60 = normalizeColor

function processColor(color) {
  if (color === undefined || color === null) {
    return color;
  }

  var int32Color = normalizeColor(color);
  if (int32Color === null || int32Color === undefined) {
    return undefined;
  }

  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;

  if (Platform.OS === 'android') {
    int32Color = int32Color | 0x0;
  }
  return int32Color;
}

module.exports = processColor;
}, 136, null, "processColor");
__d(/* processTransform */function(global, require, module, exports) {
'use strict';

var MatrixMath = require(138         ); // 138 = MatrixMath
var Platform = require(36        ); // 36 = Platform

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var stringifySafe = require(34             ); // 34 = stringifySafe

function processTransform(transform) {
  if (__DEV__) {
    _validateTransforms(transform);
  }

  if (Platform.OS === 'android' || Platform.OS === 'ios') {
    return transform;
  }

  var result = MatrixMath.createIdentityMatrix();

  transform.forEach(function (transformation) {
    var key = Object.keys(transformation)[0];
    var value = transformation[key];

    switch (key) {
      case 'matrix':
        MatrixMath.multiplyInto(result, result, value);
        break;
      case 'perspective':
        _multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);
        break;
      case 'rotateX':
        _multiplyTransform(result, MatrixMath.reuseRotateXCommand, [_convertToRadians(value)]);
        break;
      case 'rotateY':
        _multiplyTransform(result, MatrixMath.reuseRotateYCommand, [_convertToRadians(value)]);
        break;
      case 'rotate':
      case 'rotateZ':
        _multiplyTransform(result, MatrixMath.reuseRotateZCommand, [_convertToRadians(value)]);
        break;
      case 'scale':
        _multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);
        break;
      case 'scaleX':
        _multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);
        break;
      case 'scaleY':
        _multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);
        break;
      case 'translate':
        _multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [value[0], value[1], value[2] || 0]);
        break;
      case 'translateX':
        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [value, 0]);
        break;
      case 'translateY':
        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [0, value]);
        break;
      case 'skewX':
        _multiplyTransform(result, MatrixMath.reuseSkewXCommand, [_convertToRadians(value)]);
        break;
      case 'skewY':
        _multiplyTransform(result, MatrixMath.reuseSkewYCommand, [_convertToRadians(value)]);
        break;
      default:
        throw new Error('Invalid transform name: ' + key);
    }
  });

  return result;
}

function _multiplyTransform(result, matrixMathFunction, args) {
  var matrixToApply = MatrixMath.createIdentityMatrix();
  var argsWithIdentity = [matrixToApply].concat(args);
  matrixMathFunction.apply(this, argsWithIdentity);
  MatrixMath.multiplyInto(result, result, matrixToApply);
}

function _convertToRadians(value) {
  var floatValue = parseFloat(value);
  return value.indexOf('rad') > -1 ? floatValue : floatValue * Math.PI / 180;
}

function _validateTransforms(transform) {
  transform.forEach(function (transformation) {
    var keys = Object.keys(transformation);
    invariant(keys.length === 1, 'You must specify exactly one property per transform object. Passed properties: %s', stringifySafe(transformation));
    var key = keys[0];
    var value = transformation[key];
    _validateTransform(key, value, transformation);
  });
}

function _validateTransform(key, value, transformation) {
  invariant(!value.getValue, 'You passed an Animated.Value to a normal component. ' + 'You need to wrap that component in an Animated. For example, ' + 'replace <View /> by <Animated.View />.');

  var multivalueTransforms = ['matrix', 'translate'];
  if (multivalueTransforms.indexOf(key) !== -1) {
    invariant(Array.isArray(value), 'Transform with key of %s must have an array as the value: %s', key, stringifySafe(transformation));
  }
  switch (key) {
    case 'matrix':
      invariant(value.length === 9 || value.length === 16, 'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 'Provided matrix has a length of %s: %s', value.length, stringifySafe(transformation));
      break;
    case 'translate':
      invariant(value.length === 2 || value.length === 3, 'Transform with key translate must be an array of length 2 or 3, found %s: %s', value.length, stringifySafe(transformation));
      break;
    case 'rotateX':
    case 'rotateY':
    case 'rotateZ':
    case 'rotate':
    case 'skewX':
    case 'skewY':
      invariant(typeof value === 'string', 'Transform with key of "%s" must be a string: %s', key, stringifySafe(transformation));
      invariant(value.indexOf('deg') > -1 || value.indexOf('rad') > -1, 'Rotate transform must be expressed in degrees (deg) or radians ' + '(rad): %s', stringifySafe(transformation));
      break;
    case 'perspective':
      invariant(typeof value === 'number', 'Transform with key of "%s" must be a number: %s', key, stringifySafe(transformation));
      invariant(value !== 0, 'Transform with key of "%s" cannot be zero: %s', key, stringifySafe(transformation));
      break;
    case 'translateX':
    case 'translateY':
    case 'scale':
    case 'scaleX':
    case 'scaleY':
      invariant(typeof value === 'number', 'Transform with key of "%s" must be a number: %s', key, stringifySafe(transformation));
      break;
    default:
      invariant(false, 'Invalid transform %s: %s', key, stringifySafe(transformation));
  }
}

module.exports = processTransform;
}, 137, null, "processTransform");
__d(/* MatrixMath */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var MatrixMath = {
  createIdentityMatrix: function createIdentityMatrix() {
    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  },

  createCopy: function createCopy(m) {
    return [m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]];
  },

  createOrthographic: function createOrthographic(left, right, bottom, top, near, far) {
    var a = 2 / (right - left);
    var b = 2 / (top - bottom);
    var c = -2 / (far - near);

    var tx = -(right + left) / (right - left);
    var ty = -(top + bottom) / (top - bottom);
    var tz = -(far + near) / (far - near);

    return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];
  },

  createFrustum: function createFrustum(left, right, bottom, top, near, far) {
    var r_width = 1 / (right - left);
    var r_height = 1 / (top - bottom);
    var r_depth = 1 / (near - far);
    var x = 2 * (near * r_width);
    var y = 2 * (near * r_height);
    var A = (right + left) * r_width;
    var B = (top + bottom) * r_height;
    var C = (far + near) * r_depth;
    var D = 2 * (far * near * r_depth);
    return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];
  },

  createPerspective: function createPerspective(fovInRadians, aspect, near, far) {
    var h = 1 / Math.tan(fovInRadians / 2);
    var r_depth = 1 / (near - far);
    var C = (far + near) * r_depth;
    var D = 2 * (far * near * r_depth);
    return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];
  },

  createTranslate2d: function createTranslate2d(x, y) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseTranslate2dCommand(mat, x, y);
    return mat;
  },

  reuseTranslate2dCommand: function reuseTranslate2dCommand(matrixCommand, x, y) {
    matrixCommand[12] = x;
    matrixCommand[13] = y;
  },

  reuseTranslate3dCommand: function reuseTranslate3dCommand(matrixCommand, x, y, z) {
    matrixCommand[12] = x;
    matrixCommand[13] = y;
    matrixCommand[14] = z;
  },

  createScale: function createScale(factor) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseScaleCommand(mat, factor);
    return mat;
  },

  reuseScaleCommand: function reuseScaleCommand(matrixCommand, factor) {
    matrixCommand[0] = factor;
    matrixCommand[5] = factor;
  },

  reuseScale3dCommand: function reuseScale3dCommand(matrixCommand, x, y, z) {
    matrixCommand[0] = x;
    matrixCommand[5] = y;
    matrixCommand[10] = z;
  },

  reusePerspectiveCommand: function reusePerspectiveCommand(matrixCommand, p) {
    matrixCommand[11] = -1 / p;
  },

  reuseScaleXCommand: function reuseScaleXCommand(matrixCommand, factor) {
    matrixCommand[0] = factor;
  },
  reuseScaleYCommand: function reuseScaleYCommand(matrixCommand, factor) {
    matrixCommand[5] = factor;
  },
  reuseScaleZCommand: function reuseScaleZCommand(matrixCommand, factor) {
    matrixCommand[10] = factor;
  },


  reuseRotateXCommand: function reuseRotateXCommand(matrixCommand, radians) {
    matrixCommand[5] = Math.cos(radians);
    matrixCommand[6] = Math.sin(radians);
    matrixCommand[9] = -Math.sin(radians);
    matrixCommand[10] = Math.cos(radians);
  },

  reuseRotateYCommand: function reuseRotateYCommand(matrixCommand, amount) {
    matrixCommand[0] = Math.cos(amount);
    matrixCommand[2] = -Math.sin(amount);
    matrixCommand[8] = Math.sin(amount);
    matrixCommand[10] = Math.cos(amount);
  },

  reuseRotateZCommand: function reuseRotateZCommand(matrixCommand, radians) {
    matrixCommand[0] = Math.cos(radians);
    matrixCommand[1] = Math.sin(radians);
    matrixCommand[4] = -Math.sin(radians);
    matrixCommand[5] = Math.cos(radians);
  },

  createRotateZ: function createRotateZ(radians) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseRotateZCommand(mat, radians);
    return mat;
  },

  reuseSkewXCommand: function reuseSkewXCommand(matrixCommand, radians) {
    matrixCommand[4] = Math.tan(radians);
  },

  reuseSkewYCommand: function reuseSkewYCommand(matrixCommand, radians) {
    matrixCommand[1] = Math.tan(radians);
  },

  multiplyInto: function multiplyInto(out, a, b) {
    var a00 = a[0],
        a01 = a[1],
        a02 = a[2],
        a03 = a[3],
        a10 = a[4],
        a11 = a[5],
        a12 = a[6],
        a13 = a[7],
        a20 = a[8],
        a21 = a[9],
        a22 = a[10],
        a23 = a[11],
        a30 = a[12],
        a31 = a[13],
        a32 = a[14],
        a33 = a[15];

    var b0 = b[0],
        b1 = b[1],
        b2 = b[2],
        b3 = b[3];
    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  },

  determinant: function determinant(matrix) {
    var _matrix = babelHelpers.slicedToArray(matrix, 16),
        m00 = _matrix[0],
        m01 = _matrix[1],
        m02 = _matrix[2],
        m03 = _matrix[3],
        m10 = _matrix[4],
        m11 = _matrix[5],
        m12 = _matrix[6],
        m13 = _matrix[7],
        m20 = _matrix[8],
        m21 = _matrix[9],
        m22 = _matrix[10],
        m23 = _matrix[11],
        m30 = _matrix[12],
        m31 = _matrix[13],
        m32 = _matrix[14],
        m33 = _matrix[15];

    return m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33;
  },
  inverse: function inverse(matrix) {
    var det = MatrixMath.determinant(matrix);
    if (!det) {
      return matrix;
    }

    var _matrix2 = babelHelpers.slicedToArray(matrix, 16),
        m00 = _matrix2[0],
        m01 = _matrix2[1],
        m02 = _matrix2[2],
        m03 = _matrix2[3],
        m10 = _matrix2[4],
        m11 = _matrix2[5],
        m12 = _matrix2[6],
        m13 = _matrix2[7],
        m20 = _matrix2[8],
        m21 = _matrix2[9],
        m22 = _matrix2[10],
        m23 = _matrix2[11],
        m30 = _matrix2[12],
        m31 = _matrix2[13],
        m32 = _matrix2[14],
        m33 = _matrix2[15];

    return [(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det, (m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det, (m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det, (m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det, (m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det, (m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det, (m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det, (m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det, (m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det, (m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det, (m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det, (m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det, (m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det, (m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det, (m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det, (m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];
  },
  transpose: function transpose(m) {
    return [m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]];
  },
  multiplyVectorByMatrix: function multiplyVectorByMatrix(v, m) {
    var _v = babelHelpers.slicedToArray(v, 4),
        vx = _v[0],
        vy = _v[1],
        vz = _v[2],
        vw = _v[3];

    return [vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12], vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13], vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14], vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];
  },
  v3Length: function v3Length(a) {
    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
  },
  v3Normalize: function v3Normalize(vector, v3Length) {
    var im = 1 / (v3Length || MatrixMath.v3Length(vector));
    return [vector[0] * im, vector[1] * im, vector[2] * im];
  },
  v3Dot: function v3Dot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  },
  v3Combine: function v3Combine(a, b, aScale, bScale) {
    return [aScale * a[0] + bScale * b[0], aScale * a[1] + bScale * b[1], aScale * a[2] + bScale * b[2]];
  },
  v3Cross: function v3Cross(a, b) {
    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
  },
  quaternionToDegreesXYZ: function quaternionToDegreesXYZ(q, matrix, row) {
    var _q = babelHelpers.slicedToArray(q, 4),
        qx = _q[0],
        qy = _q[1],
        qz = _q[2],
        qw = _q[3];

    var qw2 = qw * qw;
    var qx2 = qx * qx;
    var qy2 = qy * qy;
    var qz2 = qz * qz;
    var test = qx * qy + qz * qw;
    var unit = qw2 + qx2 + qy2 + qz2;
    var conv = 180 / Math.PI;

    if (test > 0.49999 * unit) {
      return [0, 2 * Math.atan2(qx, qw) * conv, 90];
    }
    if (test < -0.49999 * unit) {
      return [0, -2 * Math.atan2(qx, qw) * conv, -90];
    }

    return [MatrixMath.roundTo3Places(Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];
  },
  roundTo3Places: function roundTo3Places(n) {
    var arr = n.toString().split('e');
    return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;
  },
  decomposeMatrix: function decomposeMatrix(transformMatrix) {

    invariant(transformMatrix.length === 16, 'Matrix decomposition needs a list of 3d matrix values, received %s', transformMatrix);

    var perspective = [];
    var quaternion = [];
    var scale = [];
    var skew = [];
    var translation = [];

    if (!transformMatrix[15]) {
      return;
    }
    var matrix = [];
    var perspectiveMatrix = [];
    for (var i = 0; i < 4; i++) {
      matrix.push([]);
      for (var j = 0; j < 4; j++) {
        var value = transformMatrix[i * 4 + j] / transformMatrix[15];
        matrix[i].push(value);
        perspectiveMatrix.push(j === 3 ? 0 : value);
      }
    }
    perspectiveMatrix[15] = 1;

    if (!MatrixMath.determinant(perspectiveMatrix)) {
      return;
    }

    if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {
      var rightHandSide = [matrix[0][3], matrix[1][3], matrix[2][3], matrix[3][3]];

      var inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);
      var transposedInversePerspectiveMatrix = MatrixMath.transpose(inversePerspectiveMatrix);
      var perspective = MatrixMath.multiplyVectorByMatrix(rightHandSide, transposedInversePerspectiveMatrix);
    } else {
      perspective[0] = perspective[1] = perspective[2] = 0;
      perspective[3] = 1;
    }

    for (var i = 0; i < 3; i++) {
      translation[i] = matrix[3][i];
    }

    var row = [];
    for (i = 0; i < 3; i++) {
      row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];
    }

    scale[0] = MatrixMath.v3Length(row[0]);
    row[0] = MatrixMath.v3Normalize(row[0], scale[0]);

    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

    scale[1] = MatrixMath.v3Length(row[1]);
    row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
    skew[0] /= scale[1];

    skew[1] = MatrixMath.v3Dot(row[0], row[2]);
    row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);
    skew[2] = MatrixMath.v3Dot(row[1], row[2]);
    row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);

    scale[2] = MatrixMath.v3Length(row[2]);
    row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
    skew[1] /= scale[2];
    skew[2] /= scale[2];

    var pdum3 = MatrixMath.v3Cross(row[1], row[2]);
    if (MatrixMath.v3Dot(row[0], pdum3) < 0) {
      for (i = 0; i < 3; i++) {
        scale[i] *= -1;
        row[i][0] *= -1;
        row[i][1] *= -1;
        row[i][2] *= -1;
      }
    }

    quaternion[0] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
    quaternion[1] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
    quaternion[2] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
    quaternion[3] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));

    if (row[2][1] > row[1][2]) {
      quaternion[0] = -quaternion[0];
    }
    if (row[0][2] > row[2][0]) {
      quaternion[1] = -quaternion[1];
    }
    if (row[1][0] > row[0][1]) {
      quaternion[2] = -quaternion[2];
    }

    var rotationDegrees;
    if (quaternion[0] < 0.001 && quaternion[0] >= 0 && quaternion[1] < 0.001 && quaternion[1] >= 0) {
      rotationDegrees = [0, 0, MatrixMath.roundTo3Places(Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI)];
    } else {
      rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion, matrix, row);
    }

    return {
      rotationDegrees: rotationDegrees,
      perspective: perspective,
      quaternion: quaternion,
      scale: scale,
      skew: skew,
      translation: translation,

      rotate: rotationDegrees[2],
      rotateX: rotationDegrees[0],
      rotateY: rotationDegrees[1],
      scaleX: scale[0],
      scaleY: scale[1],
      translateX: translation[0],
      translateY: translation[1]
    };
  }
};

module.exports = MatrixMath;
}, 138, null, "MatrixMath");
__d(/* sizesDiffer */function(global, require, module, exports) {
'use strict';

var dummySize = { width: undefined, height: undefined };

var sizesDiffer = function sizesDiffer(one, two) {
  one = one || dummySize;
  two = two || dummySize;
  return one !== two && (one.width !== two.width || one.height !== two.height);
};

module.exports = sizesDiffer;
}, 139, null, "sizesDiffer");
__d(/* ReactNativeViewAttributes */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(126                         ); // 126 = ReactNativeStyleAttributes

var ReactNativeViewAttributes = {};

ReactNativeViewAttributes.UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityLabel: true,
  accessibilityComponentType: true,
  accessibilityLiveRegion: true,
  accessibilityTraits: true,
  importantForAccessibility: true,
  nativeID: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes
};

ReactNativeViewAttributes.RCTView = babelHelpers.extends({}, ReactNativeViewAttributes.UIView, {
  removeClippedSubviews: true
});

module.exports = ReactNativeViewAttributes;
}, 140, null, "ReactNativeViewAttributes");
__d(/* ViewPropTypes */function(global, require, module, exports) {
'use strict';

var EdgeInsetsPropType = require(142                 ); // 142 = EdgeInsetsPropType
var Platform = require(36        ); // 36 = Platform
var PropTypes = require(19          ); // 19 = prop-types
var StyleSheetPropType = require(147                 ); // 147 = StyleSheetPropType
var ViewStylePropTypes = require(135                 ); // 135 = ViewStylePropTypes

var _require = require(148                ), // 148 = ViewAccessibility
    AccessibilityComponentTypes = _require.AccessibilityComponentTypes,
    AccessibilityTraits = _require.AccessibilityTraits;

var TVViewPropTypes = {};
if (Platform.isTVOS) {
  TVViewPropTypes = require(149              ); // 149 = TVViewPropTypes
}

var stylePropType = StyleSheetPropType(ViewStylePropTypes);

module.exports = babelHelpers.extends({}, TVViewPropTypes, {
  accessible: PropTypes.bool,

  accessibilityLabel: PropTypes.node,

  accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentTypes),

  accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),

  importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),

  accessibilityTraits: PropTypes.oneOfType([PropTypes.oneOf(AccessibilityTraits), PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),

  accessibilityViewIsModal: PropTypes.bool,

  onAccessibilityTap: PropTypes.func,

  onMagicTap: PropTypes.func,

  testID: PropTypes.string,

  nativeID: PropTypes.string,

  onResponderGrant: PropTypes.func,

  onResponderMove: PropTypes.func,

  onResponderReject: PropTypes.func,

  onResponderRelease: PropTypes.func,

  onResponderTerminate: PropTypes.func,

  onResponderTerminationRequest: PropTypes.func,

  onStartShouldSetResponder: PropTypes.func,

  onStartShouldSetResponderCapture: PropTypes.func,

  onMoveShouldSetResponder: PropTypes.func,

  onMoveShouldSetResponderCapture: PropTypes.func,

  hitSlop: EdgeInsetsPropType,

  onLayout: PropTypes.func,

  pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
  style: stylePropType,

  removeClippedSubviews: PropTypes.bool,

  renderToHardwareTextureAndroid: PropTypes.bool,

  shouldRasterizeIOS: PropTypes.bool,

  collapsable: PropTypes.bool,

  needsOffscreenAlphaCompositing: PropTypes.bool
});
}, 141, null, "ViewPropTypes");
__d(/* EdgeInsetsPropType */function(global, require, module, exports) {
'use strict';

var PropTypes = require(19          ); // 19 = prop-types

var createStrictShapeTypeChecker = require(143                           ); // 143 = createStrictShapeTypeChecker

var EdgeInsetsPropType = createStrictShapeTypeChecker({
  top: PropTypes.number,
  left: PropTypes.number,
  bottom: PropTypes.number,
  right: PropTypes.number
});

module.exports = EdgeInsetsPropType;
}, 142, null, "EdgeInsetsPropType");
__d(/* createStrictShapeTypeChecker */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var merge = require(144    ); // 144 = merge

function createStrictShapeTypeChecker(shapeTypes) {
  function checkType(isRequired, props, propName, componentName, location) {
    if (!props[propName]) {
      if (isRequired) {
        invariant(false, 'Required object `' + propName + '` was not specified in ' + ('`' + componentName + '`.'));
      }
      return;
    }
    var propValue = props[propName];
    var propType = typeof propValue;
    var locationName = location || '(unknown)';
    if (propType !== 'object') {
      invariant(false, 'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }

    var allKeys = merge(props[propName], shapeTypes);

    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
      rest[_key - 5] = arguments[_key];
    }

    for (var key in allKeys) {
      var checker = shapeTypes[key];
      if (!checker) {
        invariant(false, 'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
      }
      var error = checker.apply(undefined, [propValue, key, componentName, location].concat(rest));
      if (error) {
        invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
      }
    }
  }
  function chainedCheckType(props, propName, componentName, location) {
    for (var _len2 = arguments.length, rest = Array(_len2 > 4 ? _len2 - 4 : 0), _key2 = 4; _key2 < _len2; _key2++) {
      rest[_key2 - 4] = arguments[_key2];
    }

    return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
  }
  chainedCheckType.isRequired = checkType.bind(null, true);
  return chainedCheckType;
}

module.exports = createStrictShapeTypeChecker;
}, 143, null, "createStrictShapeTypeChecker");
__d(/* merge */function(global, require, module, exports) {

"use strict";

var mergeInto = require(145        ); // 145 = mergeInto

var merge = function merge(one, two) {
  var result = {};
  mergeInto(result, one);
  mergeInto(result, two);
  return result;
};

module.exports = merge;
}, 144, null, "merge");
__d(/* mergeInto */function(global, require, module, exports) {

"use strict";

var mergeHelpers = require(146           ); // 146 = mergeHelpers

var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg = mergeHelpers.checkMergeIntoObjectArg;

function mergeInto(one, two) {
  checkMergeIntoObjectArg(one);
  if (two != null) {
    checkMergeObjectArg(two);
    for (var key in two) {
      if (!two.hasOwnProperty(key)) {
        continue;
      }
      one[key] = two[key];
    }
  }
}

module.exports = mergeInto;
}, 145, null, "mergeInto");
__d(/* mergeHelpers */function(global, require, module, exports) {

'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var MAX_MERGE_DEPTH = 36;

var isTerminal = function isTerminal(o) {
  return typeof o !== 'object' || o instanceof Date || o === null;
};

var mergeHelpers = {

  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,

  isTerminal: isTerminal,

  normalizeMergeArg: function normalizeMergeArg(arg) {
    return arg === undefined || arg === null ? {} : arg;
  },

  checkMergeArrayArgs: function checkMergeArrayArgs(one, two) {
    invariant(Array.isArray(one) && Array.isArray(two), 'Tried to merge arrays, instead got %s and %s.', one, two);
  },

  checkMergeObjectArgs: function checkMergeObjectArgs(one, two) {
    mergeHelpers.checkMergeObjectArg(one);
    mergeHelpers.checkMergeObjectArg(two);
  },

  checkMergeObjectArg: function checkMergeObjectArg(arg) {
    invariant(!isTerminal(arg) && !Array.isArray(arg), 'Tried to merge an object, instead got %s.', arg);
  },

  checkMergeIntoObjectArg: function checkMergeIntoObjectArg(arg) {
    invariant((!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg), 'Tried to merge into an object, instead got %s.', arg);
  },

  checkMergeLevel: function checkMergeLevel(level) {
    invariant(level < MAX_MERGE_DEPTH, 'Maximum deep merge depth exceeded. You may be attempting to merge ' + 'circular structures in an unsupported way.');
  },

  checkArrayStrategy: function checkArrayStrategy(strategy) {
    invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies, 'You must provide an array strategy to deep merge functions to ' + 'instruct the deep merge how to resolve merging two arrays.');
  },

  ArrayStrategies: {
    Clobber: 'Clobber',
    Concat: 'Concat',
    IndexByIndex: 'IndexByIndex'
  }

};

module.exports = mergeHelpers;
}, 146, null, "mergeHelpers");
__d(/* StyleSheetPropType */function(global, require, module, exports) {
'use strict';

var createStrictShapeTypeChecker = require(143                           ); // 143 = createStrictShapeTypeChecker
var flattenStyle = require(114           ); // 114 = flattenStyle

function StyleSheetPropType(shape) {
  var shapePropType = createStrictShapeTypeChecker(shape);
  return function (props, propName, componentName, location) {
    var newProps = props;
    if (props[propName]) {
      newProps = {};
      newProps[propName] = flattenStyle(props[propName]);
    }

    for (var _len = arguments.length, rest = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      rest[_key - 4] = arguments[_key];
    }

    return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
  };
}

module.exports = StyleSheetPropType;
}, 147, null, "StyleSheetPropType");
__d(/* ViewAccessibility */function(global, require, module, exports) {
'use strict';

module.exports = {
  AccessibilityTraits: ['none', 'button', 'link', 'header', 'search', 'image', 'selected', 'plays', 'key', 'text', 'summary', 'disabled', 'frequentUpdates', 'startsMedia', 'adjustable', 'allowsDirectInteraction', 'pageTurn'],
  AccessibilityComponentTypes: ['none', 'button', 'radiobutton_checked', 'radiobutton_unchecked']
};
}, 148, null, "ViewAccessibility");
__d(/* TVViewPropTypes */function(global, require, module, exports) {
'use strict';

var PropTypes = require(19          ); // 19 = prop-types

var TVViewPropTypes = {
  isTVSelectable: PropTypes.bool,

  hasTVPreferredFocus: PropTypes.bool,

  tvParallaxProperties: PropTypes.object,

  tvParallaxShiftDistanceX: PropTypes.number,

  tvParallaxShiftDistanceY: PropTypes.number,

  tvParallaxTiltAngle: PropTypes.number,

  tvParallaxMagnification: PropTypes.number

};

module.exports = TVViewPropTypes;
}, 149, null, "TVViewPropTypes");
__d(/* create-react-class/index.js */function(global, require, module, exports) {

'use strict';

var React = require(12     ); // 12 = react
var factory = require(24         ); // 24 = ./factory

if (typeof React === 'undefined') {
  throw Error('create-react-class could not find the React object. If you are using script tags, ' + 'make sure that React is being loaded before create-react-class.');
}

var ReactNoopUpdateQueue = new React.Component().updater;

module.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);
}, 150, null, "create-react-class/index.js");
__d(/* requireNativeComponent */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(126                         ); // 126 = ReactNativeStyleAttributes
var UIManager = require(54         ); // 54 = UIManager
var UnimplementedView = require(152                ); // 152 = UnimplementedView

var createReactNativeComponentClass = require(158                              ); // 158 = createReactNativeComponentClass
var insetsDiffer = require(159           ); // 159 = insetsDiffer
var matricesDiffer = require(160             ); // 160 = matricesDiffer
var pointsDiffer = require(161           ); // 161 = pointsDiffer
var processColor = require(136           ); // 136 = processColor
var resolveAssetSource = require(162                 ); // 162 = resolveAssetSource
var sizesDiffer = require(139          ); // 139 = sizesDiffer
var verifyPropTypes = require(166              ); // 166 = verifyPropTypes
var warning = require(15                ); // 15 = fbjs/lib/warning

function requireNativeComponent(viewName, componentInterface, extraConfig) {
  var viewConfig = UIManager[viewName];
  if (!viewConfig || !viewConfig.NativeProps) {
    warning(false, 'Native component for "%s" does not exist', viewName);
    return UnimplementedView;
  }

  viewConfig.uiViewClassName = viewName;
  viewConfig.validAttributes = {};

  if (componentInterface) {
    viewConfig.propTypes = typeof componentInterface.__propTypesSecretDontUseThesePlease === 'object' ? componentInterface.__propTypesSecretDontUseThesePlease : componentInterface.propTypes;
  } else {
    viewConfig.propTypes = null;
  }

  var nativeProps = babelHelpers.extends({}, UIManager.RCTView.NativeProps, viewConfig.NativeProps);
  for (var key in nativeProps) {
    var useAttribute = false;
    var attribute = {};

    var differ = TypeToDifferMap[nativeProps[key]];
    if (differ) {
      attribute.diff = differ;
      useAttribute = true;
    }

    var processor = TypeToProcessorMap[nativeProps[key]];
    if (processor) {
      attribute.process = processor;
      useAttribute = true;
    }

    viewConfig.validAttributes[key] = useAttribute ? attribute : true;
  }

  viewConfig.validAttributes.style = ReactNativeStyleAttributes;

  if (__DEV__) {
    componentInterface && verifyPropTypes(componentInterface, viewConfig, extraConfig && extraConfig.nativeOnly);
  }

  return createReactNativeComponentClass(viewConfig);
}

var TypeToDifferMap = {
  CATransform3D: matricesDiffer,
  CGPoint: pointsDiffer,
  CGSize: sizesDiffer,
  UIEdgeInsets: insetsDiffer
};

function processColorArray(colors) {
  return colors && colors.map(processColor);
}

var TypeToProcessorMap = {
  CGColor: processColor,
  CGColorArray: processColorArray,
  UIColor: processColor,
  UIColorArray: processColorArray,
  CGImage: resolveAssetSource,
  UIImage: resolveAssetSource,
  RCTImageSource: resolveAssetSource,

  Color: processColor,
  ColorArray: processColorArray
};

module.exports = requireNativeComponent;
}, 151, null, "requireNativeComponent");
__d(/* UnimplementedView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\UnimplementedViews\\UnimplementedView.js';
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet

var UnimplementedView = function (_React$Component) {
  babelHelpers.inherits(UnimplementedView, _React$Component);

  function UnimplementedView() {
    babelHelpers.classCallCheck(this, UnimplementedView);
    return babelHelpers.possibleConstructorReturn(this, (UnimplementedView.__proto__ || Object.getPrototypeOf(UnimplementedView)).apply(this, arguments));
  }

  babelHelpers.createClass(UnimplementedView, [{
    key: 'setNativeProps',
    value: function setNativeProps() {}
  }, {
    key: 'render',
    value: function render() {
      var View = require(124   ); // 124 = View
      return React.createElement(
        View,
        { style: [styles.unimplementedView, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 33
          }
        },
        this.props.children
      );
    }
  }]);
  return UnimplementedView;
}(React.Component);

var styles = StyleSheet.create({
  unimplementedView: __DEV__ ? {
    alignSelf: 'flex-start',
    borderColor: 'red',
    borderWidth: 1
  } : {}
});

module.exports = UnimplementedView;
}, 152, null, "UnimplementedView");
__d(/* StyleSheet */function(global, require, module, exports) {
'use strict';

var PixelRatio = require(154         ); // 154 = PixelRatio
var ReactNativePropRegistry = require(115                      ); // 115 = ReactNativePropRegistry
var ReactNativeStyleAttributes = require(126                         ); // 126 = ReactNativeStyleAttributes
var StyleSheetValidation = require(157                   ); // 157 = StyleSheetValidation

var flatten = require(114           ); // 114 = flattenStyle

var hairlineWidth = PixelRatio.roundToNearestPixel(0.4);
if (hairlineWidth === 0) {
  hairlineWidth = 1 / PixelRatio.get();
}

var absoluteFillObject = {
  position: 'absolute',
  left: 0,
  right: 0,
  top: 0,
  bottom: 0
};
var absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);
module.exports = {
  hairlineWidth: hairlineWidth,

  absoluteFill: absoluteFill,

  absoluteFillObject: absoluteFillObject,

  flatten: flatten,

  setStyleAttributePreprocessor: function setStyleAttributePreprocessor(property, process) {
    var value = void 0;

    if (typeof ReactNativeStyleAttributes[property] === 'string') {
      value = {};
    } else if (typeof ReactNativeStyleAttributes[property] === 'object') {
      value = ReactNativeStyleAttributes[property];
    } else {
      console.error(property + ' is not a valid style attribute');
      return;
    }

    if (__DEV__ && typeof value.process === 'function') {
      console.warn('Overwriting ' + property + ' style attribute preprocessor');
    }

    ReactNativeStyleAttributes[property] = babelHelpers.extends({}, value, { process: process });
  },
  create: function create(obj) {
    var result = {};
    for (var key in obj) {
      StyleSheetValidation.validateStyle(key, obj);
      result[key] = ReactNativePropRegistry.register(obj[key]);
    }
    return result;
  }
};
}, 153, null, "StyleSheet");
__d(/* PixelRatio */function(global, require, module, exports) {
'use strict';

var Dimensions = require(155         ); // 155 = Dimensions

var PixelRatio = function () {
  function PixelRatio() {
    babelHelpers.classCallCheck(this, PixelRatio);
  }

  babelHelpers.createClass(PixelRatio, null, [{
    key: 'get',
    value: function get() {
      return Dimensions.get('window').scale;
    }
  }, {
    key: 'getFontScale',
    value: function getFontScale() {
      return Dimensions.get('window').fontScale || PixelRatio.get();
    }
  }, {
    key: 'getPixelSizeForLayoutSize',
    value: function getPixelSizeForLayoutSize(layoutSize) {
      return Math.round(layoutSize * PixelRatio.get());
    }
  }, {
    key: 'roundToNearestPixel',
    value: function roundToNearestPixel(layoutSize) {
      var ratio = PixelRatio.get();
      return Math.round(layoutSize * ratio) / ratio;
    }
  }, {
    key: 'startDetecting',
    value: function startDetecting() {}
  }]);
  return PixelRatio;
}();

module.exports = PixelRatio;
}, 154, null, "PixelRatio");
__d(/* Dimensions */function(global, require, module, exports) {
'use strict';

var DeviceInfo = require(156         ); // 156 = DeviceInfo
var EventEmitter = require(45            ); // 45 = EventEmitter
var Platform = require(36        ); // 36 = Platform
var RCTDeviceEventEmitter = require(44                     ); // 44 = RCTDeviceEventEmitter

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var eventEmitter = new EventEmitter();
var dimensionsInitialized = false;
var dimensions = {};

var Dimensions = function () {
  function Dimensions() {
    babelHelpers.classCallCheck(this, Dimensions);
  }

  babelHelpers.createClass(Dimensions, null, [{
    key: 'set',
    value: function set(dims) {
      if (dims && dims.windowPhysicalPixels) {
        dims = JSON.parse(JSON.stringify(dims));

        var windowPhysicalPixels = dims.windowPhysicalPixels;
        dims.window = {
          width: windowPhysicalPixels.width / windowPhysicalPixels.scale,
          height: windowPhysicalPixels.height / windowPhysicalPixels.scale,
          scale: windowPhysicalPixels.scale,
          fontScale: windowPhysicalPixels.fontScale
        };
        if (Platform.OS === 'android') {
          var screenPhysicalPixels = dims.screenPhysicalPixels;
          dims.screen = {
            width: screenPhysicalPixels.width / screenPhysicalPixels.scale,
            height: screenPhysicalPixels.height / screenPhysicalPixels.scale,
            scale: screenPhysicalPixels.scale,
            fontScale: screenPhysicalPixels.fontScale
          };

          delete dims.screenPhysicalPixels;
        } else {
          dims.screen = dims.window;
        }

        delete dims.windowPhysicalPixels;
      }

      babelHelpers.extends(dimensions, dims);
      if (dimensionsInitialized) {
        eventEmitter.emit('change', {
          window: dimensions.window,
          screen: dimensions.screen
        });
      } else {
        dimensionsInitialized = true;
      }
    }
  }, {
    key: 'get',
    value: function get(dim) {
      invariant(dimensions[dim], 'No dimension set for key ' + dim);
      return dimensions[dim];
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant('change' === type, 'Trying to subscribe to unknown event: "%s"', type);
      eventEmitter.addListener(type, handler);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant('change' === type, 'Trying to remove listener for unknown event: "%s"', type);
      eventEmitter.removeListener(type, handler);
    }
  }]);
  return Dimensions;
}();

Dimensions.set(DeviceInfo.Dimensions);
RCTDeviceEventEmitter.addListener('didUpdateDimensions', function (update) {
  Dimensions.set(update);
});

module.exports = Dimensions;
}, 155, null, "Dimensions");
__d(/* DeviceInfo */function(global, require, module, exports) {
'use strict';

var DeviceInfo = require(28             ).DeviceInfo; // 28 = NativeModules

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

invariant(DeviceInfo, 'DeviceInfo native module is not installed correctly');

module.exports = DeviceInfo;
}, 156, null, "DeviceInfo");
__d(/* StyleSheetValidation */function(global, require, module, exports) {
'use strict';

var ImageStylePropTypes = require(127                  ); // 127 = ImageStylePropTypes
var TextStylePropTypes = require(134                 ); // 134 = TextStylePropTypes
var ViewStylePropTypes = require(135                 ); // 135 = ViewStylePropTypes

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var StyleSheetValidation = function () {
  function StyleSheetValidation() {
    babelHelpers.classCallCheck(this, StyleSheetValidation);
  }

  babelHelpers.createClass(StyleSheetValidation, null, [{
    key: 'validateStyleProp',
    value: function validateStyleProp(prop, style, caller) {
      if (!__DEV__) {
        return;
      }
      if (allStylePropTypes[prop] === undefined) {
        var message1 = '"' + prop + '" is not a valid style property.';
        var message2 = '\nValid style props: ' + JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');
        styleError(message1, style, caller, message2);
      }
      var error = allStylePropTypes[prop](style, prop, caller, 'prop', null, ReactPropTypesSecret);
      if (error) {
        styleError(error.message, style, caller);
      }
    }
  }, {
    key: 'validateStyle',
    value: function validateStyle(name, styles) {
      if (!__DEV__) {
        return;
      }
      for (var prop in styles[name]) {
        StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);
      }
    }
  }, {
    key: 'addValidStylePropTypes',
    value: function addValidStylePropTypes(stylePropTypes) {
      for (var key in stylePropTypes) {
        allStylePropTypes[key] = stylePropTypes[key];
      }
    }
  }]);
  return StyleSheetValidation;
}();

var styleError = function styleError(message1, style, caller, message2) {
  invariant(false, message1 + '\n' + (caller || '<<unknown>>') + ': ' + JSON.stringify(style, null, '  ') + (message2 || ''));
};

var allStylePropTypes = {};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
}, 157, null, "StyleSheetValidation");
__d(/* createReactNativeComponentClass */function(global, require, module, exports) {

'use strict';

var _require = require(62           ), // 62 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.createReactNativeComponentClass;
}, 158, null, "createReactNativeComponentClass");
__d(/* insetsDiffer */function(global, require, module, exports) {
'use strict';

var dummyInsets = {
  top: undefined,
  left: undefined,
  right: undefined,
  bottom: undefined
};

var insetsDiffer = function insetsDiffer(one, two) {
  one = one || dummyInsets;
  two = two || dummyInsets;
  return one !== two && (one.top !== two.top || one.left !== two.left || one.right !== two.right || one.bottom !== two.bottom);
};

module.exports = insetsDiffer;
}, 159, null, "insetsDiffer");
__d(/* matricesDiffer */function(global, require, module, exports) {
'use strict';

var matricesDiffer = function matricesDiffer(one, two) {
  if (one === two) {
    return false;
  }
  return !one || !two || one[12] !== two[12] || one[13] !== two[13] || one[14] !== two[14] || one[5] !== two[5] || one[10] !== two[10] || one[1] !== two[1] || one[2] !== two[2] || one[3] !== two[3] || one[4] !== two[4] || one[6] !== two[6] || one[7] !== two[7] || one[8] !== two[8] || one[9] !== two[9] || one[11] !== two[11] || one[15] !== two[15];
};

module.exports = matricesDiffer;
}, 160, null, "matricesDiffer");
__d(/* pointsDiffer */function(global, require, module, exports) {
'use strict';

var dummyPoint = { x: undefined, y: undefined };

var pointsDiffer = function pointsDiffer(one, two) {
  one = one || dummyPoint;
  two = two || dummyPoint;
  return one !== two && (one.x !== two.x || one.y !== two.y);
};

module.exports = pointsDiffer;
}, 161, null, "pointsDiffer");
__d(/* resolveAssetSource */function(global, require, module, exports) {
'use strict';

var AssetRegistry = require(163            ); // 163 = AssetRegistry
var AssetSourceResolver = require(164                  ); // 164 = AssetSourceResolver
var NativeModules = require(28             ); // 28 = NativeModules

var _customSourceTransformer = void 0,
    _serverURL = void 0,
    _bundleSourcePath = void 0;

function getDevServerURL() {
  if (_serverURL === undefined) {
    var scriptURL = NativeModules.SourceCode.scriptURL;
    var match = scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
    if (match) {
      _serverURL = match[0];
    } else {
      _serverURL = null;
    }
  }
  return _serverURL;
}

function getBundleSourcePath() {
  if (_bundleSourcePath === undefined) {
    var scriptURL = NativeModules.SourceCode.scriptURL;
    if (!scriptURL) {
      _bundleSourcePath = null;
      return _bundleSourcePath;
    }
    if (scriptURL.startsWith('assets://')) {
      _bundleSourcePath = null;
      return _bundleSourcePath;
    }
    if (scriptURL.startsWith('file://')) {
      _bundleSourcePath = scriptURL.substring(7, scriptURL.lastIndexOf('/') + 1);
    } else {
      _bundleSourcePath = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);
    }
  }

  return _bundleSourcePath;
}

function setCustomSourceTransformer(transformer) {
  _customSourceTransformer = transformer;
}

function resolveAssetSource(source) {
  if (typeof source === 'object') {
    return source;
  }

  var asset = AssetRegistry.getAssetByID(source);
  if (!asset) {
    return null;
  }

  var resolver = new AssetSourceResolver(getDevServerURL(), getBundleSourcePath(), asset);
  if (_customSourceTransformer) {
    return _customSourceTransformer(resolver);
  }
  return resolver.defaultAsset();
}

module.exports = resolveAssetSource;
module.exports.pickScale = AssetSourceResolver.pickScale;
module.exports.setCustomSourceTransformer = setCustomSourceTransformer;
}, 162, null, "resolveAssetSource");
__d(/* AssetRegistry */function(global, require, module, exports) {
'use strict';

var assets = [];

function registerAsset(asset) {
  return assets.push(asset);
}

function getAssetByID(assetId) {
  return assets[assetId - 1];
}

module.exports = { registerAsset: registerAsset, getAssetByID: getAssetByID };
}, 163, null, "AssetRegistry");
__d(/* AssetSourceResolver */function(global, require, module, exports) {
'use strict';

var PixelRatio = require(154         ); // 154 = PixelRatio
var Platform = require(36        ); // 36 = Platform

var assetPathUtils = require(165                                    ); // 165 = ../../local-cli/bundle/assetPathUtils
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

function getScaledAssetPath(asset) {
  var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
  var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';
  var assetDir = assetPathUtils.getBasePath(asset);
  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;
}

function getAssetPathInDrawableFolder(asset) {
  var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
  var drawbleFolder = assetPathUtils.getAndroidDrawableFolderName(asset, scale);
  var fileName = assetPathUtils.getAndroidResourceIdentifier(asset);
  return drawbleFolder + '/' + fileName + '.' + asset.type;
}

var AssetSourceResolver = function () {
  function AssetSourceResolver(serverUrl, bundlePath, asset) {
    babelHelpers.classCallCheck(this, AssetSourceResolver);

    this.serverUrl = serverUrl;
    this.bundlePath = bundlePath;
    this.asset = asset;
  }

  babelHelpers.createClass(AssetSourceResolver, [{
    key: 'isLoadedFromServer',
    value: function isLoadedFromServer() {
      return !!this.serverUrl;
    }
  }, {
    key: 'isLoadedFromFileSystem',
    value: function isLoadedFromFileSystem() {
      return !!this.bundlePath;
    }
  }, {
    key: 'defaultAsset',
    value: function defaultAsset() {
      if (this.isLoadedFromServer()) {
        return this.assetServerURL();
      }

      if (Platform.OS === 'android') {
        return this.isLoadedFromFileSystem() ? this.drawableFolderInBundle() : this.resourceIdentifierWithoutScale();
      } else {
        return this.scaledAssetPathInBundle();
      }
    }
  }, {
    key: 'assetServerURL',
    value: function assetServerURL() {
      invariant(!!this.serverUrl, 'need server to load from');
      return this.fromSource(this.serverUrl + getScaledAssetPath(this.asset) + '?platform=' + Platform.OS + '&hash=' + this.asset.hash);
    }
  }, {
    key: 'scaledAssetPath',
    value: function scaledAssetPath() {
      return this.fromSource(getScaledAssetPath(this.asset));
    }
  }, {
    key: 'scaledAssetPathInBundle',
    value: function scaledAssetPathInBundle() {
      var path = this.bundlePath || '';
      return this.fromSource(path + getScaledAssetPath(this.asset));
    }
  }, {
    key: 'resourceIdentifierWithoutScale',
    value: function resourceIdentifierWithoutScale() {
      invariant(Platform.OS === 'android', 'resource identifiers work on Android');
      return this.fromSource(assetPathUtils.getAndroidResourceIdentifier(this.asset));
    }
  }, {
    key: 'drawableFolderInBundle',
    value: function drawableFolderInBundle() {
      var path = this.bundlePath || '';
      return this.fromSource('file://' + path + getAssetPathInDrawableFolder(this.asset));
    }
  }, {
    key: 'fromSource',
    value: function fromSource(source) {
      return {
        __packager_asset: true,
        width: this.asset.width,
        height: this.asset.height,
        uri: source,
        scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get())
      };
    }
  }], [{
    key: 'pickScale',
    value: function pickScale(scales, deviceScale) {
      for (var i = 0; i < scales.length; i++) {
        if (scales[i] >= deviceScale) {
          return scales[i];
        }
      }

      return scales[scales.length - 1] || 1;
    }
  }]);
  return AssetSourceResolver;
}();

module.exports = AssetSourceResolver;
}, 164, null, "AssetSourceResolver");
__d(/* react-native/local-cli/bundle/assetPathUtils.js */function(global, require, module, exports) {

'use strict';

function getAndroidAssetSuffix(scale) {
  switch (scale) {
    case 0.75:
      return 'ldpi';
    case 1:
      return 'mdpi';
    case 1.5:
      return 'hdpi';
    case 2:
      return 'xhdpi';
    case 3:
      return 'xxhdpi';
    case 4:
      return 'xxxhdpi';
  }
  throw new Error('no such scale');
}

function getAndroidDrawableFolderName(asset, scale) {
  var suffix = getAndroidAssetSuffix(scale);
  if (!suffix) {
    throw new Error('Don\'t know which android drawable suffix to use for asset: ' + JSON.stringify(asset));
  }
  var androidFolder = 'drawable-' + suffix;
  return androidFolder;
}

function getAndroidResourceIdentifier(asset) {
  var folderPath = getBasePath(asset);
  return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
}

function getBasePath(asset) {
  var basePath = asset.httpServerLocation;
  if (basePath[0] === '/') {
    basePath = basePath.substr(1);
  }
  return basePath;
}

module.exports = {
  getAndroidAssetSuffix: getAndroidAssetSuffix,
  getAndroidDrawableFolderName: getAndroidDrawableFolderName,
  getAndroidResourceIdentifier: getAndroidResourceIdentifier,
  getBasePath: getBasePath
};
}, 165, null, "react-native/local-cli/bundle/assetPathUtils.js");
__d(/* verifyPropTypes */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(126                         ); // 126 = ReactNativeStyleAttributes

function verifyPropTypes(componentInterface, viewConfig, nativePropsToIgnore) {
  if (!viewConfig) {
    return;
  }
  var componentName = componentInterface.displayName || componentInterface.name || 'unknown';

  var propTypes = componentInterface.__propTypesSecretDontUseThesePlease || componentInterface.propTypes;

  if (!propTypes) {
    throw new Error('`' + componentName + '` has no propTypes defined`');
  }

  var nativeProps = viewConfig.NativeProps;
  for (var prop in nativeProps) {
    if (!propTypes[prop] && !ReactNativeStyleAttributes[prop] && (!nativePropsToIgnore || !nativePropsToIgnore[prop])) {
      var message;
      if (propTypes.hasOwnProperty(prop)) {
        message = '`' + componentName + '` has incorrectly defined propType for native prop `' + viewConfig.uiViewClassName + '.' + prop + '` of native type `' + nativeProps[prop];
      } else {
        message = '`' + componentName + '` has no propType for native prop `' + viewConfig.uiViewClassName + '.' + prop + '` of native type `' + nativeProps[prop] + '`';
      }
      message += '\nIf you haven\'t changed this prop yourself, this usually means that ' + 'your versions of the native code and JavaScript code are out of sync. Updating both ' + 'should make this error go away.';
      throw new Error(message);
    }
  }
}

module.exports = verifyPropTypes;
}, 166, null, "verifyPropTypes");
__d(/* ReactNativeFiber-prod */function(global, require, module, exports) {
"use strict";

var invariant = require(18                  ), // 18 = fbjs/lib/invariant
    warning = require(15                ), // 15 = fbjs/lib/warning
    ExceptionsManager = require(65                 ); // 65 = ExceptionsManager

require(72              ); // 72 = InitializeCore

var RCTEventEmitter = require(120              ), // 120 = RCTEventEmitter
    emptyFunction = require(16                      ), // 16 = fbjs/lib/emptyFunction
    UIManager = require(54         ); // 54 = UIManager

require(22                         ); // 22 = prop-types/checkPropTypes

var emptyObject = require(17                    ), // 17 = fbjs/lib/emptyObject
    react = require(12     ), // 12 = react
    shallowEqual = require(121                    ), // 121 = fbjs/lib/shallowEqual
    deepDiffer = require(122         ), // 122 = deepDiffer
    flattenStyle = require(114           ), // 114 = flattenStyle
    TextInputState = require(53              ); // 53 = TextInputState

require(33                                 ); // 33 = deepFreezeAndThrowOnMutationInDev

var defaultShowDialog = function defaultShowDialog(capturedError) {
    return !0;
},
    showDialog = defaultShowDialog;

function logCapturedError(capturedError) {
    if (!1 !== showDialog(capturedError)) {
        var _error = capturedError.error;
        console.error("React caught an error thrown by one of your components.\n\n" + _error.stack);
    }
}

var injection = {
    injectDialog: function injectDialog(fn) {
        invariant(showDialog === defaultShowDialog, "The custom dialog was already injected."), invariant("function" == typeof fn, "Injected showDialog() must be a function."), showDialog = fn;
    }
},
    logCapturedError_1 = logCapturedError,
    ReactFiberErrorLogger = {
    injection: injection,
    logCapturedError: logCapturedError_1
},
    caughtError = null,
    _invokeGuardedCallback = function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);
    try {
        func.apply(context, funcArgs);
    } catch (error) {
        return error;
    }
    return null;
},
    _rethrowCaughtError = function _rethrowCaughtError() {
    if (caughtError) {
        var error = caughtError;
        throw caughtError = null, error;
    }
},
    ReactErrorUtils = {
    injection: {
        injectErrorUtils: function injectErrorUtils(injectedErrorUtils) {
            invariant("function" == typeof injectedErrorUtils.invokeGuardedCallback, "Injected invokeGuardedCallback() must be a function."), _invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
        }
    },
    invokeGuardedCallback: function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        return _invokeGuardedCallback.apply(this, arguments);
    },
    invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        var error = ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
        null !== error && null === caughtError && (caughtError = error);
    },
    rethrowCaughtError: function rethrowCaughtError() {
        return _rethrowCaughtError.apply(this, arguments);
    }
},
    ReactErrorUtils_1 = ReactErrorUtils,
    ComponentTree,
    injection$1 = {
    injectComponentTree: function injectComponentTree(Injected) {
        ComponentTree = Injected;
    }
};

function isEndish(topLevelType) {
    return "topMouseUp" === topLevelType || "topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType;
}

function isMoveish(topLevelType) {
    return "topMouseMove" === topLevelType || "topTouchMove" === topLevelType;
}

function isStartish(topLevelType) {
    return "topMouseDown" === topLevelType || "topTouchStart" === topLevelType;
}

function executeDispatch(event, simulated, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = EventPluginUtils.getNodeFromInstance(inst), ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event), event.currentTarget = null;
}

function executeDispatchesInOrder(event, simulated) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
        executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    } else dispatchListeners && executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
    event._dispatchListeners = null, event._dispatchInstances = null;
}

function executeDispatchesInOrderStopAtTrueImpl(event) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
            if (dispatchListeners[i](event, dispatchInstances[i])) return dispatchInstances[i];
        }
    } else if (dispatchListeners && dispatchListeners(event, dispatchInstances)) return dispatchInstances;
    return null;
}

function executeDispatchesInOrderStopAtTrue(event) {
    var ret = executeDispatchesInOrderStopAtTrueImpl(event);
    return event._dispatchInstances = null, event._dispatchListeners = null, ret;
}

function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`."), event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
    var res = dispatchListener ? dispatchListener(event) : null;
    return event.currentTarget = null, event._dispatchListeners = null, event._dispatchInstances = null, res;
}

function hasDispatches(event) {
    return !!event._dispatchListeners;
}

var EventPluginUtils = {
    isEndish: isEndish,
    isMoveish: isMoveish,
    isStartish: isStartish,
    executeDirectDispatch: executeDirectDispatch,
    executeDispatchesInOrder: executeDispatchesInOrder,
    executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
    hasDispatches: hasDispatches,
    getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(node) {
        return ComponentTree.getFiberCurrentPropsFromNode(node);
    },
    getInstanceFromNode: function getInstanceFromNode(node) {
        return ComponentTree.getInstanceFromNode(node);
    },
    getNodeFromInstance: function getNodeFromInstance(node) {
        return ComponentTree.getNodeFromInstance(node);
    },
    injection: injection$1
},
    EventPluginUtils_1 = EventPluginUtils,
    fiberHostComponent = null,
    ReactControlledComponentInjection = {
    injectFiberControlledHostComponent: function injectFiberControlledHostComponent(hostComponentImpl) {
        fiberHostComponent = hostComponentImpl;
    }
},
    restoreTarget = null,
    restoreQueue = null;

function restoreStateOfTarget(target) {
    var internalInstance = EventPluginUtils_1.getInstanceFromNode(target);
    if (internalInstance) {
        if ("number" == typeof internalInstance.tag) {
            invariant(fiberHostComponent && "function" == typeof fiberHostComponent.restoreControlledState, "Fiber needs to be injected to handle a fiber target for controlled " + "events.");
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(internalInstance.stateNode);
            return void fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
        }
        invariant("function" == typeof internalInstance.restoreControlledState, "The internal instance must be a React host component."), internalInstance.restoreControlledState();
    }
}

var ReactControlledComponent = {
    injection: ReactControlledComponentInjection,
    enqueueStateRestore: function enqueueStateRestore(target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [target] : restoreTarget = target;
    },
    restoreStateIfNeeded: function restoreStateIfNeeded() {
        if (restoreTarget) {
            var target = restoreTarget,
                queuedTargets = restoreQueue;
            if (restoreTarget = null, restoreQueue = null, restoreStateOfTarget(target), queuedTargets) for (var i = 0; i < queuedTargets.length; i++) {
                restoreStateOfTarget(queuedTargets[i]);
            }
        }
    }
},
    ReactControlledComponent_1 = ReactControlledComponent,
    stackBatchedUpdates = function stackBatchedUpdates(fn, a, b, c, d, e) {
    return fn(a, b, c, d, e);
},
    fiberBatchedUpdates = function fiberBatchedUpdates(fn, bookkeeping) {
    return fn(bookkeeping);
};

function performFiberBatchedUpdates(fn, bookkeeping) {
    return fiberBatchedUpdates(fn, bookkeeping);
}

function batchedUpdates(fn, bookkeeping) {
    return stackBatchedUpdates(performFiberBatchedUpdates, fn, bookkeeping);
}

var isNestingBatched = !1;

function batchedUpdatesWithControlledComponents(fn, bookkeeping) {
    if (isNestingBatched) return batchedUpdates(fn, bookkeeping);
    isNestingBatched = !0;
    try {
        return batchedUpdates(fn, bookkeeping);
    } finally {
        isNestingBatched = !1, ReactControlledComponent_1.restoreStateIfNeeded();
    }
}

var ReactGenericBatchingInjection = {
    injectStackBatchedUpdates: function injectStackBatchedUpdates(_batchedUpdates) {
        stackBatchedUpdates = _batchedUpdates;
    },
    injectFiberBatchedUpdates: function injectFiberBatchedUpdates(_batchedUpdates) {
        fiberBatchedUpdates = _batchedUpdates;
    }
},
    ReactGenericBatching = {
    batchedUpdates: batchedUpdatesWithControlledComponents,
    injection: ReactGenericBatchingInjection
},
    ReactGenericBatching_1 = ReactGenericBatching;

function ReactNativeFiberErrorDialog(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error,
        errorToHandle = void 0;
    if (error instanceof Error) {
        var message = error.message,
            name = error.name,
            summary = message ? name + ": " + message : name;
        errorToHandle = error;
        try {
            errorToHandle.message = summary + "\n\nThis error is located at:" + componentStack;
        } catch (e) {}
    } else errorToHandle = "string" == typeof error ? new Error(error + "\n\nThis error is located at:" + componentStack) : new Error("Unspecified error at:" + componentStack);
    return ExceptionsManager.handleException(errorToHandle, !1), !1;
}

var showDialog$1 = ReactNativeFiberErrorDialog,
    ReactNativeFiberErrorDialog_1 = {
    showDialog: showDialog$1
},
    eventPluginOrder = null,
    namesToPlugins = {};

function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName],
            pluginIndex = eventPluginOrder.indexOf(pluginName);
        if (invariant(pluginIndex > -1, "EventPluginRegistry: Cannot inject event plugins that do not exist in " + "the plugin ordering, `%s`.", pluginName), !EventPluginRegistry.plugins[pluginIndex]) {
            invariant(pluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` " + "method, but `%s` does not.", pluginName), EventPluginRegistry.plugins[pluginIndex] = pluginModule;
            var publishedEvents = pluginModule.eventTypes;
            for (var eventName in publishedEvents) {
                invariant(publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName), "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName);
            }
        }
    }
}

function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
    invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), "EventPluginHub: More than one plugin attempted to publish the same " + "event name, `%s`.", eventName), EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
    var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
    if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
            if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                var phasedRegistrationName = phasedRegistrationNames[phaseName];
                publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
            }
        }return !0;
    }
    return !!dispatchConfig.registrationName && (publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName), !0);
}

function publishRegistrationName(registrationName, pluginModule, eventName) {
    invariant(!EventPluginRegistry.registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same " + "registration name, `%s`.", registrationName), EventPluginRegistry.registrationNameModules[registrationName] = pluginModule, EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
}

var EventPluginRegistry = {
    plugins: [],
    eventNameDispatchConfigs: {},
    registrationNameModules: {},
    registrationNameDependencies: {},
    possibleRegistrationNames: null,
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
        invariant(!eventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than " + "once. You are likely trying to load more than one copy of React."), eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder), recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
        var isOrderingDirty = !1;
        for (var pluginName in injectedNamesToPlugins) {
            if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                var pluginModule = injectedNamesToPlugins[pluginName];
                namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins " + "using the same name, `%s`.", pluginName), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = !0);
            }
        }isOrderingDirty && recomputePluginOrdering();
    }
},
    EventPluginRegistry_1 = EventPluginRegistry;

function accumulateInto(current, next) {
    return invariant(null != next, "accumulateInto(...): Accumulated items must not be null or undefined."), null == current ? next : Array.isArray(current) ? Array.isArray(next) ? (current.push.apply(current, next), current) : (current.push(next), current) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulateInto_1 = accumulateInto;

function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
}

var forEachAccumulated_1 = forEachAccumulated,
    eventQueue = null,
    executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
    event && (EventPluginUtils_1.executeDispatchesInOrder(event, simulated), event.isPersistent() || event.constructor.release(event));
},
    executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
    return executeDispatchesAndRelease(e, !0);
},
    executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
    return executeDispatchesAndRelease(e, !1);
};

function isInteractive(tag) {
    return "button" === tag || "input" === tag || "select" === tag || "textarea" === tag;
}

function shouldPreventMouseEvent(name, type, props) {
    switch (name) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
            return !(!props.disabled || !isInteractive(type));

        default:
            return !1;
    }
}

var EventPluginHub = {
    injection: {
        injectEventPluginOrder: EventPluginRegistry_1.injectEventPluginOrder,
        injectEventPluginsByName: EventPluginRegistry_1.injectEventPluginsByName
    },
    getListener: function getListener(inst, registrationName) {
        var listener;
        if ("number" == typeof inst.tag) {
            var stateNode = inst.stateNode;
            if (!stateNode) return null;
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(stateNode);
            if (!props) return null;
            if (listener = props[registrationName], shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        } else {
            var currentElement = inst._currentElement;
            if ("string" == typeof currentElement || "number" == typeof currentElement) return null;
            if (!inst._rootNodeID) return null;
            var _props = currentElement.props;
            if (listener = _props[registrationName], shouldPreventMouseEvent(registrationName, currentElement.type, _props)) return null;
        }
        return invariant(!listener || "function" == typeof listener, "Expected %s listener to be a function, instead got type %s", registrationName, typeof listener), listener;
    },
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        for (var events, plugins = EventPluginRegistry_1.plugins, i = 0; i < plugins.length; i++) {
            var possiblePlugin = plugins[i];
            if (possiblePlugin) {
                var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
                extractedEvents && (events = accumulateInto_1(events, extractedEvents));
            }
        }
        return events;
    },
    enqueueEvents: function enqueueEvents(events) {
        events && (eventQueue = accumulateInto_1(eventQueue, events));
    },
    processEventQueue: function processEventQueue(simulated) {
        var processingEventQueue = eventQueue;
        eventQueue = null, simulated ? forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseSimulated) : forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseTopLevel), invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing " + "an event queue. Support for this has not yet been implemented."), ReactErrorUtils_1.rethrowCaughtError();
    }
},
    EventPluginHub_1 = EventPluginHub,
    ReactTypeOfWork = {
    IndeterminateComponent: 0,
    FunctionalComponent: 1,
    ClassComponent: 2,
    HostRoot: 3,
    HostPortal: 4,
    HostComponent: 5,
    HostText: 6,
    CoroutineComponent: 7,
    CoroutineHandlerPhase: 8,
    YieldComponent: 9,
    Fragment: 10
},
    HostComponent = ReactTypeOfWork.HostComponent;

function getParent(inst) {
    if (void 0 !== inst._hostParent) return inst._hostParent;
    if ("number" == typeof inst.tag) {
        do {
            inst = inst.return;
        } while (inst && inst.tag !== HostComponent);
        if (inst) return inst;
    }
    return null;
}

function getLowestCommonAncestor(instA, instB) {
    for (var depthA = 0, tempA = instA; tempA; tempA = getParent(tempA)) {
        depthA++;
    }for (var depthB = 0, tempB = instB; tempB; tempB = getParent(tempB)) {
        depthB++;
    }for (; depthA - depthB > 0;) {
        instA = getParent(instA), depthA--;
    }for (; depthB - depthA > 0;) {
        instB = getParent(instB), depthB--;
    }for (var depth = depthA; depth--;) {
        if (instA === instB || instA === instB.alternate) return instA;
        instA = getParent(instA), instB = getParent(instB);
    }
    return null;
}

function isAncestor(instA, instB) {
    for (; instB;) {
        if (instA === instB || instA === instB.alternate) return !0;
        instB = getParent(instB);
    }
    return !1;
}

function getParentInstance(inst) {
    return getParent(inst);
}

function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
        path.push(inst), inst = getParent(inst);
    }var i;
    for (i = path.length; i-- > 0;) {
        fn(path[i], "captured", arg);
    }for (i = 0; i < path.length; i++) {
        fn(path[i], "bubbled", arg);
    }
}

function traverseEnterLeave(from, to, fn, argFrom, argTo) {
    for (var common = from && to ? getLowestCommonAncestor(from, to) : null, pathFrom = []; from && from !== common;) {
        pathFrom.push(from), from = getParent(from);
    }for (var pathTo = []; to && to !== common;) {
        pathTo.push(to), to = getParent(to);
    }var i;
    for (i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], "bubbled", argFrom);
    }for (i = pathTo.length; i-- > 0;) {
        fn(pathTo[i], "captured", argTo);
    }
}

var ReactTreeTraversal = {
    isAncestor: isAncestor,
    getLowestCommonAncestor: getLowestCommonAncestor,
    getParentInstance: getParentInstance,
    traverseTwoPhase: traverseTwoPhase,
    traverseEnterLeave: traverseEnterLeave
},
    getListener = EventPluginHub_1.getListener;

function listenerAtPhase(inst, event, propagationPhase) {
    var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
    return getListener(inst, registrationName);
}

function accumulateDirectionalDispatches(inst, phase, event) {
    var listener = listenerAtPhase(inst, event, phase);
    listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
}

function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && ReactTreeTraversal.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
}

function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
        var targetInst = event._targetInst,
            parentInst = targetInst ? ReactTreeTraversal.getParentInstance(targetInst) : null;
        ReactTreeTraversal.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
    }
}

function accumulateDispatches(inst, ignoredDirection, event) {
    if (inst && event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName,
            listener = getListener(inst, registrationName);
        listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
    }
}

function accumulateDirectDispatchesSingle(event) {
    event && event.dispatchConfig.registrationName && accumulateDispatches(event._targetInst, null, event);
}

function accumulateTwoPhaseDispatches(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
    ReactTreeTraversal.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
    forEachAccumulated_1(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = {
    accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
    accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
    accumulateDirectDispatches: accumulateDirectDispatches,
    accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
},
    EventPropagators_1 = EventPropagators,
    oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, copyFieldsFrom), instance;
    }
    return new Klass(copyFieldsFrom);
},
    twoArgumentPooler = function twoArgumentPooler(a1, a2) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2), instance;
    }
    return new Klass(a1, a2);
},
    threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2, a3), instance;
    }
    return new Klass(a1, a2, a3);
},
    fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2, a3, a4), instance;
    }
    return new Klass(a1, a2, a3, a4);
},
    standardReleaser = function standardReleaser(instance) {
    var Klass = this;
    invariant(instance instanceof Klass, "Trying to release an instance into a pool of a different type."), instance.destructor(), Klass.instancePool.length < Klass.poolSize && Klass.instancePool.push(instance);
},
    DEFAULT_POOL_SIZE = 10,
    DEFAULT_POOLER = oneArgumentPooler,
    addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
    var NewKlass = CopyConstructor;
    return NewKlass.instancePool = [], NewKlass.getPooled = pooler || DEFAULT_POOLER, NewKlass.poolSize || (NewKlass.poolSize = DEFAULT_POOL_SIZE), NewKlass.release = standardReleaser, NewKlass;
},
    PooledClass = {
    addPoolingTo: addPoolingTo,
    oneArgumentPooler: oneArgumentPooler,
    twoArgumentPooler: twoArgumentPooler,
    threeArgumentPooler: threeArgumentPooler,
    fourArgumentPooler: fourArgumentPooler
},
    PooledClass_1 = PooledClass,
    shouldBeReleasedProperties = ["dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances"],
    EventInterface = {
    type: null,
    target: null,
    currentTarget: emptyFunction.thatReturnsNull,
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
        return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
};

function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig, this._targetInst = targetInst, this.nativeEvent = nativeEvent;
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
        if (Interface.hasOwnProperty(propName)) {
            var normalize = Interface[propName];
            normalize ? this[propName] = normalize(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName];
        }
    }var defaultPrevented = null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue;
    return this.isDefaultPrevented = defaultPrevented ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse, this.isPropagationStopped = emptyFunction.thatReturnsFalse, this;
}

babelHelpers.extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
        this.defaultPrevented = !0;
        var event = this.nativeEvent;
        event && (event.preventDefault ? event.preventDefault() : "unknown" != typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = emptyFunction.thatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
        var event = this.nativeEvent;
        event && (event.stopPropagation ? event.stopPropagation() : "unknown" != typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = emptyFunction.thatReturnsTrue);
    },
    persist: function persist() {
        this.isPersistent = emptyFunction.thatReturnsTrue;
    },
    isPersistent: emptyFunction.thatReturnsFalse,
    destructor: function destructor() {
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
            this[propName] = null;
        }for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
            this[shouldBeReleasedProperties[i]] = null;
        }
    }
}), SyntheticEvent.Interface = EventInterface, SyntheticEvent.augmentClass = function (Class, Interface) {
    var Super = this,
        E = function E() {};
    E.prototype = Super.prototype;
    var prototype = new E();
    babelHelpers.extends(prototype, Class.prototype), Class.prototype = prototype, Class.prototype.constructor = Class, Class.Interface = babelHelpers.extends({}, Super.Interface, Interface), Class.augmentClass = Super.augmentClass, PooledClass_1.addPoolingTo(Class, PooledClass_1.fourArgumentPooler);
}, PooledClass_1.addPoolingTo(SyntheticEvent, PooledClass_1.fourArgumentPooler);

var SyntheticEvent_1 = SyntheticEvent,
    _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
},
    customBubblingEventTypes = UIManager.customBubblingEventTypes,
    customDirectEventTypes = UIManager.customDirectEventTypes,
    allTypesByEventName = {};

for (var bubblingTypeName in customBubblingEventTypes) {
    allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];
}for (var directTypeName in customDirectEventTypes) {
    warning(!customBubblingEventTypes[directTypeName], "Event cannot be both direct and bubbling: %s", directTypeName), allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];
}var ReactNativeBridgeEventPlugin = {
    eventTypes: _extends({}, customBubblingEventTypes, customDirectEventTypes),
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType],
            event = SyntheticEvent_1.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) EventPropagators_1.accumulateTwoPhaseDispatches(event);else {
            if (!directDispatchConfig) return null;
            EventPropagators_1.accumulateDirectDispatches(event);
        }
        return event;
    }
},
    ReactNativeBridgeEventPlugin_1 = ReactNativeBridgeEventPlugin,
    instanceCache = {},
    instanceProps = {};

function getRenderedHostOrTextFromComponent(component) {
    for (var rendered; rendered = component._renderedComponent;) {
        component = rendered;
    }return component;
}

function precacheNode(inst, tag) {
    var nativeInst = getRenderedHostOrTextFromComponent(inst);
    instanceCache[tag] = nativeInst;
}

function precacheFiberNode(hostInst, tag) {
    instanceCache[tag] = hostInst;
}

function uncacheNode(inst) {
    var tag = inst._rootNodeID;
    tag && delete instanceCache[tag];
}

function uncacheFiberNode(tag) {
    delete instanceCache[tag], delete instanceProps[tag];
}

function getInstanceFromTag(tag) {
    return instanceCache[tag] || null;
}

function getTagFromInstance(inst) {
    var tag = "number" != typeof inst.tag ? inst._rootNodeID : inst.stateNode._nativeTag;
    return invariant(tag, "All native instances should have a tag."), tag;
}

function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps[stateNode._nativeTag] || null;
}

function updateFiberProps(tag, props) {
    instanceProps[tag] = props;
}

var ReactNativeComponentTree = {
    getClosestInstanceFromNode: getInstanceFromTag,
    getInstanceFromNode: getInstanceFromTag,
    getNodeFromInstance: getTagFromInstance,
    precacheFiberNode: precacheFiberNode,
    precacheNode: precacheNode,
    uncacheFiberNode: uncacheFiberNode,
    uncacheNode: uncacheNode,
    getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode,
    updateFiberProps: updateFiberProps
},
    ReactNativeComponentTree_1 = ReactNativeComponentTree;

function runEventQueueInBatch(events) {
    EventPluginHub_1.enqueueEvents(events), EventPluginHub_1.processEventQueue(!1);
}

var ReactEventEmitterMixin = {
    handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        runEventQueueInBatch(EventPluginHub_1.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget));
    }
},
    ReactEventEmitterMixin_1 = ReactEventEmitterMixin,
    INITIAL_TAG_COUNT = 1,
    ReactNativeTagHandles = {
    tagsStartAt: INITIAL_TAG_COUNT,
    tagCount: INITIAL_TAG_COUNT,
    allocateTag: function allocateTag() {
        for (; this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount);) {
            ReactNativeTagHandles.tagCount++;
        }var tag = ReactNativeTagHandles.tagCount;
        return ReactNativeTagHandles.tagCount++, tag;
    },
    assertRootTag: function assertRootTag(tag) {
        invariant(this.reactTagIsNativeTopRootID(tag), "Expect a native root tag, instead got %s", tag);
    },
    reactTagIsNativeTopRootID: function reactTagIsNativeTopRootID(reactTag) {
        return reactTag % 10 == 1;
    }
},
    ReactNativeTagHandles_1 = ReactNativeTagHandles,
    _extends$1 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
},
    EMPTY_NATIVE_EVENT = {},
    touchSubsequence = function touchSubsequence(touches, indices) {
    for (var ret = [], i = 0; i < indices.length; i++) {
        ret.push(touches[indices[i]]);
    }return ret;
},
    removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {
    for (var rippedOut = [], temp = touches, i = 0; i < indices.length; i++) {
        var index = indices[i];
        rippedOut.push(touches[index]), temp[index] = null;
    }
    for (var fillAt = 0, j = 0; j < temp.length; j++) {
        var cur = temp[j];
        null !== cur && (temp[fillAt++] = cur);
    }
    return temp.length = fillAt, rippedOut;
},
    ReactNativeEventEmitter = _extends$1({}, ReactEventEmitterMixin_1, {
    registrationNames: EventPluginRegistry_1.registrationNameModules,
    getListener: EventPluginHub_1.getListener,
    _receiveRootNodeIDEvent: function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
        var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
            inst = ReactNativeComponentTree_1.getInstanceFromNode(rootNodeID);
        ReactGenericBatching_1.batchedUpdates(function () {
            ReactNativeEventEmitter.handleTopLevel(topLevelType, inst, nativeEvent, nativeEvent.target);
        });
    },
    receiveEvent: function receiveEvent(tag, topLevelType, nativeEventParam) {
        var rootNodeID = tag;
        ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
        for (var changedTouches = "topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices), jj = 0; jj < changedTouches.length; jj++) {
            var touch = changedTouches[jj];
            touch.changedTouches = changedTouches, touch.touches = touches;
            var nativeEvent = touch,
                rootNodeID = null,
                target = nativeEvent.target;
            null !== target && void 0 !== target && (target < ReactNativeTagHandles_1.tagsStartAt || (rootNodeID = target)), ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);
        }
    }
}),
    ReactNativeEventEmitter_1 = ReactNativeEventEmitter,
    ReactNativeEventPluginOrder = ["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"],
    ReactNativeEventPluginOrder_1 = ReactNativeEventPluginOrder,
    ReactNativeGlobalResponderHandler = {
    onChange: function onChange(from, to, blockNativeResponder) {
        if (null !== to) {
            var tag = "number" != typeof to.tag ? to._rootNodeID : to.stateNode._nativeTag;
            UIManager.setJSResponder(tag, blockNativeResponder);
        } else UIManager.clearJSResponder();
    }
},
    ReactNativeGlobalResponderHandler_1 = ReactNativeGlobalResponderHandler,
    ResponderEventInterface = {
    touchHistory: function touchHistory(nativeEvent) {
        return null;
    }
};

function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent_1.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

var ResponderSyntheticEvent_1 = ResponderSyntheticEvent,
    isEndish$2 = EventPluginUtils_1.isEndish,
    isMoveish$2 = EventPluginUtils_1.isMoveish,
    isStartish$2 = EventPluginUtils_1.isStartish,
    MAX_TOUCH_BANK = 20,
    touchBank = [],
    touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
};

function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
}

function createTouchRecord(touch) {
    return {
        touchActive: !0,
        startPageX: touch.pageX,
        startPageY: touch.pageY,
        startTimeStamp: timestampForTouch(touch),
        currentPageX: touch.pageX,
        currentPageY: touch.pageY,
        currentTimeStamp: timestampForTouch(touch),
        previousPageX: touch.pageX,
        previousPageY: touch.pageY,
        previousTimeStamp: timestampForTouch(touch)
    };
}

function resetTouchRecord(touchRecord, touch) {
    touchRecord.touchActive = !0, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch);
}

function getTouchIdentifier(_ref) {
    var identifier = _ref.identifier;
    return invariant(null != identifier, "Touch object is missing identifier."), warning(identifier <= MAX_TOUCH_BANK, "Touch identifier %s is greater than maximum supported %s which causes " + "performance issues backfilling array locations for all of the indices.", identifier, MAX_TOUCH_BANK), identifier;
}

function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? resetTouchRecord(touchRecord, touch) : touchBank[identifier] = createTouchRecord(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
}

function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !0, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch move without a touch start.\n" + "Touch Move: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !1, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch end without a touch start.\n" + "Touch End: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function printTouch(touch) {
    return JSON.stringify({
        identifier: touch.identifier,
        pageX: touch.pageX,
        pageY: touch.pageY,
        timestamp: timestampForTouch(touch)
    });
}

function printTouchBank() {
    var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
    return touchBank.length > MAX_TOUCH_BANK && (printed += " (original size: " + touchBank.length + ")"), printed;
}

var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
        if (isMoveish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if (isEndish$2(topLevelType) && (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches)) for (var i = 0; i < touchBank.length; i++) {
            var touchTrackToCheck = touchBank[i];
            if (null != touchTrackToCheck && touchTrackToCheck.touchActive) {
                touchHistory.indexOfSingleActiveTouch = i;
                break;
            }
        }
    },
    touchHistory: touchHistory
},
    ResponderTouchHistoryStore_1 = ResponderTouchHistoryStore;

function accumulate(current, next) {
    return invariant(null != next, "accumulate(...): Accumulated items must be not be null or undefined."), null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulate_1 = accumulate,
    isStartish$1 = EventPluginUtils_1.isStartish,
    isMoveish$1 = EventPluginUtils_1.isMoveish,
    isEndish$1 = EventPluginUtils_1.isEndish,
    executeDirectDispatch$1 = EventPluginUtils_1.executeDirectDispatch,
    hasDispatches$1 = EventPluginUtils_1.hasDispatches,
    executeDispatchesInOrderStopAtTrue$1 = EventPluginUtils_1.executeDispatchesInOrderStopAtTrue,
    responderInst = null,
    trackedTouchCount = 0,
    previousActiveTouches = 0,
    changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst, null !== ResponderEventPlugin.GlobalResponderHandler && ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
},
    eventTypes = {
    startShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onStartShouldSetResponder",
            captured: "onStartShouldSetResponderCapture"
        }
    },
    scrollShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onScrollShouldSetResponder",
            captured: "onScrollShouldSetResponderCapture"
        }
    },
    selectionChangeShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onSelectionChangeShouldSetResponder",
            captured: "onSelectionChangeShouldSetResponderCapture"
        }
    },
    moveShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onMoveShouldSetResponder",
            captured: "onMoveShouldSetResponderCapture"
        }
    },
    responderStart: {
        registrationName: "onResponderStart"
    },
    responderMove: {
        registrationName: "onResponderMove"
    },
    responderEnd: {
        registrationName: "onResponderEnd"
    },
    responderRelease: {
        registrationName: "onResponderRelease"
    },
    responderTerminationRequest: {
        registrationName: "onResponderTerminationRequest"
    },
    responderGrant: {
        registrationName: "onResponderGrant"
    },
    responderReject: {
        registrationName: "onResponderReject"
    },
    responderTerminate: {
        registrationName: "onResponderTerminate"
    }
};

function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var shouldSetEventType = isStartish$1(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish$1(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder,
        bubbleShouldSetFrom = responderInst ? ReactTreeTraversal.getLowestCommonAncestor(responderInst, targetInst) : targetInst,
        skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst,
        shouldSetEvent = ResponderSyntheticEvent_1.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
    shouldSetEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, skipOverBubbleShouldSetFrom ? EventPropagators_1.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent) : EventPropagators_1.accumulateTwoPhaseDispatches(shouldSetEvent);
    var wantsResponderInst = executeDispatchesInOrderStopAtTrue$1(shouldSetEvent);
    if (shouldSetEvent.isPersistent() || shouldSetEvent.constructor.release(shouldSetEvent), !wantsResponderInst || wantsResponderInst === responderInst) return null;
    var extracted,
        grantEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
    grantEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(grantEvent);
    var blockHostResponder = !0 === executeDirectDispatch$1(grantEvent);
    if (responderInst) {
        var terminationRequestEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
        terminationRequestEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminationRequestEvent);
        var shouldSwitch = !hasDispatches$1(terminationRequestEvent) || executeDirectDispatch$1(terminationRequestEvent);
        if (terminationRequestEvent.isPersistent() || terminationRequestEvent.constructor.release(terminationRequestEvent), shouldSwitch) {
            var terminateEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
            terminateEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminateEvent), extracted = accumulate_1(extracted, [grantEvent, terminateEvent]), changeResponder(wantsResponderInst, blockHostResponder);
        } else {
            var rejectEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
            rejectEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(rejectEvent), extracted = accumulate_1(extracted, rejectEvent);
        }
    } else extracted = accumulate_1(extracted, grantEvent), changeResponder(wantsResponderInst, blockHostResponder);
    return extracted;
}

function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
    return topLevelInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && "topSelectionChange" === topLevelType || isStartish$1(topLevelType) || isMoveish$1(topLevelType));
}

function noResponderTouches(nativeEvent) {
    var touches = nativeEvent.touches;
    if (!touches || 0 === touches.length) return !0;
    for (var i = 0; i < touches.length; i++) {
        var activeTouch = touches[i],
            target = activeTouch.target;
        if (null !== target && void 0 !== target && 0 !== target) {
            var targetInst = EventPluginUtils_1.getInstanceFromNode(target);
            if (ReactTreeTraversal.isAncestor(responderInst, targetInst)) return !1;
        }
    }
    return !0;
}

var ResponderEventPlugin = {
    _getResponder: function _getResponder() {
        return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (isStartish$1(topLevelType)) trackedTouchCount += 1;else if (isEndish$1(topLevelType)) {
            if (!(trackedTouchCount >= 0)) return console.error("Ended a touch event which was not counted in `trackedTouchCount`."), null;
            trackedTouchCount -= 1;
        }
        ResponderTouchHistoryStore_1.recordTouchTrack(topLevelType, nativeEvent);
        var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null,
            isResponderTouchStart = responderInst && isStartish$1(topLevelType),
            isResponderTouchMove = responderInst && isMoveish$1(topLevelType),
            isResponderTouchEnd = responderInst && isEndish$1(topLevelType),
            incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;
        if (incrementalTouch) {
            var gesture = ResponderSyntheticEvent_1.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
            gesture.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(gesture), extracted = accumulate_1(extracted, gesture);
        }
        var isResponderTerminate = responderInst && "topTouchCancel" === topLevelType,
            isResponderRelease = responderInst && !isResponderTerminate && isEndish$1(topLevelType) && noResponderTouches(nativeEvent),
            finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
        if (finalTouch) {
            var finalEvent = ResponderSyntheticEvent_1.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
            finalEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(finalEvent), extracted = accumulate_1(extracted, finalEvent), changeResponder(null);
        }
        var numberActiveTouches = ResponderTouchHistoryStore_1.touchHistory.numberActiveTouches;
        return ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches && ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches), previousActiveTouches = numberActiveTouches, extracted;
    },
    GlobalResponderHandler: null,
    GlobalInteractionHandler: null,
    injection: {
        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
            ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
        },
        injectGlobalInteractionHandler: function injectGlobalInteractionHandler(GlobalInteractionHandler) {
            ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
        }
    }
},
    ResponderEventPlugin_1 = ResponderEventPlugin;

function inject() {
    RCTEventEmitter.register(ReactNativeEventEmitter_1), EventPluginHub_1.injection.injectEventPluginOrder(ReactNativeEventPluginOrder_1), EventPluginUtils_1.injection.injectComponentTree(ReactNativeComponentTree_1), ResponderEventPlugin_1.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler_1), EventPluginHub_1.injection.injectEventPluginsByName({
        ResponderEventPlugin: ResponderEventPlugin_1,
        ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1
    });
}

var ReactNativeInjection = {
    inject: inject
},
    REACT_PORTAL_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") || 60106,
    createPortal = function createPortal(children, containerInfo, implementation) {
    var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
    return {
        $$typeof: REACT_PORTAL_TYPE,
        key: null == key ? null : "" + key,
        children: children,
        containerInfo: containerInfo,
        implementation: implementation
    };
},
    isPortal = function isPortal(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_PORTAL_TYPE;
},
    REACT_PORTAL_TYPE_1 = REACT_PORTAL_TYPE,
    ReactPortal = {
    createPortal: createPortal,
    isPortal: isPortal,
    REACT_PORTAL_TYPE: REACT_PORTAL_TYPE_1
},
    commonjsGlobal = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
    ReactFeatureFlags = {
    disableNewFiberFeatures: !1,
    enableAsyncSubtreeAPI: !1
},
    ReactFeatureFlags_1 = ReactFeatureFlags,
    ReactTypeOfSideEffect = {
    NoEffect: 0,
    PerformedWork: 1,
    Placement: 2,
    Update: 4,
    PlacementAndUpdate: 6,
    Deletion: 8,
    ContentReset: 16,
    Callback: 32,
    Err: 64,
    Ref: 128
},
    ReactPriorityLevel = {
    NoWork: 0,
    SynchronousPriority: 1,
    TaskPriority: 2,
    HighPriority: 3,
    LowPriority: 4,
    OffscreenPriority: 5
},
    CallbackEffect = ReactTypeOfSideEffect.Callback,
    NoWork = ReactPriorityLevel.NoWork,
    SynchronousPriority = ReactPriorityLevel.SynchronousPriority,
    TaskPriority = ReactPriorityLevel.TaskPriority,
    ClassComponent = ReactTypeOfWork.ClassComponent,
    HostRoot = ReactTypeOfWork.HostRoot;

function comparePriority(a, b) {
    return a !== TaskPriority && a !== SynchronousPriority || b !== TaskPriority && b !== SynchronousPriority ? a === NoWork && b !== NoWork ? -255 : a !== NoWork && b === NoWork ? 255 : a - b : 0;
}

function createUpdateQueue() {
    return {
        first: null,
        last: null,
        hasForceUpdate: !1,
        callbackList: null
    };
}

function cloneUpdate(update) {
    return {
        priorityLevel: update.priorityLevel,
        partialState: update.partialState,
        callback: update.callback,
        isReplace: update.isReplace,
        isForced: update.isForced,
        isTopLevelUnmount: update.isTopLevelUnmount,
        next: null
    };
}

function insertUpdateIntoQueue(queue, update, insertAfter, insertBefore) {
    null !== insertAfter ? insertAfter.next = update : (update.next = queue.first, queue.first = update), null !== insertBefore ? update.next = insertBefore : queue.last = update;
}

function findInsertionPosition(queue, update) {
    var priorityLevel = update.priorityLevel,
        insertAfter = null,
        insertBefore = null;
    if (null !== queue.last && comparePriority(queue.last.priorityLevel, priorityLevel) <= 0) insertAfter = queue.last;else for (insertBefore = queue.first; null !== insertBefore && comparePriority(insertBefore.priorityLevel, priorityLevel) <= 0;) {
        insertAfter = insertBefore, insertBefore = insertBefore.next;
    }return insertAfter;
}

function ensureUpdateQueues(fiber) {
    var alternateFiber = fiber.alternate,
        queue1 = fiber.updateQueue;
    null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue());
    var queue2 = void 0;
    return null !== alternateFiber ? null === (queue2 = alternateFiber.updateQueue) && (queue2 = alternateFiber.updateQueue = createUpdateQueue()) : queue2 = null, [queue1, queue2 !== queue1 ? queue2 : null];
}

function insertUpdate(fiber, update) {
    var _ensureUpdateQueues = ensureUpdateQueues(fiber),
        queue1 = _ensureUpdateQueues[0],
        queue2 = _ensureUpdateQueues[1],
        insertAfter1 = findInsertionPosition(queue1, update),
        insertBefore1 = null !== insertAfter1 ? insertAfter1.next : queue1.first;
    if (null === queue2) return insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), null;
    var insertAfter2 = findInsertionPosition(queue2, update),
        insertBefore2 = null !== insertAfter2 ? insertAfter2.next : queue2.first;
    if (insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), insertBefore1 === insertBefore2 && null !== insertBefore1 || insertAfter1 === insertAfter2 && null !== insertAfter1) return null === insertAfter2 && (queue2.first = update), null === insertBefore2 && (queue2.last = null), null;
    var update2 = cloneUpdate(update);
    return insertUpdateIntoQueue(queue2, update2, insertAfter2, insertBefore2), update2;
}

function addUpdate(fiber, partialState, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: partialState,
        callback: callback,
        isReplace: !1,
        isForced: !1,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addUpdate_1 = addUpdate;

function addReplaceUpdate(fiber, state, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: state,
        callback: callback,
        isReplace: !0,
        isForced: !1,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addReplaceUpdate_1 = addReplaceUpdate;

function addForceUpdate(fiber, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: null,
        callback: callback,
        isReplace: !1,
        isForced: !0,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addForceUpdate_1 = addForceUpdate;

function getUpdatePriority(fiber) {
    var updateQueue = fiber.updateQueue;
    return null === updateQueue ? NoWork : fiber.tag !== ClassComponent && fiber.tag !== HostRoot ? NoWork : null !== updateQueue.first ? updateQueue.first.priorityLevel : NoWork;
}

var getUpdatePriority_1 = getUpdatePriority;

function addTopLevelUpdate$1(fiber, partialState, callback, priorityLevel) {
    var isTopLevelUnmount = null === partialState.element,
        update = {
        priorityLevel: priorityLevel,
        partialState: partialState,
        callback: callback,
        isReplace: !1,
        isForced: !1,
        isTopLevelUnmount: isTopLevelUnmount,
        next: null
    },
        update2 = insertUpdate(fiber, update);
    if (isTopLevelUnmount) {
        var _ensureUpdateQueues2 = ensureUpdateQueues(fiber),
            queue1 = _ensureUpdateQueues2[0],
            queue2 = _ensureUpdateQueues2[1];
        null !== queue1 && null !== update.next && (update.next = null, queue1.last = update), null !== queue2 && null !== update2 && null !== update2.next && (update2.next = null, queue2.last = update);
    }
}

var addTopLevelUpdate_1 = addTopLevelUpdate$1;

function getStateFromUpdate(update, instance, prevState, props) {
    var partialState = update.partialState;
    if ("function" == typeof partialState) {
        return partialState.call(instance, prevState, props);
    }
    return partialState;
}

function beginUpdateQueue(current, workInProgress, queue, instance, prevState, props, priorityLevel) {
    if (null !== current && current.updateQueue === queue) {
        var currentQueue = queue;
        queue = workInProgress.updateQueue = {
            first: currentQueue.first,
            last: currentQueue.last,
            callbackList: null,
            hasForceUpdate: !1
        };
    }
    for (var callbackList = queue.callbackList, hasForceUpdate = queue.hasForceUpdate, state = prevState, dontMutatePrevState = !0, update = queue.first; null !== update && comparePriority(update.priorityLevel, priorityLevel) <= 0;) {
        queue.first = update.next, null === queue.first && (queue.last = null);
        var _partialState = void 0;
        update.isReplace ? (state = getStateFromUpdate(update, instance, state, props), dontMutatePrevState = !0) : (_partialState = getStateFromUpdate(update, instance, state, props)) && (state = dontMutatePrevState ? babelHelpers.extends({}, state, _partialState) : babelHelpers.extends(state, _partialState), dontMutatePrevState = !1), update.isForced && (hasForceUpdate = !0), null === update.callback || update.isTopLevelUnmount && null !== update.next || (callbackList = null !== callbackList ? callbackList : [], callbackList.push(update.callback), workInProgress.effectTag |= CallbackEffect), update = update.next;
    }
    return queue.callbackList = callbackList, queue.hasForceUpdate = hasForceUpdate, null !== queue.first || null !== callbackList || hasForceUpdate || (workInProgress.updateQueue = null), state;
}

var beginUpdateQueue_1 = beginUpdateQueue;

function commitCallbacks(finishedWork, queue, context) {
    var callbackList = queue.callbackList;
    if (null !== callbackList) {
        queue.callbackList = null;
        for (var i = 0; i < callbackList.length; i++) {
            var _callback = callbackList[i];
            invariant("function" == typeof _callback, "Invalid argument passed as callback. Expected a function. Instead " + "received: %s", _callback), _callback.call(context);
        }
    }
}

var commitCallbacks_1 = commitCallbacks,
    ReactFiberUpdateQueue = {
    addUpdate: addUpdate_1,
    addReplaceUpdate: addReplaceUpdate_1,
    addForceUpdate: addForceUpdate_1,
    getUpdatePriority: getUpdatePriority_1,
    addTopLevelUpdate: addTopLevelUpdate_1,
    beginUpdateQueue: beginUpdateQueue_1,
    commitCallbacks: commitCallbacks_1
};

function getComponentName$1(instanceOrFiber) {
    if ("function" == typeof instanceOrFiber.getName) {
        return instanceOrFiber.getName();
    }
    if ("number" == typeof instanceOrFiber.tag) {
        var fiber = instanceOrFiber,
            type = fiber.type;
        if ("string" == typeof type) return type;
        if ("function" == typeof type) return type.displayName || type.name;
    }
    return null;
}

var getComponentName_1 = getComponentName$1,
    ReactInstanceMap = {
    remove: function remove(key) {
        key._reactInternalInstance = void 0;
    },
    get: function get(key) {
        return key._reactInternalInstance;
    },
    has: function has(key) {
        return void 0 !== key._reactInternalInstance;
    },
    set: function set(key, value) {
        key._reactInternalInstance = value;
    }
},
    ReactInstanceMap_1 = ReactInstanceMap,
    ReactInternals = react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    ReactGlobalSharedState = {
    ReactCurrentOwner: ReactInternals.ReactCurrentOwner
},
    ReactGlobalSharedState_1 = ReactGlobalSharedState,
    HostRoot$2 = ReactTypeOfWork.HostRoot,
    HostComponent$2 = ReactTypeOfWork.HostComponent,
    HostText = ReactTypeOfWork.HostText,
    NoEffect = ReactTypeOfSideEffect.NoEffect,
    Placement = ReactTypeOfSideEffect.Placement,
    MOUNTING = 1,
    MOUNTED = 2,
    UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
        node = node.return;
    } else {
        if ((node.effectTag & Placement) !== NoEffect) return MOUNTING;
        for (; node.return;) {
            if (node = node.return, (node.effectTag & Placement) !== NoEffect) return MOUNTING;
        }
    }
    return node.tag === HostRoot$2 ? MOUNTED : UNMOUNTED;
}

var isFiberMounted$1 = function isFiberMounted$1(fiber) {
    return isFiberMountedImpl(fiber) === MOUNTED;
},
    isMounted = function isMounted(component) {
    var fiber = ReactInstanceMap_1.get(component);
    return !!fiber && isFiberMountedImpl(fiber) === MOUNTED;
};

function assertIsMounted(fiber) {
    invariant(isFiberMountedImpl(fiber) === MOUNTED, "Unable to find node on an unmounted component.");
}

function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;
    if (!alternate) {
        var state = isFiberMountedImpl(fiber);
        return invariant(state !== UNMOUNTED, "Unable to find node on an unmounted component."), state === MOUNTING ? null : fiber;
    }
    for (var a = fiber, b = alternate; !0;) {
        var parentA = a.return,
            parentB = parentA ? parentA.alternate : null;
        if (!parentA || !parentB) break;
        if (parentA.child === parentB.child) {
            for (var child = parentA.child; child;) {
                if (child === a) return assertIsMounted(parentA), fiber;
                if (child === b) return assertIsMounted(parentA), alternate;
                child = child.sibling;
            }
            invariant(!1, "Unable to find node on an unmounted component.");
        }
        if (a.return !== b.return) a = parentA, b = parentB;else {
            for (var didFindChild = !1, _child = parentA.child; _child;) {
                if (_child === a) {
                    didFindChild = !0, a = parentA, b = parentB;
                    break;
                }
                if (_child === b) {
                    didFindChild = !0, b = parentA, a = parentB;
                    break;
                }
                _child = _child.sibling;
            }
            if (!didFindChild) {
                for (_child = parentB.child; _child;) {
                    if (_child === a) {
                        didFindChild = !0, a = parentB, b = parentA;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = !0, b = parentB, a = parentA;
                        break;
                    }
                    _child = _child.sibling;
                }
                invariant(didFindChild, "Child was not found in either parent set. This indicates a bug " + "related to the return pointer.");
            }
        }
        invariant(a.alternate === b, "Return fibers should always be each others' alternates.");
    }
    return invariant(a.tag === HostRoot$2, "Unable to find node on an unmounted component."), a.stateNode.current === a ? fiber : alternate;
}

var findCurrentFiberUsingSlowPath_1 = findCurrentFiberUsingSlowPath,
    findCurrentHostFiber$1 = function findCurrentHostFiber$1(parent) {
    var currentParent = findCurrentFiberUsingSlowPath(parent);
    if (!currentParent) return null;
    for (var node = currentParent; !0;) {
        if (node.tag === HostComponent$2 || node.tag === HostText) return node;
        if (node.child) node.child.return = node, node = node.child;else {
            if (node === currentParent) return null;
            for (; !node.sibling;) {
                if (!node.return || node.return === currentParent) return null;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    return null;
},
    ReactFiberTreeReflection = {
    isFiberMounted: isFiberMounted$1,
    isMounted: isMounted,
    findCurrentFiberUsingSlowPath: findCurrentFiberUsingSlowPath_1,
    findCurrentHostFiber: findCurrentHostFiber$1
},
    valueStack = [],
    index = -1,
    createCursor$1 = function createCursor$1(defaultValue) {
    return {
        current: defaultValue
    };
},
    isEmpty = function isEmpty() {
    return -1 === index;
},
    pop$1 = function pop$1(cursor, fiber) {
    index < 0 || (cursor.current = valueStack[index], valueStack[index] = null, index--);
},
    push$1 = function push$1(cursor, value, fiber) {
    index++, valueStack[index] = cursor.current, cursor.current = value;
},
    reset = function reset() {
    for (; index > -1;) {
        valueStack[index] = null, index--;
    }
},
    ReactFiberStack = {
    createCursor: createCursor$1,
    isEmpty: isEmpty,
    pop: pop$1,
    push: push$1,
    reset: reset
},
    _extends$2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
},
    isFiberMounted = ReactFiberTreeReflection.isFiberMounted,
    ClassComponent$1 = ReactTypeOfWork.ClassComponent,
    HostRoot$1 = ReactTypeOfWork.HostRoot,
    createCursor = ReactFiberStack.createCursor,
    pop = ReactFiberStack.pop,
    push = ReactFiberStack.push,
    contextStackCursor = createCursor(emptyObject),
    didPerformWorkStackCursor = createCursor(!1),
    previousContext = emptyObject;

function getUnmaskedContext(workInProgress) {
    return isContextProvider$1(workInProgress) ? previousContext : contextStackCursor.current;
}

var getUnmaskedContext_1 = getUnmaskedContext;

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}

var cacheContext_1 = cacheContext,
    getMaskedContext = function getMaskedContext(workInProgress, unmaskedContext) {
    var type = workInProgress.type,
        contextTypes = type.contextTypes;
    if (!contextTypes) return emptyObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {};
    for (var key in contextTypes) {
        context[key] = unmaskedContext[key];
    }return instance && cacheContext(workInProgress, unmaskedContext, context), context;
},
    hasContextChanged = function hasContextChanged() {
    return didPerformWorkStackCursor.current;
};

function isContextConsumer(fiber) {
    return fiber.tag === ClassComponent$1 && null != fiber.type.contextTypes;
}

var isContextConsumer_1 = isContextConsumer;

function isContextProvider$1(fiber) {
    return fiber.tag === ClassComponent$1 && null != fiber.type.childContextTypes;
}

var isContextProvider_1 = isContextProvider$1;

function popContextProvider(fiber) {
    isContextProvider$1(fiber) && (pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber));
}

var popContextProvider_1 = popContextProvider,
    pushTopLevelContextObject = function pushTopLevelContextObject(fiber, context, didChange) {
    invariant(null == contextStackCursor.cursor, "Unexpected context found on stack"), push(contextStackCursor, context, fiber), push(didPerformWorkStackCursor, didChange, fiber);
};

function processChildContext$1(fiber, parentContext, isReconciling) {
    var instance = fiber.stateNode,
        childContextTypes = fiber.type.childContextTypes;
    if ("function" != typeof instance.getChildContext) return parentContext;
    var childContext = void 0;
    childContext = instance.getChildContext();
    for (var contextKey in childContext) {
        invariant(contextKey in childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName_1(fiber) || "Unknown", contextKey);
    }return _extends$2({}, parentContext, childContext);
}

var processChildContext_1 = processChildContext$1,
    pushContextProvider = function pushContextProvider(workInProgress) {
    if (!isContextProvider$1(workInProgress)) return !1;
    var instance = workInProgress.stateNode,
        memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;
    return previousContext = contextStackCursor.current, push(contextStackCursor, memoizedMergedChildContext, workInProgress), push(didPerformWorkStackCursor, !1, workInProgress), !0;
},
    invalidateContextProvider = function invalidateContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    invariant(instance, "Expected to have an instance by this point.");
    var mergedContext = processChildContext$1(workInProgress, previousContext, !0);
    instance.__reactInternalMemoizedMergedChildContext = mergedContext, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, mergedContext, workInProgress), push(didPerformWorkStackCursor, !0, workInProgress);
},
    resetContext = function resetContext() {
    previousContext = emptyObject, contextStackCursor.current = emptyObject, didPerformWorkStackCursor.current = !1;
},
    findCurrentUnmaskedContext$1 = function findCurrentUnmaskedContext$1(fiber) {
    invariant(isFiberMounted(fiber) && fiber.tag === ClassComponent$1, "Expected subtree parent to be a mounted class component");
    for (var node = fiber; node.tag !== HostRoot$1;) {
        if (isContextProvider$1(node)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
        var parent = node.return;
        invariant(parent, "Found unexpected detached subtree parent"), node = parent;
    }
    return node.stateNode.context;
},
    ReactFiberContext = {
    getUnmaskedContext: getUnmaskedContext_1,
    cacheContext: cacheContext_1,
    getMaskedContext: getMaskedContext,
    hasContextChanged: hasContextChanged,
    isContextConsumer: isContextConsumer_1,
    isContextProvider: isContextProvider_1,
    popContextProvider: popContextProvider_1,
    pushTopLevelContextObject: pushTopLevelContextObject,
    processChildContext: processChildContext_1,
    pushContextProvider: pushContextProvider,
    invalidateContextProvider: invalidateContextProvider,
    resetContext: resetContext,
    findCurrentUnmaskedContext: findCurrentUnmaskedContext$1
},
    ReactTypeOfInternalContext = {
    NoContext: 0,
    AsyncUpdates: 1
},
    IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
    ClassComponent$3 = ReactTypeOfWork.ClassComponent,
    HostRoot$3 = ReactTypeOfWork.HostRoot,
    HostComponent$3 = ReactTypeOfWork.HostComponent,
    HostText$1 = ReactTypeOfWork.HostText,
    HostPortal = ReactTypeOfWork.HostPortal,
    CoroutineComponent = ReactTypeOfWork.CoroutineComponent,
    YieldComponent = ReactTypeOfWork.YieldComponent,
    Fragment = ReactTypeOfWork.Fragment,
    NoWork$1 = ReactPriorityLevel.NoWork,
    NoContext = ReactTypeOfInternalContext.NoContext,
    NoEffect$1 = ReactTypeOfSideEffect.NoEffect,
    createFiber = function createFiber(tag, key, internalContextTag) {
    return {
        tag: tag,
        key: key,
        type: null,
        stateNode: null,
        return: null,
        child: null,
        sibling: null,
        index: 0,
        ref: null,
        pendingProps: null,
        memoizedProps: null,
        updateQueue: null,
        memoizedState: null,
        internalContextTag: internalContextTag,
        effectTag: NoEffect$1,
        nextEffect: null,
        firstEffect: null,
        lastEffect: null,
        pendingWorkPriority: NoWork$1,
        alternate: null
    };
};

function shouldConstruct(Component) {
    return !(!Component.prototype || !Component.prototype.isReactComponent);
}

var createWorkInProgress = function createWorkInProgress(current, renderPriority) {
    var workInProgress = current.alternate;
    return null === workInProgress ? (workInProgress = createFiber(current.tag, current.key, current.internalContextTag), workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.effectTag = NoWork$1, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null), workInProgress.pendingWorkPriority = renderPriority, workInProgress.child = current.child, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.sibling = current.sibling, workInProgress.index = current.index, workInProgress.ref = current.ref, workInProgress;
},
    createHostRootFiber$1 = function createHostRootFiber$1() {
    return createFiber(HostRoot$3, null, NoContext);
},
    createFiberFromElement = function createFiberFromElement(element, internalContextTag, priorityLevel) {
    var owner = null,
        fiber = createFiberFromElementType(element.type, element.key, internalContextTag, owner);
    return fiber.pendingProps = element.props, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromFragment = function createFiberFromFragment(elements, internalContextTag, priorityLevel) {
    var fiber = createFiber(Fragment, null, internalContextTag);
    return fiber.pendingProps = elements, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromText = function createFiberFromText(content, internalContextTag, priorityLevel) {
    var fiber = createFiber(HostText$1, null, internalContextTag);
    return fiber.pendingProps = content, fiber.pendingWorkPriority = priorityLevel, fiber;
};

function createFiberFromElementType(type, key, internalContextTag, debugOwner) {
    var fiber = void 0;
    if ("function" == typeof type) fiber = shouldConstruct(type) ? createFiber(ClassComponent$3, key, internalContextTag) : createFiber(IndeterminateComponent, key, internalContextTag), fiber.type = type;else if ("string" == typeof type) fiber = createFiber(HostComponent$3, key, internalContextTag), fiber.type = type;else if ("object" == typeof type && null !== type && "number" == typeof type.tag) fiber = type;else {
        var info = "";
        invariant(!1, "Element type is invalid: expected a string (for built-in components) " + "or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, info);
    }
    return fiber;
}

var createFiberFromElementType_1 = createFiberFromElementType,
    createFiberFromHostInstanceForDeletion = function createFiberFromHostInstanceForDeletion() {
    var fiber = createFiber(HostComponent$3, null, NoContext);
    return fiber.type = "DELETED", fiber;
},
    createFiberFromCoroutine = function createFiberFromCoroutine(coroutine, internalContextTag, priorityLevel) {
    var fiber = createFiber(CoroutineComponent, coroutine.key, internalContextTag);
    return fiber.type = coroutine.handler, fiber.pendingProps = coroutine, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromYield = function createFiberFromYield(yieldNode, internalContextTag, priorityLevel) {
    return createFiber(YieldComponent, null, internalContextTag);
},
    createFiberFromPortal = function createFiberFromPortal(portal, internalContextTag, priorityLevel) {
    var fiber = createFiber(HostPortal, portal.key, internalContextTag);
    return fiber.pendingProps = portal.children || [], fiber.pendingWorkPriority = priorityLevel, fiber.stateNode = {
        containerInfo: portal.containerInfo,
        implementation: portal.implementation
    }, fiber;
},
    largerPriority = function largerPriority(p1, p2) {
    return p1 !== NoWork$1 && (p2 === NoWork$1 || p2 > p1) ? p1 : p2;
},
    ReactFiber = {
    createWorkInProgress: createWorkInProgress,
    createHostRootFiber: createHostRootFiber$1,
    createFiberFromElement: createFiberFromElement,
    createFiberFromFragment: createFiberFromFragment,
    createFiberFromText: createFiberFromText,
    createFiberFromElementType: createFiberFromElementType_1,
    createFiberFromHostInstanceForDeletion: createFiberFromHostInstanceForDeletion,
    createFiberFromCoroutine: createFiberFromCoroutine,
    createFiberFromYield: createFiberFromYield,
    createFiberFromPortal: createFiberFromPortal,
    largerPriority: largerPriority
},
    createHostRootFiber = ReactFiber.createHostRootFiber,
    createFiberRoot$1 = function createFiberRoot$1(containerInfo) {
    var uninitializedFiber = createHostRootFiber(),
        root = {
        current: uninitializedFiber,
        containerInfo: containerInfo,
        isScheduled: !1,
        nextScheduledRoot: null,
        context: null,
        pendingContext: null
    };
    return uninitializedFiber.stateNode = root, root;
},
    ReactFiberRoot = {
    createFiberRoot: createFiberRoot$1
},
    IndeterminateComponent$1 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$5 = ReactTypeOfWork.ClassComponent,
    HostComponent$5 = ReactTypeOfWork.HostComponent;

function describeComponentFrame(name, source, ownerName) {
    return "\n    in " + (name || "Unknown") + (source ? " (at " + source.fileName.replace(/^.*[\\\/]/, "") + ":" + source.lineNumber + ")" : ownerName ? " (created by " + ownerName + ")" : "");
}

function describeFiber(fiber) {
    switch (fiber.tag) {
        case IndeterminateComponent$1:
        case FunctionalComponent:
        case ClassComponent$5:
        case HostComponent$5:
            var owner = fiber._debugOwner,
                source = fiber._debugSource,
                name = getComponentName_1(fiber),
                ownerName = null;
            return owner && (ownerName = getComponentName_1(owner)), describeComponentFrame(name, source, ownerName);

        default:
            return "";
    }
}

function getStackAddendumByWorkInProgressFiber$1(workInProgress) {
    var info = "",
        node = workInProgress;
    do {
        info += describeFiber(node), node = node.return;
    } while (node);
    return info;
}

var ReactFiberComponentTreeHook = {
    getStackAddendumByWorkInProgressFiber: getStackAddendumByWorkInProgressFiber$1,
    describeComponentFrame: describeComponentFrame
},
    REACT_COROUTINE_TYPE$1,
    REACT_YIELD_TYPE$1;

"function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") ? (REACT_COROUTINE_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.coroutine"), REACT_YIELD_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.yield")) : (REACT_COROUTINE_TYPE$1 = 60104, REACT_YIELD_TYPE$1 = 60105);

var createCoroutine = function createCoroutine(children, handler, props) {
    var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
    return {
        $$typeof: REACT_COROUTINE_TYPE$1,
        key: null == key ? null : "" + key,
        children: children,
        handler: handler,
        props: props
    };
},
    createYield = function createYield(value) {
    return {
        $$typeof: REACT_YIELD_TYPE$1,
        value: value
    };
},
    isCoroutine = function isCoroutine(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_COROUTINE_TYPE$1;
},
    isYield = function isYield(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_YIELD_TYPE$1;
},
    REACT_YIELD_TYPE_1 = REACT_YIELD_TYPE$1,
    REACT_COROUTINE_TYPE_1 = REACT_COROUTINE_TYPE$1,
    ReactCoroutine = {
    createCoroutine: createCoroutine,
    createYield: createYield,
    isCoroutine: isCoroutine,
    isYield: isYield,
    REACT_YIELD_TYPE: REACT_YIELD_TYPE_1,
    REACT_COROUTINE_TYPE: REACT_COROUTINE_TYPE_1
},
    REACT_COROUTINE_TYPE = ReactCoroutine.REACT_COROUTINE_TYPE,
    REACT_YIELD_TYPE = ReactCoroutine.REACT_YIELD_TYPE,
    REACT_PORTAL_TYPE$1 = ReactPortal.REACT_PORTAL_TYPE,
    createWorkInProgress$2 = ReactFiber.createWorkInProgress,
    createFiberFromElement$1 = ReactFiber.createFiberFromElement,
    createFiberFromFragment$1 = ReactFiber.createFiberFromFragment,
    createFiberFromText$1 = ReactFiber.createFiberFromText,
    createFiberFromCoroutine$1 = ReactFiber.createFiberFromCoroutine,
    createFiberFromYield$1 = ReactFiber.createFiberFromYield,
    createFiberFromPortal$1 = ReactFiber.createFiberFromPortal,
    isArray = Array.isArray,
    FunctionalComponent$2 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$7 = ReactTypeOfWork.ClassComponent,
    HostText$3 = ReactTypeOfWork.HostText,
    HostPortal$3 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$2 = ReactTypeOfWork.CoroutineComponent,
    YieldComponent$2 = ReactTypeOfWork.YieldComponent,
    Fragment$2 = ReactTypeOfWork.Fragment,
    NoEffect$2 = ReactTypeOfSideEffect.NoEffect,
    Placement$3 = ReactTypeOfSideEffect.Placement,
    Deletion$1 = ReactTypeOfSideEffect.Deletion,
    ITERATOR_SYMBOL = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
    FAUX_ITERATOR_SYMBOL = "@@iterator",
    REACT_ELEMENT_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 60103;

function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || void 0 === maybeIterable) return null;
    var iteratorFn = ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
    return "function" == typeof iteratorFn ? iteratorFn : null;
}

function coerceRef(current, element) {
    var mixedRef = element.ref;
    if (null !== mixedRef && "function" != typeof mixedRef && element._owner) {
        var owner = element._owner,
            inst = void 0;
        if (owner) if ("number" == typeof owner.tag) {
            var ownerFiber = owner;
            invariant(ownerFiber.tag === ClassComponent$7, "Stateless function components cannot have refs."), inst = ownerFiber.stateNode;
        } else inst = owner.getPublicInstance();
        invariant(inst, "Missing owner for string ref %s. This error is likely caused by a " + "bug in React. Please file an issue.", mixedRef);
        var stringRef = "" + mixedRef;
        if (null !== current && null !== current.ref && current.ref._stringRef === stringRef) return current.ref;
        var ref = function ref(value) {
            var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
            null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };
        return ref._stringRef = stringRef, ref;
    }
    return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) {
        invariant(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild, "");
    }
}

function ChildReconciler(shouldClone, shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
        if (shouldTrackSideEffects) {
            if (!shouldClone) {
                if (null === childToDelete.alternate) return;
                childToDelete = childToDelete.alternate;
            }
            var last = returnFiber.lastEffect;
            null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete, childToDelete.nextEffect = null, childToDelete.effectTag = Deletion$1;
        }
    }
    function deleteRemainingChildren(returnFiber, currentFirstChild) {
        if (!shouldTrackSideEffects) return null;
        for (var childToDelete = currentFirstChild; null !== childToDelete;) {
            deleteChild(returnFiber, childToDelete), childToDelete = childToDelete.sibling;
        }return null;
    }
    function mapRemainingChildren(returnFiber, currentFirstChild) {
        for (var existingChildren = new Map(), existingChild = currentFirstChild; null !== existingChild;) {
            null !== existingChild.key ? existingChildren.set(existingChild.key, existingChild) : existingChildren.set(existingChild.index, existingChild), existingChild = existingChild.sibling;
        }return existingChildren;
    }
    function useFiber(fiber, priority) {
        if (shouldClone) {
            var clone = createWorkInProgress$2(fiber, priority);
            return clone.index = 0, clone.sibling = null, clone;
        }
        return fiber.pendingWorkPriority = priority, fiber.effectTag = NoEffect$2, fiber.index = 0, fiber.sibling = null, fiber;
    }
    function placeChild(newFiber, lastPlacedIndex, newIndex) {
        if (newFiber.index = newIndex, !shouldTrackSideEffects) return lastPlacedIndex;
        var current = newFiber.alternate;
        if (null !== current) {
            var oldIndex = current.index;
            return oldIndex < lastPlacedIndex ? (newFiber.effectTag = Placement$3, lastPlacedIndex) : oldIndex;
        }
        return newFiber.effectTag = Placement$3, lastPlacedIndex;
    }
    function placeSingleChild(newFiber) {
        return shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = Placement$3), newFiber;
    }
    function updateTextNode(returnFiber, current, textContent, priority) {
        if (null === current || current.tag !== HostText$3) {
            var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = textContent, existing.return = returnFiber, existing;
    }
    function updateElement(returnFiber, current, element, priority) {
        if (null === current || current.type !== element.type) {
            var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
            return created.ref = coerceRef(current, element), created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.ref = coerceRef(current, element), existing.pendingProps = element.props, existing.return = returnFiber, existing;
    }
    function updateCoroutine(returnFiber, current, coroutine, priority) {
        if (null === current || current.tag !== CoroutineComponent$2) {
            var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
    }
    function updateYield(returnFiber, current, yieldNode, priority) {
        if (null === current || current.tag !== YieldComponent$2) {
            var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
            return created.type = yieldNode.value, created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.type = yieldNode.value, existing.return = returnFiber, existing;
    }
    function updatePortal(returnFiber, current, portal, priority) {
        if (null === current || current.tag !== HostPortal$3 || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
            var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
    }
    function updateFragment(returnFiber, current, fragment, priority) {
        if (null === current || current.tag !== Fragment$2) {
            var created = createFiberFromFragment$1(fragment, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = fragment, existing.return = returnFiber, existing;
    }
    function createChild(returnFiber, newChild, priority) {
        if ("string" == typeof newChild || "number" == typeof newChild) {
            var created = createFiberFromText$1("" + newChild, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    var _created = createFiberFromElement$1(newChild, returnFiber.internalContextTag, priority);
                    return _created.ref = coerceRef(null, newChild), _created.return = returnFiber, _created;

                case REACT_COROUTINE_TYPE:
                    var _created2 = createFiberFromCoroutine$1(newChild, returnFiber.internalContextTag, priority);
                    return _created2.return = returnFiber, _created2;

                case REACT_YIELD_TYPE:
                    var _created3 = createFiberFromYield$1(newChild, returnFiber.internalContextTag, priority);
                    return _created3.type = newChild.value, _created3.return = returnFiber, _created3;

                case REACT_PORTAL_TYPE$1:
                    var _created4 = createFiberFromPortal$1(newChild, returnFiber.internalContextTag, priority);
                    return _created4.return = returnFiber, _created4;
            }
            if (isArray(newChild) || getIteratorFn(newChild)) {
                var _created5 = createFiberFromFragment$1(newChild, returnFiber.internalContextTag, priority);
                return _created5.return = returnFiber, _created5;
            }
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function updateSlot(returnFiber, oldFiber, newChild, priority) {
        var key = null !== oldFiber ? oldFiber.key : null;
        if ("string" == typeof newChild || "number" == typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, priority);
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    return newChild.key === key ? updateElement(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_COROUTINE_TYPE:
                    return newChild.key === key ? updateCoroutine(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_YIELD_TYPE:
                    return null === key ? updateYield(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_PORTAL_TYPE$1:
                    return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, priority) : null;
            }
            if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, priority);
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, priority) {
        if ("string" == typeof newChild || "number" == typeof newChild) {
            return updateTextNode(returnFiber, existingChildren.get(newIdx) || null, "" + newChild, priority);
        }
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    return updateElement(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                case REACT_COROUTINE_TYPE:
                    return updateCoroutine(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                case REACT_YIELD_TYPE:
                    return updateYield(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);

                case REACT_PORTAL_TYPE$1:
                    return updatePortal(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);
            }
            if (isArray(newChild) || getIteratorFn(newChild)) {
                return updateFragment(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);
            }
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, priority) {
        for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
            oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
            var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], priority);
            if (null === newFiber) {
                null === oldFiber && (oldFiber = nextOldFiber);
                break;
            }
            shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
        }
        if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
        if (null === oldFiber) {
            for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], priority);
                _newFiber && (lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber : previousNewFiber.sibling = _newFiber, previousNewFiber = _newFiber);
            }
            return resultingFirstChild;
        }
        for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
            var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], priority);
            _newFiber2 && (shouldTrackSideEffects && null !== _newFiber2.alternate && existingChildren.delete(null === _newFiber2.key ? newIdx : _newFiber2.key), lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber2 : previousNewFiber.sibling = _newFiber2, previousNewFiber = _newFiber2);
        }
        return shouldTrackSideEffects && existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
        }), resultingFirstChild;
    }
    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, priority) {
        var iteratorFn = getIteratorFn(newChildrenIterable);
        invariant("function" == typeof iteratorFn, "An object is not an iterable. This error is likely caused by a bug in " + "React. Please file an issue.");
        var newChildren = iteratorFn.call(newChildrenIterable);
        invariant(null != newChildren, "An iterable object provided no iterator.");
        for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()) {
            oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
            var newFiber = updateSlot(returnFiber, oldFiber, step.value, priority);
            if (null === newFiber) {
                oldFiber || (oldFiber = nextOldFiber);
                break;
            }
            shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
        }
        if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
        if (null === oldFiber) {
            for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, priority);
                null !== _newFiber3 && (lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber3 : previousNewFiber.sibling = _newFiber3, previousNewFiber = _newFiber3);
            }
            return resultingFirstChild;
        }
        for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildren.next()) {
            var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, priority);
            null !== _newFiber4 && (shouldTrackSideEffects && null !== _newFiber4.alternate && existingChildren.delete(null === _newFiber4.key ? newIdx : _newFiber4.key), lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber4 : previousNewFiber.sibling = _newFiber4, previousNewFiber = _newFiber4);
        }
        return shouldTrackSideEffects && existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
        }), resultingFirstChild;
    }
    function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, priority) {
        if (null !== currentFirstChild && currentFirstChild.tag === HostText$3) {
            deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
            var existing = useFiber(currentFirstChild, priority);
            return existing.pendingProps = textContent, existing.return = returnFiber, existing;
        }
        deleteRemainingChildren(returnFiber, currentFirstChild);
        var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileSingleElement(returnFiber, currentFirstChild, element, priority) {
        for (var key = element.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.type === element.type) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.ref = coerceRef(child, element), existing.pendingProps = element.props, existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
        return created.ref = coerceRef(currentFirstChild, element), created.return = returnFiber, created;
    }
    function reconcileSingleCoroutine(returnFiber, currentFirstChild, coroutine, priority) {
        for (var key = coroutine.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.tag === CoroutineComponent$2) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileSingleYield(returnFiber, currentFirstChild, yieldNode, priority) {
        var child = currentFirstChild;
        if (null !== child) {
            if (child.tag === YieldComponent$2) {
                deleteRemainingChildren(returnFiber, child.sibling);
                var existing = useFiber(child, priority);
                return existing.type = yieldNode.value, existing.return = returnFiber, existing;
            }
            deleteRemainingChildren(returnFiber, child);
        }
        var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
        return created.type = yieldNode.value, created.return = returnFiber, created;
    }
    function reconcileSinglePortal(returnFiber, currentFirstChild, portal, priority) {
        for (var key = portal.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.tag === HostPortal$3 && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileChildFibers(returnFiber, currentFirstChild, newChild, priority) {
        var disableNewFiberFeatures = ReactFeatureFlags_1.disableNewFiberFeatures,
            isObject = "object" == typeof newChild && null !== newChild;
        if (isObject) if (disableNewFiberFeatures) switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
                return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

            case REACT_PORTAL_TYPE$1:
                return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
        } else switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
                return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

            case REACT_COROUTINE_TYPE:
                return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));

            case REACT_YIELD_TYPE:
                return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));

            case REACT_PORTAL_TYPE$1:
                return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
        }
        if (disableNewFiberFeatures) switch (returnFiber.tag) {
            case ClassComponent$7:
                var Component = returnFiber.type;
                invariant(null === newChild || !1 === newChild, "%s.render(): A valid React element (or null) must be returned. " + "You may have returned undefined, an array or some other " + "invalid object.", Component.displayName || Component.name || "Component");
                break;

            case FunctionalComponent$2:
                var _Component = returnFiber.type;
                invariant(null === newChild || !1 === newChild, "%s(...): A valid React element (or null) must be returned. " + "You may have returned undefined, an array or some other " + "invalid object.", _Component.displayName || _Component.name || "Component");
        }
        if ("string" == typeof newChild || "number" == typeof newChild) return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, priority));
        if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);
        if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);
        if (isObject && throwOnInvalidObjectType(returnFiber, newChild), !disableNewFiberFeatures && void 0 === newChild) switch (returnFiber.tag) {
            case ClassComponent$7:
            case FunctionalComponent$2:
                var _Component2 = returnFiber.type;
                invariant(!1, "%s(...): Nothing was returned from render. This usually means a " + "return statement is missing. Or, to render nothing, " + "return null.", _Component2.displayName || _Component2.name || "Component");
        }
        return deleteRemainingChildren(returnFiber, currentFirstChild);
    }
    return reconcileChildFibers;
}

var reconcileChildFibers$1 = ChildReconciler(!0, !0),
    reconcileChildFibersInPlace$1 = ChildReconciler(!1, !0),
    mountChildFibersInPlace$1 = ChildReconciler(!1, !1),
    cloneChildFibers$1 = function cloneChildFibers$1(current, workInProgress) {
    if (invariant(null === current || workInProgress.child === current.child, "Resuming work not yet implemented."), null !== workInProgress.child) {
        var currentChild = workInProgress.child,
            newChild = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority);
        for (newChild.pendingProps = currentChild.pendingProps, workInProgress.child = newChild, newChild.return = workInProgress; null !== currentChild.sibling;) {
            currentChild = currentChild.sibling, newChild = newChild.sibling = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority), newChild.pendingProps = currentChild.pendingProps, newChild.return = workInProgress;
        }newChild.sibling = null;
    }
},
    ReactChildFiber = {
    reconcileChildFibers: reconcileChildFibers$1,
    reconcileChildFibersInPlace: reconcileChildFibersInPlace$1,
    mountChildFibersInPlace: mountChildFibersInPlace$1,
    cloneChildFibers: cloneChildFibers$1
},
    Update$1 = ReactTypeOfSideEffect.Update,
    AsyncUpdates$1 = ReactTypeOfInternalContext.AsyncUpdates,
    cacheContext$1 = ReactFiberContext.cacheContext,
    getMaskedContext$2 = ReactFiberContext.getMaskedContext,
    getUnmaskedContext$2 = ReactFiberContext.getUnmaskedContext,
    isContextConsumer$1 = ReactFiberContext.isContextConsumer,
    addUpdate$1 = ReactFiberUpdateQueue.addUpdate,
    addReplaceUpdate$1 = ReactFiberUpdateQueue.addReplaceUpdate,
    addForceUpdate$1 = ReactFiberUpdateQueue.addForceUpdate,
    beginUpdateQueue$2 = ReactFiberUpdateQueue.beginUpdateQueue,
    _require5$1 = ReactFiberContext,
    hasContextChanged$2 = _require5$1.hasContextChanged,
    isMounted$1 = ReactFiberTreeReflection.isMounted,
    ReactFiberClassComponent = function ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState) {
    var updater = {
        isMounted: isMounted$1,
        enqueueSetState: function enqueueSetState(instance, partialState, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, addUpdate$1(fiber, partialState, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        },
        enqueueReplaceState: function enqueueReplaceState(instance, state, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, addReplaceUpdate$1(fiber, state, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        },
        enqueueForceUpdate: function enqueueForceUpdate(instance, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, addForceUpdate$1(fiber, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        }
    };
    function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
        if (null === oldProps || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate) return !0;
        var instance = workInProgress.stateNode,
            type = workInProgress.type;
        if ("function" == typeof instance.shouldComponentUpdate) {
            return instance.shouldComponentUpdate(newProps, newState, newContext);
        }
        return !type.prototype || !type.prototype.isPureReactComponent || !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
    }
    function resetInputPointers(workInProgress, instance) {
        instance.props = workInProgress.memoizedProps, instance.state = workInProgress.memoizedState;
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = updater, workInProgress.stateNode = instance, ReactInstanceMap_1.set(instance, workInProgress);
    }
    function constructClassInstance(workInProgress, props) {
        var ctor = workInProgress.type,
            unmaskedContext = getUnmaskedContext$2(workInProgress),
            needsContext = isContextConsumer$1(workInProgress),
            context = needsContext ? getMaskedContext$2(workInProgress, unmaskedContext) : emptyObject,
            instance = new ctor(props, context);
        return adoptClassInstance(workInProgress, instance), needsContext && cacheContext$1(workInProgress, unmaskedContext, context), instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        instance.componentWillMount(), oldState !== instance.state && updater.enqueueReplaceState(instance, instance.state, null);
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
        var oldState = instance.state;
        instance.componentWillReceiveProps(newProps, newContext), instance.state !== oldState && updater.enqueueReplaceState(instance, instance.state, null);
    }
    function mountClassInstance(workInProgress, priorityLevel) {
        var current = workInProgress.alternate,
            instance = workInProgress.stateNode,
            state = instance.state || null,
            props = workInProgress.pendingProps;
        invariant(props, "There must be pending props for an initial mount. This error is " + "likely caused by a bug in React. Please file an issue.");
        var unmaskedContext = getUnmaskedContext$2(workInProgress);
        if (instance.props = props, instance.state = state, instance.refs = emptyObject, instance.context = getMaskedContext$2(workInProgress, unmaskedContext), ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != workInProgress.type && !0 === workInProgress.type.unstable_asyncUpdates && (workInProgress.internalContextTag |= AsyncUpdates$1), "function" == typeof instance.componentWillMount) {
            callComponentWillMount(workInProgress, instance);
            var updateQueue = workInProgress.updateQueue;
            null !== updateQueue && (instance.state = beginUpdateQueue$2(current, workInProgress, updateQueue, instance, state, props, priorityLevel));
        }
        "function" == typeof instance.componentDidMount && (workInProgress.effectTag |= Update$1);
    }
    function updateClassInstance(current, workInProgress, priorityLevel) {
        var instance = workInProgress.stateNode;
        resetInputPointers(workInProgress, instance);
        var oldProps = workInProgress.memoizedProps,
            newProps = workInProgress.pendingProps;
        newProps || (newProps = oldProps, invariant(null != newProps, "There should always be pending or memoized props. This error is " + "likely caused by a bug in React. Please file an issue."));
        var oldContext = instance.context,
            newUnmaskedContext = getUnmaskedContext$2(workInProgress),
            newContext = getMaskedContext$2(workInProgress, newUnmaskedContext);
        "function" != typeof instance.componentWillReceiveProps || oldProps === newProps && oldContext === newContext || callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
        var oldState = workInProgress.memoizedState,
            newState = void 0;
        if (newState = null !== workInProgress.updateQueue ? beginUpdateQueue$2(current, workInProgress, workInProgress.updateQueue, instance, oldState, newProps, priorityLevel) : oldState, !(oldProps !== newProps || oldState !== newState || hasContextChanged$2() || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate)) return "function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), !1;
        var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);
        return shouldUpdate ? ("function" == typeof instance.componentWillUpdate && instance.componentWillUpdate(newProps, newState, newContext), "function" == typeof instance.componentDidUpdate && (workInProgress.effectTag |= Update$1)) : ("function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), memoizeProps(workInProgress, newProps), memoizeState(workInProgress, newState)), instance.props = newProps, instance.state = newState, instance.context = newContext, shouldUpdate;
    }
    return {
        adoptClassInstance: adoptClassInstance,
        constructClassInstance: constructClassInstance,
        mountClassInstance: mountClassInstance,
        updateClassInstance: updateClassInstance
    };
},
    mountChildFibersInPlace = ReactChildFiber.mountChildFibersInPlace,
    reconcileChildFibers = ReactChildFiber.reconcileChildFibers,
    reconcileChildFibersInPlace = ReactChildFiber.reconcileChildFibersInPlace,
    cloneChildFibers = ReactChildFiber.cloneChildFibers,
    beginUpdateQueue$1 = ReactFiberUpdateQueue.beginUpdateQueue,
    getMaskedContext$1 = ReactFiberContext.getMaskedContext,
    getUnmaskedContext$1 = ReactFiberContext.getUnmaskedContext,
    hasContextChanged$1 = ReactFiberContext.hasContextChanged,
    pushContextProvider$1 = ReactFiberContext.pushContextProvider,
    pushTopLevelContextObject$1 = ReactFiberContext.pushTopLevelContextObject,
    invalidateContextProvider$1 = ReactFiberContext.invalidateContextProvider,
    IndeterminateComponent$2 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent$1 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$6 = ReactTypeOfWork.ClassComponent,
    HostRoot$5 = ReactTypeOfWork.HostRoot,
    HostComponent$6 = ReactTypeOfWork.HostComponent,
    HostText$2 = ReactTypeOfWork.HostText,
    HostPortal$2 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$1 = ReactTypeOfWork.CoroutineComponent,
    CoroutineHandlerPhase = ReactTypeOfWork.CoroutineHandlerPhase,
    YieldComponent$1 = ReactTypeOfWork.YieldComponent,
    Fragment$1 = ReactTypeOfWork.Fragment,
    NoWork$3 = ReactPriorityLevel.NoWork,
    OffscreenPriority$1 = ReactPriorityLevel.OffscreenPriority,
    PerformedWork$1 = ReactTypeOfSideEffect.PerformedWork,
    Placement$2 = ReactTypeOfSideEffect.Placement,
    ContentReset$1 = ReactTypeOfSideEffect.ContentReset,
    Err$1 = ReactTypeOfSideEffect.Err,
    Ref$1 = ReactTypeOfSideEffect.Ref,
    ReactCurrentOwner$2 = ReactGlobalSharedState_1.ReactCurrentOwner,
    ReactFiberBeginWork = function ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext) {
    var shouldSetTextContent = config.shouldSetTextContent,
        useSyncScheduling = config.useSyncScheduling,
        shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree,
        pushHostContext = hostContext.pushHostContext,
        pushHostContainer = hostContext.pushHostContainer,
        enterHydrationState = hydrationContext.enterHydrationState,
        resetHydrationState = hydrationContext.resetHydrationState,
        tryToClaimNextHydratableInstance = hydrationContext.tryToClaimNextHydratableInstance,
        _ReactFiberClassCompo = ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState),
        adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
        constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
        mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
        updateClassInstance = _ReactFiberClassCompo.updateClassInstance;
    function reconcileChildren(current, workInProgress, nextChildren) {
        reconcileChildrenAtPriority(current, workInProgress, nextChildren, workInProgress.pendingWorkPriority);
    }
    function reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel) {
        null === current ? workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.child = reconcileChildFibers(workInProgress, workInProgress.child, nextChildren, priorityLevel) : workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
    }
    function updateFragment(current, workInProgress) {
        var nextChildren = workInProgress.pendingProps;
        if (hasContextChanged$1()) null === nextChildren && (nextChildren = workInProgress.memoizedProps);else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        return reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren), workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        null === ref || current && current.ref === ref || (workInProgress.effectTag |= Ref$1);
    }
    function updateFunctionalComponent(current, workInProgress) {
        var fn = workInProgress.type,
            nextProps = workInProgress.pendingProps,
            memoizedProps = workInProgress.memoizedProps;
        if (hasContextChanged$1()) null === nextProps && (nextProps = memoizedProps);else {
            if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
            if ("function" == typeof fn.shouldComponentUpdate && !fn.shouldComponentUpdate(memoizedProps, nextProps)) return memoizeProps(workInProgress, nextProps), bailoutOnAlreadyFinishedWork(current, workInProgress);
        }
        var nextChildren,
            unmaskedContext = getUnmaskedContext$1(workInProgress),
            context = getMaskedContext$1(workInProgress, unmaskedContext);
        return nextChildren = fn(nextProps, context), workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, priorityLevel) {
        var hasContext = pushContextProvider$1(workInProgress),
            shouldUpdate = void 0;
        return null === current ? workInProgress.stateNode ? invariant(!1, "Resuming work not yet implemented.") : (constructClassInstance(workInProgress, workInProgress.pendingProps), mountClassInstance(workInProgress, priorityLevel), shouldUpdate = !0) : shouldUpdate = updateClassInstance(current, workInProgress, priorityLevel), finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
    }
    function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
        if (markRef(current, workInProgress), !shouldUpdate) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        var instance = workInProgress.stateNode;
        ReactCurrentOwner$2.current = workInProgress;
        var nextChildren = void 0;
        return nextChildren = instance.render(), workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeState(workInProgress, instance.state), memoizeProps(workInProgress, instance.props), hasContext && invalidateContextProvider$1(workInProgress), workInProgress.child;
    }
    function updateHostRoot(current, workInProgress, priorityLevel) {
        var root = workInProgress.stateNode;
        root.pendingContext ? pushTopLevelContextObject$1(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject$1(workInProgress, root.context, !1), pushHostContainer(workInProgress, root.containerInfo);
        var updateQueue = workInProgress.updateQueue;
        if (null !== updateQueue) {
            var prevState = workInProgress.memoizedState,
                state = beginUpdateQueue$1(current, workInProgress, updateQueue, null, prevState, null, priorityLevel);
            if (prevState === state) return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
            var element = state.element;
            return null !== current && null !== current.child || !enterHydrationState(workInProgress) ? (resetHydrationState(), reconcileChildren(current, workInProgress, element)) : (workInProgress.effectTag |= Placement$2, workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, element, priorityLevel)), memoizeState(workInProgress, state), workInProgress.child;
        }
        return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    function updateHostComponent(current, workInProgress, renderPriority) {
        pushHostContext(workInProgress), null === current && tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type,
            memoizedProps = workInProgress.memoizedProps,
            nextProps = workInProgress.pendingProps;
        null === nextProps && (nextProps = memoizedProps, invariant(null !== nextProps, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));
        var prevProps = null !== current ? current.memoizedProps : null;
        if (hasContextChanged$1()) ;else if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        var nextChildren = nextProps.children;
        return shouldSetTextContent(type, nextProps) ? nextChildren = null : prevProps && shouldSetTextContent(type, prevProps) && (workInProgress.effectTag |= ContentReset$1), markRef(current, workInProgress), renderPriority !== OffscreenPriority$1 && !useSyncScheduling && shouldDeprioritizeSubtree(type, nextProps) ? (workInProgress.pendingWorkPriority = OffscreenPriority$1, null) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child);
    }
    function updateHostText(current, workInProgress) {
        null === current && tryToClaimNextHydratableInstance(workInProgress);
        var nextProps = workInProgress.pendingProps;
        return null === nextProps && (nextProps = workInProgress.memoizedProps), memoizeProps(workInProgress, nextProps), null;
    }
    function mountIndeterminateComponent(current, workInProgress, priorityLevel) {
        invariant(null === current, "An indeterminate component should never have mounted. This error is " + "likely caused by a bug in React. Please file an issue.");
        var value,
            fn = workInProgress.type,
            props = workInProgress.pendingProps,
            unmaskedContext = getUnmaskedContext$1(workInProgress),
            context = getMaskedContext$1(workInProgress, unmaskedContext);
        if (value = fn(props, context), workInProgress.effectTag |= PerformedWork$1, "object" == typeof value && null !== value && "function" == typeof value.render) {
            workInProgress.tag = ClassComponent$6;
            var hasContext = pushContextProvider$1(workInProgress);
            return adoptClassInstance(workInProgress, value), mountClassInstance(workInProgress, priorityLevel), finishClassComponent(current, workInProgress, !0, hasContext);
        }
        return workInProgress.tag = FunctionalComponent$1, reconcileChildren(current, workInProgress, value), memoizeProps(workInProgress, props), workInProgress.child;
    }
    function updateCoroutineComponent(current, workInProgress) {
        var nextCoroutine = workInProgress.pendingProps;
        hasContextChanged$1() ? null === nextCoroutine && (nextCoroutine = current && current.memoizedProps, invariant(null !== nextCoroutine, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue.")) : null !== nextCoroutine && workInProgress.memoizedProps !== nextCoroutine || (nextCoroutine = workInProgress.memoizedProps);
        var nextChildren = nextCoroutine.children,
            priorityLevel = workInProgress.pendingWorkPriority;
        return null === current ? workInProgress.stateNode = mountChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : workInProgress.stateNode = reconcileChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel), memoizeProps(workInProgress, nextCoroutine), workInProgress.stateNode;
    }
    function updatePortalComponent(current, workInProgress) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var priorityLevel = workInProgress.pendingWorkPriority,
            nextChildren = workInProgress.pendingProps;
        if (hasContextChanged$1()) null === nextChildren && (nextChildren = current && current.memoizedProps, invariant(null != nextChildren, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        return null === current ? (workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel), memoizeProps(workInProgress, nextChildren)) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren)), workInProgress.child;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress) {
        return cloneChildFibers(current, workInProgress), workInProgress.child;
    }
    function bailoutOnLowPriority(current, workInProgress) {
        switch (workInProgress.tag) {
            case ClassComponent$6:
                pushContextProvider$1(workInProgress);
                break;

            case HostPortal$2:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        }
        return null;
    }
    function memoizeProps(workInProgress, nextProps) {
        workInProgress.memoizedProps = nextProps;
    }
    function memoizeState(workInProgress, nextState) {
        workInProgress.memoizedState = nextState;
    }
    function beginWork(current, workInProgress, priorityLevel) {
        if (workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
        switch (workInProgress.tag) {
            case IndeterminateComponent$2:
                return mountIndeterminateComponent(current, workInProgress, priorityLevel);

            case FunctionalComponent$1:
                return updateFunctionalComponent(current, workInProgress);

            case ClassComponent$6:
                return updateClassComponent(current, workInProgress, priorityLevel);

            case HostRoot$5:
                return updateHostRoot(current, workInProgress, priorityLevel);

            case HostComponent$6:
                return updateHostComponent(current, workInProgress, priorityLevel);

            case HostText$2:
                return updateHostText(current, workInProgress);

            case CoroutineHandlerPhase:
                workInProgress.tag = CoroutineComponent$1;

            case CoroutineComponent$1:
                return updateCoroutineComponent(current, workInProgress);

            case YieldComponent$1:
                return null;

            case HostPortal$2:
                return updatePortalComponent(current, workInProgress);

            case Fragment$1:
                return updateFragment(current, workInProgress);

            default:
                invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    function beginFailedWork(current, workInProgress, priorityLevel) {
        if (invariant(workInProgress.tag === ClassComponent$6 || workInProgress.tag === HostRoot$5, "Invalid type of work. This error is likely caused by a bug in React. " + "Please file an issue."), workInProgress.effectTag |= Err$1, null === current ? workInProgress.child = null : workInProgress.child !== current.child && (workInProgress.child = current.child), workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
        if (workInProgress.firstEffect = null, workInProgress.lastEffect = null, reconcileChildrenAtPriority(current, workInProgress, null, priorityLevel), workInProgress.tag === ClassComponent$6) {
            var instance = workInProgress.stateNode;
            workInProgress.memoizedProps = instance.props, workInProgress.memoizedState = instance.state;
        }
        return workInProgress.child;
    }
    return {
        beginWork: beginWork,
        beginFailedWork: beginFailedWork
    };
},
    reconcileChildFibers$2 = ReactChildFiber.reconcileChildFibers,
    popContextProvider$2 = ReactFiberContext.popContextProvider,
    IndeterminateComponent$3 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent$3 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$8 = ReactTypeOfWork.ClassComponent,
    HostRoot$6 = ReactTypeOfWork.HostRoot,
    HostComponent$7 = ReactTypeOfWork.HostComponent,
    HostText$4 = ReactTypeOfWork.HostText,
    HostPortal$4 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$3 = ReactTypeOfWork.CoroutineComponent,
    CoroutineHandlerPhase$1 = ReactTypeOfWork.CoroutineHandlerPhase,
    YieldComponent$3 = ReactTypeOfWork.YieldComponent,
    Fragment$3 = ReactTypeOfWork.Fragment,
    Placement$4 = ReactTypeOfSideEffect.Placement,
    Ref$2 = ReactTypeOfSideEffect.Ref,
    Update$2 = ReactTypeOfSideEffect.Update,
    OffscreenPriority$2 = ReactPriorityLevel.OffscreenPriority,
    ReactFiberCompleteWork = function ReactFiberCompleteWork(config, hostContext, hydrationContext) {
    var createInstance = config.createInstance,
        createTextInstance = config.createTextInstance,
        appendInitialChild = config.appendInitialChild,
        finalizeInitialChildren = config.finalizeInitialChildren,
        prepareUpdate = config.prepareUpdate,
        getRootHostContainer = hostContext.getRootHostContainer,
        popHostContext = hostContext.popHostContext,
        getHostContext = hostContext.getHostContext,
        popHostContainer = hostContext.popHostContainer,
        prepareToHydrateHostInstance = hydrationContext.prepareToHydrateHostInstance,
        prepareToHydrateHostTextInstance = hydrationContext.prepareToHydrateHostTextInstance,
        popHydrationState = hydrationContext.popHydrationState;
    function markUpdate(workInProgress) {
        workInProgress.effectTag |= Update$2;
    }
    function markRef(workInProgress) {
        workInProgress.effectTag |= Ref$2;
    }
    function appendAllYields(yields, workInProgress) {
        var node = workInProgress.stateNode;
        for (node && (node.return = workInProgress); null !== node;) {
            if (node.tag === HostComponent$7 || node.tag === HostText$4 || node.tag === HostPortal$4) invariant(!1, "A coroutine cannot have host component children.");else if (node.tag === YieldComponent$3) yields.push(node.type);else if (null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function moveCoroutineToHandlerPhase(current, workInProgress) {
        var coroutine = workInProgress.memoizedProps;
        invariant(coroutine, "Should be resolved by now. This error is likely caused by a bug in " + "React. Please file an issue."), workInProgress.tag = CoroutineHandlerPhase$1;
        var yields = [];
        appendAllYields(yields, workInProgress);
        var fn = coroutine.handler,
            props = coroutine.props,
            nextChildren = fn(props, yields),
            currentFirstChild = null !== current ? current.child : null,
            priority = workInProgress.pendingWorkPriority;
        return workInProgress.child = reconcileChildFibers$2(workInProgress, currentFirstChild, nextChildren, priority), workInProgress.child;
    }
    function appendAllChildren(parent, workInProgress) {
        for (var node = workInProgress.child; null !== node;) {
            if (node.tag === HostComponent$7 || node.tag === HostText$4) appendInitialChild(parent, node.stateNode);else if (node.tag === HostPortal$4) ;else if (null !== node.child) {
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }
            node = node.sibling;
        }
    }
    function completeWork(current, workInProgress, renderPriority) {
        var newProps = workInProgress.pendingProps;
        switch (null === newProps ? newProps = workInProgress.memoizedProps : workInProgress.pendingWorkPriority === OffscreenPriority$2 && renderPriority !== OffscreenPriority$2 || (workInProgress.pendingProps = null), workInProgress.tag) {
            case FunctionalComponent$3:
                return null;

            case ClassComponent$8:
                return popContextProvider$2(workInProgress), null;

            case HostRoot$6:
                var fiberRoot = workInProgress.stateNode;
                return fiberRoot.pendingContext && (fiberRoot.context = fiberRoot.pendingContext, fiberRoot.pendingContext = null), null !== current && null !== current.child || (popHydrationState(workInProgress), workInProgress.effectTag &= ~Placement$4), null;

            case HostComponent$7:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer(),
                    type = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) {
                    var oldProps = current.memoizedProps,
                        instance = workInProgress.stateNode,
                        currentHostContext = getHostContext(),
                        updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
                    workInProgress.updateQueue = updatePayload, updatePayload && markUpdate(workInProgress), current.ref !== workInProgress.ref && markRef(workInProgress);
                } else {
                    if (!newProps) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                    var _currentHostContext = getHostContext();
                    if (popHydrationState(workInProgress)) prepareToHydrateHostInstance(workInProgress, rootContainerInstance) && markUpdate(workInProgress);else {
                        var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);
                        appendAllChildren(_instance, workInProgress), finalizeInitialChildren(_instance, type, newProps, rootContainerInstance) && markUpdate(workInProgress), workInProgress.stateNode = _instance;
                    }
                    null !== workInProgress.ref && markRef(workInProgress);
                }
                return null;

            case HostText$4:
                var newText = newProps;
                if (current && null != workInProgress.stateNode) {
                    current.memoizedProps !== newText && markUpdate(workInProgress);
                } else {
                    if ("string" != typeof newText) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                    var _rootContainerInstance = getRootHostContainer(),
                        _currentHostContext2 = getHostContext();
                    popHydrationState(workInProgress) ? prepareToHydrateHostTextInstance(workInProgress) && markUpdate(workInProgress) : workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
                }
                return null;

            case CoroutineComponent$3:
                return moveCoroutineToHandlerPhase(current, workInProgress);

            case CoroutineHandlerPhase$1:
                return workInProgress.tag = CoroutineComponent$3, null;

            case YieldComponent$3:
            case Fragment$3:
                return null;

            case HostPortal$4:
                return markUpdate(workInProgress), popHostContainer(workInProgress), null;

            case IndeterminateComponent$3:
                invariant(!1, "An indeterminate component should have become determinate before " + "completing. This error is likely caused by a bug in React. Please " + "file an issue.");

            default:
                invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    return {
        completeWork: completeWork
    };
},
    rendererID = null,
    injectInternals$1 = null,
    onCommitRoot$1 = null,
    onCommitUnmount$1 = null;

if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && __REACT_DEVTOOLS_GLOBAL_HOOK__.supportsFiber) {
    var inject$1 = __REACT_DEVTOOLS_GLOBAL_HOOK__.inject,
        onCommitFiberRoot = __REACT_DEVTOOLS_GLOBAL_HOOK__.onCommitFiberRoot,
        onCommitFiberUnmount = __REACT_DEVTOOLS_GLOBAL_HOOK__.onCommitFiberUnmount;
    injectInternals$1 = function injectInternals$1(internals) {
        warning(null == rendererID, "Cannot inject into DevTools twice."), rendererID = inject$1(internals);
    }, onCommitRoot$1 = function onCommitRoot$1(root) {
        if (null != rendererID) try {
            onCommitFiberRoot(rendererID, root);
        } catch (err) {}
    }, onCommitUnmount$1 = function onCommitUnmount$1(fiber) {
        if (null != rendererID) try {
            onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
    };
}

var injectInternals_1 = injectInternals$1,
    onCommitRoot_1 = onCommitRoot$1,
    onCommitUnmount_1 = onCommitUnmount$1,
    ReactFiberDevToolsHook = {
    injectInternals: injectInternals_1,
    onCommitRoot: onCommitRoot_1,
    onCommitUnmount: onCommitUnmount_1
},
    ClassComponent$9 = ReactTypeOfWork.ClassComponent,
    HostRoot$7 = ReactTypeOfWork.HostRoot,
    HostComponent$8 = ReactTypeOfWork.HostComponent,
    HostText$5 = ReactTypeOfWork.HostText,
    HostPortal$5 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$4 = ReactTypeOfWork.CoroutineComponent,
    commitCallbacks$1 = ReactFiberUpdateQueue.commitCallbacks,
    onCommitUnmount = ReactFiberDevToolsHook.onCommitUnmount,
    Placement$5 = ReactTypeOfSideEffect.Placement,
    Update$3 = ReactTypeOfSideEffect.Update,
    Callback$1 = ReactTypeOfSideEffect.Callback,
    ContentReset$2 = ReactTypeOfSideEffect.ContentReset,
    ReactFiberCommitWork = function ReactFiberCommitWork(config, captureError) {
    var commitMount = config.commitMount,
        commitUpdate = config.commitUpdate,
        resetTextContent = config.resetTextContent,
        commitTextUpdate = config.commitTextUpdate,
        appendChild = config.appendChild,
        appendChildToContainer = config.appendChildToContainer,
        insertBefore = config.insertBefore,
        insertInContainerBefore = config.insertInContainerBefore,
        removeChild = config.removeChild,
        removeChildFromContainer = config.removeChildFromContainer,
        getPublicInstance = config.getPublicInstance;
    function safelyCallComponentWillUnmount(current, instance) {
        try {
            instance.componentWillUnmount();
        } catch (unmountError) {
            captureError(current, unmountError);
        }
    }
    function safelyDetachRef(current) {
        var ref = current.ref;
        if (null !== ref) {
            try {
                ref(null);
            } catch (refError) {
                captureError(current, refError);
            }
        }
    }
    function getHostParentFiber(fiber) {
        for (var parent = fiber.return; null !== parent;) {
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        invariant(!1, "Expected to find a host parent. This error is likely caused by a bug " + "in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent$8 || fiber.tag === HostRoot$7 || fiber.tag === HostPortal$5;
    }
    function getHostSibling(fiber) {
        var node = fiber;
        siblings: for (; !0;) {
            for (; null === node.sibling;) {
                if (null === node.return || isHostParent(node.return)) return null;
                node = node.return;
            }
            for (node.sibling.return = node.return, node = node.sibling; node.tag !== HostComponent$8 && node.tag !== HostText$5;) {
                if (node.effectTag & Placement$5) continue siblings;
                if (null === node.child || node.tag === HostPortal$5) continue siblings;
                node.child.return = node, node = node.child;
            }
            if (!(node.effectTag & Placement$5)) return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork),
            parent = void 0,
            isContainer = void 0;
        switch (parentFiber.tag) {
            case HostComponent$8:
                parent = parentFiber.stateNode, isContainer = !1;
                break;

            case HostRoot$7:
            case HostPortal$5:
                parent = parentFiber.stateNode.containerInfo, isContainer = !0;
                break;

            default:
                invariant(!1, "Invalid host parent fiber. This error is likely caused by a bug " + "in React. Please file an issue.");
        }
        parentFiber.effectTag & ContentReset$2 && (resetTextContent(parent), parentFiber.effectTag &= ~ContentReset$2);
        for (var before = getHostSibling(finishedWork), node = finishedWork; !0;) {
            if (node.tag === HostComponent$8 || node.tag === HostText$5) before ? isContainer ? insertInContainerBefore(parent, node.stateNode, before) : insertBefore(parent, node.stateNode, before) : isContainer ? appendChildToContainer(parent, node.stateNode) : appendChild(parent, node.stateNode);else if (node.tag === HostPortal$5) ;else if (null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === finishedWork) return;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function commitNestedUnmounts(root) {
        for (var node = root; !0;) {
            if (commitUnmount(node), null === node.child || node.tag === HostPortal$5) {
                if (node === root) return;
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === root) return;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            } else node.child.return = node, node = node.child;
        }
    }
    function unmountHostComponents(current) {
        for (var node = current, currentParentIsValid = !1, currentParent = void 0, currentParentIsContainer = void 0; !0;) {
            if (!currentParentIsValid) {
                var parent = node.return;
                findParent: for (; !0;) {
                    switch (invariant(null !== parent, "Expected to find a host parent. This error is likely caused by " + "a bug in React. Please file an issue."), parent.tag) {
                        case HostComponent$8:
                            currentParent = parent.stateNode, currentParentIsContainer = !1;
                            break findParent;

                        case HostRoot$7:
                        case HostPortal$5:
                            currentParent = parent.stateNode.containerInfo, currentParentIsContainer = !0;
                            break findParent;
                    }
                    parent = parent.return;
                }
                currentParentIsValid = !0;
            }
            if (node.tag === HostComponent$8 || node.tag === HostText$5) commitNestedUnmounts(node), currentParentIsContainer ? removeChildFromContainer(currentParent, node.stateNode) : removeChild(currentParent, node.stateNode);else if (node.tag === HostPortal$5) {
                if (currentParent = node.stateNode.containerInfo, null !== node.child) {
                    node.child.return = node, node = node.child;
                    continue;
                }
            } else if (commitUnmount(node), null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            if (node === current) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === current) return;
                node = node.return, node.tag === HostPortal$5 && (currentParentIsValid = !1);
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function commitDeletion(current) {
        unmountHostComponents(current), current.return = null, current.child = null, current.alternate && (current.alternate.child = null, current.alternate.return = null);
    }
    function commitUnmount(current) {
        switch ("function" == typeof onCommitUnmount && onCommitUnmount(current), current.tag) {
            case ClassComponent$9:
                safelyDetachRef(current);
                var instance = current.stateNode;
                return void ("function" == typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(current, instance));

            case HostComponent$8:
                return void safelyDetachRef(current);

            case CoroutineComponent$4:
                return void commitNestedUnmounts(current.stateNode);

            case HostPortal$5:
                return void unmountHostComponents(current);
        }
    }
    function commitWork(current, finishedWork) {
        switch (finishedWork.tag) {
            case ClassComponent$9:
                return;

            case HostComponent$8:
                var instance = finishedWork.stateNode;
                if (null != instance) {
                    var newProps = finishedWork.memoizedProps,
                        oldProps = null !== current ? current.memoizedProps : newProps,
                        type = finishedWork.type,
                        updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null, null !== updatePayload && commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
                }
                return;

            case HostText$5:
                invariant(null !== finishedWork.stateNode, "This should have a text node initialized. This error is likely " + "caused by a bug in React. Please file an issue.");
                var textInstance = finishedWork.stateNode,
                    newText = finishedWork.memoizedProps,
                    oldText = null !== current ? current.memoizedProps : newText;
                return void commitTextUpdate(textInstance, oldText, newText);

            case HostRoot$7:
            case HostPortal$5:
                return;

            default:
                invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitLifeCycles(current, finishedWork) {
        switch (finishedWork.tag) {
            case ClassComponent$9:
                var instance = finishedWork.stateNode;
                if (finishedWork.effectTag & Update$3) if (null === current) instance.componentDidMount();else {
                    var prevProps = current.memoizedProps,
                        prevState = current.memoizedState;
                    instance.componentDidUpdate(prevProps, prevState);
                }
                return void (finishedWork.effectTag & Callback$1 && null !== finishedWork.updateQueue && commitCallbacks$1(finishedWork, finishedWork.updateQueue, instance));

            case HostRoot$7:
                var updateQueue = finishedWork.updateQueue;
                if (null !== updateQueue) {
                    var _instance = finishedWork.child && finishedWork.child.stateNode;
                    commitCallbacks$1(finishedWork, updateQueue, _instance);
                }
                return;

            case HostComponent$8:
                var _instance2 = finishedWork.stateNode;
                if (null === current && finishedWork.effectTag & Update$3) {
                    var type = finishedWork.type,
                        props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props, finishedWork);
                }
                return;

            case HostText$5:
            case HostPortal$5:
                return;

            default:
                invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (null !== ref) {
            var instance = finishedWork.stateNode;
            switch (finishedWork.tag) {
                case HostComponent$8:
                    ref(getPublicInstance(instance));
                    break;

                default:
                    ref(instance);
            }
        }
    }
    function commitDetachRef(current) {
        var currentRef = current.ref;
        null !== currentRef && currentRef(null);
    }
    return {
        commitPlacement: commitPlacement,
        commitDeletion: commitDeletion,
        commitWork: commitWork,
        commitLifeCycles: commitLifeCycles,
        commitAttachRef: commitAttachRef,
        commitDetachRef: commitDetachRef
    };
},
    createCursor$2 = ReactFiberStack.createCursor,
    pop$2 = ReactFiberStack.pop,
    push$2 = ReactFiberStack.push,
    NO_CONTEXT = {},
    ReactFiberHostContext = function ReactFiberHostContext(config) {
    var getChildHostContext = config.getChildHostContext,
        getRootHostContext = config.getRootHostContext,
        contextStackCursor = createCursor$2(NO_CONTEXT),
        contextFiberStackCursor = createCursor$2(NO_CONTEXT),
        rootInstanceStackCursor = createCursor$2(NO_CONTEXT);
    function requiredContext(c) {
        return invariant(c !== NO_CONTEXT, "Expected host context to exist. This error is likely caused by a bug " + "in React. Please file an issue."), c;
    }
    function getRootHostContainer() {
        return requiredContext(rootInstanceStackCursor.current);
    }
    function pushHostContainer(fiber, nextRootInstance) {
        push$2(rootInstanceStackCursor, nextRootInstance, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance);
        push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber), pop$2(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        return requiredContext(contextStackCursor.current);
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current),
            context = requiredContext(contextStackCursor.current),
            nextContext = getChildHostContext(context, fiber.type, rootInstance);
        context !== nextContext && (push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextContext, fiber));
    }
    function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber));
    }
    function resetHostContainer() {
        contextStackCursor.current = NO_CONTEXT, rootInstanceStackCursor.current = NO_CONTEXT;
    }
    return {
        getHostContext: getHostContext,
        getRootHostContainer: getRootHostContainer,
        popHostContainer: popHostContainer,
        popHostContext: popHostContext,
        pushHostContainer: pushHostContainer,
        pushHostContext: pushHostContext,
        resetHostContainer: resetHostContainer
    };
},
    HostComponent$9 = ReactTypeOfWork.HostComponent,
    HostText$6 = ReactTypeOfWork.HostText,
    HostRoot$8 = ReactTypeOfWork.HostRoot,
    Deletion$2 = ReactTypeOfSideEffect.Deletion,
    Placement$6 = ReactTypeOfSideEffect.Placement,
    createFiberFromHostInstanceForDeletion$1 = ReactFiber.createFiberFromHostInstanceForDeletion,
    ReactFiberHydrationContext = function ReactFiberHydrationContext(config) {
    var shouldSetTextContent = config.shouldSetTextContent,
        canHydrateInstance = config.canHydrateInstance,
        canHydrateTextInstance = config.canHydrateTextInstance,
        getNextHydratableSibling = config.getNextHydratableSibling,
        getFirstHydratableChild = config.getFirstHydratableChild,
        hydrateInstance = config.hydrateInstance,
        hydrateTextInstance = config.hydrateTextInstance,
        didNotHydrateInstance = config.didNotHydrateInstance,
        didNotFindHydratableInstance = config.didNotFindHydratableInstance,
        didNotFindHydratableTextInstance = config.didNotFindHydratableTextInstance;
    if (!(canHydrateInstance && canHydrateTextInstance && getNextHydratableSibling && getFirstHydratableChild && hydrateInstance && hydrateTextInstance && didNotHydrateInstance && didNotFindHydratableInstance && didNotFindHydratableTextInstance)) return {
        enterHydrationState: function enterHydrationState() {
            return !1;
        },
        resetHydrationState: function resetHydrationState() {},
        tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance() {},
        prepareToHydrateHostInstance: function prepareToHydrateHostInstance() {
            invariant(!1, "React bug.");
        },
        prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance() {
            invariant(!1, "React bug.");
        },
        popHydrationState: function popHydrationState(fiber) {
            return !1;
        }
    };
    var hydrationParentFiber = null,
        nextHydratableInstance = null,
        isHydrating = !1;
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        return nextHydratableInstance = getFirstHydratableChild(parentInstance), hydrationParentFiber = fiber, isHydrating = !0, !0;
    }
    function deleteHydratableInstance(returnFiber, instance) {
        var childToDelete = createFiberFromHostInstanceForDeletion$1();
        childToDelete.stateNode = instance, childToDelete.return = returnFiber, childToDelete.effectTag = Deletion$2, null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.effectTag |= Placement$6;
    }
    function canHydrate(fiber, nextInstance) {
        switch (fiber.tag) {
            case HostComponent$9:
                var type = fiber.type,
                    props = fiber.pendingProps;
                return canHydrateInstance(nextInstance, type, props);

            case HostText$6:
                var text = fiber.pendingProps;
                return canHydrateTextInstance(nextInstance, text);

            default:
                return !1;
        }
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (isHydrating) {
            var nextInstance = nextHydratableInstance;
            if (!nextInstance) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
            if (!canHydrate(fiber, nextInstance)) {
                if (!(nextInstance = getNextHydratableSibling(nextInstance)) || !canHydrate(fiber, nextInstance)) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
                deleteHydratableInstance(hydrationParentFiber, nextHydratableInstance);
            }
            fiber.stateNode = nextInstance, hydrationParentFiber = fiber, nextHydratableInstance = getFirstHydratableChild(nextInstance);
        }
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance) {
        var instance = fiber.stateNode,
            updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, fiber);
        return fiber.updateQueue = updatePayload, null !== updatePayload;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        return hydrateTextInstance(textInstance, fiber.memoizedProps, fiber);
    }
    function popToNextHostParent(fiber) {
        for (var parent = fiber.return; null !== parent && parent.tag !== HostComponent$9 && parent.tag !== HostRoot$8;) {
            parent = parent.return;
        }hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) return !1;
        if (!isHydrating) return popToNextHostParent(fiber), isHydrating = !0, !1;
        var type = fiber.type;
        if (fiber.tag !== HostComponent$9 || "head" !== type && "body" !== type && !shouldSetTextContent(type, fiber.memoizedProps)) for (var nextInstance = nextHydratableInstance; nextInstance;) {
            deleteHydratableInstance(fiber, nextInstance), nextInstance = getNextHydratableSibling(nextInstance);
        }return popToNextHostParent(fiber), nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null, !0;
    }
    function resetHydrationState() {
        hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1;
    }
    return {
        enterHydrationState: enterHydrationState,
        resetHydrationState: resetHydrationState,
        tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
        prepareToHydrateHostInstance: prepareToHydrateHostInstance,
        prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
        popHydrationState: popHydrationState
    };
},
    popContextProvider$1 = ReactFiberContext.popContextProvider,
    reset$1 = ReactFiberStack.reset,
    getStackAddendumByWorkInProgressFiber = ReactFiberComponentTreeHook.getStackAddendumByWorkInProgressFiber,
    logCapturedError$1 = ReactFiberErrorLogger.logCapturedError,
    ReactCurrentOwner$1 = ReactGlobalSharedState_1.ReactCurrentOwner,
    createWorkInProgress$1 = ReactFiber.createWorkInProgress,
    largerPriority$1 = ReactFiber.largerPriority,
    onCommitRoot = ReactFiberDevToolsHook.onCommitRoot,
    NoWork$2 = ReactPriorityLevel.NoWork,
    SynchronousPriority$1 = ReactPriorityLevel.SynchronousPriority,
    TaskPriority$1 = ReactPriorityLevel.TaskPriority,
    HighPriority = ReactPriorityLevel.HighPriority,
    LowPriority = ReactPriorityLevel.LowPriority,
    OffscreenPriority = ReactPriorityLevel.OffscreenPriority,
    AsyncUpdates = ReactTypeOfInternalContext.AsyncUpdates,
    PerformedWork = ReactTypeOfSideEffect.PerformedWork,
    Placement$1 = ReactTypeOfSideEffect.Placement,
    Update = ReactTypeOfSideEffect.Update,
    PlacementAndUpdate = ReactTypeOfSideEffect.PlacementAndUpdate,
    Deletion = ReactTypeOfSideEffect.Deletion,
    ContentReset = ReactTypeOfSideEffect.ContentReset,
    Callback = ReactTypeOfSideEffect.Callback,
    Err = ReactTypeOfSideEffect.Err,
    Ref = ReactTypeOfSideEffect.Ref,
    HostRoot$4 = ReactTypeOfWork.HostRoot,
    HostComponent$4 = ReactTypeOfWork.HostComponent,
    HostPortal$1 = ReactTypeOfWork.HostPortal,
    ClassComponent$4 = ReactTypeOfWork.ClassComponent,
    getUpdatePriority$1 = ReactFiberUpdateQueue.getUpdatePriority,
    _require14 = ReactFiberContext,
    resetContext$1 = _require14.resetContext,
    ReactFiberInstrumentation$1,
    timeHeuristicForUnitOfWork = 1,
    ReactFiberScheduler = function ReactFiberScheduler(config) {
    var hostContext = ReactFiberHostContext(config),
        hydrationContext = ReactFiberHydrationContext(config),
        popHostContainer = hostContext.popHostContainer,
        popHostContext = hostContext.popHostContext,
        resetHostContainer = hostContext.resetHostContainer,
        _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext),
        beginWork = _ReactFiberBeginWork.beginWork,
        beginFailedWork = _ReactFiberBeginWork.beginFailedWork,
        _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext, hydrationContext),
        completeWork = _ReactFiberCompleteWo.completeWork,
        _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
        commitPlacement = _ReactFiberCommitWork.commitPlacement,
        commitDeletion = _ReactFiberCommitWork.commitDeletion,
        commitWork = _ReactFiberCommitWork.commitWork,
        commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
        commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
        commitDetachRef = _ReactFiberCommitWork.commitDetachRef,
        scheduleDeferredCallback = config.scheduleDeferredCallback,
        useSyncScheduling = config.useSyncScheduling,
        prepareForCommit = config.prepareForCommit,
        resetAfterCommit = config.resetAfterCommit,
        priorityContext = NoWork$2,
        priorityContextBeforeReconciliation = NoWork$2,
        isPerformingWork = !1,
        deadlineHasExpired = !1,
        isBatchingUpdates = !1,
        isUnbatchingUpdates = !1,
        nextUnitOfWork = null,
        nextPriorityLevel = NoWork$2,
        nextEffect = null,
        pendingCommit = null,
        nextScheduledRoot = null,
        lastScheduledRoot = null,
        isCallbackScheduled = !1,
        capturedErrors = null,
        failedBoundaries = null,
        commitPhaseBoundaries = null,
        firstUncaughtError = null,
        fatalError = null,
        isCommitting = !1,
        isUnmounting = !1;
    function resetContextStack() {
        reset$1(), resetContext$1(), resetHostContainer();
    }
    function findNextUnitOfWork() {
        for (; null !== nextScheduledRoot && nextScheduledRoot.current.pendingWorkPriority === NoWork$2;) {
            nextScheduledRoot.isScheduled = !1;
            var next = nextScheduledRoot.nextScheduledRoot;
            if (nextScheduledRoot.nextScheduledRoot = null, nextScheduledRoot === lastScheduledRoot) return nextScheduledRoot = null, lastScheduledRoot = null, nextPriorityLevel = NoWork$2, null;
            nextScheduledRoot = next;
        }
        for (var root = nextScheduledRoot, highestPriorityRoot = null, highestPriorityLevel = NoWork$2; null !== root;) {
            root.current.pendingWorkPriority !== NoWork$2 && (highestPriorityLevel === NoWork$2 || highestPriorityLevel > root.current.pendingWorkPriority) && (highestPriorityLevel = root.current.pendingWorkPriority, highestPriorityRoot = root), root = root.nextScheduledRoot;
        }return null !== highestPriorityRoot ? (nextPriorityLevel = highestPriorityLevel, priorityContext = nextPriorityLevel, resetContextStack(), createWorkInProgress$1(highestPriorityRoot.current, highestPriorityLevel)) : (nextPriorityLevel = NoWork$2, null);
    }
    function commitAllHostEffects() {
        for (; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;
            if (effectTag & ContentReset && config.resetTextContent(nextEffect.stateNode), effectTag & Ref) {
                var current = nextEffect.alternate;
                null !== current && commitDetachRef(current);
            }
            switch (effectTag & ~(Callback | Err | ContentReset | Ref | PerformedWork)) {
                case Placement$1:
                    commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                    break;

                case PlacementAndUpdate:
                    commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                    var _current = nextEffect.alternate;
                    commitWork(_current, nextEffect);
                    break;

                case Update:
                    var _current2 = nextEffect.alternate;
                    commitWork(_current2, nextEffect);
                    break;

                case Deletion:
                    isUnmounting = !0, commitDeletion(nextEffect), isUnmounting = !1;
            }
            nextEffect = nextEffect.nextEffect;
        }
    }
    function commitAllLifeCycles() {
        for (; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;
            if (effectTag & (Update | Callback)) {
                var current = nextEffect.alternate;
                commitLifeCycles(current, nextEffect);
            }
            effectTag & Ref && commitAttachRef(nextEffect), effectTag & Err && commitErrorHandling(nextEffect);
            var next = nextEffect.nextEffect;
            nextEffect.nextEffect = null, nextEffect = next;
        }
    }
    function commitAllWork(finishedWork) {
        isCommitting = !0, pendingCommit = null;
        var root = finishedWork.stateNode;
        invariant(root.current !== finishedWork, "Cannot commit the same tree as before. This is probably a bug " + "related to the return field. This error is likely caused by a bug " + "in React. Please file an issue."), ReactCurrentOwner$1.current = null;
        var previousPriorityContext = priorityContext;
        priorityContext = TaskPriority$1;
        var firstEffect = void 0;
        for (finishedWork.effectTag > PerformedWork ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, firstEffect = finishedWork.firstEffect) : firstEffect = finishedWork : firstEffect = finishedWork.firstEffect, prepareForCommit(), nextEffect = firstEffect; null !== nextEffect;) {
            var _error = null;
            try {
                commitAllHostEffects();
            } catch (e) {
                _error = e;
            }
            null !== _error && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
        }
        for (resetAfterCommit(), root.current = finishedWork, nextEffect = firstEffect; null !== nextEffect;) {
            var _error2 = null;
            try {
                commitAllLifeCycles();
            } catch (e) {
                _error2 = e;
            }
            null !== _error2 && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error2), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
        }
        isCommitting = !1, "function" == typeof onCommitRoot && onCommitRoot(finishedWork.stateNode), !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCommitWork(finishedWork), commitPhaseBoundaries && (commitPhaseBoundaries.forEach(scheduleErrorRecovery), commitPhaseBoundaries = null), priorityContext = previousPriorityContext;
    }
    function resetWorkPriority(workInProgress, renderPriority) {
        if (!(workInProgress.pendingWorkPriority !== NoWork$2 && workInProgress.pendingWorkPriority > renderPriority)) {
            for (var newPriority = getUpdatePriority$1(workInProgress), child = workInProgress.child; null !== child;) {
                newPriority = largerPriority$1(newPriority, child.pendingWorkPriority), child = child.sibling;
            }workInProgress.pendingWorkPriority = newPriority;
        }
    }
    function completeUnitOfWork(workInProgress) {
        for (; !0;) {
            var current = workInProgress.alternate,
                next = completeWork(current, workInProgress, nextPriorityLevel),
                returnFiber = workInProgress.return,
                siblingFiber = workInProgress.sibling;
            if (resetWorkPriority(workInProgress, nextPriorityLevel), null !== next) return !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), next;
            if (null !== returnFiber) {
                null === returnFiber.firstEffect && (returnFiber.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== returnFiber.lastEffect && (returnFiber.lastEffect.nextEffect = workInProgress.firstEffect), returnFiber.lastEffect = workInProgress.lastEffect);
                workInProgress.effectTag > PerformedWork && (null !== returnFiber.lastEffect ? returnFiber.lastEffect.nextEffect = workInProgress : returnFiber.firstEffect = workInProgress, returnFiber.lastEffect = workInProgress);
            }
            if (!1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), null !== siblingFiber) return siblingFiber;
            if (null === returnFiber) return nextPriorityLevel < HighPriority ? commitAllWork(workInProgress) : pendingCommit = workInProgress, null;
            workInProgress = returnFiber;
        }
        return null;
    }
    function performUnitOfWork(workInProgress) {
        var current = workInProgress.alternate,
            next = beginWork(current, workInProgress, nextPriorityLevel);
        return !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, next;
    }
    function performFailedUnitOfWork(workInProgress) {
        var current = workInProgress.alternate,
            next = beginFailedWork(current, workInProgress, nextPriorityLevel);
        return !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, next;
    }
    function clearErrors() {
        for (null === nextUnitOfWork && (nextUnitOfWork = findNextUnitOfWork()); null !== capturedErrors && capturedErrors.size && null !== nextUnitOfWork && nextPriorityLevel !== NoWork$2 && nextPriorityLevel <= TaskPriority$1;) {
            null === (nextUnitOfWork = hasCapturedError(nextUnitOfWork) ? performFailedUnitOfWork(nextUnitOfWork) : performUnitOfWork(nextUnitOfWork)) && (nextUnitOfWork = findNextUnitOfWork());
        }
    }
    function workLoopAsync(minPriorityLevel, deadline) {
        for (; null !== nextUnitOfWork && !deadlineHasExpired;) {
            if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                if (null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork)) && null !== pendingCommit) if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                    if (commitAllWork(pendingCommit), nextUnitOfWork = findNextUnitOfWork(), clearErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel < HighPriority) break;
                } else deadlineHasExpired = !0;
            } else deadlineHasExpired = !0;
        }
    }
    function workLoopSync(minPriorityLevel) {
        for (; null !== nextUnitOfWork && !(null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork)) && (nextUnitOfWork = findNextUnitOfWork(), clearErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel > TaskPriority$1));) {}
    }
    function workLoop(minPriorityLevel, deadline) {
        clearErrors(), null === nextUnitOfWork && (nextUnitOfWork = findNextUnitOfWork()), nextPriorityLevel !== NoWork$2 && nextPriorityLevel <= minPriorityLevel && (nextPriorityLevel <= TaskPriority$1 ? workLoopSync(minPriorityLevel) : null !== deadline && workLoopAsync(minPriorityLevel, deadline));
    }
    function performDeferredWork(deadline) {
        performWork(OffscreenPriority, deadline);
    }
    function performWork(minPriorityLevel, deadline) {
        invariant(!isPerformingWork, "performWork was called recursively. This error is likely caused " + "by a bug in React. Please file an issue."), isPerformingWork = !0;
        for (var hasRemainingAsyncWork = !1; null === fatalError;) {
            null === pendingCommit || deadlineHasExpired || commitAllWork(pendingCommit), priorityContextBeforeReconciliation = priorityContext;
            var _error3 = null;
            try {
                workLoop(minPriorityLevel, deadline);
            } catch (e) {
                _error3 = e;
            }
            if (priorityContext = priorityContextBeforeReconciliation, null === _error3) {
                switch (nextPriorityLevel) {
                    case SynchronousPriority$1:
                    case TaskPriority$1:
                        if (nextPriorityLevel <= minPriorityLevel) continue;
                        break;

                    case HighPriority:
                    case LowPriority:
                    case OffscreenPriority:
                        if (null === deadline) hasRemainingAsyncWork = !0;else {
                            if (!deadlineHasExpired && nextPriorityLevel <= minPriorityLevel) continue;
                            hasRemainingAsyncWork = !0;
                        }
                        break;

                    case NoWork$2:
                        break;

                    default:
                        invariant(!1, "Switch statement should be exhuastive.");
                }
                break;
            }
            var failedWork = nextUnitOfWork;
            if (null === failedWork) null === fatalError && (fatalError = _error3);else {
                var maybeBoundary = captureError(failedWork, _error3);
                if (null !== maybeBoundary) {
                    var boundary = maybeBoundary;
                    beginFailedWork(boundary.alternate, boundary, nextPriorityLevel), unwindContexts(failedWork, boundary), nextUnitOfWork = completeUnitOfWork(boundary);
                }
            }
        }
        null !== deadline && (isCallbackScheduled = !1), hasRemainingAsyncWork && !isCallbackScheduled && (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
        var errorToThrow = null !== fatalError ? fatalError : firstUncaughtError;
        if (isPerformingWork = !1, deadlineHasExpired = !1, fatalError = null, firstUncaughtError = null, capturedErrors = null, failedBoundaries = null, null !== errorToThrow) throw errorToThrow;
    }
    function captureError(failedWork, error) {
        ReactCurrentOwner$1.current = null, nextUnitOfWork = null;
        var boundary = null,
            errorBoundaryFound = !1,
            willRetry = !1,
            errorBoundaryName = null;
        if (failedWork.tag === HostRoot$4) boundary = failedWork, isFailedBoundary(failedWork) && (fatalError = error);else for (var node = failedWork.return; null !== node && null === boundary;) {
            if (node.tag === ClassComponent$4) {
                var instance = node.stateNode;
                "function" == typeof instance.unstable_handleError && (errorBoundaryFound = !0, errorBoundaryName = getComponentName_1(node), boundary = node, willRetry = !0);
            } else node.tag === HostRoot$4 && (boundary = node);
            if (isFailedBoundary(node)) {
                if (isUnmounting) return null;
                if (null !== commitPhaseBoundaries && (commitPhaseBoundaries.has(node) || null !== node.alternate && commitPhaseBoundaries.has(node.alternate))) return null;
                boundary = null, willRetry = !1;
            }
            node = node.return;
        }
        if (null !== boundary) {
            null === failedBoundaries && (failedBoundaries = new Set()), failedBoundaries.add(boundary);
            var _componentStack = getStackAddendumByWorkInProgressFiber(failedWork),
                _componentName = getComponentName_1(failedWork);
            return null === capturedErrors && (capturedErrors = new Map()), capturedErrors.set(boundary, {
                componentName: _componentName,
                componentStack: _componentStack,
                error: error,
                errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
                errorBoundaryFound: errorBoundaryFound,
                errorBoundaryName: errorBoundaryName,
                willRetry: willRetry
            }), isCommitting ? (null === commitPhaseBoundaries && (commitPhaseBoundaries = new Set()), commitPhaseBoundaries.add(boundary)) : scheduleErrorRecovery(boundary), boundary;
        }
        return null === firstUncaughtError && (firstUncaughtError = error), null;
    }
    function hasCapturedError(fiber) {
        return null !== capturedErrors && (capturedErrors.has(fiber) || null !== fiber.alternate && capturedErrors.has(fiber.alternate));
    }
    function isFailedBoundary(fiber) {
        return null !== failedBoundaries && (failedBoundaries.has(fiber) || null !== fiber.alternate && failedBoundaries.has(fiber.alternate));
    }
    function commitErrorHandling(effectfulFiber) {
        var capturedError = void 0;
        null !== capturedErrors && (capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber), null == capturedError && null !== effectfulFiber.alternate && (effectfulFiber = effectfulFiber.alternate, capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber))), invariant(null != capturedError, "No error for given unit of work. This error is likely caused by a " + "bug in React. Please file an issue.");
        var error = capturedError.error;
        try {
            logCapturedError$1(capturedError);
        } catch (e) {
            console.error(e);
        }
        switch (effectfulFiber.tag) {
            case ClassComponent$4:
                var instance = effectfulFiber.stateNode,
                    info = {
                    componentStack: capturedError.componentStack
                };
                return void instance.unstable_handleError(error, info);

            case HostRoot$4:
                return void (null === firstUncaughtError && (firstUncaughtError = error));

            default:
                invariant(!1, "Invalid type of work. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    function unwindContexts(from, to) {
        for (var node = from; null !== node && node !== to && node.alternate !== to;) {
            switch (node.tag) {
                case ClassComponent$4:
                    popContextProvider$1(node);
                    break;

                case HostComponent$4:
                    popHostContext(node);
                    break;

                case HostRoot$4:
                case HostPortal$1:
                    popHostContainer(node);
            }
            node = node.return;
        }
    }
    function scheduleRoot(root, priorityLevel) {
        priorityLevel !== NoWork$2 && (root.isScheduled || (root.isScheduled = !0, lastScheduledRoot ? (lastScheduledRoot.nextScheduledRoot = root, lastScheduledRoot = root) : (nextScheduledRoot = root, lastScheduledRoot = root)));
    }
    function scheduleUpdate(fiber, priorityLevel) {
        priorityLevel <= nextPriorityLevel && (nextUnitOfWork = null);
        for (var node = fiber, shouldContinue = !0; null !== node && shouldContinue;) {
            if (shouldContinue = !1, (node.pendingWorkPriority === NoWork$2 || node.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.pendingWorkPriority = priorityLevel), null !== node.alternate && (node.alternate.pendingWorkPriority === NoWork$2 || node.alternate.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.alternate.pendingWorkPriority = priorityLevel), null === node.return) {
                if (node.tag !== HostRoot$4) return;
                if (scheduleRoot(node.stateNode, priorityLevel), !isPerformingWork) switch (priorityLevel) {
                    case SynchronousPriority$1:
                        isUnbatchingUpdates ? performWork(SynchronousPriority$1, null) : performWork(TaskPriority$1, null);
                        break;

                    case TaskPriority$1:
                        invariant(isBatchingUpdates, "Task updates can only be scheduled as a nested update or " + "inside batchedUpdates.");
                        break;

                    default:
                        isCallbackScheduled || (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
                }
            }
            node = node.return;
        }
    }
    function getPriorityContext(fiber, forceAsync) {
        var priorityLevel = priorityContext;
        return priorityLevel === NoWork$2 && (priorityLevel = !useSyncScheduling || fiber.internalContextTag & AsyncUpdates || forceAsync ? LowPriority : SynchronousPriority$1), priorityLevel === SynchronousPriority$1 && (isPerformingWork || isBatchingUpdates) ? TaskPriority$1 : priorityLevel;
    }
    function scheduleErrorRecovery(fiber) {
        scheduleUpdate(fiber, TaskPriority$1);
    }
    function performWithPriority(priorityLevel, fn) {
        var previousPriorityContext = priorityContext;
        priorityContext = priorityLevel;
        try {
            fn();
        } finally {
            priorityContext = previousPriorityContext;
        }
    }
    function batchedUpdates(fn, a) {
        var previousIsBatchingUpdates = isBatchingUpdates;
        isBatchingUpdates = !0;
        try {
            return fn(a);
        } finally {
            isBatchingUpdates = previousIsBatchingUpdates, isPerformingWork || isBatchingUpdates || performWork(TaskPriority$1, null);
        }
    }
    function unbatchedUpdates(fn) {
        var previousIsUnbatchingUpdates = isUnbatchingUpdates,
            previousIsBatchingUpdates = isBatchingUpdates;
        isUnbatchingUpdates = isBatchingUpdates, isBatchingUpdates = !1;
        try {
            return fn();
        } finally {
            isBatchingUpdates = previousIsBatchingUpdates, isUnbatchingUpdates = previousIsUnbatchingUpdates;
        }
    }
    function syncUpdates(fn) {
        var previousPriorityContext = priorityContext;
        priorityContext = SynchronousPriority$1;
        try {
            return fn();
        } finally {
            priorityContext = previousPriorityContext;
        }
    }
    function deferredUpdates(fn) {
        var previousPriorityContext = priorityContext;
        priorityContext = LowPriority;
        try {
            return fn();
        } finally {
            priorityContext = previousPriorityContext;
        }
    }
    return {
        scheduleUpdate: scheduleUpdate,
        getPriorityContext: getPriorityContext,
        performWithPriority: performWithPriority,
        batchedUpdates: batchedUpdates,
        unbatchedUpdates: unbatchedUpdates,
        syncUpdates: syncUpdates,
        deferredUpdates: deferredUpdates
    };
},
    getContextFiber = function getContextFiber(arg) {
    invariant(!1, "Missing injection for fiber getContextForSubtree");
};

function getContextForSubtree(parentComponent) {
    if (!parentComponent) return emptyObject;
    var instance = ReactInstanceMap_1.get(parentComponent);
    return "number" == typeof instance.tag ? getContextFiber(instance) : instance._processChildContext(instance._context);
}

getContextForSubtree._injectFiber = function (fn) {
    getContextFiber = fn;
};

var getContextForSubtree_1 = getContextForSubtree,
    addTopLevelUpdate = ReactFiberUpdateQueue.addTopLevelUpdate,
    findCurrentUnmaskedContext = ReactFiberContext.findCurrentUnmaskedContext,
    isContextProvider = ReactFiberContext.isContextProvider,
    processChildContext = ReactFiberContext.processChildContext,
    createFiberRoot = ReactFiberRoot.createFiberRoot,
    HostComponent$1 = ReactTypeOfWork.HostComponent,
    findCurrentHostFiber = ReactFiberTreeReflection.findCurrentHostFiber;

getContextForSubtree_1._injectFiber(function (fiber) {
    var parentContext = findCurrentUnmaskedContext(fiber);
    return isContextProvider(fiber) ? processChildContext(fiber, parentContext, !1) : parentContext;
});

var ReactFiberReconciler = function ReactFiberReconciler(config) {
    var getPublicInstance = config.getPublicInstance,
        _ReactFiberScheduler = ReactFiberScheduler(config),
        scheduleUpdate = _ReactFiberScheduler.scheduleUpdate,
        getPriorityContext = _ReactFiberScheduler.getPriorityContext,
        performWithPriority = _ReactFiberScheduler.performWithPriority,
        batchedUpdates = _ReactFiberScheduler.batchedUpdates,
        unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
        syncUpdates = _ReactFiberScheduler.syncUpdates,
        deferredUpdates = _ReactFiberScheduler.deferredUpdates;
    function scheduleTopLevelUpdate(current, element, callback) {
        var forceAsync = ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != element && null != element.type && !0 === element.type.unstable_asyncUpdates,
            priorityLevel = getPriorityContext(current, forceAsync),
            nextState = {
            element: element
        };
        callback = void 0 === callback ? null : callback, addTopLevelUpdate(current, nextState, callback, priorityLevel), scheduleUpdate(current, priorityLevel);
    }
    return {
        createContainer: function createContainer(containerInfo) {
            return createFiberRoot(containerInfo);
        },
        updateContainer: function updateContainer(element, container, parentComponent, callback) {
            var current = container.current,
                context = getContextForSubtree_1(parentComponent);
            null === container.context ? container.context = context : container.pendingContext = context, scheduleTopLevelUpdate(current, element, callback);
        },
        performWithPriority: performWithPriority,
        batchedUpdates: batchedUpdates,
        unbatchedUpdates: unbatchedUpdates,
        syncUpdates: syncUpdates,
        deferredUpdates: deferredUpdates,
        getPublicRootInstance: function getPublicRootInstance(container) {
            var containerFiber = container.current;
            if (!containerFiber.child) return null;
            switch (containerFiber.child.tag) {
                case HostComponent$1:
                    return getPublicInstance(containerFiber.child.stateNode);

                default:
                    return containerFiber.child.stateNode;
            }
        },
        findHostInstance: function findHostInstance(fiber) {
            var hostFiber = findCurrentHostFiber(fiber);
            return null === hostFiber ? null : hostFiber.stateNode;
        }
    };
};

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var objects = {},
    uniqueID = 1,
    emptyObject$3 = {},
    ReactNativePropRegistry = function () {
    function ReactNativePropRegistry() {
        _classCallCheck(this, ReactNativePropRegistry);
    }
    return ReactNativePropRegistry.register = function (object) {
        var id = ++uniqueID;
        return objects[id] = object, id;
    }, ReactNativePropRegistry.getByID = function (id) {
        if (!id) return emptyObject$3;
        var object = objects[id];
        return object || (console.warn("Invalid style with id `" + id + "`. Skipping ..."), emptyObject$3);
    }, ReactNativePropRegistry;
}(),
    ReactNativePropRegistry_1 = ReactNativePropRegistry,
    emptyObject$2 = {},
    removedKeys = null,
    removedKeyCount = 0;

function defaultDiffer(prevProp, nextProp) {
    return "object" != typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp);
}

function resolveObject(idOrObject) {
    return "number" == typeof idOrObject ? ReactNativePropRegistry_1.getByID(idOrObject) : idOrObject;
}

function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && removedKeyCount > 0;) {
        restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && removedKeyCount > 0) {
        var obj = resolveObject(node);
        for (var propKey in removedKeys) {
            if (removedKeys[propKey]) {
                var nextProp = obj[propKey];
                if (void 0 !== nextProp) {
                    var attributeConfig = validAttributes[propKey];
                    if (attributeConfig) {
                        if ("function" == typeof nextProp && (nextProp = !0), void 0 === nextProp && (nextProp = null), "object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                            var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                            updatePayload[propKey] = nextValue;
                        }
                        removedKeys[propKey] = !1, removedKeyCount--;
                    }
                }
            }
        }
    }
}

function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
    var i,
        minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
    for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
    }for (; i < prevArray.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
    }for (; i < nextArray.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
    }return updatePayload;
}

function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    return updatePayload || prevProp !== nextProp ? prevProp && nextProp ? Array.isArray(prevProp) || Array.isArray(nextProp) ? Array.isArray(prevProp) && Array.isArray(nextProp) ? diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes) : Array.isArray(prevProp) ? diffProperties(updatePayload, flattenStyle(prevProp), resolveObject(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), flattenStyle(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), resolveObject(nextProp), validAttributes) : nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload : updatePayload;
}

function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return addProperties(updatePayload, resolveObject(nextProp), validAttributes);
    for (var i = 0; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }return updatePayload;
}

function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return clearProperties(updatePayload, resolveObject(prevProp), validAttributes);
    for (var i = 0; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }return updatePayload;
}

function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, nextProp, prevProp;
    for (var propKey in nextProps) {
        if (attributeConfig = validAttributes[propKey]) if (prevProp = prevProps[propKey], nextProp = nextProps[propKey], "function" == typeof nextProp && (nextProp = !0, "function" == typeof prevProp && (prevProp = !0)), void 0 === nextProp && (nextProp = null, void 0 === prevProp && (prevProp = null)), removedKeys && (removedKeys[propKey] = !1), updatePayload && void 0 !== updatePayload[propKey]) {
            if ("object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                updatePayload[propKey] = nextValue;
            }
        } else if (prevProp !== nextProp) if ("object" != typeof attributeConfig) defaultDiffer(prevProp, nextProp) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
            var shouldUpdate = void 0 === prevProp || ("function" == typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
            shouldUpdate && (nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = nextValue);
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), removedKeyCount > 0 && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
    }for (propKey in prevProps) {
        void 0 === nextProps[propKey] && (attributeConfig = validAttributes[propKey]) && (updatePayload && void 0 !== updatePayload[propKey] || void 0 !== (prevProp = prevProps[propKey]) && ("object" != typeof attributeConfig || "function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[propKey] = null, removedKeys || (removedKeys = {}), removedKeys[propKey] || (removedKeys[propKey] = !0, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig)));
    }return updatePayload;
}

function addProperties(updatePayload, props, validAttributes) {
    return diffProperties(updatePayload, emptyObject$2, props, validAttributes);
}

function clearProperties(updatePayload, prevProps, validAttributes) {
    return diffProperties(updatePayload, prevProps, emptyObject$2, validAttributes);
}

var ReactNativeAttributePayload = {
    create: function create(props, validAttributes) {
        return addProperties(null, props, validAttributes);
    },
    diff: function diff(prevProps, nextProps, validAttributes) {
        return diffProperties(null, prevProps, nextProps, validAttributes);
    }
},
    ReactNativeAttributePayload_1 = ReactNativeAttributePayload;

function mountSafeCallback$1(context, callback) {
    return function () {
        if (callback) {
            if ("boolean" == typeof context.__isMounted) {
                if (!context.__isMounted) return;
            } else if ("function" == typeof context.isMounted && !context.isMounted()) return;
            return callback.apply(context, arguments);
        }
    };
}

function throwOnStylesProp(component, props) {
    if (void 0 !== props.styles) {
        var owner = component._owner || null,
            name = component.constructor.displayName,
            msg = "`styles` is not a supported property of `" + name + "`, did " + "you mean `style` (singular)?";
        throw owner && owner.constructor && owner.constructor.displayName && (msg += "\n\nCheck the `" + owner.constructor.displayName + "` parent " + " component."), new Error(msg);
    }
}

function warnForStyleProps$1(props, validAttributes) {
    for (var key in validAttributes.style) {
        validAttributes[key] || void 0 === props[key] || console.error("You are setting the style `{ " + key + ": ... }` as a prop. You " + "should nest it in a style object. " + "E.g. `{ style: { " + key + ": ... } }`");
    }
}

var NativeMethodsMixinUtils = {
    mountSafeCallback: mountSafeCallback$1,
    throwOnStylesProp: throwOnStylesProp,
    warnForStyleProps: warnForStyleProps$1
};

function _classCallCheck$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var mountSafeCallback = NativeMethodsMixinUtils.mountSafeCallback,
    ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
        _classCallCheck$1(this, ReactNativeFiberHostComponent), this._nativeTag = tag, this._children = [], this.viewConfig = viewConfig;
    }
    return ReactNativeFiberHostComponent.prototype.blur = function () {
        TextInputState.blurTextInput(this._nativeTag);
    }, ReactNativeFiberHostComponent.prototype.focus = function () {
        TextInputState.focusTextInput(this._nativeTag);
    }, ReactNativeFiberHostComponent.prototype.measure = function (callback) {
        UIManager.measure(this._nativeTag, mountSafeCallback(this, callback));
    }, ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
        UIManager.measureInWindow(this._nativeTag, mountSafeCallback(this, callback));
    }, ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(this._nativeTag, relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
    }, ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
        var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, this.viewConfig.validAttributes);
        UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, updatePayload);
    }, ReactNativeFiberHostComponent;
}(),
    ReactNativeFiberHostComponent_1 = ReactNativeFiberHostComponent,
    viewConfigs = new Map(),
    ReactNativeViewConfigRegistry = {
    register: function register(viewConfig) {
        var name = viewConfig.uiViewClassName;
        return invariant(!viewConfigs.has(name), "Tried to register two views with the same name %s", name), viewConfigs.set(name, viewConfig), name;
    },
    get: function get(name) {
        var config = viewConfigs.get(name);
        return invariant(config, "View config not found for name %s", name), config;
    }
},
    ReactNativeViewConfigRegistry_1 = ReactNativeViewConfigRegistry,
    precacheFiberNode$1 = ReactNativeComponentTree_1.precacheFiberNode,
    uncacheFiberNode$1 = ReactNativeComponentTree_1.uncacheFiberNode,
    updateFiberProps$1 = ReactNativeComponentTree_1.updateFiberProps;

function recursivelyUncacheFiberNode(node) {
    "number" == typeof node ? uncacheFiberNode$1(node) : (uncacheFiberNode$1(node._nativeTag), node._children.forEach(recursivelyUncacheFiberNode));
}

var NativeRenderer = ReactFiberReconciler({
    appendChild: function appendChild(parentInstance, child) {
        var childTag = "number" == typeof child ? child : child._nativeTag,
            children = parentInstance._children,
            index = children.indexOf(child);
        index >= 0 ? (children.splice(index, 1), children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [index], [children.length - 1], [], [], [])) : (children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [children.length - 1], []));
    },
    appendChildToContainer: function appendChildToContainer(parentInstance, child) {
        var childTag = "number" == typeof child ? child : child._nativeTag;
        UIManager.setChildren(parentInstance, [childTag]);
    },
    appendInitialChild: function appendInitialChild(parentInstance, child) {
        parentInstance._children.push(child);
    },
    commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {
        UIManager.updateView(textInstance, "RCTRawText", {
            text: newText
        });
    },
    commitMount: function commitMount(instance, type, newProps, internalInstanceHandle) {},
    commitUpdate: function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps, internalInstanceHandle) {
        var viewConfig = instance.viewConfig;
        updateFiberProps$1(instance._nativeTag, newProps);
        var updatePayload = ReactNativeAttributePayload_1.diff(oldProps, newProps, viewConfig.validAttributes);
        UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    },
    createInstance: function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var tag = ReactNativeTagHandles_1.allocateTag(),
            viewConfig = ReactNativeViewConfigRegistry_1.get(type),
            updatePayload = ReactNativeAttributePayload_1.create(props, viewConfig.validAttributes);
        UIManager.createView(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload);
        var component = new ReactNativeFiberHostComponent_1(tag, viewConfig);
        return precacheFiberNode$1(internalInstanceHandle, tag), updateFiberProps$1(tag, props), component;
    },
    createTextInstance: function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var tag = ReactNativeTagHandles_1.allocateTag();
        return UIManager.createView(tag, "RCTRawText", rootContainerInstance, {
            text: text
        }), precacheFiberNode$1(internalInstanceHandle, tag), tag;
    },
    finalizeInitialChildren: function finalizeInitialChildren(parentInstance, type, props, rootContainerInstance) {
        if (0 === parentInstance._children.length) return !1;
        var nativeTags = parentInstance._children.map(function (child) {
            return "number" == typeof child ? child : child._nativeTag;
        });
        return UIManager.setChildren(parentInstance._nativeTag, nativeTags), !1;
    },
    getRootHostContext: function getRootHostContext() {
        return emptyObject;
    },
    getChildHostContext: function getChildHostContext() {
        return emptyObject;
    },
    getPublicInstance: function getPublicInstance(instance) {
        return instance;
    },
    insertBefore: function insertBefore(parentInstance, child, beforeChild) {
        var children = parentInstance._children,
            index = children.indexOf(child);
        if (index >= 0) {
            children.splice(index, 1);
            var beforeChildIndex = children.indexOf(beforeChild);
            children.splice(beforeChildIndex, 0, child), UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChildIndex], [], [], []);
        } else {
            var _beforeChildIndex = children.indexOf(beforeChild);
            children.splice(_beforeChildIndex, 0, child);
            var childTag = "number" == typeof child ? child : child._nativeTag;
            UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [_beforeChildIndex], []);
        }
    },
    insertInContainerBefore: function insertInContainerBefore(parentInstance, child, beforeChild) {
        invariant("number" != typeof parentInstance, "Container does not support insertBefore operation");
    },
    prepareForCommit: function prepareForCommit() {},
    prepareUpdate: function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {
        return emptyObject;
    },
    removeChild: function removeChild(parentInstance, child) {
        recursivelyUncacheFiberNode(child);
        var children = parentInstance._children,
            index = children.indexOf(child);
        children.splice(index, 1), UIManager.manageChildren(parentInstance._nativeTag, [], [], [], [], [index]);
    },
    removeChildFromContainer: function removeChildFromContainer(parentInstance, child) {
        recursivelyUncacheFiberNode(child), UIManager.manageChildren(parentInstance, [], [], [], [], [0]);
    },
    resetAfterCommit: function resetAfterCommit() {},
    resetTextContent: function resetTextContent(instance) {},
    shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {
        return !1;
    },
    scheduleDeferredCallback: commonjsGlobal.requestIdleCallback,
    shouldSetTextContent: function shouldSetTextContent(type, props) {
        return !1;
    },
    useSyncScheduling: !0
}),
    ReactNativeFiberRenderer = NativeRenderer,
    getInspectorDataForViewTag = void 0;

getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    invariant(!1, "getInspectorDataForViewTag() is not available in production");
};

var ReactNativeFiberInspector = {
    getInspectorDataForViewTag: getInspectorDataForViewTag
},
    ReactVersion = "16.0.0-alpha.13",
    ReactNativeFeatureFlags = require(63                       ), // 63 = ReactNativeFeatureFlags
    injectedFindNode = ReactNativeFeatureFlags.useFiber ? function (fiber) {
    return ReactNativeFiberRenderer.findHostInstance(fiber);
} : function (instance) {
    return instance;
};

function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" == typeof componentOrHandle) return componentOrHandle;
    var component = componentOrHandle,
        internalInstance = ReactInstanceMap_1.get(component);
    return internalInstance ? injectedFindNode(internalInstance) : component || (invariant("object" == typeof component && ("_rootNodeID" in component || "_nativeTag" in component) || null != component.render && "function" == typeof component.render, "findNodeHandle(...): Argument is not a component " + "(type: %s, keys: %s)", typeof component, Object.keys(component)), void invariant(!1, "findNodeHandle(...): Unable to find node handle for unmounted " + "component."));
}

var findNodeHandle_1 = findNodeHandle,
    findNumericNodeHandleFiber = function findNumericNodeHandleFiber(componentOrHandle) {
    var instance = findNodeHandle_1(componentOrHandle);
    return null == instance || "number" == typeof instance ? instance : instance._nativeTag;
},
    DevOnlyStubShim = null;

function _classCallCheck$2(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return !call || "object" != typeof call && "function" != typeof call ? self : call;
}

function _inherits(subClass, superClass) {
    if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: !1,
            writable: !0,
            configurable: !0
        }
    }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
}

var ReactNativeFeatureFlags$1 = require(63                       ), // 63 = ReactNativeFeatureFlags
    mountSafeCallback$2 = NativeMethodsMixinUtils.mountSafeCallback,
    findNumericNodeHandle = ReactNativeFeatureFlags$1.useFiber ? findNumericNodeHandleFiber : DevOnlyStubShim,
    ReactNativeComponent = function (_React$Component) {
    _inherits(ReactNativeComponent, _React$Component);
    function ReactNativeComponent() {
        return _classCallCheck$2(this, ReactNativeComponent), _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }
    return ReactNativeComponent.prototype.blur = function () {
        TextInputState.blurTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.focus = function () {
        TextInputState.focusTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.measure = function (callback) {
        UIManager.measure(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
    }, ReactNativeComponent.prototype.measureInWindow = function (callback) {
        UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
    }, ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback$2(this, onFail), mountSafeCallback$2(this, onSuccess));
    }, ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
        injectedSetNativeProps(this, nativeProps);
    }, ReactNativeComponent;
}(react.Component);

function setNativePropsFiber(componentOrHandle, nativeProps) {
    var maybeInstance = void 0;
    try {
        maybeInstance = findNodeHandle_1(componentOrHandle);
    } catch (error) {}
    if (null != maybeInstance) {
        var viewConfig = maybeInstance.viewConfig,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    }
}

function setNativePropsStack(componentOrHandle, nativeProps) {
    var maybeInstance = findNodeHandle_1(componentOrHandle);
    if (null != maybeInstance) {
        var viewConfig = void 0;
        if (void 0 !== maybeInstance.viewConfig) viewConfig = maybeInstance.viewConfig;else if (void 0 !== maybeInstance._instance && void 0 !== maybeInstance._instance.viewConfig) viewConfig = maybeInstance._instance.viewConfig;else {
            for (; void 0 !== maybeInstance._renderedComponent;) {
                maybeInstance = maybeInstance._renderedComponent;
            }viewConfig = maybeInstance.viewConfig;
        }
        var tag = "function" == typeof maybeInstance.getHostNode ? maybeInstance.getHostNode() : maybeInstance._rootNodeID,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(tag, viewConfig.uiViewClassName, updatePayload);
    }
}

var injectedSetNativeProps = void 0;

injectedSetNativeProps = ReactNativeFeatureFlags$1.useFiber ? setNativePropsFiber : setNativePropsStack;

var ReactNativeComponent_1 = ReactNativeComponent,
    ReactNativeFeatureFlags$2 = require(63                       ), // 63 = ReactNativeFeatureFlags
    mountSafeCallback$3 = NativeMethodsMixinUtils.mountSafeCallback,
    findNumericNodeHandle$1 = ReactNativeFeatureFlags$2.useFiber ? findNumericNodeHandleFiber : DevOnlyStubShim,
    NativeMethodsMixin = {
    measure: function measure(callback) {
        UIManager.measure(findNumericNodeHandle$1(this), mountSafeCallback$3(this, callback));
    },
    measureInWindow: function measureInWindow(callback) {
        UIManager.measureInWindow(findNumericNodeHandle$1(this), mountSafeCallback$3(this, callback));
    },
    measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle$1(this), relativeToNativeNode, mountSafeCallback$3(this, onFail), mountSafeCallback$3(this, onSuccess));
    },
    setNativeProps: function setNativeProps(nativeProps) {
        injectedSetNativeProps$1(this, nativeProps);
    },
    focus: function focus() {
        TextInputState.focusTextInput(findNumericNodeHandle$1(this));
    },
    blur: function blur() {
        TextInputState.blurTextInput(findNumericNodeHandle$1(this));
    }
};

function setNativePropsFiber$1(componentOrHandle, nativeProps) {
    var maybeInstance = void 0;
    try {
        maybeInstance = findNodeHandle_1(componentOrHandle);
    } catch (error) {}
    if (null != maybeInstance) {
        var viewConfig = maybeInstance.viewConfig,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    }
}

function setNativePropsStack$1(componentOrHandle, nativeProps) {
    var maybeInstance = findNodeHandle_1(componentOrHandle);
    if (null != maybeInstance) {
        var viewConfig = void 0;
        if (void 0 !== maybeInstance.viewConfig) viewConfig = maybeInstance.viewConfig;else if (void 0 !== maybeInstance._instance && void 0 !== maybeInstance._instance.viewConfig) viewConfig = maybeInstance._instance.viewConfig;else {
            for (; void 0 !== maybeInstance._renderedComponent;) {
                maybeInstance = maybeInstance._renderedComponent;
            }viewConfig = maybeInstance.viewConfig;
        }
        var tag = "function" == typeof maybeInstance.getHostNode ? maybeInstance.getHostNode() : maybeInstance._rootNodeID,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(tag, viewConfig.uiViewClassName, updatePayload);
    }
}

var injectedSetNativeProps$1 = void 0;

injectedSetNativeProps$1 = ReactNativeFeatureFlags$2.useFiber ? setNativePropsFiber$1 : setNativePropsStack$1;

var NativeMethodsMixin_1 = NativeMethodsMixin,
    TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
        var touchBank = touchHistory.touchBank,
            total = 0,
            count = 0,
            oneTouchData = 1 === touchHistory.numberActiveTouches ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
        if (null !== oneTouchData) oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter && (total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY, count = 1);else for (var i = 0; i < touchBank.length; i++) {
            var touchTrack = touchBank[i];
            if (null !== touchTrack && void 0 !== touchTrack && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
                var toAdd;
                toAdd = ofCurrent && isXAxis ? touchTrack.currentPageX : ofCurrent && !isXAxis ? touchTrack.currentPageY : !ofCurrent && isXAxis ? touchTrack.previousPageX : touchTrack.previousPageY, total += toAdd, count++;
            }
        }
        return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !0);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !0);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !1);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !1);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !0, !0);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !1, !0);
    },
    noCentroid: -1
},
    TouchHistoryMath_1 = TouchHistoryMath,
    createReactNativeComponentClassFiber = function createReactNativeComponentClassFiber(viewConfig) {
    return ReactNativeViewConfigRegistry_1.register(viewConfig);
},
    createReactNativeComponentClassFiber_1 = createReactNativeComponentClassFiber,
    ReactNativeFeatureFlags$3 = require(63                       ), // 63 = ReactNativeFeatureFlags
    createReactNativeComponentClass = ReactNativeFeatureFlags$3.useFiber ? createReactNativeComponentClassFiber_1 : DevOnlyStubShim,
    ReactNativeFeatureFlags$4 = require(63                       ), // 63 = ReactNativeFeatureFlags
    findNumericNodeHandle$2 = ReactNativeFeatureFlags$4.useFiber ? findNumericNodeHandleFiber : DevOnlyStubShim;

function takeSnapshot(view, options) {
    return "number" != typeof view && "window" !== view && (view = findNumericNodeHandle$2(view) || "window"), UIManager.__takeSnapshot(view, options);
}

var takeSnapshot_1 = takeSnapshot,
    injectInternals = ReactFiberDevToolsHook.injectInternals;

ReactNativeInjection.inject(), ReactGenericBatching_1.injection.injectFiberBatchedUpdates(ReactNativeFiberRenderer.batchedUpdates);

var roots = new Map();

ReactFiberErrorLogger.injection.injectDialog(ReactNativeFiberErrorDialog_1.showDialog);

var ReactNativeFiber = {
    NativeComponent: ReactNativeComponent_1,
    findNodeHandle: findNumericNodeHandleFiber,
    render: function render(element, containerTag, callback) {
        var root = roots.get(containerTag);
        return root || (root = ReactNativeFiberRenderer.createContainer(containerTag), roots.set(containerTag, root)), ReactNativeFiberRenderer.updateContainer(element, root, null, callback), ReactNativeFiberRenderer.getPublicRootInstance(root);
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
        var root = roots.get(containerTag);
        root && ReactNativeFiberRenderer.updateContainer(null, root, null, function () {
            roots.delete(containerTag);
        });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
        ReactNativeFiber.unmountComponentAtNode(containerTag), UIManager.removeRootView(containerTag);
    },
    unstable_createPortal: function unstable_createPortal(children, containerTag) {
        var key = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
        return ReactPortal.createPortal(children, containerTag, null, key);
    },
    unstable_batchedUpdates: ReactGenericBatching_1.batchedUpdates,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        NativeMethodsMixin: NativeMethodsMixin_1,
        ReactGlobalSharedState: ReactGlobalSharedState_1,
        ReactNativeComponentTree: ReactNativeComponentTree_1,
        ReactNativePropRegistry: ReactNativePropRegistry_1,
        TouchHistoryMath: TouchHistoryMath_1,
        createReactNativeComponentClass: createReactNativeComponentClass,
        takeSnapshot: takeSnapshot_1
    }
};

"function" == typeof injectInternals && injectInternals({
    findFiberByHostInstance: ReactNativeComponentTree_1.getClosestInstanceFromNode,
    findHostInstanceByFiber: ReactNativeFiberRenderer.findHostInstance,
    getInspectorDataForViewTag: ReactNativeFiberInspector.getInspectorDataForViewTag,
    bundleType: 0,
    version: ReactVersion
});

var ReactNativeFiberEntry = ReactNativeFiber;

module.exports = ReactNativeFiberEntry;
}, 167, null, "ReactNativeFiber-prod");
__d(/* ReactNativeStack-prod */function(global, require, module, exports) {
"use strict";

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

require(72              ); // 72 = InitializeCore

var warning = require(15                ), // 15 = fbjs/lib/warning
    RCTEventEmitter = require(120              ), // 120 = RCTEventEmitter
    emptyFunction = require(16                      ), // 16 = fbjs/lib/emptyFunction
    UIManager = require(54         ), // 54 = UIManager
    React = require(12     ), // 12 = react
    emptyObject = require(17                    ); // 17 = fbjs/lib/emptyObject

require(22                         ); // 22 = prop-types/checkPropTypes

var shallowEqual = require(121                    ), // 121 = fbjs/lib/shallowEqual
    deepDiffer = require(122         ), // 122 = deepDiffer
    flattenStyle = require(114           ), // 114 = flattenStyle
    TextInputState = require(53              ); // 53 = TextInputState

require(33                                 ); // 33 = deepFreezeAndThrowOnMutationInDev

var instanceCache = {},
    instanceProps = {};

function getRenderedHostOrTextFromComponent(component) {
    for (var rendered; rendered = component._renderedComponent;) {
        component = rendered;
    }return component;
}

function precacheNode(inst, tag) {
    var nativeInst = getRenderedHostOrTextFromComponent(inst);
    instanceCache[tag] = nativeInst;
}

function precacheFiberNode(hostInst, tag) {
    instanceCache[tag] = hostInst;
}

function uncacheNode(inst) {
    var tag = inst._rootNodeID;
    tag && delete instanceCache[tag];
}

function uncacheFiberNode(tag) {
    delete instanceCache[tag], delete instanceProps[tag];
}

function getInstanceFromTag(tag) {
    return instanceCache[tag] || null;
}

function getTagFromInstance(inst) {
    var tag = "number" != typeof inst.tag ? inst._rootNodeID : inst.stateNode._nativeTag;
    return invariant(tag, "All native instances should have a tag."), tag;
}

function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps[stateNode._nativeTag] || null;
}

function updateFiberProps(tag, props) {
    instanceProps[tag] = props;
}

var ReactNativeComponentTree = {
    getClosestInstanceFromNode: getInstanceFromTag,
    getInstanceFromNode: getInstanceFromTag,
    getNodeFromInstance: getTagFromInstance,
    precacheFiberNode: precacheFiberNode,
    precacheNode: precacheNode,
    uncacheFiberNode: uncacheFiberNode,
    uncacheNode: uncacheNode,
    getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode,
    updateFiberProps: updateFiberProps
},
    ReactNativeComponentTree_1 = ReactNativeComponentTree,
    eventPluginOrder = null,
    namesToPlugins = {};

function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName],
            pluginIndex = eventPluginOrder.indexOf(pluginName);
        if (invariant(pluginIndex > -1, "EventPluginRegistry: Cannot inject event plugins that do not exist in " + "the plugin ordering, `%s`.", pluginName), !EventPluginRegistry.plugins[pluginIndex]) {
            invariant(pluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` " + "method, but `%s` does not.", pluginName), EventPluginRegistry.plugins[pluginIndex] = pluginModule;
            var publishedEvents = pluginModule.eventTypes;
            for (var eventName in publishedEvents) {
                invariant(publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName), "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName);
            }
        }
    }
}

function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
    invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), "EventPluginHub: More than one plugin attempted to publish the same " + "event name, `%s`.", eventName), EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
    var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
    if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
            if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                var phasedRegistrationName = phasedRegistrationNames[phaseName];
                publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
            }
        }return !0;
    }
    return !!dispatchConfig.registrationName && (publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName), !0);
}

function publishRegistrationName(registrationName, pluginModule, eventName) {
    invariant(!EventPluginRegistry.registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same " + "registration name, `%s`.", registrationName), EventPluginRegistry.registrationNameModules[registrationName] = pluginModule, EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
}

var EventPluginRegistry = {
    plugins: [],
    eventNameDispatchConfigs: {},
    registrationNameModules: {},
    registrationNameDependencies: {},
    possibleRegistrationNames: null,
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
        invariant(!eventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than " + "once. You are likely trying to load more than one copy of React."), eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder), recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
        var isOrderingDirty = !1;
        for (var pluginName in injectedNamesToPlugins) {
            if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                var pluginModule = injectedNamesToPlugins[pluginName];
                namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins " + "using the same name, `%s`.", pluginName), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = !0);
            }
        }isOrderingDirty && recomputePluginOrdering();
    }
},
    EventPluginRegistry_1 = EventPluginRegistry,
    caughtError = null,
    _invokeGuardedCallback = function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);
    try {
        func.apply(context, funcArgs);
    } catch (error) {
        return error;
    }
    return null;
},
    _rethrowCaughtError = function _rethrowCaughtError() {
    if (caughtError) {
        var error = caughtError;
        throw caughtError = null, error;
    }
},
    ReactErrorUtils = {
    injection: {
        injectErrorUtils: function injectErrorUtils(injectedErrorUtils) {
            invariant("function" == typeof injectedErrorUtils.invokeGuardedCallback, "Injected invokeGuardedCallback() must be a function."), _invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
        }
    },
    invokeGuardedCallback: function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        return _invokeGuardedCallback.apply(this, arguments);
    },
    invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        var error = ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
        null !== error && null === caughtError && (caughtError = error);
    },
    rethrowCaughtError: function rethrowCaughtError() {
        return _rethrowCaughtError.apply(this, arguments);
    }
},
    ReactErrorUtils_1 = ReactErrorUtils,
    ComponentTree,
    injection = {
    injectComponentTree: function injectComponentTree(Injected) {
        ComponentTree = Injected;
    }
};

function isEndish(topLevelType) {
    return "topMouseUp" === topLevelType || "topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType;
}

function isMoveish(topLevelType) {
    return "topMouseMove" === topLevelType || "topTouchMove" === topLevelType;
}

function isStartish(topLevelType) {
    return "topMouseDown" === topLevelType || "topTouchStart" === topLevelType;
}

function executeDispatch(event, simulated, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = EventPluginUtils.getNodeFromInstance(inst), ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event), event.currentTarget = null;
}

function executeDispatchesInOrder(event, simulated) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
        executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    } else dispatchListeners && executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
    event._dispatchListeners = null, event._dispatchInstances = null;
}

function executeDispatchesInOrderStopAtTrueImpl(event) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
            if (dispatchListeners[i](event, dispatchInstances[i])) return dispatchInstances[i];
        }
    } else if (dispatchListeners && dispatchListeners(event, dispatchInstances)) return dispatchInstances;
    return null;
}

function executeDispatchesInOrderStopAtTrue(event) {
    var ret = executeDispatchesInOrderStopAtTrueImpl(event);
    return event._dispatchInstances = null, event._dispatchListeners = null, ret;
}

function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`."), event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
    var res = dispatchListener ? dispatchListener(event) : null;
    return event.currentTarget = null, event._dispatchListeners = null, event._dispatchInstances = null, res;
}

function hasDispatches(event) {
    return !!event._dispatchListeners;
}

var EventPluginUtils = {
    isEndish: isEndish,
    isMoveish: isMoveish,
    isStartish: isStartish,
    executeDirectDispatch: executeDirectDispatch,
    executeDispatchesInOrder: executeDispatchesInOrder,
    executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
    hasDispatches: hasDispatches,
    getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(node) {
        return ComponentTree.getFiberCurrentPropsFromNode(node);
    },
    getInstanceFromNode: function getInstanceFromNode(node) {
        return ComponentTree.getInstanceFromNode(node);
    },
    getNodeFromInstance: function getNodeFromInstance(node) {
        return ComponentTree.getNodeFromInstance(node);
    },
    injection: injection
},
    EventPluginUtils_1 = EventPluginUtils;

function accumulateInto(current, next) {
    return invariant(null != next, "accumulateInto(...): Accumulated items must not be null or undefined."), null == current ? next : Array.isArray(current) ? Array.isArray(next) ? (current.push.apply(current, next), current) : (current.push(next), current) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulateInto_1 = accumulateInto;

function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
}

var forEachAccumulated_1 = forEachAccumulated,
    eventQueue = null,
    executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
    event && (EventPluginUtils_1.executeDispatchesInOrder(event, simulated), event.isPersistent() || event.constructor.release(event));
},
    executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
    return executeDispatchesAndRelease(e, !0);
},
    executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
    return executeDispatchesAndRelease(e, !1);
};

function isInteractive(tag) {
    return "button" === tag || "input" === tag || "select" === tag || "textarea" === tag;
}

function shouldPreventMouseEvent(name, type, props) {
    switch (name) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
            return !(!props.disabled || !isInteractive(type));

        default:
            return !1;
    }
}

var EventPluginHub = {
    injection: {
        injectEventPluginOrder: EventPluginRegistry_1.injectEventPluginOrder,
        injectEventPluginsByName: EventPluginRegistry_1.injectEventPluginsByName
    },
    getListener: function getListener(inst, registrationName) {
        var listener;
        if ("number" == typeof inst.tag) {
            var stateNode = inst.stateNode;
            if (!stateNode) return null;
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(stateNode);
            if (!props) return null;
            if (listener = props[registrationName], shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        } else {
            var currentElement = inst._currentElement;
            if ("string" == typeof currentElement || "number" == typeof currentElement) return null;
            if (!inst._rootNodeID) return null;
            var _props = currentElement.props;
            if (listener = _props[registrationName], shouldPreventMouseEvent(registrationName, currentElement.type, _props)) return null;
        }
        return invariant(!listener || "function" == typeof listener, "Expected %s listener to be a function, instead got type %s", registrationName, typeof listener), listener;
    },
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        for (var events, plugins = EventPluginRegistry_1.plugins, i = 0; i < plugins.length; i++) {
            var possiblePlugin = plugins[i];
            if (possiblePlugin) {
                var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
                extractedEvents && (events = accumulateInto_1(events, extractedEvents));
            }
        }
        return events;
    },
    enqueueEvents: function enqueueEvents(events) {
        events && (eventQueue = accumulateInto_1(eventQueue, events));
    },
    processEventQueue: function processEventQueue(simulated) {
        var processingEventQueue = eventQueue;
        eventQueue = null, simulated ? forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseSimulated) : forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseTopLevel), invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing " + "an event queue. Support for this has not yet been implemented."), ReactErrorUtils_1.rethrowCaughtError();
    }
},
    EventPluginHub_1 = EventPluginHub,
    ReactTypeOfWork = {
    IndeterminateComponent: 0,
    FunctionalComponent: 1,
    ClassComponent: 2,
    HostRoot: 3,
    HostPortal: 4,
    HostComponent: 5,
    HostText: 6,
    CoroutineComponent: 7,
    CoroutineHandlerPhase: 8,
    YieldComponent: 9,
    Fragment: 10
},
    HostComponent = ReactTypeOfWork.HostComponent;

function getParent(inst) {
    if (void 0 !== inst._hostParent) return inst._hostParent;
    if ("number" == typeof inst.tag) {
        do {
            inst = inst.return;
        } while (inst && inst.tag !== HostComponent);
        if (inst) return inst;
    }
    return null;
}

function getLowestCommonAncestor(instA, instB) {
    for (var depthA = 0, tempA = instA; tempA; tempA = getParent(tempA)) {
        depthA++;
    }for (var depthB = 0, tempB = instB; tempB; tempB = getParent(tempB)) {
        depthB++;
    }for (; depthA - depthB > 0;) {
        instA = getParent(instA), depthA--;
    }for (; depthB - depthA > 0;) {
        instB = getParent(instB), depthB--;
    }for (var depth = depthA; depth--;) {
        if (instA === instB || instA === instB.alternate) return instA;
        instA = getParent(instA), instB = getParent(instB);
    }
    return null;
}

function isAncestor(instA, instB) {
    for (; instB;) {
        if (instA === instB || instA === instB.alternate) return !0;
        instB = getParent(instB);
    }
    return !1;
}

function getParentInstance(inst) {
    return getParent(inst);
}

function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
        path.push(inst), inst = getParent(inst);
    }var i;
    for (i = path.length; i-- > 0;) {
        fn(path[i], "captured", arg);
    }for (i = 0; i < path.length; i++) {
        fn(path[i], "bubbled", arg);
    }
}

function traverseEnterLeave(from, to, fn, argFrom, argTo) {
    for (var common = from && to ? getLowestCommonAncestor(from, to) : null, pathFrom = []; from && from !== common;) {
        pathFrom.push(from), from = getParent(from);
    }for (var pathTo = []; to && to !== common;) {
        pathTo.push(to), to = getParent(to);
    }var i;
    for (i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], "bubbled", argFrom);
    }for (i = pathTo.length; i-- > 0;) {
        fn(pathTo[i], "captured", argTo);
    }
}

var ReactTreeTraversal = {
    isAncestor: isAncestor,
    getLowestCommonAncestor: getLowestCommonAncestor,
    getParentInstance: getParentInstance,
    traverseTwoPhase: traverseTwoPhase,
    traverseEnterLeave: traverseEnterLeave
},
    getListener = EventPluginHub_1.getListener;

function listenerAtPhase(inst, event, propagationPhase) {
    var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
    return getListener(inst, registrationName);
}

function accumulateDirectionalDispatches(inst, phase, event) {
    var listener = listenerAtPhase(inst, event, phase);
    listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
}

function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && ReactTreeTraversal.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
}

function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
        var targetInst = event._targetInst,
            parentInst = targetInst ? ReactTreeTraversal.getParentInstance(targetInst) : null;
        ReactTreeTraversal.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
    }
}

function accumulateDispatches(inst, ignoredDirection, event) {
    if (inst && event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName,
            listener = getListener(inst, registrationName);
        listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
    }
}

function accumulateDirectDispatchesSingle(event) {
    event && event.dispatchConfig.registrationName && accumulateDispatches(event._targetInst, null, event);
}

function accumulateTwoPhaseDispatches(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
    ReactTreeTraversal.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
    forEachAccumulated_1(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = {
    accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
    accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
    accumulateDirectDispatches: accumulateDirectDispatches,
    accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
},
    EventPropagators_1 = EventPropagators,
    oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, copyFieldsFrom), instance;
    }
    return new Klass(copyFieldsFrom);
},
    twoArgumentPooler = function twoArgumentPooler(a1, a2) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2), instance;
    }
    return new Klass(a1, a2);
},
    threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2, a3), instance;
    }
    return new Klass(a1, a2, a3);
},
    fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
    var Klass = this;
    if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        return Klass.call(instance, a1, a2, a3, a4), instance;
    }
    return new Klass(a1, a2, a3, a4);
},
    standardReleaser = function standardReleaser(instance) {
    var Klass = this;
    invariant(instance instanceof Klass, "Trying to release an instance into a pool of a different type."), instance.destructor(), Klass.instancePool.length < Klass.poolSize && Klass.instancePool.push(instance);
},
    DEFAULT_POOL_SIZE = 10,
    DEFAULT_POOLER = oneArgumentPooler,
    addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
    var NewKlass = CopyConstructor;
    return NewKlass.instancePool = [], NewKlass.getPooled = pooler || DEFAULT_POOLER, NewKlass.poolSize || (NewKlass.poolSize = DEFAULT_POOL_SIZE), NewKlass.release = standardReleaser, NewKlass;
},
    PooledClass = {
    addPoolingTo: addPoolingTo,
    oneArgumentPooler: oneArgumentPooler,
    twoArgumentPooler: twoArgumentPooler,
    threeArgumentPooler: threeArgumentPooler,
    fourArgumentPooler: fourArgumentPooler
},
    PooledClass_1 = PooledClass,
    shouldBeReleasedProperties = ["dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances"],
    EventInterface = {
    type: null,
    target: null,
    currentTarget: emptyFunction.thatReturnsNull,
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
        return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
};

function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig, this._targetInst = targetInst, this.nativeEvent = nativeEvent;
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
        if (Interface.hasOwnProperty(propName)) {
            var normalize = Interface[propName];
            normalize ? this[propName] = normalize(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName];
        }
    }var defaultPrevented = null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue;
    return this.isDefaultPrevented = defaultPrevented ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse, this.isPropagationStopped = emptyFunction.thatReturnsFalse, this;
}

babelHelpers.extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
        this.defaultPrevented = !0;
        var event = this.nativeEvent;
        event && (event.preventDefault ? event.preventDefault() : "unknown" != typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = emptyFunction.thatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
        var event = this.nativeEvent;
        event && (event.stopPropagation ? event.stopPropagation() : "unknown" != typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = emptyFunction.thatReturnsTrue);
    },
    persist: function persist() {
        this.isPersistent = emptyFunction.thatReturnsTrue;
    },
    isPersistent: emptyFunction.thatReturnsFalse,
    destructor: function destructor() {
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
            this[propName] = null;
        }for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
            this[shouldBeReleasedProperties[i]] = null;
        }
    }
}), SyntheticEvent.Interface = EventInterface, SyntheticEvent.augmentClass = function (Class, Interface) {
    var Super = this,
        E = function E() {};
    E.prototype = Super.prototype;
    var prototype = new E();
    babelHelpers.extends(prototype, Class.prototype), Class.prototype = prototype, Class.prototype.constructor = Class, Class.Interface = babelHelpers.extends({}, Super.Interface, Interface), Class.augmentClass = Super.augmentClass, PooledClass_1.addPoolingTo(Class, PooledClass_1.fourArgumentPooler);
}, PooledClass_1.addPoolingTo(SyntheticEvent, PooledClass_1.fourArgumentPooler);

var SyntheticEvent_1 = SyntheticEvent,
    _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
},
    customBubblingEventTypes = UIManager.customBubblingEventTypes,
    customDirectEventTypes = UIManager.customDirectEventTypes,
    allTypesByEventName = {};

for (var bubblingTypeName in customBubblingEventTypes) {
    allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];
}for (var directTypeName in customDirectEventTypes) {
    warning(!customBubblingEventTypes[directTypeName], "Event cannot be both direct and bubbling: %s", directTypeName), allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];
}var ReactNativeBridgeEventPlugin = {
    eventTypes: _extends({}, customBubblingEventTypes, customDirectEventTypes),
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType],
            event = SyntheticEvent_1.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) EventPropagators_1.accumulateTwoPhaseDispatches(event);else {
            if (!directDispatchConfig) return null;
            EventPropagators_1.accumulateDirectDispatches(event);
        }
        return event;
    }
},
    ReactNativeBridgeEventPlugin_1 = ReactNativeBridgeEventPlugin;

function runEventQueueInBatch(events) {
    EventPluginHub_1.enqueueEvents(events), EventPluginHub_1.processEventQueue(!1);
}

var ReactEventEmitterMixin = {
    handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        runEventQueueInBatch(EventPluginHub_1.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget));
    }
},
    ReactEventEmitterMixin_1 = ReactEventEmitterMixin,
    INITIAL_TAG_COUNT = 1,
    ReactNativeTagHandles = {
    tagsStartAt: INITIAL_TAG_COUNT,
    tagCount: INITIAL_TAG_COUNT,
    allocateTag: function allocateTag() {
        for (; this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount);) {
            ReactNativeTagHandles.tagCount++;
        }var tag = ReactNativeTagHandles.tagCount;
        return ReactNativeTagHandles.tagCount++, tag;
    },
    assertRootTag: function assertRootTag(tag) {
        invariant(this.reactTagIsNativeTopRootID(tag), "Expect a native root tag, instead got %s", tag);
    },
    reactTagIsNativeTopRootID: function reactTagIsNativeTopRootID(reactTag) {
        return reactTag % 10 == 1;
    }
},
    ReactNativeTagHandles_1 = ReactNativeTagHandles,
    fiberHostComponent = null,
    ReactControlledComponentInjection = {
    injectFiberControlledHostComponent: function injectFiberControlledHostComponent(hostComponentImpl) {
        fiberHostComponent = hostComponentImpl;
    }
},
    restoreTarget = null,
    restoreQueue = null;

function restoreStateOfTarget(target) {
    var internalInstance = EventPluginUtils_1.getInstanceFromNode(target);
    if (internalInstance) {
        if ("number" == typeof internalInstance.tag) {
            invariant(fiberHostComponent && "function" == typeof fiberHostComponent.restoreControlledState, "Fiber needs to be injected to handle a fiber target for controlled " + "events.");
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(internalInstance.stateNode);
            return void fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
        }
        invariant("function" == typeof internalInstance.restoreControlledState, "The internal instance must be a React host component."), internalInstance.restoreControlledState();
    }
}

var ReactControlledComponent = {
    injection: ReactControlledComponentInjection,
    enqueueStateRestore: function enqueueStateRestore(target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [target] : restoreTarget = target;
    },
    restoreStateIfNeeded: function restoreStateIfNeeded() {
        if (restoreTarget) {
            var target = restoreTarget,
                queuedTargets = restoreQueue;
            if (restoreTarget = null, restoreQueue = null, restoreStateOfTarget(target), queuedTargets) for (var i = 0; i < queuedTargets.length; i++) {
                restoreStateOfTarget(queuedTargets[i]);
            }
        }
    }
},
    ReactControlledComponent_1 = ReactControlledComponent,
    stackBatchedUpdates = function stackBatchedUpdates(fn, a, b, c, d, e) {
    return fn(a, b, c, d, e);
},
    fiberBatchedUpdates = function fiberBatchedUpdates(fn, bookkeeping) {
    return fn(bookkeeping);
};

function performFiberBatchedUpdates(fn, bookkeeping) {
    return fiberBatchedUpdates(fn, bookkeeping);
}

function batchedUpdates(fn, bookkeeping) {
    return stackBatchedUpdates(performFiberBatchedUpdates, fn, bookkeeping);
}

var isNestingBatched = !1;

function batchedUpdatesWithControlledComponents(fn, bookkeeping) {
    if (isNestingBatched) return batchedUpdates(fn, bookkeeping);
    isNestingBatched = !0;
    try {
        return batchedUpdates(fn, bookkeeping);
    } finally {
        isNestingBatched = !1, ReactControlledComponent_1.restoreStateIfNeeded();
    }
}

var ReactGenericBatchingInjection = {
    injectStackBatchedUpdates: function injectStackBatchedUpdates(_batchedUpdates) {
        stackBatchedUpdates = _batchedUpdates;
    },
    injectFiberBatchedUpdates: function injectFiberBatchedUpdates(_batchedUpdates) {
        fiberBatchedUpdates = _batchedUpdates;
    }
},
    ReactGenericBatching = {
    batchedUpdates: batchedUpdatesWithControlledComponents,
    injection: ReactGenericBatchingInjection
},
    ReactGenericBatching_1 = ReactGenericBatching,
    _extends$1 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
    }
    return target;
},
    EMPTY_NATIVE_EVENT = {},
    touchSubsequence = function touchSubsequence(touches, indices) {
    for (var ret = [], i = 0; i < indices.length; i++) {
        ret.push(touches[indices[i]]);
    }return ret;
},
    removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {
    for (var rippedOut = [], temp = touches, i = 0; i < indices.length; i++) {
        var index = indices[i];
        rippedOut.push(touches[index]), temp[index] = null;
    }
    for (var fillAt = 0, j = 0; j < temp.length; j++) {
        var cur = temp[j];
        null !== cur && (temp[fillAt++] = cur);
    }
    return temp.length = fillAt, rippedOut;
},
    ReactNativeEventEmitter = _extends$1({}, ReactEventEmitterMixin_1, {
    registrationNames: EventPluginRegistry_1.registrationNameModules,
    getListener: EventPluginHub_1.getListener,
    _receiveRootNodeIDEvent: function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
        var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
            inst = ReactNativeComponentTree_1.getInstanceFromNode(rootNodeID);
        ReactGenericBatching_1.batchedUpdates(function () {
            ReactNativeEventEmitter.handleTopLevel(topLevelType, inst, nativeEvent, nativeEvent.target);
        });
    },
    receiveEvent: function receiveEvent(tag, topLevelType, nativeEventParam) {
        var rootNodeID = tag;
        ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
        for (var changedTouches = "topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices), jj = 0; jj < changedTouches.length; jj++) {
            var touch = changedTouches[jj];
            touch.changedTouches = changedTouches, touch.touches = touches;
            var nativeEvent = touch,
                rootNodeID = null,
                target = nativeEvent.target;
            null !== target && void 0 !== target && (target < ReactNativeTagHandles_1.tagsStartAt || (rootNodeID = target)), ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);
        }
    }
}),
    ReactNativeEventEmitter_1 = ReactNativeEventEmitter,
    ReactNativeEventPluginOrder = ["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"],
    ReactNativeEventPluginOrder_1 = ReactNativeEventPluginOrder,
    ReactNativeGlobalResponderHandler = {
    onChange: function onChange(from, to, blockNativeResponder) {
        if (null !== to) {
            var tag = "number" != typeof to.tag ? to._rootNodeID : to.stateNode._nativeTag;
            UIManager.setJSResponder(tag, blockNativeResponder);
        } else UIManager.clearJSResponder();
    }
},
    ReactNativeGlobalResponderHandler_1 = ReactNativeGlobalResponderHandler,
    ResponderEventInterface = {
    touchHistory: function touchHistory(nativeEvent) {
        return null;
    }
};

function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent_1.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

var ResponderSyntheticEvent_1 = ResponderSyntheticEvent,
    isEndish$2 = EventPluginUtils_1.isEndish,
    isMoveish$2 = EventPluginUtils_1.isMoveish,
    isStartish$2 = EventPluginUtils_1.isStartish,
    MAX_TOUCH_BANK = 20,
    touchBank = [],
    touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
};

function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
}

function createTouchRecord(touch) {
    return {
        touchActive: !0,
        startPageX: touch.pageX,
        startPageY: touch.pageY,
        startTimeStamp: timestampForTouch(touch),
        currentPageX: touch.pageX,
        currentPageY: touch.pageY,
        currentTimeStamp: timestampForTouch(touch),
        previousPageX: touch.pageX,
        previousPageY: touch.pageY,
        previousTimeStamp: timestampForTouch(touch)
    };
}

function resetTouchRecord(touchRecord, touch) {
    touchRecord.touchActive = !0, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch);
}

function getTouchIdentifier(_ref) {
    var identifier = _ref.identifier;
    return invariant(null != identifier, "Touch object is missing identifier."), warning(identifier <= MAX_TOUCH_BANK, "Touch identifier %s is greater than maximum supported %s which causes " + "performance issues backfilling array locations for all of the indices.", identifier, MAX_TOUCH_BANK), identifier;
}

function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? resetTouchRecord(touchRecord, touch) : touchBank[identifier] = createTouchRecord(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
}

function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !0, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch move without a touch start.\n" + "Touch Move: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !1, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch end without a touch start.\n" + "Touch End: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function printTouch(touch) {
    return JSON.stringify({
        identifier: touch.identifier,
        pageX: touch.pageX,
        pageY: touch.pageY,
        timestamp: timestampForTouch(touch)
    });
}

function printTouchBank() {
    var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
    return touchBank.length > MAX_TOUCH_BANK && (printed += " (original size: " + touchBank.length + ")"), printed;
}

var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
        if (isMoveish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if (isEndish$2(topLevelType) && (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches)) for (var i = 0; i < touchBank.length; i++) {
            var touchTrackToCheck = touchBank[i];
            if (null != touchTrackToCheck && touchTrackToCheck.touchActive) {
                touchHistory.indexOfSingleActiveTouch = i;
                break;
            }
        }
    },
    touchHistory: touchHistory
},
    ResponderTouchHistoryStore_1 = ResponderTouchHistoryStore;

function accumulate(current, next) {
    return invariant(null != next, "accumulate(...): Accumulated items must be not be null or undefined."), null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulate_1 = accumulate,
    isStartish$1 = EventPluginUtils_1.isStartish,
    isMoveish$1 = EventPluginUtils_1.isMoveish,
    isEndish$1 = EventPluginUtils_1.isEndish,
    executeDirectDispatch$1 = EventPluginUtils_1.executeDirectDispatch,
    hasDispatches$1 = EventPluginUtils_1.hasDispatches,
    executeDispatchesInOrderStopAtTrue$1 = EventPluginUtils_1.executeDispatchesInOrderStopAtTrue,
    responderInst = null,
    trackedTouchCount = 0,
    previousActiveTouches = 0,
    changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst, null !== ResponderEventPlugin.GlobalResponderHandler && ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
},
    eventTypes = {
    startShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onStartShouldSetResponder",
            captured: "onStartShouldSetResponderCapture"
        }
    },
    scrollShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onScrollShouldSetResponder",
            captured: "onScrollShouldSetResponderCapture"
        }
    },
    selectionChangeShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onSelectionChangeShouldSetResponder",
            captured: "onSelectionChangeShouldSetResponderCapture"
        }
    },
    moveShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onMoveShouldSetResponder",
            captured: "onMoveShouldSetResponderCapture"
        }
    },
    responderStart: {
        registrationName: "onResponderStart"
    },
    responderMove: {
        registrationName: "onResponderMove"
    },
    responderEnd: {
        registrationName: "onResponderEnd"
    },
    responderRelease: {
        registrationName: "onResponderRelease"
    },
    responderTerminationRequest: {
        registrationName: "onResponderTerminationRequest"
    },
    responderGrant: {
        registrationName: "onResponderGrant"
    },
    responderReject: {
        registrationName: "onResponderReject"
    },
    responderTerminate: {
        registrationName: "onResponderTerminate"
    }
};

function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var shouldSetEventType = isStartish$1(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish$1(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder,
        bubbleShouldSetFrom = responderInst ? ReactTreeTraversal.getLowestCommonAncestor(responderInst, targetInst) : targetInst,
        skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst,
        shouldSetEvent = ResponderSyntheticEvent_1.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
    shouldSetEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, skipOverBubbleShouldSetFrom ? EventPropagators_1.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent) : EventPropagators_1.accumulateTwoPhaseDispatches(shouldSetEvent);
    var wantsResponderInst = executeDispatchesInOrderStopAtTrue$1(shouldSetEvent);
    if (shouldSetEvent.isPersistent() || shouldSetEvent.constructor.release(shouldSetEvent), !wantsResponderInst || wantsResponderInst === responderInst) return null;
    var extracted,
        grantEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
    grantEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(grantEvent);
    var blockHostResponder = !0 === executeDirectDispatch$1(grantEvent);
    if (responderInst) {
        var terminationRequestEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
        terminationRequestEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminationRequestEvent);
        var shouldSwitch = !hasDispatches$1(terminationRequestEvent) || executeDirectDispatch$1(terminationRequestEvent);
        if (terminationRequestEvent.isPersistent() || terminationRequestEvent.constructor.release(terminationRequestEvent), shouldSwitch) {
            var terminateEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
            terminateEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminateEvent), extracted = accumulate_1(extracted, [grantEvent, terminateEvent]), changeResponder(wantsResponderInst, blockHostResponder);
        } else {
            var rejectEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
            rejectEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(rejectEvent), extracted = accumulate_1(extracted, rejectEvent);
        }
    } else extracted = accumulate_1(extracted, grantEvent), changeResponder(wantsResponderInst, blockHostResponder);
    return extracted;
}

function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
    return topLevelInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && "topSelectionChange" === topLevelType || isStartish$1(topLevelType) || isMoveish$1(topLevelType));
}

function noResponderTouches(nativeEvent) {
    var touches = nativeEvent.touches;
    if (!touches || 0 === touches.length) return !0;
    for (var i = 0; i < touches.length; i++) {
        var activeTouch = touches[i],
            target = activeTouch.target;
        if (null !== target && void 0 !== target && 0 !== target) {
            var targetInst = EventPluginUtils_1.getInstanceFromNode(target);
            if (ReactTreeTraversal.isAncestor(responderInst, targetInst)) return !1;
        }
    }
    return !0;
}

var ResponderEventPlugin = {
    _getResponder: function _getResponder() {
        return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (isStartish$1(topLevelType)) trackedTouchCount += 1;else if (isEndish$1(topLevelType)) {
            if (!(trackedTouchCount >= 0)) return console.error("Ended a touch event which was not counted in `trackedTouchCount`."), null;
            trackedTouchCount -= 1;
        }
        ResponderTouchHistoryStore_1.recordTouchTrack(topLevelType, nativeEvent);
        var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null,
            isResponderTouchStart = responderInst && isStartish$1(topLevelType),
            isResponderTouchMove = responderInst && isMoveish$1(topLevelType),
            isResponderTouchEnd = responderInst && isEndish$1(topLevelType),
            incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;
        if (incrementalTouch) {
            var gesture = ResponderSyntheticEvent_1.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
            gesture.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(gesture), extracted = accumulate_1(extracted, gesture);
        }
        var isResponderTerminate = responderInst && "topTouchCancel" === topLevelType,
            isResponderRelease = responderInst && !isResponderTerminate && isEndish$1(topLevelType) && noResponderTouches(nativeEvent),
            finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
        if (finalTouch) {
            var finalEvent = ResponderSyntheticEvent_1.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
            finalEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(finalEvent), extracted = accumulate_1(extracted, finalEvent), changeResponder(null);
        }
        var numberActiveTouches = ResponderTouchHistoryStore_1.touchHistory.numberActiveTouches;
        return ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches && ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches), previousActiveTouches = numberActiveTouches, extracted;
    },
    GlobalResponderHandler: null,
    GlobalInteractionHandler: null,
    injection: {
        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
            ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
        },
        injectGlobalInteractionHandler: function injectGlobalInteractionHandler(GlobalInteractionHandler) {
            ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
        }
    }
},
    ResponderEventPlugin_1 = ResponderEventPlugin;

function inject() {
    RCTEventEmitter.register(ReactNativeEventEmitter_1), EventPluginHub_1.injection.injectEventPluginOrder(ReactNativeEventPluginOrder_1), EventPluginUtils_1.injection.injectComponentTree(ReactNativeComponentTree_1), ResponderEventPlugin_1.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler_1), EventPluginHub_1.injection.injectEventPluginsByName({
        ResponderEventPlugin: ResponderEventPlugin_1,
        ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1
    });
}

var ReactNativeInjection = {
    inject: inject
};

function ReactNativeContainerInfo(tag) {
    return {
        _tag: tag
    };
}

var ReactNativeContainerInfo_1 = ReactNativeContainerInfo,
    ClassComponent = ReactTypeOfWork.ClassComponent;

function isValidOwner(object) {
    return !(!object || "function" != typeof object.attachRef || "function" != typeof object.detachRef);
}

var ReactOwner = {
    addComponentAsRefTo: function addComponentAsRefTo(component, ref, owner) {
        if (owner && owner.tag === ClassComponent) {
            var inst = owner.stateNode;
            (inst.refs === emptyObject ? inst.refs = {} : inst.refs)[ref] = component.getPublicInstance();
        } else invariant(isValidOwner(owner), "addComponentAsRefTo(...): Only a ReactOwner can have refs. You might " + "be adding a ref to a component that was not created inside a component's " + "`render` method, or you have multiple copies of React loaded " + "(details: https://fb.me/react-refs-must-have-owner)."), owner.attachRef(ref, component);
    },
    removeComponentAsRefFrom: function removeComponentAsRefFrom(component, ref, owner) {
        if (owner && owner.tag === ClassComponent) {
            var inst = owner.stateNode;
            inst && inst.refs[ref] === component.getPublicInstance() && delete inst.refs[ref];
        } else {
            invariant(isValidOwner(owner), "removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might " + "be removing a ref to a component that was not created inside a component's " + "`render` method, or you have multiple copies of React loaded " + "(details: https://fb.me/react-refs-must-have-owner).");
            var ownerPublicInstance = owner.getPublicInstance();
            ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance() && owner.detachRef(ref);
        }
    }
},
    ReactOwner_1 = ReactOwner,
    ReactRef = {};

function attachRef(ref, component, owner) {
    "function" == typeof ref ? ref(component.getPublicInstance()) : ReactOwner_1.addComponentAsRefTo(component, ref, owner);
}

function detachRef(ref, component, owner) {
    "function" == typeof ref ? ref(null) : ReactOwner_1.removeComponentAsRefFrom(component, ref, owner);
}

ReactRef.attachRefs = function (instance, element) {
    if (null !== element && "object" == typeof element) {
        var ref = element.ref;
        null != ref && attachRef(ref, instance, element._owner);
    }
}, ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
    var prevRef = null,
        prevOwner = null;
    null !== prevElement && "object" == typeof prevElement && (prevRef = prevElement.ref, prevOwner = prevElement._owner);
    var nextRef = null,
        nextOwner = null;
    return null !== nextElement && "object" == typeof nextElement && (nextRef = nextElement.ref, nextOwner = nextElement._owner), prevRef !== nextRef || "string" == typeof nextRef && nextOwner !== prevOwner;
}, ReactRef.detachRefs = function (instance, element) {
    if (null !== element && "object" == typeof element) {
        var ref = element.ref;
        null != ref && detachRef(ref, instance, element._owner);
    }
};

var ReactRef_1 = ReactRef;

function attachRefs() {
    ReactRef_1.attachRefs(this, this._currentElement);
}

var ReactReconciler = {
    mountComponent: function mountComponent(internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) {
        var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
        return internalInstance._currentElement && null != internalInstance._currentElement.ref && transaction.getReactMountReady().enqueue(attachRefs, internalInstance), markup;
    },
    getHostNode: function getHostNode(internalInstance) {
        return internalInstance.getHostNode();
    },
    unmountComponent: function unmountComponent(internalInstance, safely, skipLifecycle) {
        ReactRef_1.detachRefs(internalInstance, internalInstance._currentElement), internalInstance.unmountComponent(safely, skipLifecycle);
    },
    receiveComponent: function receiveComponent(internalInstance, nextElement, transaction, context) {
        var prevElement = internalInstance._currentElement;
        if (nextElement !== prevElement || context !== internalInstance._context) {
            var refsChanged = ReactRef_1.shouldUpdateRefs(prevElement, nextElement);
            refsChanged && ReactRef_1.detachRefs(internalInstance, prevElement), internalInstance.receiveComponent(nextElement, transaction, context), refsChanged && internalInstance._currentElement && null != internalInstance._currentElement.ref && transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
        }
    },
    performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, transaction, updateBatchNumber) {
        if (internalInstance._updateBatchNumber !== updateBatchNumber) return void warning(null == internalInstance._updateBatchNumber || internalInstance._updateBatchNumber === updateBatchNumber + 1, "performUpdateIfNecessary: Unexpected batch number (current %s, " + "pending %s)", updateBatchNumber, internalInstance._updateBatchNumber);
        internalInstance.performUpdateIfNecessary(transaction);
    }
},
    ReactReconciler_1 = ReactReconciler,
    ReactInstanceMap = {
    remove: function remove(key) {
        key._reactInternalInstance = void 0;
    },
    get: function get(key) {
        return key._reactInternalInstance;
    },
    has: function has(key) {
        return void 0 !== key._reactInternalInstance;
    },
    set: function set(key, value) {
        key._reactInternalInstance = value;
    }
},
    ReactInstanceMap_1 = ReactInstanceMap,
    OBSERVED_ERROR = {},
    TransactionImpl = {
    reinitializeTransaction: function reinitializeTransaction() {
        this.transactionWrappers = this.getTransactionWrappers(), this.wrapperInitData ? this.wrapperInitData.length = 0 : this.wrapperInitData = [], this._isInTransaction = !1;
    },
    _isInTransaction: !1,
    getTransactionWrappers: null,
    isInTransaction: function isInTransaction() {
        return !!this._isInTransaction;
    },
    perform: function perform(method, scope, a, b, c, d, e, f) {
        invariant(!this.isInTransaction(), "Transaction.perform(...): Cannot initialize a transaction when there " + "is already an outstanding transaction.");
        var errorThrown, ret;
        try {
            this._isInTransaction = !0, errorThrown = !0, this.initializeAll(0), ret = method.call(scope, a, b, c, d, e, f), errorThrown = !1;
        } finally {
            try {
                if (errorThrown) try {
                    this.closeAll(0);
                } catch (err) {} else this.closeAll(0);
            } finally {
                this._isInTransaction = !1;
            }
        }
        return ret;
    },
    initializeAll: function initializeAll(startIndex) {
        for (var transactionWrappers = this.transactionWrappers, i = startIndex; i < transactionWrappers.length; i++) {
            var wrapper = transactionWrappers[i];
            try {
                this.wrapperInitData[i] = OBSERVED_ERROR, this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
            } finally {
                if (this.wrapperInitData[i] === OBSERVED_ERROR) try {
                    this.initializeAll(i + 1);
                } catch (err) {}
            }
        }
    },
    closeAll: function closeAll(startIndex) {
        invariant(this.isInTransaction(), "Transaction.closeAll(): Cannot close transaction when none are open.");
        for (var transactionWrappers = this.transactionWrappers, i = startIndex; i < transactionWrappers.length; i++) {
            var errorThrown,
                wrapper = transactionWrappers[i],
                initData = this.wrapperInitData[i];
            try {
                errorThrown = !0, initData !== OBSERVED_ERROR && wrapper.close && wrapper.close.call(this, initData), errorThrown = !1;
            } finally {
                if (errorThrown) try {
                    this.closeAll(i + 1);
                } catch (e) {}
            }
        }
        this.wrapperInitData.length = 0;
    }
},
    Transaction = TransactionImpl,
    dirtyComponents = [],
    updateBatchNumber = 0,
    batchingStrategy = null;

function ensureInjected() {
    invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy, "ReactUpdates: must inject a reconcile transaction class and batching " + "strategy");
}

var NESTED_UPDATES = {
    initialize: function initialize() {
        this.dirtyComponentsLength = dirtyComponents.length;
    },
    close: function close() {
        this.dirtyComponentsLength !== dirtyComponents.length ? (dirtyComponents.splice(0, this.dirtyComponentsLength), flushBatchedUpdates()) : dirtyComponents.length = 0;
    }
},
    TRANSACTION_WRAPPERS = [NESTED_UPDATES];

function ReactUpdatesFlushTransaction() {
    this.reinitializeTransaction(), this.dirtyComponentsLength = null, this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(!0);
}

babelHelpers.extends(ReactUpdatesFlushTransaction.prototype, Transaction, {
    getTransactionWrappers: function getTransactionWrappers() {
        return TRANSACTION_WRAPPERS;
    },
    destructor: function destructor() {
        this.dirtyComponentsLength = null, ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction), this.reconcileTransaction = null;
    },
    perform: function perform(method, scope, a) {
        return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
    }
}), PooledClass_1.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates$1(callback, a, b, c, d, e) {
    return ensureInjected(), batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

function mountOrderComparator(c1, c2) {
    return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
    var len = transaction.dirtyComponentsLength;
    invariant(len === dirtyComponents.length, "Expected flush transaction's stored dirty-components length (%s) to " + "match dirty-components array length (%s).", len, dirtyComponents.length), dirtyComponents.sort(mountOrderComparator), updateBatchNumber++;
    for (var i = 0; i < len; i++) {
        var component = dirtyComponents[i];
        ReactReconciler_1.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
    }
}

var flushBatchedUpdates = function flushBatchedUpdates() {
    for (; dirtyComponents.length;) {
        var transaction = ReactUpdatesFlushTransaction.getPooled();
        transaction.perform(runBatchedUpdates, null, transaction), ReactUpdatesFlushTransaction.release(transaction);
    }
};

function enqueueUpdate$1(component) {
    if (ensureInjected(), !batchingStrategy.isBatchingUpdates) return void batchingStrategy.batchedUpdates(enqueueUpdate$1, component);
    dirtyComponents.push(component), null == component._updateBatchNumber && (component._updateBatchNumber = updateBatchNumber + 1);
}

var ReactUpdatesInjection = {
    injectReconcileTransaction: function injectReconcileTransaction(ReconcileTransaction) {
        invariant(ReconcileTransaction, "ReactUpdates: must provide a reconcile transaction class"), ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
    },
    injectBatchingStrategy: function injectBatchingStrategy(_batchingStrategy) {
        invariant(_batchingStrategy, "ReactUpdates: must provide a batching strategy"), invariant("function" == typeof _batchingStrategy.batchedUpdates, "ReactUpdates: must provide a batchedUpdates() function"), invariant("boolean" == typeof _batchingStrategy.isBatchingUpdates, "ReactUpdates: must provide an isBatchingUpdates boolean attribute"), batchingStrategy = _batchingStrategy;
    },
    getBatchingStrategy: function getBatchingStrategy() {
        return batchingStrategy;
    }
},
    ReactUpdates = {
    ReactReconcileTransaction: null,
    batchedUpdates: batchedUpdates$1,
    enqueueUpdate: enqueueUpdate$1,
    flushBatchedUpdates: flushBatchedUpdates,
    injection: ReactUpdatesInjection
},
    ReactUpdates_1 = ReactUpdates,
    ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    ReactGlobalSharedState = {
    ReactCurrentOwner: ReactInternals.ReactCurrentOwner
},
    ReactGlobalSharedState_1 = ReactGlobalSharedState;

function enqueueUpdate(internalInstance) {
    ReactUpdates_1.enqueueUpdate(internalInstance);
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
    var internalInstance = ReactInstanceMap_1.get(publicInstance);
    return internalInstance || null;
}

var ReactUpdateQueue = {
    isMounted: function isMounted(publicInstance) {
        var internalInstance = ReactInstanceMap_1.get(publicInstance);
        return !!internalInstance && !!internalInstance._renderedComponent;
    },
    enqueueCallbackInternal: function enqueueCallbackInternal(internalInstance, callback) {
        internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback], enqueueUpdate(internalInstance);
    },
    enqueueForceUpdate: function enqueueForceUpdate(publicInstance, callback, callerName) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
        internalInstance && (callback = void 0 === callback ? null : callback, null !== callback && (internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback]), internalInstance._pendingForceUpdate = !0, enqueueUpdate(internalInstance));
    },
    enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState, callback, callerName) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
        internalInstance && (internalInstance._pendingStateQueue = [completeState], internalInstance._pendingReplaceState = !0, callback = void 0 === callback ? null : callback, null !== callback && (internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback]), enqueueUpdate(internalInstance));
    },
    enqueueSetState: function enqueueSetState(publicInstance, partialState, callback, callerName) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
        if (internalInstance) {
            (internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = [])).push(partialState), callback = void 0 === callback ? null : callback, null !== callback && (internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback]), enqueueUpdate(internalInstance);
        }
    },
    enqueueElementInternal: function enqueueElementInternal(internalInstance, nextElement, nextContext) {
        internalInstance._pendingElement = nextElement, internalInstance._context = nextContext, enqueueUpdate(internalInstance);
    }
},
    ReactUpdateQueue_1 = ReactUpdateQueue,
    injected = !1,
    ReactComponentEnvironment = {
    replaceNodeWithMarkup: null,
    processChildrenUpdates: null,
    injection: {
        injectEnvironment: function injectEnvironment(environment) {
            invariant(!injected, "ReactCompositeComponent: injectEnvironment() can only be called once."), ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup, ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates, injected = !0;
        }
    }
},
    ReactComponentEnvironment_1 = ReactComponentEnvironment,
    ReactCompositeComponentTypes$1 = {
    ImpureClass: 0,
    PureClass: 1,
    StatelessFunctional: 2
},
    ReactNodeTypes = {
    HOST: 0,
    COMPOSITE: 1,
    EMPTY: 2,
    getType: function getType(node) {
        return null === node || !1 === node ? ReactNodeTypes.EMPTY : React.isValidElement(node) ? "function" == typeof node.type ? ReactNodeTypes.COMPOSITE : ReactNodeTypes.HOST : void invariant(!1, "Unexpected node: %s", node);
    }
},
    ReactNodeTypes_1 = ReactNodeTypes;

function shouldUpdateReactComponent(prevElement, nextElement) {
    var prevEmpty = null === prevElement || !1 === prevElement,
        nextEmpty = null === nextElement || !1 === nextElement;
    if (prevEmpty || nextEmpty) return prevEmpty === nextEmpty;
    var prevType = typeof prevElement,
        nextType = typeof nextElement;
    return "string" === prevType || "number" === prevType ? "string" === nextType || "number" === nextType : "object" === nextType && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
}

var shouldUpdateReactComponent_1 = shouldUpdateReactComponent,
    ReactCurrentOwner$1 = ReactGlobalSharedState_1.ReactCurrentOwner;

function StatelessComponent(Component) {}

StatelessComponent.prototype.render = function () {
    return (0, ReactInstanceMap_1.get(this)._currentElement.type)(this.props, this.context, this.updater);
};

function shouldConstruct(Component) {
    return !(!Component.prototype || !Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
    return !(!Component.prototype || !Component.prototype.isPureReactComponent);
}

var nextMountID = 1,
    ReactCompositeComponent = {
    construct: function construct(element) {
        this._currentElement = element, this._rootNodeID = 0, this._compositeType = null, this._instance = null, this._hostParent = null, this._hostContainerInfo = null, this._updateBatchNumber = null, this._pendingElement = null, this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._renderedNodeType = null, this._renderedComponent = null, this._context = null, this._mountOrder = 0, this._topLevelWrapper = null, this._pendingCallbacks = null, this._calledComponentWillUnmount = !1;
    },
    mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
        this._context = context, this._mountOrder = nextMountID++, this._hostParent = hostParent, this._hostContainerInfo = hostContainerInfo;
        var renderedElement,
            publicProps = this._currentElement.props,
            publicContext = this._processContext(context),
            Component = this._currentElement.type,
            updateQueue = transaction.getUpdateQueue(),
            doConstruct = shouldConstruct(Component),
            inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
        doConstruct || null != inst && null != inst.render ? isPureComponent(Component) ? this._compositeType = ReactCompositeComponentTypes$1.PureClass : this._compositeType = ReactCompositeComponentTypes$1.ImpureClass : (renderedElement = inst, invariant(null === inst || !1 === inst || React.isValidElement(inst), "%s(...): A valid React element (or null) must be returned. You may have " + "returned undefined, an array or some other invalid object.", Component.displayName || Component.name || "Component"), inst = new StatelessComponent(Component), this._compositeType = ReactCompositeComponentTypes$1.StatelessFunctional), inst.props = publicProps, inst.context = publicContext, inst.refs = emptyObject, inst.updater = updateQueue, this._instance = inst, ReactInstanceMap_1.set(inst, this);
        var initialState = inst.state;
        void 0 === initialState && (inst.state = initialState = null), invariant("object" == typeof initialState && !Array.isArray(initialState), "%s.state: must be set to an object or null", this.getName() || "ReactCompositeComponent"), this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, inst.componentWillMount && (inst.componentWillMount(), this._pendingStateQueue && (inst.state = this._processPendingState(inst.props, inst.context)));
        var markup;
        markup = inst.unstable_handleError ? this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) : this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context), inst.componentDidMount && transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
        var callbacks = this._pendingCallbacks;
        if (callbacks) {
            this._pendingCallbacks = null;
            for (var i = 0; i < callbacks.length; i++) {
                transaction.getReactMountReady().enqueue(callbacks[i], inst);
            }
        }
        return markup;
    },
    _constructComponent: function _constructComponent(doConstruct, publicProps, publicContext, updateQueue) {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    },
    _constructComponentWithoutOwner: function _constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue) {
        var Component = this._currentElement.type;
        return doConstruct ? new Component(publicProps, publicContext, updateQueue) : Component(publicProps, publicContext, updateQueue);
    },
    performInitialMountWithErrorHandling: function performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) {
        var markup,
            checkpoint = transaction.checkpoint();
        try {
            markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        } catch (e) {
            transaction.rollback(checkpoint), this._instance.unstable_handleError(e), this._pendingStateQueue && (this._instance.state = this._processPendingState(this._instance.props, this._instance.context)), checkpoint = transaction.checkpoint(), this._renderedComponent.unmountComponent(!0, !0), transaction.rollback(checkpoint), markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        }
        return markup;
    },
    performInitialMount: function performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context) {
        void 0 === renderedElement && (renderedElement = this._renderValidatedComponent());
        var nodeType = ReactNodeTypes_1.getType(renderedElement);
        this._renderedNodeType = nodeType;
        var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes_1.EMPTY);
        return this._renderedComponent = child, ReactReconciler_1.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), 0);
    },
    getHostNode: function getHostNode() {
        return ReactReconciler_1.getHostNode(this._renderedComponent);
    },
    unmountComponent: function unmountComponent(safely, skipLifecycle) {
        if (this._renderedComponent) {
            var inst = this._instance;
            if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) if (inst._calledComponentWillUnmount = !0, safely) {
                if (!skipLifecycle) {
                    var name = this.getName() + ".componentWillUnmount()";
                    ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(name, inst.componentWillUnmount, inst);
                }
            } else inst.componentWillUnmount();
            this._renderedComponent && (ReactReconciler_1.unmountComponent(this._renderedComponent, safely, skipLifecycle), this._renderedNodeType = null, this._renderedComponent = null, this._instance = null), this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._pendingCallbacks = null, this._pendingElement = null, this._context = null, this._rootNodeID = 0, this._topLevelWrapper = null, ReactInstanceMap_1.remove(inst);
        }
    },
    _maskContext: function _maskContext(context) {
        var Component = this._currentElement.type,
            contextTypes = Component.contextTypes;
        if (!contextTypes) return emptyObject;
        var maskedContext = {};
        for (var contextName in contextTypes) {
            maskedContext[contextName] = context[contextName];
        }return maskedContext;
    },
    _processContext: function _processContext(context) {
        return this._maskContext(context);
    },
    _processChildContext: function _processChildContext(currentContext) {
        var childContext,
            Component = this._currentElement.type,
            inst = this._instance;
        if ("function" == typeof inst.getChildContext) {
            childContext = inst.getChildContext(), invariant("object" == typeof Component.childContextTypes, "%s.getChildContext(): childContextTypes must be defined in order to " + "use getChildContext().", this.getName() || "ReactCompositeComponent");
            for (var name in childContext) {
                invariant(name in Component.childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || "ReactCompositeComponent", name);
            }return babelHelpers.extends({}, currentContext, childContext);
        }
        return currentContext;
    },
    _checkContextTypes: function _checkContextTypes(typeSpecs, values, location) {},
    receiveComponent: function receiveComponent(nextElement, transaction, nextContext) {
        var prevElement = this._currentElement,
            prevContext = this._context;
        this._pendingElement = null, this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
    },
    performUpdateIfNecessary: function performUpdateIfNecessary(transaction) {
        if (null != this._pendingElement) ReactReconciler_1.receiveComponent(this, this._pendingElement, transaction, this._context);else if (null !== this._pendingStateQueue || this._pendingForceUpdate) this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);else {
            var callbacks = this._pendingCallbacks;
            if (this._pendingCallbacks = null, callbacks) for (var j = 0; j < callbacks.length; j++) {
                transaction.getReactMountReady().enqueue(callbacks[j], this.getPublicInstance());
            }this._updateBatchNumber = null;
        }
    },
    updateComponent: function updateComponent(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
        var inst = this._instance;
        invariant(null != inst, "Attempted to update component `%s` that has already been unmounted " + "(or failed to mount).", this.getName() || "ReactCompositeComponent");
        var nextContext,
            willReceive = !1;
        this._context === nextUnmaskedContext ? nextContext = inst.context : (nextContext = this._processContext(nextUnmaskedContext), willReceive = !0);
        var prevProps = prevParentElement.props,
            nextProps = nextParentElement.props;
        if (prevParentElement !== nextParentElement && (willReceive = !0), willReceive && inst.componentWillReceiveProps) {
            var beforeState = inst.state;
            inst.componentWillReceiveProps(nextProps, nextContext);
            var afterState = inst.state;
            beforeState !== afterState && (inst.state = beforeState, inst.updater.enqueueReplaceState(inst, afterState));
        }
        var callbacks = this._pendingCallbacks;
        this._pendingCallbacks = null;
        var nextState = this._processPendingState(nextProps, nextContext),
            shouldUpdate = !0;
        if (!this._pendingForceUpdate) {
            var prevState = inst.state;
            shouldUpdate = willReceive || nextState !== prevState, inst.shouldComponentUpdate ? shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext) : this._compositeType === ReactCompositeComponentTypes$1.PureClass && (shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState));
        }
        if (this._updateBatchNumber = null, shouldUpdate ? (this._pendingForceUpdate = !1, this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext)) : (this._currentElement = nextParentElement, this._context = nextUnmaskedContext, inst.props = nextProps, inst.state = nextState, inst.context = nextContext), callbacks) for (var j = 0; j < callbacks.length; j++) {
            transaction.getReactMountReady().enqueue(callbacks[j], this.getPublicInstance());
        }
    },
    _processPendingState: function _processPendingState(props, context) {
        var inst = this._instance,
            queue = this._pendingStateQueue,
            replace = this._pendingReplaceState;
        if (this._pendingReplaceState = !1, this._pendingStateQueue = null, !queue) return inst.state;
        if (replace && 1 === queue.length) return queue[0];
        for (var nextState = replace ? queue[0] : inst.state, dontMutate = !0, i = replace ? 1 : 0; i < queue.length; i++) {
            var partial = queue[i],
                partialState = "function" == typeof partial ? partial.call(inst, nextState, props, context) : partial;
            partialState && (dontMutate ? (dontMutate = !1, nextState = babelHelpers.extends({}, nextState, partialState)) : babelHelpers.extends(nextState, partialState));
        }
        return nextState;
    },
    _performComponentUpdate: function _performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
        var prevProps,
            prevState,
            inst = this._instance,
            hasComponentDidUpdate = !!inst.componentDidUpdate;
        hasComponentDidUpdate && (prevProps = inst.props, prevState = inst.state), inst.componentWillUpdate && inst.componentWillUpdate(nextProps, nextState, nextContext), this._currentElement = nextElement, this._context = unmaskedContext, inst.props = nextProps, inst.state = nextState, inst.context = nextContext, inst.unstable_handleError ? this._updateRenderedComponentWithErrorHandling(transaction, unmaskedContext) : this._updateRenderedComponent(transaction, unmaskedContext), hasComponentDidUpdate && transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState), inst);
    },
    _updateRenderedComponentWithErrorHandling: function _updateRenderedComponentWithErrorHandling(transaction, context) {
        var checkpoint = transaction.checkpoint();
        try {
            this._updateRenderedComponent(transaction, context);
        } catch (e) {
            transaction.rollback(checkpoint), this._instance.unstable_handleError(e), this._pendingStateQueue && (this._instance.state = this._processPendingState(this._instance.props, this._instance.context)), checkpoint = transaction.checkpoint(), this._updateRenderedComponentWithNextElement(transaction, context, null, !0), this._updateRenderedComponent(transaction, context);
        }
    },
    _updateRenderedComponent: function _updateRenderedComponent(transaction, context) {
        var nextRenderedElement = this._renderValidatedComponent();
        this._updateRenderedComponentWithNextElement(transaction, context, nextRenderedElement, !1);
    },
    _updateRenderedComponentWithNextElement: function _updateRenderedComponentWithNextElement(transaction, context, nextRenderedElement, safely) {
        var prevComponentInstance = this._renderedComponent,
            prevRenderedElement = prevComponentInstance._currentElement;
        if (shouldUpdateReactComponent_1(prevRenderedElement, nextRenderedElement)) ReactReconciler_1.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));else {
            var oldHostNode = ReactReconciler_1.getHostNode(prevComponentInstance),
                nodeType = ReactNodeTypes_1.getType(nextRenderedElement);
            this._renderedNodeType = nodeType;
            var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes_1.EMPTY);
            this._renderedComponent = child;
            var nextMarkup = ReactReconciler_1.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), 0);
            ReactReconciler_1.unmountComponent(prevComponentInstance, safely, !1), this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
        }
    },
    _replaceNodeWithMarkup: function _replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance) {
        ReactComponentEnvironment_1.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
    },
    _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
        var inst = this._instance;
        return inst.render();
    },
    _renderValidatedComponent: function _renderValidatedComponent() {
        var renderedElement;
        if (1 && this._compositeType === ReactCompositeComponentTypes$1.StatelessFunctional) renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();else {
            ReactCurrentOwner$1.current = this;
            try {
                renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
            } finally {
                ReactCurrentOwner$1.current = null;
            }
        }
        return invariant(null === renderedElement || !1 === renderedElement || React.isValidElement(renderedElement), "%s.render(): A valid React element (or null) must be returned. You may have " + "returned undefined, an array or some other invalid object.", this.getName() || "ReactCompositeComponent"), renderedElement;
    },
    attachRef: function attachRef(ref, component) {
        var inst = this.getPublicInstance();
        invariant(null != inst, "Stateless function components cannot have refs.");
        var publicComponentInstance = component.getPublicInstance();
        (inst.refs === emptyObject ? inst.refs = {} : inst.refs)[ref] = publicComponentInstance;
    },
    detachRef: function detachRef(ref) {
        delete this.getPublicInstance().refs[ref];
    },
    getName: function getName() {
        var type = this._currentElement.type,
            constructor = this._instance && this._instance.constructor;
        return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
    },
    getPublicInstance: function getPublicInstance() {
        var inst = this._instance;
        return this._compositeType === ReactCompositeComponentTypes$1.StatelessFunctional ? null : inst;
    },
    _instantiateReactComponent: null
},
    ReactCompositeComponent_1 = ReactCompositeComponent,
    emptyComponentFactory,
    ReactEmptyComponentInjection = {
    injectEmptyComponentFactory: function injectEmptyComponentFactory(factory) {
        emptyComponentFactory = factory;
    }
},
    ReactEmptyComponent = {
    create: function create(instantiate) {
        return emptyComponentFactory(instantiate);
    }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

var ReactEmptyComponent_1 = ReactEmptyComponent,
    genericComponentClass = null,
    textComponentClass = null,
    ReactHostComponentInjection = {
    injectGenericComponentClass: function injectGenericComponentClass(componentClass) {
        genericComponentClass = componentClass;
    },
    injectTextComponentClass: function injectTextComponentClass(componentClass) {
        textComponentClass = componentClass;
    }
};

function createInternalComponent(element) {
    return invariant(genericComponentClass, "There is no registered component for the tag %s", element.type), new genericComponentClass(element);
}

function createInstanceForText(text) {
    return new textComponentClass(text);
}

function isTextComponent(component) {
    return component instanceof textComponentClass;
}

var ReactHostComponent = {
    createInternalComponent: createInternalComponent,
    createInstanceForText: createInstanceForText,
    isTextComponent: isTextComponent,
    injection: ReactHostComponentInjection
},
    ReactHostComponent_1 = ReactHostComponent,
    ReactCompositeComponentWrapper = function ReactCompositeComponentWrapper(element) {
    this.construct(element);
};

function getDeclarationErrorAddendum(owner) {
    if (owner) {
        var name = owner.getName();
        if (name) return "\n\nCheck the render method of `" + name + "`.";
    }
    return "";
}

function isInternalComponentType(type) {
    return "function" == typeof type && void 0 !== type.prototype && "function" == typeof type.prototype.mountComponent && "function" == typeof type.prototype.receiveComponent;
}

function instantiateReactComponent(node, shouldHaveDebugID) {
    var instance;
    if (null === node || !1 === node) instance = ReactEmptyComponent_1.create(instantiateReactComponent);else if ("object" == typeof node) {
        var element = node,
            type = element.type;
        if ("function" != typeof type && "string" != typeof type) {
            var info = "";
            info += getDeclarationErrorAddendum(element._owner), invariant(!1, "Element type is invalid: expected a string (for built-in components) " + "or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, info);
        }
        "string" == typeof element.type ? instance = ReactHostComponent_1.createInternalComponent(element) : isInternalComponentType(element.type) ? (instance = new element.type(element), instance.getHostNode || (instance.getHostNode = instance.getNativeNode)) : instance = new ReactCompositeComponentWrapper(element);
    } else "string" == typeof node || "number" == typeof node ? instance = ReactHostComponent_1.createInstanceForText(node) : invariant(!1, "Encountered invalid React node of type %s", typeof node);
    return instance._mountIndex = 0, instance._mountImage = null, instance;
}

babelHelpers.extends(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent_1, {
    _instantiateReactComponent: instantiateReactComponent
});

var instantiateReactComponent_1 = instantiateReactComponent,
    DevOnlyStubShim = null,
    ReactNativeFeatureFlags = require(63                       ), // 63 = ReactNativeFeatureFlags
    injectedFindNode = ReactNativeFeatureFlags.useFiber ? function (fiber) {
    return DevOnlyStubShim.findHostInstance(fiber);
} : function (instance) {
    return instance;
};

function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" == typeof componentOrHandle) return componentOrHandle;
    var component = componentOrHandle,
        internalInstance = ReactInstanceMap_1.get(component);
    return internalInstance ? injectedFindNode(internalInstance) : component || (invariant("object" == typeof component && ("_rootNodeID" in component || "_nativeTag" in component) || null != component.render && "function" == typeof component.render, "findNodeHandle(...): Argument is not a component " + "(type: %s, keys: %s)", typeof component, Object.keys(component)), void invariant(!1, "findNodeHandle(...): Unable to find node handle for unmounted " + "component."));
}

var findNodeHandle_1 = findNodeHandle,
    TopLevelWrapper = function TopLevelWrapper() {};

TopLevelWrapper.prototype.isReactComponent = {}, TopLevelWrapper.prototype.render = function () {
    return this.props.child;
}, TopLevelWrapper.isReactTopLevelWrapper = !0;

function mountComponentIntoNode(componentInstance, containerTag, transaction) {
    var markup = ReactReconciler_1.mountComponent(componentInstance, transaction, null, ReactNativeContainerInfo_1(containerTag), emptyObject, 0);
    componentInstance._renderedComponent._topLevelWrapper = componentInstance, ReactNativeMount._mountImageIntoNode(markup, containerTag);
}

function batchedMountComponentIntoNode(componentInstance, containerTag) {
    var transaction = ReactUpdates_1.ReactReconcileTransaction.getPooled();
    transaction.perform(mountComponentIntoNode, null, componentInstance, containerTag, transaction), ReactUpdates_1.ReactReconcileTransaction.release(transaction);
}

var ReactNativeMount = {
    _instancesByContainerID: {},
    findNodeHandle: findNodeHandle_1,
    renderComponent: function renderComponent(nextElement, containerTag, callback) {
        var nextWrappedElement = React.createElement(TopLevelWrapper, {
            child: nextElement
        }),
            topRootNodeID = containerTag,
            prevComponent = ReactNativeMount._instancesByContainerID[topRootNodeID];
        if (prevComponent) {
            var prevWrappedElement = prevComponent._currentElement,
                prevElement = prevWrappedElement.props.child;
            if (shouldUpdateReactComponent_1(prevElement, nextElement)) return ReactUpdateQueue_1.enqueueElementInternal(prevComponent, nextWrappedElement, emptyObject), callback && ReactUpdateQueue_1.enqueueCallbackInternal(prevComponent, callback), prevComponent;
            ReactNativeMount.unmountComponentAtNode(containerTag);
        }
        if (!ReactNativeTagHandles_1.reactTagIsNativeTopRootID(containerTag)) return console.error("You cannot render into anything but a top root"), null;
        ReactNativeTagHandles_1.assertRootTag(containerTag);
        var instance = instantiateReactComponent_1(nextWrappedElement, !1);
        if (ReactNativeMount._instancesByContainerID[containerTag] = instance, callback) {
            var nonNullCallback = callback;
            instance._pendingCallbacks = [function () {
                nonNullCallback.call(instance._renderedComponent.getPublicInstance());
            }];
        }
        return ReactUpdates_1.batchedUpdates(batchedMountComponentIntoNode, instance, containerTag), instance._renderedComponent.getPublicInstance();
    },
    _mountImageIntoNode: function _mountImageIntoNode(mountImage, containerID) {
        var childTag = mountImage;
        UIManager.setChildren(containerID, [childTag]);
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
        ReactNativeMount.unmountComponentAtNode(containerTag), UIManager.removeRootView(containerTag);
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
        if (!ReactNativeTagHandles_1.reactTagIsNativeTopRootID(containerTag)) return console.error("You cannot render into anything but a top root"), !1;
        var instance = ReactNativeMount._instancesByContainerID[containerTag];
        return !!instance && (ReactNativeMount.unmountComponentFromNode(instance, containerTag), delete ReactNativeMount._instancesByContainerID[containerTag], !0);
    },
    unmountComponentFromNode: function unmountComponentFromNode(instance, containerID) {
        ReactReconciler_1.unmountComponent(instance), UIManager.removeSubviewsFromContainerWithID(containerID);
    }
},
    ReactNativeMount_1 = ReactNativeMount,
    RESET_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: function close() {
        ReactDefaultBatchingStrategy.isBatchingUpdates = !1;
    }
},
    FLUSH_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: ReactUpdates_1.flushBatchedUpdates.bind(ReactUpdates_1)
},
    TRANSACTION_WRAPPERS$1 = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
    this.reinitializeTransaction();
}

babelHelpers.extends(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
    getTransactionWrappers: function getTransactionWrappers() {
        return TRANSACTION_WRAPPERS$1;
    }
});

var transaction = new ReactDefaultBatchingStrategyTransaction(),
    ReactDefaultBatchingStrategy = {
    isBatchingUpdates: !1,
    batchedUpdates: function batchedUpdates(callback, a, b, c, d, e) {
        var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
        return ReactDefaultBatchingStrategy.isBatchingUpdates = !0, alreadyBatchingUpdates ? callback(a, b, c, d, e) : transaction.perform(callback, null, a, b, c, d, e);
    }
},
    ReactDefaultBatchingStrategy_1 = ReactDefaultBatchingStrategy,
    dangerouslyProcessChildrenUpdates = function dangerouslyProcessChildrenUpdates(inst, childrenUpdates) {
    if (childrenUpdates.length) {
        for (var moveFromIndices, moveToIndices, addChildTags, addAtIndices, removeAtIndices, containerTag = ReactNativeComponentTree_1.getNodeFromInstance(inst), i = 0; i < childrenUpdates.length; i++) {
            var update = childrenUpdates[i];
            if ("MOVE_EXISTING" === update.type) (moveFromIndices || (moveFromIndices = [])).push(update.fromIndex), (moveToIndices || (moveToIndices = [])).push(update.toIndex);else if ("REMOVE_NODE" === update.type) (removeAtIndices || (removeAtIndices = [])).push(update.fromIndex);else if ("INSERT_MARKUP" === update.type) {
                var mountImage = update.content,
                    tag = mountImage;
                (addAtIndices || (addAtIndices = [])).push(update.toIndex), (addChildTags || (addChildTags = [])).push(tag);
            }
        }
        UIManager.manageChildren(containerTag, moveFromIndices, moveToIndices, addChildTags, addAtIndices, removeAtIndices);
    }
},
    ReactNativeDOMIDOperations = {
    dangerouslyProcessChildrenUpdates: dangerouslyProcessChildrenUpdates,
    dangerouslyReplaceNodeWithMarkupByID: function dangerouslyReplaceNodeWithMarkupByID(id, mountImage) {
        var oldTag = id;
        UIManager.replaceExistingNonRootView(oldTag, mountImage);
    }
},
    ReactNativeDOMIDOperations_1 = ReactNativeDOMIDOperations;

function validateCallback(callback) {
    invariant(!callback || "function" == typeof callback, "Invalid argument passed as callback. Expected a function. Instead " + "received: %s", callback);
}

var validateCallback_1 = validateCallback;

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var CallbackQueue = function () {
    function CallbackQueue() {
        _classCallCheck(this, CallbackQueue), this._callbacks = null, this._contexts = null;
    }
    return CallbackQueue.prototype.enqueue = function (callback, context) {
        this._callbacks = this._callbacks || [], this._callbacks.push(callback), this._contexts = this._contexts || [], this._contexts.push(context);
    }, CallbackQueue.prototype.notifyAll = function () {
        var callbacks = this._callbacks,
            contexts = this._contexts;
        if (callbacks && contexts) {
            invariant(callbacks.length === contexts.length, "Mismatched list of contexts in callback queue"), this._callbacks = null, this._contexts = null;
            for (var i = 0; i < callbacks.length; i++) {
                validateCallback_1(callbacks[i]), callbacks[i].call(contexts[i]);
            }callbacks.length = 0, contexts.length = 0;
        }
    }, CallbackQueue.prototype.checkpoint = function () {
        return this._callbacks ? this._callbacks.length : 0;
    }, CallbackQueue.prototype.rollback = function (len) {
        this._callbacks && this._contexts && (this._callbacks.length = len, this._contexts.length = len);
    }, CallbackQueue.prototype.reset = function () {
        this._callbacks = null, this._contexts = null;
    }, CallbackQueue.prototype.destructor = function () {
        this.reset();
    }, CallbackQueue;
}(),
    CallbackQueue_1 = PooledClass_1.addPoolingTo(CallbackQueue),
    ON_DOM_READY_QUEUEING = {
    initialize: function initialize() {
        this.reactMountReady.reset();
    },
    close: function close() {
        this.reactMountReady.notifyAll();
    }
},
    TRANSACTION_WRAPPERS$2 = [ON_DOM_READY_QUEUEING];

function ReactNativeReconcileTransaction() {
    this.reinitializeTransaction(), this.reactMountReady = CallbackQueue_1.getPooled();
}

var Mixin = {
    getTransactionWrappers: function getTransactionWrappers() {
        return TRANSACTION_WRAPPERS$2;
    },
    getReactMountReady: function getReactMountReady() {
        return this.reactMountReady;
    },
    getUpdateQueue: function getUpdateQueue() {
        return ReactUpdateQueue_1;
    },
    checkpoint: function checkpoint() {
        return this.reactMountReady.checkpoint();
    },
    rollback: function rollback(checkpoint) {
        this.reactMountReady.rollback(checkpoint);
    },
    destructor: function destructor() {
        CallbackQueue_1.release(this.reactMountReady), this.reactMountReady = null;
    }
};

babelHelpers.extends(ReactNativeReconcileTransaction.prototype, Transaction, ReactNativeReconcileTransaction, Mixin), PooledClass_1.addPoolingTo(ReactNativeReconcileTransaction);

var ReactNativeReconcileTransaction_1 = ReactNativeReconcileTransaction,
    ReactNativeComponentEnvironment = {
    processChildrenUpdates: ReactNativeDOMIDOperations_1.dangerouslyProcessChildrenUpdates,
    replaceNodeWithMarkup: ReactNativeDOMIDOperations_1.dangerouslyReplaceNodeWithMarkupByID,
    clearNode: function clearNode() {},
    ReactReconcileTransaction: ReactNativeReconcileTransaction_1
},
    ReactNativeComponentEnvironment_1 = ReactNativeComponentEnvironment,
    ReactNativeTextComponent = function ReactNativeTextComponent(text) {
    this._currentElement = text, this._stringText = "" + text, this._hostParent = null, this._rootNodeID = 0;
};

babelHelpers.extends(ReactNativeTextComponent.prototype, {
    mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
        invariant(context.isInAParentText, 'RawText "%s" must be wrapped in an explicit <Text> component.', this._stringText), this._hostParent = hostParent;
        var tag = ReactNativeTagHandles_1.allocateTag();
        this._rootNodeID = tag;
        var nativeTopRootTag = hostContainerInfo._tag;
        return UIManager.createView(tag, "RCTRawText", nativeTopRootTag, {
            text: this._stringText
        }), ReactNativeComponentTree_1.precacheNode(this, tag), tag;
    },
    getHostNode: function getHostNode() {
        return this._rootNodeID;
    },
    receiveComponent: function receiveComponent(nextText, transaction, context) {
        if (nextText !== this._currentElement) {
            this._currentElement = nextText;
            var nextStringText = "" + nextText;
            nextStringText !== this._stringText && (this._stringText = nextStringText, UIManager.updateView(this._rootNodeID, "RCTRawText", {
                text: this._stringText
            }));
        }
    },
    unmountComponent: function unmountComponent() {
        ReactNativeComponentTree_1.uncacheNode(this), this._currentElement = null, this._stringText = null, this._rootNodeID = 0;
    }
});

var ReactNativeTextComponent_1 = ReactNativeTextComponent,
    ReactSimpleEmptyComponent = function ReactSimpleEmptyComponent(placeholderElement, instantiate) {
    this._currentElement = null, this._renderedComponent = instantiate(placeholderElement);
};

babelHelpers.extends(ReactSimpleEmptyComponent.prototype, {
    mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID) {
        return ReactReconciler_1.mountComponent(this._renderedComponent, transaction, hostParent, hostContainerInfo, context, parentDebugID);
    },
    receiveComponent: function receiveComponent() {},
    getHostNode: function getHostNode() {
        return ReactReconciler_1.getHostNode(this._renderedComponent);
    },
    unmountComponent: function unmountComponent(safely, skipLifecycle) {
        ReactReconciler_1.unmountComponent(this._renderedComponent, safely, skipLifecycle), this._renderedComponent = null;
    }
});

var ReactSimpleEmptyComponent_1 = ReactSimpleEmptyComponent;

function inject$1() {
    ReactGenericBatching_1.injection.injectStackBatchedUpdates(ReactUpdates_1.batchedUpdates), ReactUpdates_1.injection.injectReconcileTransaction(ReactNativeComponentEnvironment_1.ReactReconcileTransaction), ReactUpdates_1.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy_1), ReactComponentEnvironment_1.injection.injectEnvironment(ReactNativeComponentEnvironment_1);
    var EmptyComponent = function EmptyComponent(instantiate) {
        var View = require(124   ); // 124 = View
        return new ReactSimpleEmptyComponent_1(React.createElement(View, {
            collapsable: !0,
            style: {
                position: "absolute"
            }
        }), instantiate);
    };
    ReactEmptyComponent_1.injection.injectEmptyComponentFactory(EmptyComponent), ReactHostComponent_1.injection.injectTextComponentClass(ReactNativeTextComponent_1), ReactHostComponent_1.injection.injectGenericComponentClass(function (tag) {
        var info = "";
        "string" == typeof tag && /^[a-z]/.test(tag) && (info += " Each component name should start with an uppercase letter."), invariant(!1, "Expected a component class, got %s.%s", tag, info);
    });
}

var ReactNativeStackInjection = {
    inject: inject$1
},
    getInspectorDataForViewTag = void 0;

getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    invariant(!1, "getInspectorDataForViewTag() is not available in production");
};

var ReactNativeStackInspector = {
    getInspectorDataForViewTag: getInspectorDataForViewTag
},
    findNumericNodeHandleStack = function findNumericNodeHandleStack(componentOrHandle) {
    var nodeHandle = findNodeHandle_1(componentOrHandle);
    return null == nodeHandle || "number" == typeof nodeHandle ? nodeHandle : nodeHandle.getHostNode();
};

function _classCallCheck$2(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var objects = {},
    uniqueID = 1,
    emptyObject$3 = {},
    ReactNativePropRegistry = function () {
    function ReactNativePropRegistry() {
        _classCallCheck$2(this, ReactNativePropRegistry);
    }
    return ReactNativePropRegistry.register = function (object) {
        var id = ++uniqueID;
        return objects[id] = object, id;
    }, ReactNativePropRegistry.getByID = function (id) {
        if (!id) return emptyObject$3;
        var object = objects[id];
        return object || (console.warn("Invalid style with id `" + id + "`. Skipping ..."), emptyObject$3);
    }, ReactNativePropRegistry;
}(),
    ReactNativePropRegistry_1 = ReactNativePropRegistry,
    emptyObject$2 = {},
    removedKeys = null,
    removedKeyCount = 0;

function defaultDiffer(prevProp, nextProp) {
    return "object" != typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp);
}

function resolveObject(idOrObject) {
    return "number" == typeof idOrObject ? ReactNativePropRegistry_1.getByID(idOrObject) : idOrObject;
}

function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && removedKeyCount > 0;) {
        restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && removedKeyCount > 0) {
        var obj = resolveObject(node);
        for (var propKey in removedKeys) {
            if (removedKeys[propKey]) {
                var nextProp = obj[propKey];
                if (void 0 !== nextProp) {
                    var attributeConfig = validAttributes[propKey];
                    if (attributeConfig) {
                        if ("function" == typeof nextProp && (nextProp = !0), void 0 === nextProp && (nextProp = null), "object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                            var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                            updatePayload[propKey] = nextValue;
                        }
                        removedKeys[propKey] = !1, removedKeyCount--;
                    }
                }
            }
        }
    }
}

function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
    var i,
        minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
    for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
    }for (; i < prevArray.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
    }for (; i < nextArray.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
    }return updatePayload;
}

function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    return updatePayload || prevProp !== nextProp ? prevProp && nextProp ? Array.isArray(prevProp) || Array.isArray(nextProp) ? Array.isArray(prevProp) && Array.isArray(nextProp) ? diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes) : Array.isArray(prevProp) ? diffProperties(updatePayload, flattenStyle(prevProp), resolveObject(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), flattenStyle(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), resolveObject(nextProp), validAttributes) : nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload : updatePayload;
}

function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return addProperties(updatePayload, resolveObject(nextProp), validAttributes);
    for (var i = 0; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }return updatePayload;
}

function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return clearProperties(updatePayload, resolveObject(prevProp), validAttributes);
    for (var i = 0; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }return updatePayload;
}

function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, nextProp, prevProp;
    for (var propKey in nextProps) {
        if (attributeConfig = validAttributes[propKey]) if (prevProp = prevProps[propKey], nextProp = nextProps[propKey], "function" == typeof nextProp && (nextProp = !0, "function" == typeof prevProp && (prevProp = !0)), void 0 === nextProp && (nextProp = null, void 0 === prevProp && (prevProp = null)), removedKeys && (removedKeys[propKey] = !1), updatePayload && void 0 !== updatePayload[propKey]) {
            if ("object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                updatePayload[propKey] = nextValue;
            }
        } else if (prevProp !== nextProp) if ("object" != typeof attributeConfig) defaultDiffer(prevProp, nextProp) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
            var shouldUpdate = void 0 === prevProp || ("function" == typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
            shouldUpdate && (nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = nextValue);
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), removedKeyCount > 0 && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
    }for (propKey in prevProps) {
        void 0 === nextProps[propKey] && (attributeConfig = validAttributes[propKey]) && (updatePayload && void 0 !== updatePayload[propKey] || void 0 !== (prevProp = prevProps[propKey]) && ("object" != typeof attributeConfig || "function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[propKey] = null, removedKeys || (removedKeys = {}), removedKeys[propKey] || (removedKeys[propKey] = !0, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig)));
    }return updatePayload;
}

function addProperties(updatePayload, props, validAttributes) {
    return diffProperties(updatePayload, emptyObject$2, props, validAttributes);
}

function clearProperties(updatePayload, prevProps, validAttributes) {
    return diffProperties(updatePayload, prevProps, emptyObject$2, validAttributes);
}

var ReactNativeAttributePayload = {
    create: function create(props, validAttributes) {
        return addProperties(null, props, validAttributes);
    },
    diff: function diff(prevProps, nextProps, validAttributes) {
        return diffProperties(null, prevProps, nextProps, validAttributes);
    }
},
    ReactNativeAttributePayload_1 = ReactNativeAttributePayload;

function mountSafeCallback$1(context, callback) {
    return function () {
        if (callback) {
            if ("boolean" == typeof context.__isMounted) {
                if (!context.__isMounted) return;
            } else if ("function" == typeof context.isMounted && !context.isMounted()) return;
            return callback.apply(context, arguments);
        }
    };
}

function throwOnStylesProp(component, props) {
    if (void 0 !== props.styles) {
        var owner = component._owner || null,
            name = component.constructor.displayName,
            msg = "`styles` is not a supported property of `" + name + "`, did " + "you mean `style` (singular)?";
        throw owner && owner.constructor && owner.constructor.displayName && (msg += "\n\nCheck the `" + owner.constructor.displayName + "` parent " + " component."), new Error(msg);
    }
}

function warnForStyleProps(props, validAttributes) {
    for (var key in validAttributes.style) {
        validAttributes[key] || void 0 === props[key] || console.error("You are setting the style `{ " + key + ": ... }` as a prop. You " + "should nest it in a style object. " + "E.g. `{ style: { " + key + ": ... } }`");
    }
}

var NativeMethodsMixinUtils = {
    mountSafeCallback: mountSafeCallback$1,
    throwOnStylesProp: throwOnStylesProp,
    warnForStyleProps: warnForStyleProps
};

function _classCallCheck$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return !call || "object" != typeof call && "function" != typeof call ? self : call;
}

function _inherits(subClass, superClass) {
    if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: !1,
            writable: !0,
            configurable: !0
        }
    }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
}

var ReactNativeFeatureFlags$1 = require(63                       ), // 63 = ReactNativeFeatureFlags
    mountSafeCallback = NativeMethodsMixinUtils.mountSafeCallback,
    findNumericNodeHandle = ReactNativeFeatureFlags$1.useFiber ? DevOnlyStubShim : findNumericNodeHandleStack,
    ReactNativeComponent = function (_React$Component) {
    _inherits(ReactNativeComponent, _React$Component);
    function ReactNativeComponent() {
        return _classCallCheck$1(this, ReactNativeComponent), _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }
    return ReactNativeComponent.prototype.blur = function () {
        TextInputState.blurTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.focus = function () {
        TextInputState.focusTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.measure = function (callback) {
        UIManager.measure(findNumericNodeHandle(this), mountSafeCallback(this, callback));
    }, ReactNativeComponent.prototype.measureInWindow = function (callback) {
        UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback(this, callback));
    }, ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
    }, ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
        injectedSetNativeProps(this, nativeProps);
    }, ReactNativeComponent;
}(React.Component);

function setNativePropsFiber(componentOrHandle, nativeProps) {
    var maybeInstance = void 0;
    try {
        maybeInstance = findNodeHandle_1(componentOrHandle);
    } catch (error) {}
    if (null != maybeInstance) {
        var viewConfig = maybeInstance.viewConfig,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    }
}

function setNativePropsStack(componentOrHandle, nativeProps) {
    var maybeInstance = findNodeHandle_1(componentOrHandle);
    if (null != maybeInstance) {
        var viewConfig = void 0;
        if (void 0 !== maybeInstance.viewConfig) viewConfig = maybeInstance.viewConfig;else if (void 0 !== maybeInstance._instance && void 0 !== maybeInstance._instance.viewConfig) viewConfig = maybeInstance._instance.viewConfig;else {
            for (; void 0 !== maybeInstance._renderedComponent;) {
                maybeInstance = maybeInstance._renderedComponent;
            }viewConfig = maybeInstance.viewConfig;
        }
        var tag = "function" == typeof maybeInstance.getHostNode ? maybeInstance.getHostNode() : maybeInstance._rootNodeID,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(tag, viewConfig.uiViewClassName, updatePayload);
    }
}

var injectedSetNativeProps = void 0;

injectedSetNativeProps = ReactNativeFeatureFlags$1.useFiber ? setNativePropsFiber : setNativePropsStack;

var ReactNativeComponent_1 = ReactNativeComponent,
    ReactNativeFeatureFlags$2 = require(63                       ), // 63 = ReactNativeFeatureFlags
    mountSafeCallback$2 = NativeMethodsMixinUtils.mountSafeCallback,
    findNumericNodeHandle$1 = ReactNativeFeatureFlags$2.useFiber ? DevOnlyStubShim : findNumericNodeHandleStack,
    NativeMethodsMixin = {
    measure: function measure(callback) {
        UIManager.measure(findNumericNodeHandle$1(this), mountSafeCallback$2(this, callback));
    },
    measureInWindow: function measureInWindow(callback) {
        UIManager.measureInWindow(findNumericNodeHandle$1(this), mountSafeCallback$2(this, callback));
    },
    measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle$1(this), relativeToNativeNode, mountSafeCallback$2(this, onFail), mountSafeCallback$2(this, onSuccess));
    },
    setNativeProps: function setNativeProps(nativeProps) {
        injectedSetNativeProps$1(this, nativeProps);
    },
    focus: function focus() {
        TextInputState.focusTextInput(findNumericNodeHandle$1(this));
    },
    blur: function blur() {
        TextInputState.blurTextInput(findNumericNodeHandle$1(this));
    }
};

function setNativePropsFiber$1(componentOrHandle, nativeProps) {
    var maybeInstance = void 0;
    try {
        maybeInstance = findNodeHandle_1(componentOrHandle);
    } catch (error) {}
    if (null != maybeInstance) {
        var viewConfig = maybeInstance.viewConfig,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    }
}

function setNativePropsStack$1(componentOrHandle, nativeProps) {
    var maybeInstance = findNodeHandle_1(componentOrHandle);
    if (null != maybeInstance) {
        var viewConfig = void 0;
        if (void 0 !== maybeInstance.viewConfig) viewConfig = maybeInstance.viewConfig;else if (void 0 !== maybeInstance._instance && void 0 !== maybeInstance._instance.viewConfig) viewConfig = maybeInstance._instance.viewConfig;else {
            for (; void 0 !== maybeInstance._renderedComponent;) {
                maybeInstance = maybeInstance._renderedComponent;
            }viewConfig = maybeInstance.viewConfig;
        }
        var tag = "function" == typeof maybeInstance.getHostNode ? maybeInstance.getHostNode() : maybeInstance._rootNodeID,
            updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
        UIManager.updateView(tag, viewConfig.uiViewClassName, updatePayload);
    }
}

var injectedSetNativeProps$1 = void 0;

injectedSetNativeProps$1 = ReactNativeFeatureFlags$2.useFiber ? setNativePropsFiber$1 : setNativePropsStack$1;

var NativeMethodsMixin_1 = NativeMethodsMixin,
    TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
        var touchBank = touchHistory.touchBank,
            total = 0,
            count = 0,
            oneTouchData = 1 === touchHistory.numberActiveTouches ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
        if (null !== oneTouchData) oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter && (total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY, count = 1);else for (var i = 0; i < touchBank.length; i++) {
            var touchTrack = touchBank[i];
            if (null !== touchTrack && void 0 !== touchTrack && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
                var toAdd;
                toAdd = ofCurrent && isXAxis ? touchTrack.currentPageX : ofCurrent && !isXAxis ? touchTrack.currentPageY : !ofCurrent && isXAxis ? touchTrack.previousPageX : touchTrack.previousPageY, total += toAdd, count++;
            }
        }
        return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !0);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !0);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !1);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !1);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !0, !0);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !1, !0);
    },
    noCentroid: -1
},
    TouchHistoryMath_1 = TouchHistoryMath;

function escape(key) {
    var escaperLookup = {
        "=": "=0",
        ":": "=2"
    };
    return "$" + ("" + key).replace(/[=:]/g, function (match) {
        return escaperLookup[match];
    });
}

var unescapeInDev = emptyFunction,
    KeyEscapeUtils = {
    escape: escape,
    unescapeInDev: unescapeInDev
},
    KeyEscapeUtils_1 = KeyEscapeUtils,
    ITERATOR_SYMBOL = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
    FAUX_ITERATOR_SYMBOL = "@@iterator",
    REACT_ELEMENT_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 60103,
    SEPARATOR = ".",
    SUBSEPARATOR = ":";

function getComponentKey(component, index) {
    return component && "object" == typeof component && null != component.key ? KeyEscapeUtils_1.escape(component.key) : index.toString(36);
}

function traverseStackChildrenImpl(children, nameSoFar, callback, traverseContext) {
    var type = typeof children;
    if ("undefined" !== type && "boolean" !== type || (children = null), null === children || "string" === type || "number" === type || "object" === type && children.$$typeof === REACT_ELEMENT_TYPE) return callback(traverseContext, children, "" === nameSoFar ? SEPARATOR + getComponentKey(children, 0) : nameSoFar), 1;
    var child,
        nextName,
        subtreeCount = 0,
        nextNamePrefix = "" === nameSoFar ? SEPARATOR : nameSoFar + SUBSEPARATOR;
    if (Array.isArray(children)) for (var i = 0; i < children.length; i++) {
        child = children[i], nextName = nextNamePrefix + getComponentKey(child, i), subtreeCount += traverseStackChildrenImpl(child, nextName, callback, traverseContext);
    } else {
        var iteratorFn = ITERATOR_SYMBOL && children[ITERATOR_SYMBOL] || children[FAUX_ITERATOR_SYMBOL];
        if ("function" == typeof iteratorFn) for (var step, iterator = iteratorFn.call(children), ii = 0; !(step = iterator.next()).done;) {
            child = step.value, nextName = nextNamePrefix + getComponentKey(child, ii++), subtreeCount += traverseStackChildrenImpl(child, nextName, callback, traverseContext);
        } else if ("object" === type) {
            var addendum = "",
                childrenString = "" + children;
            invariant(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === childrenString ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString, addendum);
        }
    }
    return subtreeCount;
}

function traverseStackChildren(children, callback, traverseContext) {
    return null == children ? 0 : traverseStackChildrenImpl(children, "", callback, traverseContext);
}

var traverseStackChildren_1 = traverseStackChildren,
    ReactComponentTreeHook$1;

"undefined" != typeof process && process.env && "production" == "test" && (ReactComponentTreeHook$1 = ReactGlobalSharedState_1.ReactComponentTreeHook);

function instantiateChild(childInstances, child, name, selfDebugID) {
    var keyUnique = void 0 === childInstances[name];
    null != child && keyUnique && (childInstances[name] = instantiateReactComponent_1(child, !0));
}

var ReactChildReconciler = {
    instantiateChildren: function instantiateChildren(nestedChildNodes, transaction, context, selfDebugID) {
        if (null == nestedChildNodes) return null;
        var childInstances = {};
        return traverseStackChildren_1(nestedChildNodes, instantiateChild, childInstances), childInstances;
    },
    updateChildren: function updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) {
        if (nextChildren || prevChildren) {
            var name, prevChild;
            for (name in nextChildren) {
                if (nextChildren.hasOwnProperty(name)) {
                    prevChild = prevChildren && prevChildren[name];
                    var prevElement = prevChild && prevChild._currentElement,
                        nextElement = nextChildren[name];
                    if (null != prevChild && shouldUpdateReactComponent_1(prevElement, nextElement)) ReactReconciler_1.receiveComponent(prevChild, nextElement, transaction, context), nextChildren[name] = prevChild;else {
                        var nextChildInstance = instantiateReactComponent_1(nextElement, !0);
                        nextChildren[name] = nextChildInstance;
                        var nextChildMountImage = ReactReconciler_1.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
                        mountImages.push(nextChildMountImage), prevChild && (removedNodes[name] = ReactReconciler_1.getHostNode(prevChild), ReactReconciler_1.unmountComponent(prevChild, !1, !1));
                    }
                }
            }for (name in prevChildren) {
                !prevChildren.hasOwnProperty(name) || nextChildren && nextChildren.hasOwnProperty(name) || (prevChild = prevChildren[name], removedNodes[name] = ReactReconciler_1.getHostNode(prevChild), ReactReconciler_1.unmountComponent(prevChild, !1, !1));
            }
        }
    },
    unmountChildren: function unmountChildren(renderedChildren, safely, skipLifecycle) {
        for (var name in renderedChildren) {
            if (renderedChildren.hasOwnProperty(name)) {
                var renderedChild = renderedChildren[name];
                ReactReconciler_1.unmountComponent(renderedChild, safely, skipLifecycle);
            }
        }
    }
},
    ReactChildReconciler_1 = ReactChildReconciler,
    ReactComponentTreeHook$2;

"undefined" != typeof process && process.env && "production" == "test" && (ReactComponentTreeHook$2 = ReactGlobalSharedState_1.ReactComponentTreeHook);

function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
    if (traverseContext && "object" == typeof traverseContext) {
        var result = traverseContext;
        void 0 === result[name] && null != child && (result[name] = child);
    }
}

function flattenStackChildren(children, selfDebugID) {
    if (null == children) return children;
    var result = {};
    return traverseStackChildren_1(children, flattenSingleChildIntoContext, result), result;
}

var flattenStackChildren_1 = flattenStackChildren;

function makeInsertMarkup(markup, afterNode, toIndex) {
    return {
        type: "INSERT_MARKUP",
        content: markup,
        fromIndex: null,
        fromNode: null,
        toIndex: toIndex,
        afterNode: afterNode
    };
}

function makeMove(child, afterNode, toIndex) {
    return {
        type: "MOVE_EXISTING",
        content: null,
        fromIndex: child._mountIndex,
        fromNode: ReactReconciler_1.getHostNode(child),
        toIndex: toIndex,
        afterNode: afterNode
    };
}

function makeRemove(child, node) {
    return {
        type: "REMOVE_NODE",
        content: null,
        fromIndex: child._mountIndex,
        fromNode: node,
        toIndex: null,
        afterNode: null
    };
}

function makeSetMarkup(markup) {
    return {
        type: "SET_MARKUP",
        content: markup,
        fromIndex: null,
        fromNode: null,
        toIndex: null,
        afterNode: null
    };
}

function makeTextContent(textContent) {
    return {
        type: "TEXT_CONTENT",
        content: textContent,
        fromIndex: null,
        fromNode: null,
        toIndex: null,
        afterNode: null
    };
}

function enqueue(queue, update) {
    return update && (queue = queue || [], queue.push(update)), queue;
}

function processQueue(inst, updateQueue) {
    ReactComponentEnvironment_1.processChildrenUpdates(inst, updateQueue);
}

var ReactMultiChild = {
    _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
        return ReactChildReconciler_1.instantiateChildren(nestedChildren, transaction, context);
    },
    _reconcilerUpdateChildren: function _reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
        var nextChildren,
            selfDebugID = 0;
        return nextChildren = flattenStackChildren_1(nextNestedChildrenElements, selfDebugID), ReactChildReconciler_1.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID), nextChildren;
    },
    mountChildren: function mountChildren(nestedChildren, transaction, context) {
        var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
        this._renderedChildren = children;
        var mountImages = [],
            index = 0;
        for (var name in children) {
            if (children.hasOwnProperty(name)) {
                var child = children[name],
                    selfDebugID = 0,
                    mountImage = ReactReconciler_1.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
                child._mountIndex = index++, mountImages.push(mountImage);
            }
        }return mountImages;
    },
    updateTextContent: function updateTextContent(nextContent) {
        var prevChildren = this._renderedChildren;
        ReactChildReconciler_1.unmountChildren(prevChildren, !1, !1);
        for (var name in prevChildren) {
            prevChildren.hasOwnProperty(name) && invariant(!1, "updateTextContent called on non-empty component.");
        }processQueue(this, [makeTextContent(nextContent)]);
    },
    updateMarkup: function updateMarkup(nextMarkup) {
        var prevChildren = this._renderedChildren;
        ReactChildReconciler_1.unmountChildren(prevChildren, !1, !1);
        for (var name in prevChildren) {
            prevChildren.hasOwnProperty(name) && invariant(!1, "updateTextContent called on non-empty component.");
        }processQueue(this, [makeSetMarkup(nextMarkup)]);
    },
    updateChildren: function updateChildren(nextNestedChildrenElements, transaction, context) {
        this._updateChildren(nextNestedChildrenElements, transaction, context);
    },
    _updateChildren: function _updateChildren(nextNestedChildrenElements, transaction, context) {
        var prevChildren = this._renderedChildren,
            removedNodes = {},
            mountImages = [],
            nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
        if (nextChildren || prevChildren) {
            var name,
                updates = null,
                nextIndex = 0,
                lastIndex = 0,
                nextMountIndex = 0,
                lastPlacedNode = null;
            for (name in nextChildren) {
                if (nextChildren.hasOwnProperty(name)) {
                    var prevChild = prevChildren && prevChildren[name],
                        nextChild = nextChildren[name];
                    prevChild === nextChild ? (updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex)), lastIndex = Math.max(prevChild._mountIndex, lastIndex), prevChild._mountIndex = nextIndex) : (prevChild && (lastIndex = Math.max(prevChild._mountIndex, lastIndex)), updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context)), nextMountIndex++), nextIndex++, lastPlacedNode = ReactReconciler_1.getHostNode(nextChild);
                }
            }for (name in removedNodes) {
                removedNodes.hasOwnProperty(name) && (updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name])));
            }updates && processQueue(this, updates), this._renderedChildren = nextChildren;
        }
    },
    unmountChildren: function unmountChildren(safely, skipLifecycle) {
        var renderedChildren = this._renderedChildren;
        ReactChildReconciler_1.unmountChildren(renderedChildren, safely, skipLifecycle), this._renderedChildren = null;
    },
    moveChild: function moveChild(child, afterNode, toIndex, lastIndex) {
        if (child._mountIndex < lastIndex) return makeMove(child, afterNode, toIndex);
    },
    createChild: function createChild(child, afterNode, mountImage) {
        return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },
    removeChild: function removeChild(child, node) {
        return makeRemove(child, node);
    },
    _mountChildAtIndex: function _mountChildAtIndex(child, mountImage, afterNode, index, transaction, context) {
        return child._mountIndex = index, this.createChild(child, afterNode, mountImage);
    },
    _unmountChild: function _unmountChild(child, node) {
        var update = this.removeChild(child, node);
        return child._mountIndex = null, update;
    }
},
    ReactMultiChild_1 = ReactMultiChild,
    ReactNativeBaseComponent = function ReactNativeBaseComponent(viewConfig) {
    this.viewConfig = viewConfig;
};

ReactNativeBaseComponent.Mixin = {
    getPublicInstance: function getPublicInstance() {
        return this;
    },
    unmountComponent: function unmountComponent(safely, skipLifecycle) {
        ReactNativeComponentTree_1.uncacheNode(this), this.unmountChildren(safely, skipLifecycle), this._rootNodeID = 0;
    },
    initializeChildren: function initializeChildren(children, containerTag, transaction, context) {
        var mountImages = this.mountChildren(children, transaction, context);
        if (mountImages.length) {
            for (var createdTags = [], i = 0, l = mountImages.length; i < l; i++) {
                var mountImage = mountImages[i],
                    childTag = mountImage;
                createdTags[i] = childTag;
            }
            UIManager.setChildren(containerTag, createdTags);
        }
    },
    receiveComponent: function receiveComponent(nextElement, transaction, context) {
        var prevElement = this._currentElement;
        this._currentElement = nextElement;
        var updatePayload = ReactNativeAttributePayload_1.diff(prevElement.props, nextElement.props, this.viewConfig.validAttributes);
        updatePayload && UIManager.updateView(this._rootNodeID, this.viewConfig.uiViewClassName, updatePayload), this.updateChildren(nextElement.props.children, transaction, context);
    },
    getName: function getName() {
        return this.constructor.displayName || this.constructor.name || "Unknown";
    },
    getHostNode: function getHostNode() {
        return this._rootNodeID;
    },
    mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
        var tag = ReactNativeTagHandles_1.allocateTag();
        this._rootNodeID = tag, this._hostParent = hostParent, this._hostContainerInfo = hostContainerInfo;
        var updatePayload = ReactNativeAttributePayload_1.create(this._currentElement.props, this.viewConfig.validAttributes),
            nativeTopRootTag = hostContainerInfo._tag;
        return UIManager.createView(tag, this.viewConfig.uiViewClassName, nativeTopRootTag, updatePayload), ReactNativeComponentTree_1.precacheNode(this, tag), this.initializeChildren(this._currentElement.props.children, tag, transaction, context), tag;
    }
}, babelHelpers.extends(ReactNativeBaseComponent.prototype, ReactMultiChild_1, ReactNativeBaseComponent.Mixin, NativeMethodsMixin_1);

var ReactNativeBaseComponent_1 = ReactNativeBaseComponent,
    createReactNativeComponentClassStack = function createReactNativeComponentClassStack(viewConfig) {
    var Constructor = function Constructor(element) {
        this._currentElement = element, this._topLevelWrapper = null, this._hostParent = null, this._hostContainerInfo = null, this._rootNodeID = 0, this._renderedChildren = null;
    };
    return Constructor.displayName = viewConfig.uiViewClassName, Constructor.viewConfig = viewConfig, Constructor.propTypes = viewConfig.propTypes, Constructor.prototype = new ReactNativeBaseComponent_1(viewConfig), Constructor.prototype.constructor = Constructor, Constructor;
},
    createReactNativeComponentClassStack_1 = createReactNativeComponentClassStack,
    ReactNativeFeatureFlags$3 = require(63                       ), // 63 = ReactNativeFeatureFlags
    createReactNativeComponentClass = ReactNativeFeatureFlags$3.useFiber ? DevOnlyStubShim : createReactNativeComponentClassStack_1,
    ReactNativeFeatureFlags$4 = require(63                       ), // 63 = ReactNativeFeatureFlags
    findNumericNodeHandle$2 = ReactNativeFeatureFlags$4.useFiber ? DevOnlyStubShim : findNumericNodeHandleStack;

function takeSnapshot(view, options) {
    return "number" != typeof view && "window" !== view && (view = findNumericNodeHandle$2(view) || "window"), UIManager.__takeSnapshot(view, options);
}

var takeSnapshot_1 = takeSnapshot;

ReactNativeInjection.inject(), ReactNativeStackInjection.inject();

var render = function render(element, mountInto, callback) {
    return ReactNativeMount_1.renderComponent(element, mountInto, callback);
},
    ReactNativeStack = {
    NativeComponent: ReactNativeComponent_1,
    hasReactNativeInitialized: !1,
    findNodeHandle: findNumericNodeHandleStack,
    render: render,
    unmountComponentAtNode: ReactNativeMount_1.unmountComponentAtNode,
    unstable_batchedUpdates: ReactUpdates_1.batchedUpdates,
    unmountComponentAtNodeAndRemoveContainer: ReactNativeMount_1.unmountComponentAtNodeAndRemoveContainer,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        NativeMethodsMixin: NativeMethodsMixin_1,
        ReactGlobalSharedState: ReactGlobalSharedState_1,
        ReactNativeComponentTree: ReactNativeComponentTree_1,
        ReactNativePropRegistry: ReactNativePropRegistry_1,
        TouchHistoryMath: TouchHistoryMath_1,
        createReactNativeComponentClass: createReactNativeComponentClass,
        takeSnapshot: takeSnapshot_1
    }
};

"undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject && __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
        getClosestInstanceFromNode: function getClosestInstanceFromNode(node) {
            return ReactNativeComponentTree_1.getClosestInstanceFromNode(node);
        },
        getNodeFromInstance: function getNodeFromInstance(inst) {
            for (; inst._renderedComponent;) {
                inst = inst._renderedComponent;
            }return inst ? ReactNativeComponentTree_1.getNodeFromInstance(inst) : null;
        }
    },
    Mount: ReactNativeMount_1,
    Reconciler: ReactReconciler_1,
    getInspectorDataForViewTag: ReactNativeStackInspector.getInspectorDataForViewTag
});

var ReactNativeStackEntry = ReactNativeStack;

module.exports = ReactNativeStackEntry;
}, 168, null, "ReactNativeStack-prod");
__d(/* ReactNativeART */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\ART\\ReactNativeART.js';
var Color = require(170             ); // 170 = art/core/color
var Path = require(171                  ); // 171 = ARTSerializablePath
var Transform = require(174                 ); // 174 = art/core/transform

var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ReactNativeViewAttributes = require(140                        ); // 140 = ReactNativeViewAttributes

var createReactNativeComponentClass = require(158                              ); // 158 = createReactNativeComponentClass
var merge = require(144    ); // 144 = merge
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

function arrayDiffer(a, b) {
  if (a == null || b == null) {
    return true;
  }
  if (a.length !== b.length) {
    return true;
  }
  for (var i = 0; i < a.length; i++) {
    if (a[i] !== b[i]) {
      return true;
    }
  }
  return false;
}

function fontAndLinesDiffer(a, b) {
  if (a === b) {
    return false;
  }
  if (a.font !== b.font) {
    if (a.font === null) {
      return true;
    }
    if (b.font === null) {
      return true;
    }

    if (a.font.fontFamily !== b.font.fontFamily || a.font.fontSize !== b.font.fontSize || a.font.fontWeight !== b.font.fontWeight || a.font.fontStyle !== b.font.fontStyle) {
      return true;
    }
  }
  return arrayDiffer(a.lines, b.lines);
}

var SurfaceViewAttributes = merge(ReactNativeViewAttributes.UIView, {});

var NodeAttributes = {
  transform: { diff: arrayDiffer },
  opacity: true
};

var GroupAttributes = merge(NodeAttributes, {
  clipping: { diff: arrayDiffer }
});

var RenderableAttributes = merge(NodeAttributes, {
  fill: { diff: arrayDiffer },
  stroke: { diff: arrayDiffer },
  strokeWidth: true,
  strokeCap: true,
  strokeJoin: true,
  strokeDash: { diff: arrayDiffer }
});

var ShapeAttributes = merge(RenderableAttributes, {
  d: { diff: arrayDiffer }
});

var TextAttributes = merge(RenderableAttributes, {
  alignment: true,
  frame: { diff: fontAndLinesDiffer },
  path: { diff: arrayDiffer }
});

var NativeSurfaceView = createReactNativeComponentClass({
  validAttributes: SurfaceViewAttributes,
  uiViewClassName: 'ARTSurfaceView'
});

var NativeGroup = createReactNativeComponentClass({
  validAttributes: GroupAttributes,
  uiViewClassName: 'ARTGroup'
});

var NativeShape = createReactNativeComponentClass({
  validAttributes: ShapeAttributes,
  uiViewClassName: 'ARTShape'
});

var NativeText = createReactNativeComponentClass({
  validAttributes: TextAttributes,
  uiViewClassName: 'ARTText'
});

function childrenAsString(children) {
  if (!children) {
    return '';
  }
  if (typeof children === 'string') {
    return children;
  }
  if (children.length) {
    return children.join('\n');
  }
  return '';
}

var Surface = function (_React$Component) {
  babelHelpers.inherits(Surface, _React$Component);

  function Surface() {
    babelHelpers.classCallCheck(this, Surface);
    return babelHelpers.possibleConstructorReturn(this, (Surface.__proto__ || Object.getPrototypeOf(Surface)).apply(this, arguments));
  }

  babelHelpers.createClass(Surface, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { isInSurface: true };
    }
  }, {
    key: 'render',
    value: function render() {
      var props = this.props;
      var w = extractNumber(props.width, 0);
      var h = extractNumber(props.height, 0);
      return React.createElement(
        NativeSurfaceView,
        { style: [props.style, { width: w, height: h }], __source: {
            fileName: _jsxFileName,
            lineNumber: 155
          }
        },
        this.props.children
      );
    }
  }]);
  return Surface;
}(React.Component);

Surface.childContextTypes = {
  isInSurface: PropTypes.bool
};


function extractNumber(value, defaultValue) {
  if (value == null) {
    return defaultValue;
  }
  return +value;
}

var pooledTransform = new Transform();

function extractTransform(props) {
  var scaleX = props.scaleX != null ? props.scaleX : props.scale != null ? props.scale : 1;
  var scaleY = props.scaleY != null ? props.scaleY : props.scale != null ? props.scale : 1;

  pooledTransform.transformTo(1, 0, 0, 1, 0, 0).move(props.x || 0, props.y || 0).rotate(props.rotation || 0, props.originX, props.originY).scale(scaleX, scaleY, props.originX, props.originY);

  if (props.transform != null) {
    pooledTransform.transform(props.transform);
  }

  return [pooledTransform.xx, pooledTransform.yx, pooledTransform.xy, pooledTransform.yy, pooledTransform.x, pooledTransform.y];
}

function extractOpacity(props) {
  if (props.visible === false) {
    return 0;
  }
  if (props.opacity == null) {
    return 1;
  }
  return +props.opacity;
}

var Group = function (_React$Component2) {
  babelHelpers.inherits(Group, _React$Component2);

  function Group() {
    babelHelpers.classCallCheck(this, Group);
    return babelHelpers.possibleConstructorReturn(this, (Group.__proto__ || Object.getPrototypeOf(Group)).apply(this, arguments));
  }

  babelHelpers.createClass(Group, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      invariant(this.context.isInSurface, 'ART: <Group /> must be a child of a <Surface />');
      return React.createElement(
        NativeGroup,
        {
          opacity: extractOpacity(props),
          transform: extractTransform(props), __source: {
            fileName: _jsxFileName,
            lineNumber: 227
          }
        },
        this.props.children
      );
    }
  }]);
  return Group;
}(React.Component);

Group.contextTypes = {
  isInSurface: PropTypes.bool.isRequired
};

var ClippingRectangle = function (_React$Component3) {
  babelHelpers.inherits(ClippingRectangle, _React$Component3);

  function ClippingRectangle() {
    babelHelpers.classCallCheck(this, ClippingRectangle);
    return babelHelpers.possibleConstructorReturn(this, (ClippingRectangle.__proto__ || Object.getPrototypeOf(ClippingRectangle)).apply(this, arguments));
  }

  babelHelpers.createClass(ClippingRectangle, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var x = extractNumber(props.x, 0);
      var y = extractNumber(props.y, 0);
      var w = extractNumber(props.width, 0);
      var h = extractNumber(props.height, 0);
      var clipping = [x, y, w, h];

      var propsExcludingXAndY = merge(props);
      delete propsExcludingXAndY.x;
      delete propsExcludingXAndY.y;
      return React.createElement(
        NativeGroup,
        {
          clipping: clipping,
          opacity: extractOpacity(props),
          transform: extractTransform(propsExcludingXAndY), __source: {
            fileName: _jsxFileName,
            lineNumber: 249
          }
        },
        this.props.children
      );
    }
  }]);
  return ClippingRectangle;
}(React.Component);

var SOLID_COLOR = 0;
var LINEAR_GRADIENT = 1;
var RADIAL_GRADIENT = 2;
var PATTERN = 3;

function insertColorIntoArray(color, targetArray, atIndex) {
  var c = new Color(color);
  targetArray[atIndex + 0] = c.red / 255;
  targetArray[atIndex + 1] = c.green / 255;
  targetArray[atIndex + 2] = c.blue / 255;
  targetArray[atIndex + 3] = c.alpha;
}

function insertColorsIntoArray(stops, targetArray, atIndex) {
  var i = 0;
  if ('length' in stops) {
    while (i < stops.length) {
      insertColorIntoArray(stops[i], targetArray, atIndex + i * 4);
      i++;
    }
  } else {
    for (var offset in stops) {
      insertColorIntoArray(stops[offset], targetArray, atIndex + i * 4);
      i++;
    }
  }
  return atIndex + i * 4;
}

function insertOffsetsIntoArray(stops, targetArray, atIndex, multi, reverse) {
  var offsetNumber;
  var i = 0;
  if ('length' in stops) {
    while (i < stops.length) {
      offsetNumber = i / (stops.length - 1) * multi;
      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
      i++;
    }
  } else {
    for (var offsetString in stops) {
      offsetNumber = +offsetString * multi;
      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
      i++;
    }
  }
  return atIndex + i;
}

function insertColorStopsIntoArray(stops, targetArray, atIndex) {
  var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
  insertOffsetsIntoArray(stops, targetArray, lastIndex, 1, false);
}

function insertDoubleColorStopsIntoArray(stops, targetArray, atIndex) {
  var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
  lastIndex = insertColorsIntoArray(stops, targetArray, lastIndex);
  lastIndex = insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, false);
  insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, true);
}

function applyBoundingBoxToBrushData(brushData, props) {
  var type = brushData[0];
  var width = +props.width;
  var height = +props.height;
  if (type === LINEAR_GRADIENT) {
    brushData[1] *= width;
    brushData[2] *= height;
    brushData[3] *= width;
    brushData[4] *= height;
  } else if (type === RADIAL_GRADIENT) {
    brushData[1] *= width;
    brushData[2] *= height;
    brushData[3] *= width;
    brushData[4] *= height;
    brushData[5] *= width;
    brushData[6] *= height;
  } else if (type === PATTERN) {}
}

function extractBrush(colorOrBrush, props) {
  if (colorOrBrush == null) {
    return null;
  }
  if (colorOrBrush._brush) {
    if (colorOrBrush._bb) {
      applyBoundingBoxToBrushData(colorOrBrush._brush, props);
      colorOrBrush._bb = false;
    }
    return colorOrBrush._brush;
  }
  var c = new Color(colorOrBrush);
  return [SOLID_COLOR, c.red / 255, c.green / 255, c.blue / 255, c.alpha];
}

function extractColor(color) {
  if (color == null) {
    return null;
  }
  var c = new Color(color);
  return [c.red / 255, c.green / 255, c.blue / 255, c.alpha];
}

function extractStrokeCap(strokeCap) {
  switch (strokeCap) {
    case 'butt':
      return 0;
    case 'square':
      return 2;
    default:
      return 1;}
}

function extractStrokeJoin(strokeJoin) {
  switch (strokeJoin) {
    case 'miter':
      return 0;
    case 'bevel':
      return 2;
    default:
      return 1;}
}

var Shape = function (_React$Component4) {
  babelHelpers.inherits(Shape, _React$Component4);

  function Shape() {
    babelHelpers.classCallCheck(this, Shape);
    return babelHelpers.possibleConstructorReturn(this, (Shape.__proto__ || Object.getPrototypeOf(Shape)).apply(this, arguments));
  }

  babelHelpers.createClass(Shape, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var path = props.d || childrenAsString(props.children);
      var d = new Path(path).toJSON();
      return React.createElement(NativeShape, {
        fill: extractBrush(props.fill, props),
        opacity: extractOpacity(props),
        stroke: extractColor(props.stroke),
        strokeCap: extractStrokeCap(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: extractStrokeJoin(props.strokeJoin),
        strokeWidth: extractNumber(props.strokeWidth, 1),
        transform: extractTransform(props),

        d: d,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 397
        }
      });
    }
  }]);
  return Shape;
}(React.Component);

var cachedFontObjectsFromString = {};

var fontFamilyPrefix = /^[\s"']*/;
var fontFamilySuffix = /[\s"']*$/;

function extractSingleFontFamily(fontFamilyString) {
  return fontFamilyString.split(',')[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '');
}

function parseFontString(font) {
  if (cachedFontObjectsFromString.hasOwnProperty(font)) {
    return cachedFontObjectsFromString[font];
  }
  var regexp = /^\s*((?:(?:normal|bold|italic)\s+)*)(?:(\d+(?:\.\d+)?)[ptexm\%]*(?:\s*\/.*?)?\s+)?\s*\"?([^\"]*)/i;
  var match = regexp.exec(font);
  if (!match) {
    return null;
  }
  var fontFamily = extractSingleFontFamily(match[3]);
  var fontSize = +match[2] || 12;
  var isBold = /bold/.exec(match[1]);
  var isItalic = /italic/.exec(match[1]);
  cachedFontObjectsFromString[font] = {
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: isBold ? 'bold' : 'normal',
    fontStyle: isItalic ? 'italic' : 'normal'
  };
  return cachedFontObjectsFromString[font];
}

function extractFont(font) {
  if (font == null) {
    return null;
  }
  if (typeof font === 'string') {
    return parseFontString(font);
  }
  var fontFamily = extractSingleFontFamily(font.fontFamily);
  var fontSize = +font.fontSize || 12;
  var fontWeight = font.fontWeight != null ? font.fontWeight.toString() : '400';
  return {
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: fontWeight,
    fontStyle: font.fontStyle
  };
}

var newLine = /\n/g;
function extractFontAndLines(font, text) {
  return { font: extractFont(font), lines: text.split(newLine) };
}

function extractAlignment(alignment) {
  switch (alignment) {
    case 'right':
      return 1;
    case 'center':
      return 2;
    default:
      return 0;
  }
}

var Text = function (_React$Component5) {
  babelHelpers.inherits(Text, _React$Component5);

  function Text() {
    babelHelpers.classCallCheck(this, Text);
    return babelHelpers.possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
  }

  babelHelpers.createClass(Text, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var textPath = props.path ? new Path(props.path).toJSON() : null;
      var textFrame = extractFontAndLines(props.font, childrenAsString(props.children));
      return React.createElement(NativeText, {
        fill: extractBrush(props.fill, props),
        opacity: extractOpacity(props),
        stroke: extractColor(props.stroke),
        strokeCap: extractStrokeCap(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: extractStrokeJoin(props.strokeJoin),
        strokeWidth: extractNumber(props.strokeWidth, 1),
        transform: extractTransform(props),

        alignment: extractAlignment(props.alignment),
        frame: textFrame,
        path: textPath,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 495
        }
      });
    }
  }]);
  return Text;
}(React.Component);

function LinearGradient(stops, x1, y1, x2, y2) {
  var type = LINEAR_GRADIENT;

  if (arguments.length < 5) {
    var angle = (x1 == null ? 270 : x1) * Math.PI / 180;

    var x = Math.cos(angle);
    var y = -Math.sin(angle);
    var l = (Math.abs(x) + Math.abs(y)) / 2;

    x *= l;y *= l;

    x1 = 0.5 - x;
    x2 = 0.5 + x;
    y1 = 0.5 - y;
    y2 = 0.5 + y;
    this._bb = true;
  } else {
    this._bb = false;
  }

  var brushData = [type, +x1, +y1, +x2, +y2];
  insertColorStopsIntoArray(stops, brushData, 5);
  this._brush = brushData;
}

function RadialGradient(stops, fx, fy, rx, ry, cx, cy) {
  if (ry == null) {
    ry = rx;
  }
  if (cx == null) {
    cx = fx;
  }
  if (cy == null) {
    cy = fy;
  }
  if (fx == null) {
    fx = fy = rx = ry = cx = cy = 0.5;
    this._bb = true;
  } else {
    this._bb = false;
  }

  var brushData = [RADIAL_GRADIENT, +fx, +fy, +rx * 2, +ry * 2, +cx, +cy];
  insertDoubleColorStopsIntoArray(stops, brushData, 7);
  this._brush = brushData;
}

function Pattern(url, width, height, left, top) {
  this._brush = [PATTERN, url, +left || 0, +top || 0, +width, +height];
}

var ReactART = {
  LinearGradient: LinearGradient,
  RadialGradient: RadialGradient,
  Pattern: Pattern,
  Transform: Transform,
  Path: Path,
  Surface: Surface,
  Group: Group,
  ClippingRectangle: ClippingRectangle,
  Shape: Shape,
  Text: Text
};

module.exports = ReactART;
}, 169, null, "ReactNativeART");
__d(/* art/core/color.js */function(global, require, module, exports) {var colors = {
	maroon: '#800000', red: '#ff0000', orange: '#ffA500', yellow: '#ffff00', olive: '#808000',
	purple: '#800080', fuchsia: "#ff00ff", white: '#ffffff', lime: '#00ff00', green: '#008000',
	navy: '#000080', blue: '#0000ff', aqua: '#00ffff', teal: '#008080',
	black: '#000000', silver: '#c0c0c0', gray: '#808080'
};

var map = function map(array, fn) {
	var results = [];
	for (var i = 0, l = array.length; i < l; i++) {
		results[i] = fn(array[i], i);
	}return results;
};

var Color = function Color(color, type) {

	if (color.isColor) {

		this.red = color.red;
		this.green = color.green;
		this.blue = color.blue;
		this.alpha = color.alpha;
	} else {

		var namedColor = colors[color];
		if (namedColor) {
			color = namedColor;
			type = 'hex';
		}

		switch (typeof color) {
			case 'string':
				if (!type) type = (type = color.match(/^rgb|^hsb|^hsl/)) ? type[0] : 'hex';break;
			case 'object':
				type = type || 'rgb';color = color.toString();break;
			case 'number':
				type = 'hex';color = color.toString(16);break;
		}

		color = Color['parse' + type.toUpperCase()](color);
		this.red = color[0];
		this.green = color[1];
		this.blue = color[2];
		this.alpha = color[3];
	}

	this.isColor = true;
};

var limit = function limit(number, min, max) {
	return Math.min(max, Math.max(min, number));
};

var listMatch = /([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,?\s*([-.\d]*\%?)/;
var hexMatch = /^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;

Color.parseRGB = function (color) {
	return map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit) * (bit[bit.length - 1] == '%' ? 2.55 : 1);
		return i < 3 ? Math.round((bit %= 256) < 0 ? bit + 256 : bit) : limit(bit === '' ? 1 : Number(bit), 0, 1);
	});
};

Color.parseHEX = function (color) {
	if (color.length == 1) color = color + color + color;
	return map(color.match(hexMatch).slice(1), function (bit, i) {
		if (i == 3) return bit ? parseInt(bit, 16) / 255 : 1;
		return parseInt(bit.length == 1 ? bit + bit : bit, 16);
	});
};

Color.parseHSB = function (color) {
	var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit);
		if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
	});

	var a = hsb[3];
	var br = Math.round(hsb[2] / 100 * 255);
	if (hsb[1] == 0) return [br, br, br, a];

	var hue = hsb[0];
	var f = hue % 60;
	var p = Math.round(hsb[2] * (100 - hsb[1]) / 10000 * 255);
	var q = Math.round(hsb[2] * (6000 - hsb[1] * f) / 600000 * 255);
	var t = Math.round(hsb[2] * (6000 - hsb[1] * (60 - f)) / 600000 * 255);

	switch (Math.floor(hue / 60)) {
		case 0:
			return [br, t, p, a];
		case 1:
			return [q, br, p, a];
		case 2:
			return [p, br, t, a];
		case 3:
			return [p, q, br, a];
		case 4:
			return [t, p, br, a];
		default:
			return [br, p, q, a];
	}
};

Color.parseHSL = function (color) {
	var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit);
		if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
	});

	var h = hsb[0] / 60;
	var s = hsb[1] / 100;
	var l = hsb[2] / 100;
	var a = hsb[3];

	var c = (1 - Math.abs(2 * l - 1)) * s;
	var x = c * (1 - Math.abs(h % 2 - 1));
	var m = l - c / 2;

	var p = Math.round((c + m) * 255);
	var q = Math.round((x + m) * 255);
	var t = Math.round(m * 255);

	switch (Math.floor(h)) {
		case 0:
			return [p, q, t, a];
		case 1:
			return [q, p, t, a];
		case 2:
			return [t, p, q, a];
		case 3:
			return [t, q, p, a];
		case 4:
			return [q, t, p, a];
		default:
			return [p, t, q, a];
	}
};

var toString = function toString(type, array) {
	if (array[3] != 1) type += 'a';else array.pop();
	return type + '(' + array.join(', ') + ')';
};

Color.prototype = {

	toHSB: function toHSB(array) {
		var red = this.red,
		    green = this.green,
		    blue = this.blue,
		    alpha = this.alpha;

		var max = Math.max(red, green, blue),
		    min = Math.min(red, green, blue),
		    delta = max - min;
		var hue = 0,
		    saturation = delta != 0 ? delta / max : 0,
		    brightness = max / 255;
		if (saturation) {
			var rr = (max - red) / delta,
			    gr = (max - green) / delta,
			    br = (max - blue) / delta;
			hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
			if ((hue /= 6) < 0) hue++;
		}

		var hsb = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100), alpha];

		return array ? hsb : toString('hsb', hsb);
	},

	toHSL: function toHSL(array) {
		var red = this.red,
		    green = this.green,
		    blue = this.blue,
		    alpha = this.alpha;

		var max = Math.max(red, green, blue),
		    min = Math.min(red, green, blue),
		    delta = max - min;
		var hue = 0,
		    saturation = delta != 0 ? delta / (255 - Math.abs(max + min - 255)) : 0,
		    lightness = (max + min) / 512;
		if (saturation) {
			var rr = (max - red) / delta,
			    gr = (max - green) / delta,
			    br = (max - blue) / delta;
			hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
			if ((hue /= 6) < 0) hue++;
		}

		var hsl = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(lightness * 100), alpha];

		return array ? hsl : toString('hsl', hsl);
	},

	toHEX: function toHEX(array) {

		var a = this.alpha;
		var alpha = (a = Math.round(a * 255).toString(16)).length == 1 ? a + a : a;

		var hex = map([this.red, this.green, this.blue], function (bit) {
			bit = bit.toString(16);
			return bit.length == 1 ? '0' + bit : bit;
		});

		return array ? hex.concat(alpha) : '#' + hex.join('') + (alpha == 'ff' ? '' : alpha);
	},

	toRGB: function toRGB(array) {
		var rgb = [this.red, this.green, this.blue, this.alpha];
		return array ? rgb : toString('rgb', rgb);
	}

};

Color.prototype.toString = Color.prototype.toRGB;

Color.hex = function (hex) {
	return new Color(hex, 'hex');
};

if (this.hex == null) this.hex = Color.hex;

Color.hsb = function (h, s, b, a) {
	return new Color([h || 0, s || 0, b || 0, a == null ? 1 : a], 'hsb');
};

if (this.hsb == null) this.hsb = Color.hsb;

Color.hsl = function (h, s, l, a) {
	return new Color([h || 0, s || 0, l || 0, a == null ? 1 : a], 'hsl');
};

if (this.hsl == null) this.hsl = Color.hsl;

Color.rgb = function (r, g, b, a) {
	return new Color([r || 0, g || 0, b || 0, a == null ? 1 : a], 'rgb');
};

if (this.rgb == null) this.rgb = Color.rgb;

Color.detach = function (color) {
	color = new Color(color);
	return [Color.rgb(color.red, color.green, color.blue).toString(), color.alpha];
};

module.exports = Color;
}, 170, null, "art/core/color.js");
__d(/* ARTSerializablePath */function(global, require, module, exports) {
'use strict';

var Class = require(172                ); // 172 = art/core/class.js
var Path = require(173               ); // 173 = art/core/path.js

var MOVE_TO = 0;
var CLOSE = 1;
var LINE_TO = 2;
var CURVE_TO = 3;
var ARC = 4;

var SerializablePath = Class(Path, {

  initialize: function initialize(path) {
    this.reset();
    if (path instanceof SerializablePath) {
      this.path = path.path.slice(0);
    } else if (path) {
      if (path.applyToPath) {
        path.applyToPath(this);
      } else {
        this.push(path);
      }
    }
  },

  onReset: function onReset() {
    this.path = [];
  },

  onMove: function onMove(sx, sy, x, y) {
    this.path.push(MOVE_TO, x, y);
  },

  onLine: function onLine(sx, sy, x, y) {
    this.path.push(LINE_TO, x, y);
  },

  onBezierCurve: function onBezierCurve(sx, sy, p1x, p1y, p2x, p2y, x, y) {
    this.path.push(CURVE_TO, p1x, p1y, p2x, p2y, x, y);
  },

  _arcToBezier: Path.prototype.onArc,

  onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
    if (rx !== ry || rotation) {
      return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);
    }
    this.path.push(ARC, cx, cy, rx, sa, ea, ccw ? 0 : 1);
  },

  onClose: function onClose() {
    this.path.push(CLOSE);
  },

  toJSON: function toJSON() {
    return this.path;
  }

});

module.exports = SerializablePath;
}, 171, null, "ARTSerializablePath");
__d(/* art/core/class.js */function(global, require, module, exports) {module.exports = function (mixins) {
	var proto = {};
	for (var i = 0, l = arguments.length; i < l; i++) {
		var mixin = arguments[i];
		if (typeof mixin == 'function') mixin = mixin.prototype;
		for (var key in mixin) {
			proto[key] = mixin[key];
		}
	}
	if (!proto.initialize) proto.initialize = function () {};
	proto.constructor = function (a, b, c, d, e, f, g, h) {
		return new proto.initialize(a, b, c, d, e, f, g, h);
	};
	proto.constructor.prototype = proto.initialize.prototype = proto;
	return proto.constructor;
};
}, 172, null, "art/core/class.js");
__d(/* art/core/path.js */function(global, require, module, exports) {var Class = require(172      ); // 172 = ./class

module.exports = Class({

	initialize: function initialize(path) {
		this.reset().push(path);
	},

	push: function push() {
		var p = Array.prototype.join.call(arguments, ' ').match(/[a-df-z]|[\-+]?(?:[\d\.]e[\-+]?|[^\s\-+,a-z])+/ig);
		if (!p) return this;

		var last,
		    cmd = p[0],
		    i = 1;
		while (cmd) {
			switch (cmd) {
				case 'm':
					this.move(p[i++], p[i++]);break;
				case 'l':
					this.line(p[i++], p[i++]);break;
				case 'c':
					this.curve(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);break;
				case 's':
					this.curve(p[i++], p[i++], null, null, p[i++], p[i++]);break;
				case 'q':
					this.curve(p[i++], p[i++], p[i++], p[i++]);break;
				case 't':
					this.curve(p[i++], p[i++]);break;
				case 'a':
					this.arc(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);i += 7;break;
				case 'h':
					this.line(p[i++], 0);break;
				case 'v':
					this.line(0, p[i++]);break;

				case 'M':
					this.moveTo(p[i++], p[i++]);break;
				case 'L':
					this.lineTo(p[i++], p[i++]);break;
				case 'C':
					this.curveTo(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);break;
				case 'S':
					this.curveTo(p[i++], p[i++], null, null, p[i++], p[i++]);break;
				case 'Q':
					this.curveTo(p[i++], p[i++], p[i++], p[i++]);break;
				case 'T':
					this.curveTo(p[i++], p[i++]);break;
				case 'A':
					this.arcTo(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);i += 7;break;
				case 'H':
					this.lineTo(p[i++], this.penY);break;
				case 'V':
					this.lineTo(this.penX, p[i++]);break;

				case 'Z':case 'z':
					this.close();break;
				default:
					cmd = last;i--;continue;
			}

			last = cmd;
			if (last == 'm') last = 'l';else if (last == 'M') last = 'L';
			cmd = p[i++];
		}
		return this;
	},

	reset: function reset() {
		this.penX = this.penY = 0;
		this.penDownX = this.penDownY = null;
		this._pivotX = this._pivotY = 0;
		this.onReset();
		return this;
	},

	move: function move(x, y) {
		this.onMove(this.penX, this.penY, this._pivotX = this.penX += +x, this._pivotY = this.penY += +y);
		return this;
	},
	moveTo: function moveTo(x, y) {
		this.onMove(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
		return this;
	},

	line: function line(x, y) {
		return this.lineTo(this.penX + +x, this.penY + +y);
	},
	lineTo: function lineTo(x, y) {
		if (this.penDownX == null) {
			this.penDownX = this.penX;this.penDownY = this.penY;
		}
		this.onLine(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
		return this;
	},

	curve: function curve(c1x, c1y, c2x, c2y, ex, ey) {
		var x = this.penX,
		    y = this.penY;
		return this.curveTo(x + +c1x, y + +c1y, c2x == null ? null : x + +c2x, c2y == null ? null : y + +c2y, ex == null ? null : x + +ex, ey == null ? null : y + +ey);
	},
	curveTo: function curveTo(c1x, c1y, c2x, c2y, ex, ey) {
		var x = this.penX,
		    y = this.penY;
		if (c2x == null) {
			c2x = +c1x;c2y = +c1y;
			c1x = x * 2 - (this._pivotX || 0);c1y = y * 2 - (this._pivotY || 0);
		}
		if (ex == null) {
			this._pivotX = +c1x;this._pivotY = +c1y;
			ex = +c2x;ey = +c2y;
			c2x = (ex + +c1x * 2) / 3;c2y = (ey + +c1y * 2) / 3;
			c1x = (x + +c1x * 2) / 3;c1y = (y + +c1y * 2) / 3;
		} else {
			this._pivotX = +c2x;this._pivotY = +c2y;
		}
		if (this.penDownX == null) {
			this.penDownX = x;this.penDownY = y;
		}
		this.onBezierCurve(x, y, +c1x, +c1y, +c2x, +c2y, this.penX = +ex, this.penY = +ey);
		return this;
	},

	arc: function arc(x, y, rx, ry, outer, counterClockwise, rotation) {
		return this.arcTo(this.penX + +x, this.penY + +y, rx, ry, outer, counterClockwise, rotation);
	},
	arcTo: function arcTo(x, y, rx, ry, outer, counterClockwise, rotation) {
		ry = Math.abs(+ry || +rx || +y - this.penY);
		rx = Math.abs(+rx || +x - this.penX);

		if (!rx || !ry || x == this.penX && y == this.penY) return this.lineTo(x, y);

		var tX = this.penX,
		    tY = this.penY,
		    clockwise = !+counterClockwise,
		    large = !!+outer;

		var rad = rotation ? rotation * Math.PI / 180 : 0,
		    cos = Math.cos(rad),
		    sin = Math.sin(rad);
		x -= tX;y -= tY;

		var cx = cos * x / 2 + sin * y / 2,
		    cy = -sin * x / 2 + cos * y / 2,
		    rxry = rx * rx * ry * ry,
		    rycx = ry * ry * cx * cx,
		    rxcy = rx * rx * cy * cy,
		    a = rxry - rxcy - rycx;

		if (a < 0) {
			a = Math.sqrt(1 - a / rxry);
			rx *= a;ry *= a;
			cx = x / 2;cy = y / 2;
		} else {
			a = Math.sqrt(a / (rxcy + rycx));
			if (large == clockwise) a = -a;
			var cxd = -a * cy * rx / ry,
			    cyd = a * cx * ry / rx;
			cx = cos * cxd - sin * cyd + x / 2;
			cy = sin * cxd + cos * cyd + y / 2;
		}

		var xx = cos / rx,
		    yx = sin / rx,
		    xy = -sin / ry,
		    yy = cos / ry;

		var sa = Math.atan2(xy * -cx + yy * -cy, xx * -cx + yx * -cy),
		    ea = Math.atan2(xy * (x - cx) + yy * (y - cy), xx * (x - cx) + yx * (y - cy));

		cx += tX;cy += tY;
		x += tX;y += tY;

		if (this.penDownX == null) {
			this.penDownX = this.penX;this.penDownY = this.penY;
		}
		this.onArc(tX, tY, this._pivotX = this.penX = x, this._pivotY = this.penY = y, cx, cy, rx, ry, sa, ea, !clockwise, rotation);
		return this;
	},

	counterArc: function counterArc(x, y, rx, ry, outer) {
		return this.arc(x, y, rx, ry, outer, true);
	},
	counterArcTo: function counterArcTo(x, y, rx, ry, outer) {
		return this.arcTo(x, y, rx, ry, outer, true);
	},

	close: function close() {
		if (this.penDownX != null) {
			this.onClose(this.penX, this.penY, this.penX = this.penDownX, this.penY = this.penDownY);
			this.penDownX = null;
		}
		return this;
	},

	onReset: function onReset() {},

	onMove: function onMove(sx, sy, ex, ey) {},

	onLine: function onLine(sx, sy, ex, ey) {
		this.onBezierCurve(sx, sy, sx, sy, ex, ey, ex, ey);
	},

	onBezierCurve: function onBezierCurve(sx, sy, c1x, c1y, c2x, c2y, ex, ey) {
		var gx = ex - sx,
		    gy = ey - sy,
		    g = gx * gx + gy * gy,
		    v1,
		    v2,
		    cx,
		    cy,
		    u;

		cx = c1x - sx;cy = c1y - sy;
		u = cx * gx + cy * gy;

		if (u > g) {
			cx -= gx;
			cy -= gy;
		} else if (u > 0 && g != 0) {
			cx -= u / g * gx;
			cy -= u / g * gy;
		}

		v1 = cx * cx + cy * cy;

		cx = c2x - sx;cy = c2y - sy;
		u = cx * gx + cy * gy;

		if (u > g) {
			cx -= gx;
			cy -= gy;
		} else if (u > 0 && g != 0) {
			cx -= u / g * gx;
			cy -= u / g * gy;
		}

		v2 = cx * cx + cy * cy;

		if (v1 < 0.01 && v2 < 0.01) {
			this.onLine(sx, sy, ex, ey);
			return;
		}

		if (isNaN(v1) || isNaN(v2)) {
			throw new Error('Bad input');
		}

		var s1x = (c1x + c2x) * 0.5,
		    s1y = (c1y + c2y) * 0.5,
		    l1x = (c1x + sx) * 0.5,
		    l1y = (c1y + sy) * 0.5,
		    l2x = (l1x + s1x) * 0.5,
		    l2y = (l1y + s1y) * 0.5,
		    r2x = (ex + c2x) * 0.5,
		    r2y = (ey + c2y) * 0.5,
		    r1x = (r2x + s1x) * 0.5,
		    r1y = (r2y + s1y) * 0.5,
		    l2r1x = (l2x + r1x) * 0.5,
		    l2r1y = (l2y + r1y) * 0.5;

		this.onBezierCurve(sx, sy, l1x, l1y, l2x, l2y, l2r1x, l2r1y);
		this.onBezierCurve(l2r1x, l2r1y, r1x, r1y, r2x, r2y, ex, ey);
	},

	onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
		var rad = rotation ? rotation * Math.PI / 180 : 0,
		    cos = Math.cos(rad),
		    sin = Math.sin(rad),
		    xx = cos * rx,
		    yx = -sin * ry,
		    xy = sin * rx,
		    yy = cos * ry;

		var arc = ea - sa;
		if (arc < 0 && !ccw) arc += Math.PI * 2;else if (arc > 0 && ccw) arc -= Math.PI * 2;

		var n = Math.ceil(Math.abs(arc / (Math.PI / 2))),
		    step = arc / n,
		    k = 4 / 3 * Math.tan(step / 4);

		var x = Math.cos(sa),
		    y = Math.sin(sa);

		for (var i = 0; i < n; i++) {
			var cp1x = x - k * y,
			    cp1y = y + k * x;

			sa += step;
			x = Math.cos(sa);y = Math.sin(sa);

			var cp2x = x + k * y,
			    cp2y = y - k * x;

			this.onBezierCurve(sx, sy, cx + xx * cp1x + yx * cp1y, cy + xy * cp1x + yy * cp1y, cx + xx * cp2x + yx * cp2y, cy + xy * cp2x + yy * cp2y, sx = cx + xx * x + yx * y, sy = cy + xy * x + yy * y);
		}
	},

	onClose: function onClose(sx, sy, ex, ey) {
		this.onLine(sx, sy, ex, ey);
	}

});
}, 173, null, "art/core/path.js");
__d(/* art/core/transform.js */function(global, require, module, exports) {var Class = require(172      ); // 172 = ./class

function Transform(xx, yx, xy, yy, x, y) {
	if (xx && typeof xx == 'object') {
		yx = xx.yx;yy = xx.yy;y = xx.y;
		xy = xx.xy;x = xx.x;xx = xx.xx;
	}
	this.xx = xx == null ? 1 : xx;
	this.yx = yx || 0;
	this.xy = xy || 0;
	this.yy = yy == null ? 1 : yy;
	this.x = (x == null ? this.x : x) || 0;
	this.y = (y == null ? this.y : y) || 0;
	this._transform();
	return this;
};

module.exports = Class({

	initialize: Transform,

	_transform: function _transform() {},

	xx: 1, yx: 0, x: 0,
	xy: 0, yy: 1, y: 0,

	transform: function transform(xx, yx, xy, yy, x, y) {
		var m = this;
		if (xx && typeof xx == 'object') {
			yx = xx.yx;yy = xx.yy;y = xx.y;
			xy = xx.xy;x = xx.x;xx = xx.xx;
		}
		if (!x) x = 0;
		if (!y) y = 0;
		return this.transformTo(m.xx * xx + m.xy * yx, m.yx * xx + m.yy * yx, m.xx * xy + m.xy * yy, m.yx * xy + m.yy * yy, m.xx * x + m.xy * y + m.x, m.yx * x + m.yy * y + m.y);
	},

	transformTo: Transform,

	translate: function translate(x, y) {
		return this.transform(1, 0, 0, 1, x, y);
	},

	move: function move(x, y) {
		this.x += x || 0;
		this.y += y || 0;
		this._transform();
		return this;
	},

	scale: function scale(x, y) {
		if (y == null) y = x;
		return this.transform(x, 0, 0, y, 0, 0);
	},

	rotate: function rotate(deg, x, y) {
		if (x == null || y == null) {
			x = (this.left || 0) + (this.width || 0) / 2;
			y = (this.top || 0) + (this.height || 0) / 2;
		}

		var rad = deg * Math.PI / 180,
		    sin = Math.sin(rad),
		    cos = Math.cos(rad);

		this.transform(1, 0, 0, 1, x, y);
		var m = this;

		return this.transformTo(cos * m.xx - sin * m.yx, sin * m.xx + cos * m.yx, cos * m.xy - sin * m.yy, sin * m.xy + cos * m.yy, m.x, m.y).transform(1, 0, 0, 1, -x, -y);
	},

	moveTo: function moveTo(x, y) {
		var m = this;
		return this.transformTo(m.xx, m.yx, m.xy, m.yy, x, y);
	},

	rotateTo: function rotateTo(deg, x, y) {
		var m = this;
		var flip = m.yx / m.xx > m.yy / m.xy ? -1 : 1;
		if (m.xx < 0 ? m.xy >= 0 : m.xy < 0) flip = -flip;
		return this.rotate(deg - Math.atan2(flip * m.yx, flip * m.xx) * 180 / Math.PI, x, y);
	},

	scaleTo: function scaleTo(x, y) {
		var m = this;

		var h = Math.sqrt(m.xx * m.xx + m.yx * m.yx);
		m.xx /= h;m.yx /= h;

		h = Math.sqrt(m.yy * m.yy + m.xy * m.xy);
		m.yy /= h;m.xy /= h;

		return this.scale(x, y);
	},

	resizeTo: function resizeTo(width, height) {
		var w = this.width,
		    h = this.height;
		if (!w || !h) return this;
		return this.scaleTo(width / w, height / h);
	},

	inversePoint: function inversePoint(x, y) {
		var a = this.xx,
		    b = this.yx,
		    c = this.xy,
		    d = this.yy,
		    e = this.x,
		    f = this.y;
		var det = b * c - a * d;
		if (det == 0) return null;
		return {
			x: (d * (e - x) + c * (y - f)) / det,
			y: (a * (f - y) + b * (x - e)) / det
		};
	},

	point: function point(x, y) {
		var m = this;
		return {
			x: m.xx * x + m.xy * y + m.x,
			y: m.yx * x + m.yy * y + m.y
		};
	}

});
}, 174, null, "art/core/transform.js");
__d(/* Button */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\Button.js';
var ColorPropType = require(59             ); // 59 = ColorPropType
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var TouchableNativeFeedback = require(184                      ); // 184 = TouchableNativeFeedback
var TouchableOpacity = require(188               ); // 188 = TouchableOpacity
var View = require(124   ); // 124 = View

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var Button = function (_React$Component) {
  babelHelpers.inherits(Button, _React$Component);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          accessibilityLabel = _props.accessibilityLabel,
          color = _props.color,
          onPress = _props.onPress,
          title = _props.title,
          disabled = _props.disabled,
          testID = _props.testID;

      var buttonStyles = [styles.button];
      var textStyles = [styles.text];
      if (color) {
        if (Platform.OS === 'ios') {
          textStyles.push({ color: color });
        } else {
          buttonStyles.push({ backgroundColor: color });
        }
      }
      var accessibilityTraits = ['button'];
      if (disabled) {
        buttonStyles.push(styles.buttonDisabled);
        textStyles.push(styles.textDisabled);
        accessibilityTraits.push('disabled');
      }
      invariant(typeof title === 'string', 'The title prop of a Button must be a string');
      var formattedTitle = Platform.OS === 'android' ? title.toUpperCase() : title;
      var Touchable = Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;
      return React.createElement(
        Touchable,
        {
          accessibilityComponentType: 'button',
          accessibilityLabel: accessibilityLabel,
          accessibilityTraits: accessibilityTraits,
          testID: testID,
          disabled: disabled,
          onPress: onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 120
          }
        },
        React.createElement(
          View,
          { style: buttonStyles, __source: {
              fileName: _jsxFileName,
              lineNumber: 127
            }
          },
          React.createElement(
            Text,
            { style: textStyles, disabled: disabled, __source: {
                fileName: _jsxFileName,
                lineNumber: 128
              }
            },
            formattedTitle
          )
        )
      );
    }
  }]);
  return Button;
}(React.Component);

Button.propTypes = {
  title: PropTypes.string.isRequired,

  accessibilityLabel: PropTypes.string,

  color: ColorPropType,

  disabled: PropTypes.bool,

  onPress: PropTypes.func.isRequired,

  testID: PropTypes.string
};


var styles = StyleSheet.create({
  button: Platform.select({
    ios: {},
    android: {
      elevation: 4,

      backgroundColor: '#2196F3',
      borderRadius: 2
    }
  }),
  text: Platform.select({
    ios: {
      color: '#007AFF',
      textAlign: 'center',
      padding: 8,
      fontSize: 18
    },
    android: {
      color: 'white',
      textAlign: 'center',
      padding: 8,
      fontWeight: '500'
    }
  }),
  buttonDisabled: Platform.select({
    ios: {},
    android: {
      elevation: 0,
      backgroundColor: '#dfdfdf'
    }
  }),
  textDisabled: Platform.select({
    ios: {
      color: '#cdcdcd'
    },
    android: {
      color: '#a1a1a1'
    }
  })
});

module.exports = Button;
}, 175, null, "Button");
__d(/* Text */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Text\\Text.js';
var ColorPropType = require(59             ); // 59 = ColorPropType
var EdgeInsetsPropType = require(142                 ); // 142 = EdgeInsetsPropType
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ReactNativeViewAttributes = require(140                        ); // 140 = ReactNativeViewAttributes
var StyleSheetPropType = require(147                 ); // 147 = StyleSheetPropType
var TextStylePropTypes = require(134                 ); // 134 = TextStylePropTypes
var Touchable = require(177        ); // 177 = Touchable

var createReactClass = require(150                 ); // 150 = create-react-class
var createReactNativeComponentClass = require(158                              ); // 158 = createReactNativeComponentClass
var mergeFast = require(183        ); // 183 = mergeFast
var processColor = require(136           ); // 136 = processColor

var stylePropType = StyleSheetPropType(TextStylePropTypes);

var viewConfig = {
  validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {
    isHighlighted: true,
    numberOfLines: true,
    ellipsizeMode: true,
    allowFontScaling: true,
    disabled: true,
    selectable: true,
    selectionColor: true,
    adjustsFontSizeToFit: true,
    minimumFontScale: true,
    textBreakStrategy: true
  }),
  uiViewClassName: 'RCTText'
};

var Text = createReactClass({
  displayName: 'Text',
  propTypes: {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),

    numberOfLines: PropTypes.number,

    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),

    onLayout: PropTypes.func,

    onPress: PropTypes.func,

    onLongPress: PropTypes.func,

    pressRetentionOffset: EdgeInsetsPropType,

    selectable: PropTypes.bool,

    selectionColor: ColorPropType,

    suppressHighlighting: PropTypes.bool,
    style: stylePropType,

    testID: PropTypes.string,

    nativeID: PropTypes.string,

    allowFontScaling: PropTypes.bool,

    accessible: PropTypes.bool,

    adjustsFontSizeToFit: PropTypes.bool,

    minimumFontScale: PropTypes.number,

    disabled: PropTypes.bool
  },
  getDefaultProps: function getDefaultProps() {
    return {
      accessible: true,
      allowFontScaling: true,
      ellipsizeMode: 'tail',
      disabled: false
    };
  },

  getInitialState: function getInitialState() {
    return mergeFast(Touchable.Mixin.touchableGetInitialState(), {
      isHighlighted: false
    });
  },
  mixins: [NativeMethodsMixin],
  viewConfig: viewConfig,
  getChildContext: function getChildContext() {
    return { isInAParentText: true };
  },

  childContextTypes: {
    isInAParentText: PropTypes.bool
  },
  contextTypes: {
    isInAParentText: PropTypes.bool
  },

  _handlers: null,
  _hasPressHandler: function _hasPressHandler() {
    return !!this.props.onPress || !!this.props.onLongPress;
  },

  touchableHandleActivePressIn: null,
  touchableHandleActivePressOut: null,
  touchableHandlePress: null,
  touchableHandleLongPress: null,
  touchableGetPressRectOffset: null,
  render: function render() {
    var _this = this;

    var newProps = this.props;
    if (this.props.onStartShouldSetResponder || this._hasPressHandler()) {
      if (!this._handlers) {
        this._handlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            var shouldSetFromProps = _this.props.onStartShouldSetResponder && _this.props.onStartShouldSetResponder();
            var setResponder = shouldSetFromProps || _this._hasPressHandler();
            if (setResponder && !_this.touchableHandleActivePressIn) {
              for (var key in Touchable.Mixin) {
                if (typeof Touchable.Mixin[key] === 'function') {
                  _this[key] = Touchable.Mixin[key].bind(_this);
                }
              }
              _this.touchableHandleActivePressIn = function () {
                if (_this.props.suppressHighlighting || !_this._hasPressHandler()) {
                  return;
                }
                _this.setState({
                  isHighlighted: true
                });
              };

              _this.touchableHandleActivePressOut = function () {
                if (_this.props.suppressHighlighting || !_this._hasPressHandler()) {
                  return;
                }
                _this.setState({
                  isHighlighted: false
                });
              };

              _this.touchableHandlePress = function (e) {
                _this.props.onPress && _this.props.onPress(e);
              };

              _this.touchableHandleLongPress = function (e) {
                _this.props.onLongPress && _this.props.onLongPress(e);
              };

              _this.touchableGetPressRectOffset = function () {
                return this.props.pressRetentionOffset || PRESS_RECT_OFFSET;
              };
            }

            return setResponder;
          },
          onResponderGrant: function (e, dispatchID) {
            this.touchableHandleResponderGrant(e, dispatchID);
            this.props.onResponderGrant && this.props.onResponderGrant.apply(this, arguments);
          }.bind(this),
          onResponderMove: function (e) {
            this.touchableHandleResponderMove(e);
            this.props.onResponderMove && this.props.onResponderMove.apply(this, arguments);
          }.bind(this),
          onResponderRelease: function (e) {
            this.touchableHandleResponderRelease(e);
            this.props.onResponderRelease && this.props.onResponderRelease.apply(this, arguments);
          }.bind(this),
          onResponderTerminate: function (e) {
            this.touchableHandleResponderTerminate(e);
            this.props.onResponderTerminate && this.props.onResponderTerminate.apply(this, arguments);
          }.bind(this),
          onResponderTerminationRequest: function () {
            var allowTermination = this.touchableHandleResponderTerminationRequest();
            if (allowTermination && this.props.onResponderTerminationRequest) {
              allowTermination = this.props.onResponderTerminationRequest.apply(this, arguments);
            }
            return allowTermination;
          }.bind(this)
        };
      }
      newProps = babelHelpers.extends({}, this.props, this._handlers, {
        isHighlighted: this.state.isHighlighted
      });
    }
    if (newProps.selectionColor != null) {
      newProps = babelHelpers.extends({}, newProps, {
        selectionColor: processColor(newProps.selectionColor)
      });
    }
    if (Touchable.TOUCH_TARGET_DEBUG && newProps.onPress) {
      newProps = babelHelpers.extends({}, newProps, {
        style: [this.props.style, { color: 'magenta' }]
      });
    }
    if (this.context.isInAParentText) {
      return React.createElement(RCTVirtualText, babelHelpers.extends({}, newProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 368
        }
      }));
    } else {
      return React.createElement(RCTText, babelHelpers.extends({}, newProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 370
        }
      }));
    }
  }
});

var PRESS_RECT_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var RCTText = createReactNativeComponentClass(viewConfig);
var RCTVirtualText = RCTText;

if (Platform.OS === 'android') {
  RCTVirtualText = createReactNativeComponentClass({
    validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {
      isHighlighted: true
    }),
    uiViewClassName: 'RCTVirtualText'
  });
}

module.exports = Text;
}, 176, null, "Text");
__d(/* Touchable */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\Touchable\\Touchable.js';
var BoundingDimensions = require(178                 ); // 178 = BoundingDimensions
var Platform = require(36        ); // 36 = Platform
var Position = require(180       ); // 180 = Position
var React = require(125    ); // 125 = React
var ReactNative = require(62           ); // 62 = ReactNative
var TVEventHandler = require(181             ); // 181 = TVEventHandler
var TouchEventUtils = require(182                       ); // 182 = fbjs/lib/TouchEventUtils
var UIManager = require(54         ); // 54 = UIManager
var View = require(124   ); // 124 = View

var keyMirror = require(129                 ); // 129 = fbjs/lib/keyMirror
var normalizeColor = require(60              ); // 60 = normalizeColor

var States = keyMirror({
  NOT_RESPONDER: null,
  RESPONDER_INACTIVE_PRESS_IN: null,
  RESPONDER_INACTIVE_PRESS_OUT: null,
  RESPONDER_ACTIVE_PRESS_IN: null,
  RESPONDER_ACTIVE_PRESS_OUT: null,
  RESPONDER_ACTIVE_LONG_PRESS_IN: null,
  RESPONDER_ACTIVE_LONG_PRESS_OUT: null,
  ERROR: null
});

var IsActive = {
  RESPONDER_ACTIVE_PRESS_OUT: true,
  RESPONDER_ACTIVE_PRESS_IN: true
};

var IsPressingIn = {
  RESPONDER_INACTIVE_PRESS_IN: true,
  RESPONDER_ACTIVE_PRESS_IN: true,
  RESPONDER_ACTIVE_LONG_PRESS_IN: true
};

var IsLongPressingIn = {
  RESPONDER_ACTIVE_LONG_PRESS_IN: true
};

var Signals = keyMirror({
  DELAY: null,
  RESPONDER_GRANT: null,
  RESPONDER_RELEASE: null,
  RESPONDER_TERMINATED: null,
  ENTER_PRESS_RECT: null,
  LEAVE_PRESS_RECT: null,
  LONG_PRESS_DETECTED: null
});

var Transitions = {
  NOT_RESPONDER: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
    RESPONDER_RELEASE: States.ERROR,
    RESPONDER_TERMINATED: States.ERROR,
    ENTER_PRESS_RECT: States.ERROR,
    LEAVE_PRESS_RECT: States.ERROR,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_INACTIVE_PRESS_IN: {
    DELAY: States.RESPONDER_ACTIVE_PRESS_IN,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_INACTIVE_PRESS_OUT: {
    DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_ACTIVE_PRESS_IN: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
  },
  RESPONDER_ACTIVE_PRESS_OUT: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_ACTIVE_LONG_PRESS_IN: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
  },
  RESPONDER_ACTIVE_LONG_PRESS_OUT: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  error: {
    DELAY: States.NOT_RESPONDER,
    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.NOT_RESPONDER,
    LEAVE_PRESS_RECT: States.NOT_RESPONDER,
    LONG_PRESS_DETECTED: States.NOT_RESPONDER
  }
};

var HIGHLIGHT_DELAY_MS = 130;

var PRESS_EXPAND_PX = 20;

var LONG_PRESS_THRESHOLD = 500;

var LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT = 10;

var TouchableMixin = {
  componentDidMount: function componentDidMount() {
    if (!Platform.isTVOS) {
      return;
    }

    this._tvEventHandler = new TVEventHandler();
    this._tvEventHandler.enable(this, function (cmp, evt) {
      var myTag = ReactNative.findNodeHandle(cmp);
      evt.dispatchConfig = {};
      if (myTag === evt.tag) {
        if (evt.eventType === 'focus') {
          cmp.touchableHandleActivePressIn && cmp.touchableHandleActivePressIn(evt);
        } else if (evt.eventType === 'blur') {
          cmp.touchableHandleActivePressOut && cmp.touchableHandleActivePressOut(evt);
        } else if (evt.eventType === 'select') {
          cmp.touchableHandlePress && cmp.touchableHandlePress(evt);
        }
      }
    });
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this._tvEventHandler) {
      this._tvEventHandler.disable();
      delete this._tvEventHandler;
    }
    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
  },

  touchableGetInitialState: function touchableGetInitialState() {
    return {
      touchable: { touchState: undefined, responderID: null }
    };
  },

  touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {
    return !this.props.rejectResponderTermination;
  },

  touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {
    return !this.props.disabled;
  },

  touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {
    return true;
  },

  touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {
    var dispatchID = e.currentTarget;

    e.persist();

    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
    this.pressOutDelayTimeout = null;

    this.state.touchable.touchState = States.NOT_RESPONDER;
    this.state.touchable.responderID = dispatchID;
    this._receiveSignal(Signals.RESPONDER_GRANT, e);
    var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;
    delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;
    if (delayMS !== 0) {
      this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);
    } else {
      this._handleDelay(e);
    }

    var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;
    longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;
    this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);
  },

  touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {
    this._receiveSignal(Signals.RESPONDER_RELEASE, e);
  },

  touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {
    this._receiveSignal(Signals.RESPONDER_TERMINATED, e);
  },

  touchableHandleResponderMove: function touchableHandleResponderMove(e) {
    if (this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN) {
      return;
    }

    if (!this.state.touchable.positionOnActivate) {
      return;
    }

    var positionOnActivate = this.state.touchable.positionOnActivate;
    var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;
    var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {
      left: PRESS_EXPAND_PX,
      right: PRESS_EXPAND_PX,
      top: PRESS_EXPAND_PX,
      bottom: PRESS_EXPAND_PX
    };

    var pressExpandLeft = pressRectOffset.left;
    var pressExpandTop = pressRectOffset.top;
    var pressExpandRight = pressRectOffset.right;
    var pressExpandBottom = pressRectOffset.bottom;

    var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;

    if (hitSlop) {
      pressExpandLeft += hitSlop.left;
      pressExpandTop += hitSlop.top;
      pressExpandRight += hitSlop.right;
      pressExpandBottom += hitSlop.bottom;
    }

    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);
    var pageX = touch && touch.pageX;
    var pageY = touch && touch.pageY;

    if (this.pressInLocation) {
      var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);
      if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {
        this._cancelLongPressDelayTimeout();
      }
    }

    var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;
    if (isTouchWithinActive) {
      this._receiveSignal(Signals.ENTER_PRESS_RECT, e);
      var curState = this.state.touchable.touchState;
      if (curState === States.RESPONDER_INACTIVE_PRESS_IN) {
        this._cancelLongPressDelayTimeout();
      }
    } else {
      this._cancelLongPressDelayTimeout();
      this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);
    }
  },

  _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation() {
    var tag = this.state.touchable.responderID;
    if (tag == null) {
      return;
    }

    UIManager.measure(tag, this._handleQueryLayout);
  },

  _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {
    if (!l && !t && !w && !h && !globalX && !globalY) {
      return;
    }
    this.state.touchable.positionOnActivate && Position.release(this.state.touchable.positionOnActivate);
    this.state.touchable.dimensionsOnActivate && BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
    this.state.touchable.positionOnActivate = Position.getPooled(globalX, globalY);
    this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w, h);
  },

  _handleDelay: function _handleDelay(e) {
    this.touchableDelayTimeout = null;
    this._receiveSignal(Signals.DELAY, e);
  },

  _handleLongDelay: function _handleLongDelay(e) {
    this.longPressDelayTimeout = null;
    var curState = this.state.touchable.touchState;
    if (curState !== States.RESPONDER_ACTIVE_PRESS_IN && curState !== States.RESPONDER_ACTIVE_LONG_PRESS_IN) {
      console.error('Attempted to transition from state `' + curState + '` to `' + States.RESPONDER_ACTIVE_LONG_PRESS_IN + '`, which is not supported. This is ' + 'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');
    } else {
      this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);
    }
  },

  _receiveSignal: function _receiveSignal(signal, e) {
    var responderID = this.state.touchable.responderID;
    var curState = this.state.touchable.touchState;
    var nextState = Transitions[curState] && Transitions[curState][signal];
    if (!responderID && signal === Signals.RESPONDER_RELEASE) {
      return;
    }
    if (!nextState) {
      throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + responderID + '`');
    }
    if (nextState === States.ERROR) {
      throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + responderID + '`');
    }
    if (curState !== nextState) {
      this._performSideEffectsForTransition(curState, nextState, signal, e);
      this.state.touchable.touchState = nextState;
    }
  },

  _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {
    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
    this.longPressDelayTimeout = null;
  },

  _isHighlight: function _isHighlight(state) {
    return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;
  },

  _savePressInLocation: function _savePressInLocation(e) {
    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);
    var pageX = touch && touch.pageX;
    var pageY = touch && touch.pageY;
    var locationX = touch && touch.locationX;
    var locationY = touch && touch.locationY;
    this.pressInLocation = { pageX: pageX, pageY: pageY, locationX: locationX, locationY: locationY };
  },

  _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {
    var deltaX = aX - bX;
    var deltaY = aY - bY;
    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);
  },

  _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {
    var curIsHighlight = this._isHighlight(curState);
    var newIsHighlight = this._isHighlight(nextState);

    var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;

    if (isFinalSignal) {
      this._cancelLongPressDelayTimeout();
    }

    if (!IsActive[curState] && IsActive[nextState]) {
      this._remeasureMetricsOnActivation();
    }

    if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {
      this.touchableHandleLongPress && this.touchableHandleLongPress(e);
    }

    if (newIsHighlight && !curIsHighlight) {
      this._startHighlight(e);
    } else if (!newIsHighlight && curIsHighlight) {
      this._endHighlight(e);
    }

    if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {
      var hasLongPressHandler = !!this.props.onLongPress;
      var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && (!hasLongPressHandler || !this.touchableLongPressCancelsPress());

      var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
      if (shouldInvokePress && this.touchableHandlePress) {
        if (!newIsHighlight && !curIsHighlight) {
          this._startHighlight(e);
          this._endHighlight(e);
        }
        this.touchableHandlePress(e);
      }
    }

    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
    this.touchableDelayTimeout = null;
  },

  _startHighlight: function _startHighlight(e) {
    this._savePressInLocation(e);
    this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);
  },

  _endHighlight: function _endHighlight(e) {
    var _this = this;

    if (this.touchableHandleActivePressOut) {
      if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {
        this.pressOutDelayTimeout = setTimeout(function () {
          _this.touchableHandleActivePressOut(e);
        }, this.touchableGetPressOutDelayMS());
      } else {
        this.touchableHandleActivePressOut(e);
      }
    }
  }

};

var Touchable = {
  Mixin: TouchableMixin,
  TOUCH_TARGET_DEBUG: false,
  renderDebugView: function renderDebugView(_ref) {
    var color = _ref.color,
        hitSlop = _ref.hitSlop;

    if (!Touchable.TOUCH_TARGET_DEBUG) {
      return null;
    }
    if (!__DEV__) {
      throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');
    }
    var debugHitSlopStyle = {};
    hitSlop = hitSlop || { top: 0, bottom: 0, left: 0, right: 0 };
    for (var key in hitSlop) {
      debugHitSlopStyle[key] = -hitSlop[key];
    }
    var hexColor = '#' + ('00000000' + normalizeColor(color).toString(16)).substr(-8);
    return React.createElement(View, {
      pointerEvents: 'none',
      style: babelHelpers.extends({
        position: 'absolute',
        borderColor: hexColor.slice(0, -2) + '55',
        borderWidth: 1,
        borderStyle: 'dashed',
        backgroundColor: hexColor.slice(0, -2) + '0F' }, debugHitSlopStyle),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 793
      }
    });
  }
};

module.exports = Touchable;
}, 177, null, "Touchable");
__d(/* BoundingDimensions */function(global, require, module, exports) {

'use strict';

var PooledClass = require(179          ); // 179 = PooledClass

var twoArgumentPooler = PooledClass.twoArgumentPooler;

function BoundingDimensions(width, height) {
  this.width = width;
  this.height = height;
}

BoundingDimensions.prototype.destructor = function () {
  this.width = null;
  this.height = null;
};

BoundingDimensions.getPooledFromElement = function (element) {
  return BoundingDimensions.getPooled(element.offsetWidth, element.offsetHeight);
};

PooledClass.addPoolingTo(BoundingDimensions, twoArgumentPooler);

module.exports = BoundingDimensions;
}, 178, null, "BoundingDimensions");
__d(/* PooledClass */function(global, require, module, exports) {

'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function standardReleaser(instance) {
  var Klass = this;
  invariant(instance instanceof Klass, 'Trying to release an instance into a pool of a different type.');
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}, 179, null, "PooledClass");
__d(/* Position */function(global, require, module, exports) {

'use strict';

var PooledClass = require(179          ); // 179 = PooledClass

var twoArgumentPooler = PooledClass.twoArgumentPooler;

function Position(left, top) {
  this.left = left;
  this.top = top;
}

Position.prototype.destructor = function () {
  this.left = null;
  this.top = null;
};

PooledClass.addPoolingTo(Position, twoArgumentPooler);

module.exports = Position;
}, 180, null, "Position");
__d(/* TVEventHandler */function(global, require, module, exports) {
'use strict';

function TVEventHandler() {}

TVEventHandler.prototype.enable = function (component, callback) {};

TVEventHandler.prototype.disable = function () {};

module.exports = TVEventHandler;
}, 181, null, "TVEventHandler");
__d(/* fbjs/lib/TouchEventUtils.js */function(global, require, module, exports) {"use strict";

var TouchEventUtils = {
  extractSingleTouch: function extractSingleTouch(nativeEvent) {
    var touches = nativeEvent.touches;
    var changedTouches = nativeEvent.changedTouches;
    var hasTouches = touches && touches.length > 0;
    var hasChangedTouches = changedTouches && changedTouches.length > 0;

    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;
  }
};

module.exports = TouchEventUtils;
}, 182, null, "fbjs/lib/TouchEventUtils.js");
__d(/* mergeFast */function(global, require, module, exports) {
'use strict';

var mergeFast = function mergeFast(one, two) {
  var ret = {};
  for (var keyOne in one) {
    ret[keyOne] = one[keyOne];
  }
  for (var keyTwo in two) {
    ret[keyTwo] = two[keyTwo];
  }
  return ret;
};

module.exports = mergeFast;
}, 183, null, "mergeFast");
__d(/* TouchableNativeFeedback */function(global, require, module, exports) {
'use strict';

var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ReactNative = require(62           ); // 62 = ReactNative
var Touchable = require(177        ); // 177 = Touchable
var TouchableWithoutFeedback = require(185                       ); // 185 = TouchableWithoutFeedback
var UIManager = require(54         ); // 54 = UIManager

var createReactClass = require(150                 ); // 150 = create-react-class
var ensurePositiveDelayProps = require(187                       ); // 187 = ensurePositiveDelayProps
var processColor = require(136           ); // 136 = processColor

var rippleBackgroundPropType = PropTypes.shape({
  type: PropTypes.oneOf(['RippleAndroid']),
  color: PropTypes.number,
  borderless: PropTypes.bool
});

var themeAttributeBackgroundPropType = PropTypes.shape({
  type: PropTypes.oneOf(['ThemeAttrAndroid']),
  attribute: PropTypes.string.isRequired
});

var backgroundPropType = PropTypes.oneOfType([rippleBackgroundPropType, themeAttributeBackgroundPropType]);

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableNativeFeedback = createReactClass({
  displayName: 'TouchableNativeFeedback',
  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    background: backgroundPropType,

    useForeground: PropTypes.bool
  }),

  statics: {
    SelectableBackground: function SelectableBackground() {
      return { type: 'ThemeAttrAndroid', attribute: 'selectableItemBackground' };
    },

    SelectableBackgroundBorderless: function SelectableBackgroundBorderless() {
      return { type: 'ThemeAttrAndroid', attribute: 'selectableItemBackgroundBorderless' };
    },

    Ripple: function Ripple(color, borderless) {
      return { type: 'RippleAndroid', color: processColor(color), borderless: borderless };
    },

    canUseNativeForeground: function canUseNativeForeground() {
      return Platform.OS === 'android' && Platform.Version >= 23;
    }
  },

  mixins: [Touchable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return {
      background: this.SelectableBackground()
    };
  },

  getInitialState: function getInitialState() {
    return this.touchableGetInitialState();
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.props.onPressIn && this.props.onPressIn(e);
    this._dispatchPressedStateChange(true);
    this._dispatchHotspotUpdate(this.pressInLocation.locationX, this.pressInLocation.locationY);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this.props.onPressOut && this.props.onPressOut(e);
    this._dispatchPressedStateChange(false);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _handleResponderMove: function _handleResponderMove(e) {
    this.touchableHandleResponderMove(e);
    this._dispatchHotspotUpdate(e.nativeEvent.locationX, e.nativeEvent.locationY);
  },

  _dispatchHotspotUpdate: function _dispatchHotspotUpdate(destX, destY) {
    UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.hotspotUpdate, [destX || 0, destY || 0]);
  },

  _dispatchPressedStateChange: function _dispatchPressedStateChange(pressed) {
    UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.setPressed, [pressed]);
  },

  render: function render() {
    var _babelHelpers$extends;

    var child = React.Children.only(this.props.children);
    var children = child.props.children;
    if (Touchable.TOUCH_TARGET_DEBUG && child.type.displayName === 'View') {
      if (!Array.isArray(children)) {
        children = [children];
      }
      children.push(Touchable.renderDebugView({ color: 'brown', hitSlop: this.props.hitSlop }));
    }
    if (this.props.useForeground && !TouchableNativeFeedback.canUseNativeForeground()) {
      console.warn('Requested foreground ripple, but it is not available on this version of Android. ' + 'Consider calling TouchableNativeFeedback.canUseNativeForeground() and using a different ' + 'Touchable if the result is false.');
    }
    var drawableProp = this.props.useForeground && TouchableNativeFeedback.canUseNativeForeground() ? 'nativeForegroundAndroid' : 'nativeBackgroundAndroid';
    var childProps = babelHelpers.extends({}, child.props, (_babelHelpers$extends = {}, babelHelpers.defineProperty(_babelHelpers$extends, drawableProp, this.props.background), babelHelpers.defineProperty(_babelHelpers$extends, 'accessible', this.props.accessible !== false), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityLabel', this.props.accessibilityLabel), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityComponentType', this.props.accessibilityComponentType), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityTraits', this.props.accessibilityTraits), babelHelpers.defineProperty(_babelHelpers$extends, 'children', children), babelHelpers.defineProperty(_babelHelpers$extends, 'testID', this.props.testID), babelHelpers.defineProperty(_babelHelpers$extends, 'onLayout', this.props.onLayout), babelHelpers.defineProperty(_babelHelpers$extends, 'hitSlop', this.props.hitSlop), babelHelpers.defineProperty(_babelHelpers$extends, 'onStartShouldSetResponder', this.touchableHandleStartShouldSetResponder), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderTerminationRequest', this.touchableHandleResponderTerminationRequest), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderGrant', this.touchableHandleResponderGrant), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderMove', this._handleResponderMove), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderRelease', this.touchableHandleResponderRelease), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderTerminate', this.touchableHandleResponderTerminate), _babelHelpers$extends));

    return React.cloneElement(child, childProps);
  }
});

module.exports = TouchableNativeFeedback;
}, 184, null, "TouchableNativeFeedback");
__d(/* TouchableWithoutFeedback */function(global, require, module, exports) {
'use strict';

var EdgeInsetsPropType = require(142                 ); // 142 = EdgeInsetsPropType
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var TimerMixin = require(186                ); // 186 = react-timer-mixin
var Touchable = require(177        ); // 177 = Touchable

var createReactClass = require(150                 ); // 150 = create-react-class
var ensurePositiveDelayProps = require(187                       ); // 187 = ensurePositiveDelayProps
var warning = require(15                ); // 15 = fbjs/lib/warning

var _require = require(148                ), // 148 = ViewAccessibility
    AccessibilityComponentTypes = _require.AccessibilityComponentTypes,
    AccessibilityTraits = _require.AccessibilityTraits;

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableWithoutFeedback = createReactClass({
  displayName: 'TouchableWithoutFeedback',
  mixins: [TimerMixin, Touchable.Mixin],

  propTypes: {
    accessible: PropTypes.bool,
    accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentTypes),
    accessibilityTraits: PropTypes.oneOfType([PropTypes.oneOf(AccessibilityTraits), PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),

    disabled: PropTypes.bool,

    onPress: PropTypes.func,
    onPressIn: PropTypes.func,
    onPressOut: PropTypes.func,

    onLayout: PropTypes.func,

    onLongPress: PropTypes.func,

    delayPressIn: PropTypes.number,

    delayPressOut: PropTypes.number,

    delayLongPress: PropTypes.number,

    pressRetentionOffset: EdgeInsetsPropType,

    hitSlop: EdgeInsetsPropType
  },

  getInitialState: function getInitialState() {
    return this.touchableGetInitialState();
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut || 0;
  },

  render: function render() {
    var child = React.Children.only(this.props.children);
    var children = child.props.children;
    warning(!child.type || child.type.displayName !== 'Text', 'TouchableWithoutFeedback does not work well with Text children. Wrap children in a View instead. See ' + (child._owner && child._owner.getName && child._owner.getName() || '<unknown>'));
    if (Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'View') {
      children = React.Children.toArray(children);
      children.push(Touchable.renderDebugView({ color: 'red', hitSlop: this.props.hitSlop }));
    }
    var style = Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'Text' ? [child.props.style, { color: 'red' }] : child.props.style;
    return React.cloneElement(child, {
      accessible: this.props.accessible !== false,

      accessibilityLabel: this.props.accessibilityLabel,
      accessibilityComponentType: this.props.accessibilityComponentType,
      accessibilityTraits: this.props.accessibilityTraits,

      nativeID: this.props.nativeID,

      testID: this.props.testID,
      onLayout: this.props.onLayout,
      hitSlop: this.props.hitSlop,
      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
      onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
      onResponderGrant: this.touchableHandleResponderGrant,
      onResponderMove: this.touchableHandleResponderMove,
      onResponderRelease: this.touchableHandleResponderRelease,
      onResponderTerminate: this.touchableHandleResponderTerminate,
      style: style,
      children: children
    });
  }
});

module.exports = TouchableWithoutFeedback;
}, 185, null, "TouchableWithoutFeedback");
__d(/* react-timer-mixin/TimerMixin.js */function(global, require, module, exports) {
'use strict';

var GLOBAL = typeof window === 'undefined' ? global : window;

var setter = function setter(_setter, _clearer, array) {
  return function (callback, delta) {
    var id = _setter(function () {
      _clearer.call(this, id);
      callback.apply(this, arguments);
    }.bind(this), delta);

    if (!this[array]) {
      this[array] = [id];
    } else {
      this[array].push(id);
    }
    return id;
  };
};

var clearer = function clearer(_clearer, array) {
  return function (id) {
    if (this[array]) {
      var index = this[array].indexOf(id);
      if (index !== -1) {
        this[array].splice(index, 1);
      }
    }
    _clearer(id);
  };
};

var _timeouts = 'TimerMixin_timeouts';
var _clearTimeout = clearer(GLOBAL.clearTimeout, _timeouts);
var _setTimeout = setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

var _intervals = 'TimerMixin_intervals';
var _clearInterval = clearer(GLOBAL.clearInterval, _intervals);
var _setInterval = setter(GLOBAL.setInterval, function () {}, _intervals);

var _immediates = 'TimerMixin_immediates';
var _clearImmediate = clearer(GLOBAL.clearImmediate, _immediates);
var _setImmediate = setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

var _rafs = 'TimerMixin_rafs';
var _cancelAnimationFrame = clearer(GLOBAL.cancelAnimationFrame, _rafs);
var _requestAnimationFrame = setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

var TimerMixin = {
  componentWillUnmount: function componentWillUnmount() {
    this[_timeouts] && this[_timeouts].forEach(function (id) {
      GLOBAL.clearTimeout(id);
    });
    this[_timeouts] = null;
    this[_intervals] && this[_intervals].forEach(function (id) {
      GLOBAL.clearInterval(id);
    });
    this[_intervals] = null;
    this[_immediates] && this[_immediates].forEach(function (id) {
      GLOBAL.clearImmediate(id);
    });
    this[_immediates] = null;
    this[_rafs] && this[_rafs].forEach(function (id) {
      GLOBAL.cancelAnimationFrame(id);
    });
    this[_rafs] = null;
  },

  setTimeout: _setTimeout,
  clearTimeout: _clearTimeout,

  setInterval: _setInterval,
  clearInterval: _clearInterval,

  setImmediate: _setImmediate,
  clearImmediate: _clearImmediate,

  requestAnimationFrame: _requestAnimationFrame,
  cancelAnimationFrame: _cancelAnimationFrame
};

module.exports = TimerMixin;
}, 186, null, "react-timer-mixin/TimerMixin.js");
__d(/* ensurePositiveDelayProps */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var ensurePositiveDelayProps = function ensurePositiveDelayProps(props) {
  invariant(!(props.delayPressIn < 0 || props.delayPressOut < 0 || props.delayLongPress < 0), 'Touchable components cannot have negative delay properties');
};

module.exports = ensurePositiveDelayProps;
}, 187, null, "ensurePositiveDelayProps");
__d(/* TouchableOpacity */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\Touchable\\TouchableOpacity.js';


var Animated = require(189       ); // 189 = Animated
var Easing = require(198     ); // 198 = Easing
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var TimerMixin = require(186                ); // 186 = react-timer-mixin
var Touchable = require(177        ); // 177 = Touchable
var TouchableWithoutFeedback = require(185                       ); // 185 = TouchableWithoutFeedback

var createReactClass = require(150                 ); // 150 = create-react-class
var ensurePositiveDelayProps = require(187                       ); // 187 = ensurePositiveDelayProps
var flattenStyle = require(114           ); // 114 = flattenStyle

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableOpacity = createReactClass({
  displayName: 'TouchableOpacity',
  mixins: [TimerMixin, Touchable.Mixin, NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    activeOpacity: PropTypes.number,
    focusedOpacity: PropTypes.number,

    tvParallaxProperties: PropTypes.object
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      activeOpacity: 0.2,
      focusedOpacity: 0.7
    };
  },

  getInitialState: function getInitialState() {
    return babelHelpers.extends({}, this.touchableGetInitialState(), {
      anim: new Animated.Value(this._getChildStyleOpacityWithDefault())
    });
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  setOpacityTo: function setOpacityTo(value, duration) {
    Animated.timing(this.state.anim, {
      toValue: value,
      duration: duration,
      easing: Easing.inOut(Easing.quad),
      useNativeDriver: true
    }).start();
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    if (e.dispatchConfig.registrationName === 'onResponderGrant') {
      this._opacityActive(0);
    } else {
      this._opacityActive(150);
    }
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this._opacityInactive(250);
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _opacityActive: function _opacityActive(duration) {
    this.setOpacityTo(this.props.activeOpacity, duration);
  },

  _opacityInactive: function _opacityInactive(duration) {
    this.setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);
  },

  _opacityFocused: function _opacityFocused() {
    this.setOpacityTo(this.props.focusedOpacity);
  },

  _getChildStyleOpacityWithDefault: function _getChildStyleOpacityWithDefault() {
    var childStyle = flattenStyle(this.props.style) || {};
    return childStyle.opacity == undefined ? 1 : childStyle.opacity;
  },

  render: function render() {
    return React.createElement(
      Animated.View,
      {
        accessible: this.props.accessible !== false,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        style: [this.props.style, { opacity: this.state.anim }],
        nativeID: this.props.nativeID,
        testID: this.props.testID,
        onLayout: this.props.onLayout,
        isTVSelectable: true,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hitSlop: this.props.hitSlop,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate, __source: {
          fileName: _jsxFileName,
          lineNumber: 179
        }
      },
      this.props.children,
      Touchable.renderDebugView({ color: 'cyan', hitSlop: this.props.hitSlop })
    );
  }
});

module.exports = TouchableOpacity;
}, 188, null, "TouchableOpacity");
__d(/* Animated */function(global, require, module, exports) {
'use strict';

var AnimatedImplementation = require(190                     ); // 190 = AnimatedImplementation
var Image = require(200    ); // 200 = Image
var Text = require(176   ); // 176 = Text
var View = require(124   ); // 124 = View

var AnimatedScrollView = void 0;

var Animated = {
  View: AnimatedImplementation.createAnimatedComponent(View),
  Text: AnimatedImplementation.createAnimatedComponent(Text),
  Image: AnimatedImplementation.createAnimatedComponent(Image),
  get ScrollView() {
    if (!AnimatedScrollView) {
      AnimatedScrollView = AnimatedImplementation.createAnimatedComponent(require(202         )); // 202 = ScrollView
    }
    return AnimatedScrollView;
  }
};

babelHelpers.extends(Animated, AnimatedImplementation);

module.exports = Animated;
}, 189, null, "Animated");
__d(/* AnimatedImplementation */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Animated\\src\\AnimatedImplementation.js';
var InteractionManager = require(191                 ); // 191 = InteractionManager
var Interpolation = require(193            ); // 193 = Interpolation
var NativeAnimatedHelper = require(194                   ); // 194 = NativeAnimatedHelper
var React = require(125    ); // 125 = React
var ReactNative = require(62           ); // 62 = ReactNative
var Set = require(78   ); // 78 = Set
var SpringConfig = require(195           ); // 195 = SpringConfig
var ViewStylePropTypes = require(135                 ); // 135 = ViewStylePropTypes

var flattenStyle = require(114           ); // 114 = flattenStyle
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var requestAnimationFrame = require(196                             ); // 196 = fbjs/lib/requestAnimationFrame

var NativeAnimatedAPI = NativeAnimatedHelper.API;

var warnedMissingNativeAnimated = false;

function shouldUseNativeDriver(config) {
  if (config.useNativeDriver && !NativeAnimatedHelper.isNativeAnimatedAvailable()) {
    if (!warnedMissingNativeAnimated) {
      console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'More info: https://github.com/facebook/react-native/issues/11094#issuecomment-263240420');
      warnedMissingNativeAnimated = true;
    }
    return false;
  }

  return config.useNativeDriver || false;
}

var Animated = function () {
  function Animated() {
    babelHelpers.classCallCheck(this, Animated);
  }

  babelHelpers.createClass(Animated, [{
    key: '__attach',
    value: function __attach() {}
  }, {
    key: '__detach',
    value: function __detach() {
      if (this.__isNative && this.__nativeTag != null) {
        NativeAnimatedAPI.dropAnimatedNode(this.__nativeTag);
        this.__nativeTag = undefined;
      }
    }
  }, {
    key: '__getValue',
    value: function __getValue() {}
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this.__getValue();
    }
  }, {
    key: '__addChild',
    value: function __addChild(child) {}
  }, {
    key: '__removeChild',
    value: function __removeChild(child) {}
  }, {
    key: '__getChildren',
    value: function __getChildren() {
      return [];
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        throw new Error('This node cannot be made a "native" animated node');
      }
    }
  }, {
    key: '__getNativeTag',
    value: function __getNativeTag() {
      NativeAnimatedHelper.assertNativeAnimatedModule();
      invariant(this.__isNative, 'Attempt to get native tag from node not marked as "native"');
      if (this.__nativeTag == null) {
        var nativeTag = NativeAnimatedHelper.generateNewNodeTag();
        NativeAnimatedAPI.createAnimatedNode(nativeTag, this.__getNativeConfig());
        this.__nativeTag = nativeTag;
      }
      return this.__nativeTag;
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      throw new Error('This JS animated node type cannot be used as native animated node');
    }
  }, {
    key: 'toJSON',
    value: function toJSON() {
      return this.__getValue();
    }
  }]);
  return Animated;
}();

var Animation = function () {
  function Animation() {
    babelHelpers.classCallCheck(this, Animation);
  }

  babelHelpers.createClass(Animation, [{
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}
  }, {
    key: 'stop',
    value: function stop() {
      if (this.__nativeId) {
        NativeAnimatedAPI.stopAnimation(this.__nativeId);
      }
    }
  }, {
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      throw new Error('This animation type cannot be offloaded to native');
    }
  }, {
    key: '__debouncedOnEnd',
    value: function __debouncedOnEnd(result) {
      var onEnd = this.__onEnd;
      this.__onEnd = null;
      onEnd && onEnd(result);
    }
  }, {
    key: '__startNativeAnimation',
    value: function __startNativeAnimation(animatedValue) {
      animatedValue.__makeNative();
      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();
      NativeAnimatedAPI.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));
    }
  }]);
  return Animation;
}();

var AnimatedWithChildren = function (_Animated) {
  babelHelpers.inherits(AnimatedWithChildren, _Animated);

  function AnimatedWithChildren() {
    babelHelpers.classCallCheck(this, AnimatedWithChildren);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedWithChildren.__proto__ || Object.getPrototypeOf(AnimatedWithChildren)).call(this));

    _this._children = [];
    return _this;
  }

  babelHelpers.createClass(AnimatedWithChildren, [{
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var _iterator = this._children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var child = _ref;

          child.__makeNative();
          NativeAnimatedAPI.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
        }
      }
    }
  }, {
    key: '__addChild',
    value: function __addChild(child) {
      if (this._children.length === 0) {
        this.__attach();
      }
      this._children.push(child);
      if (this.__isNative) {
        child.__makeNative();
        NativeAnimatedAPI.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
      }
    }
  }, {
    key: '__removeChild',
    value: function __removeChild(child) {
      var index = this._children.indexOf(child);
      if (index === -1) {
        console.warn('Trying to remove a child that doesn\'t exist');
        return;
      }
      if (this.__isNative && child.__isNative) {
        NativeAnimatedAPI.disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
      }
      this._children.splice(index, 1);
      if (this._children.length === 0) {
        this.__detach();
      }
    }
  }, {
    key: '__getChildren',
    value: function __getChildren() {
      return this._children;
    }
  }]);
  return AnimatedWithChildren;
}(Animated);

function _flush(rootNode) {
  var animatedStyles = new Set();
  function findAnimatedStyles(node) {
    if (typeof node.update === 'function') {
      animatedStyles.add(node);
    } else {
      node.__getChildren().forEach(findAnimatedStyles);
    }
  }
  findAnimatedStyles(rootNode);

  animatedStyles.forEach(function (animatedStyle) {
    return animatedStyle.update();
  });
}

var _easeInOut = void 0;
function easeInOut() {
  if (!_easeInOut) {
    var Easing = require(198     ); // 198 = Easing
    _easeInOut = Easing.inOut(Easing.ease);
  }
  return _easeInOut;
}

var TimingAnimation = function (_Animation) {
  babelHelpers.inherits(TimingAnimation, _Animation);

  function TimingAnimation(config) {
    babelHelpers.classCallCheck(this, TimingAnimation);

    var _this2 = babelHelpers.possibleConstructorReturn(this, (TimingAnimation.__proto__ || Object.getPrototypeOf(TimingAnimation)).call(this));

    _this2._toValue = config.toValue;
    _this2._easing = config.easing !== undefined ? config.easing : easeInOut();
    _this2._duration = config.duration !== undefined ? config.duration : 500;
    _this2._delay = config.delay !== undefined ? config.delay : 0;
    _this2.__iterations = config.iterations !== undefined ? config.iterations : 1;
    _this2.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this2._useNativeDriver = shouldUseNativeDriver(config);
    return _this2;
  }

  babelHelpers.createClass(TimingAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      var frameDuration = 1000.0 / 60.0;
      var frames = [];
      for (var dt = 0.0; dt < this._duration; dt += frameDuration) {
        frames.push(this._easing(dt / this._duration));
      }
      frames.push(this._easing(1));
      return {
        type: 'frames',
        frames: frames,
        toValue: this._toValue,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      var _this3 = this;

      this.__active = true;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;

      var start = function start() {
        if (_this3._duration === 0 && !_this3._useNativeDriver) {
          _this3._onUpdate(_this3._toValue);
          _this3.__debouncedOnEnd({ finished: true });
        } else {
          _this3._startTime = Date.now();
          if (_this3._useNativeDriver) {
            _this3.__startNativeAnimation(animatedValue);
          } else {
            _this3._animationFrame = requestAnimationFrame(_this3.onUpdate.bind(_this3));
          }
        }
      };
      if (this._delay) {
        this._timeout = setTimeout(start, this._delay);
      } else {
        start();
      }
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var now = Date.now();
      if (now >= this._startTime + this._duration) {
        if (this._duration === 0) {
          this._onUpdate(this._toValue);
        } else {
          this._onUpdate(this._fromValue + this._easing(1) * (this._toValue - this._fromValue));
        }
        this.__debouncedOnEnd({ finished: true });
        return;
      }

      this._onUpdate(this._fromValue + this._easing((now - this._startTime) / this._duration) * (this._toValue - this._fromValue));
      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(TimingAnimation.prototype.__proto__ || Object.getPrototypeOf(TimingAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      clearTimeout(this._timeout);
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return TimingAnimation;
}(Animation);

var DecayAnimation = function (_Animation2) {
  babelHelpers.inherits(DecayAnimation, _Animation2);

  function DecayAnimation(config) {
    babelHelpers.classCallCheck(this, DecayAnimation);

    var _this4 = babelHelpers.possibleConstructorReturn(this, (DecayAnimation.__proto__ || Object.getPrototypeOf(DecayAnimation)).call(this));

    _this4._deceleration = config.deceleration !== undefined ? config.deceleration : 0.998;
    _this4._velocity = config.velocity;
    _this4._useNativeDriver = shouldUseNativeDriver(config);
    _this4.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this4.__iterations = config.iterations !== undefined ? config.iterations : 1;
    return _this4;
  }

  babelHelpers.createClass(DecayAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      return {
        type: 'decay',
        deceleration: this._deceleration,
        velocity: this._velocity,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      this.__active = true;
      this._lastValue = fromValue;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._startTime = Date.now();
      if (this._useNativeDriver) {
        this.__startNativeAnimation(animatedValue);
      } else {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var now = Date.now();

      var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

      this._onUpdate(value);

      if (Math.abs(this._lastValue - value) < 0.1) {
        this.__debouncedOnEnd({ finished: true });
        return;
      }

      this._lastValue = value;
      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(DecayAnimation.prototype.__proto__ || Object.getPrototypeOf(DecayAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return DecayAnimation;
}(Animation);

function withDefault(value, defaultValue) {
  if (value === undefined || value === null) {
    return defaultValue;
  }
  return value;
}

var SpringAnimation = function (_Animation3) {
  babelHelpers.inherits(SpringAnimation, _Animation3);

  function SpringAnimation(config) {
    babelHelpers.classCallCheck(this, SpringAnimation);

    var _this5 = babelHelpers.possibleConstructorReturn(this, (SpringAnimation.__proto__ || Object.getPrototypeOf(SpringAnimation)).call(this));

    _this5._overshootClamping = withDefault(config.overshootClamping, false);
    _this5._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);
    _this5._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);
    _this5._initialVelocity = config.velocity;
    _this5._lastVelocity = withDefault(config.velocity, 0);
    _this5._toValue = config.toValue;
    _this5._useNativeDriver = shouldUseNativeDriver(config);
    _this5.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this5.__iterations = config.iterations !== undefined ? config.iterations : 1;

    var springConfig;
    if (config.bounciness !== undefined || config.speed !== undefined) {
      invariant(config.tension === undefined && config.friction === undefined, 'You can only define bounciness/speed or tension/friction but not both');
      springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));
    } else {
      springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));
    }
    _this5._tension = springConfig.tension;
    _this5._friction = springConfig.friction;
    return _this5;
  }

  babelHelpers.createClass(SpringAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      return {
        type: 'spring',
        overshootClamping: this._overshootClamping,
        restDisplacementThreshold: this._restDisplacementThreshold,
        restSpeedThreshold: this._restSpeedThreshold,
        tension: this._tension,
        friction: this._friction,
        initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),
        toValue: this._toValue,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      this.__active = true;
      this._startPosition = fromValue;
      this._lastPosition = this._startPosition;

      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._lastTime = Date.now();

      if (previousAnimation instanceof SpringAnimation) {
        var internalState = previousAnimation.getInternalState();
        this._lastPosition = internalState.lastPosition;
        this._lastVelocity = internalState.lastVelocity;
        this._lastTime = internalState.lastTime;
      }
      if (this._initialVelocity !== undefined && this._initialVelocity !== null) {
        this._lastVelocity = this._initialVelocity;
      }
      if (this._useNativeDriver) {
        this.__startNativeAnimation(animatedValue);
      } else {
        this.onUpdate();
      }
    }
  }, {
    key: 'getInternalState',
    value: function getInternalState() {
      return {
        lastPosition: this._lastPosition,
        lastVelocity: this._lastVelocity,
        lastTime: this._lastTime
      };
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var position = this._lastPosition;
      var velocity = this._lastVelocity;

      var tempPosition = this._lastPosition;
      var tempVelocity = this._lastVelocity;

      var MAX_STEPS = 64;
      var now = Date.now();
      if (now > this._lastTime + MAX_STEPS) {
        now = this._lastTime + MAX_STEPS;
      }

      var TIMESTEP_MSEC = 1;
      var numSteps = Math.floor((now - this._lastTime) / TIMESTEP_MSEC);

      for (var i = 0; i < numSteps; ++i) {
        var step = TIMESTEP_MSEC / 1000;

        var aVelocity = velocity;
        var aAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        var tempPosition = position + aVelocity * step / 2;
        var tempVelocity = velocity + aAcceleration * step / 2;

        var bVelocity = tempVelocity;
        var bAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        tempPosition = position + bVelocity * step / 2;
        tempVelocity = velocity + bAcceleration * step / 2;

        var cVelocity = tempVelocity;
        var cAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        tempPosition = position + cVelocity * step / 2;
        tempVelocity = velocity + cAcceleration * step / 2;

        var dVelocity = tempVelocity;
        var dAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        tempPosition = position + cVelocity * step / 2;
        tempVelocity = velocity + cAcceleration * step / 2;

        var dxdt = (aVelocity + 2 * (bVelocity + cVelocity) + dVelocity) / 6;
        var dvdt = (aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration) / 6;

        position += dxdt * step;
        velocity += dvdt * step;
      }

      this._lastTime = now;
      this._lastPosition = position;
      this._lastVelocity = velocity;

      this._onUpdate(position);
      if (!this.__active) {
        return;
      }

      var isOvershooting = false;
      if (this._overshootClamping && this._tension !== 0) {
        if (this._startPosition < this._toValue) {
          isOvershooting = position > this._toValue;
        } else {
          isOvershooting = position < this._toValue;
        }
      }
      var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;
      var isDisplacement = true;
      if (this._tension !== 0) {
        isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;
      }

      if (isOvershooting || isVelocity && isDisplacement) {
        if (this._tension !== 0) {
          this._onUpdate(this._toValue);
        }

        this.__debouncedOnEnd({ finished: true });
        return;
      }
      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(SpringAnimation.prototype.__proto__ || Object.getPrototypeOf(SpringAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return SpringAnimation;
}(Animation);

var _uniqueId = 1;

var AnimatedValue = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedValue, _AnimatedWithChildren);

  function AnimatedValue(value) {
    babelHelpers.classCallCheck(this, AnimatedValue);

    var _this6 = babelHelpers.possibleConstructorReturn(this, (AnimatedValue.__proto__ || Object.getPrototypeOf(AnimatedValue)).call(this));

    _this6._startingValue = _this6._value = value;
    _this6._offset = 0;
    _this6._animation = null;
    _this6._listeners = {};
    return _this6;
  }

  babelHelpers.createClass(AnimatedValue, [{
    key: '__detach',
    value: function __detach() {
      this.stopAnimation();
      babelHelpers.get(AnimatedValue.prototype.__proto__ || Object.getPrototypeOf(AnimatedValue.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._value + this._offset;
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedValue.prototype.__proto__ || Object.getPrototypeOf(AnimatedValue.prototype), '__makeNative', this).call(this);

      if (Object.keys(this._listeners).length) {
        this._startListeningToNativeValueUpdates();
      }
    }
  }, {
    key: 'setValue',
    value: function setValue(value) {
      if (this._animation) {
        this._animation.stop();
        this._animation = null;
      }
      this._updateValue(value, !this.__isNative);
      if (this.__isNative) {
        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);
      }
    }
  }, {
    key: 'setOffset',
    value: function setOffset(offset) {
      this._offset = offset;
      if (this.__isNative) {
        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);
      }
    }
  }, {
    key: 'flattenOffset',
    value: function flattenOffset() {
      this._value += this._offset;
      this._offset = 0;
      if (this.__isNative) {
        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());
      }
    }
  }, {
    key: 'extractOffset',
    value: function extractOffset() {
      this._offset += this._value;
      this._value = 0;
      if (this.__isNative) {
        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());
      }
    }
  }, {
    key: 'addListener',
    value: function addListener(callback) {
      var id = String(_uniqueId++);
      this._listeners[id] = callback;
      if (this.__isNative) {
        this._startListeningToNativeValueUpdates();
      }
      return id;
    }
  }, {
    key: 'removeListener',
    value: function removeListener(id) {
      delete this._listeners[id];
      if (this.__isNative && Object.keys(this._listeners).length === 0) {
        this._stopListeningForNativeValueUpdates();
      }
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this._listeners = {};
      if (this.__isNative) {
        this._stopListeningForNativeValueUpdates();
      }
    }
  }, {
    key: '_startListeningToNativeValueUpdates',
    value: function _startListeningToNativeValueUpdates() {
      var _this7 = this;

      if (this.__nativeAnimatedValueListener) {
        return;
      }

      NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());
      this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {
        if (data.tag !== _this7.__getNativeTag()) {
          return;
        }
        _this7._updateValue(data.value, false);
      });
    }
  }, {
    key: '_stopListeningForNativeValueUpdates',
    value: function _stopListeningForNativeValueUpdates() {
      if (!this.__nativeAnimatedValueListener) {
        return;
      }

      this.__nativeAnimatedValueListener.remove();
      this.__nativeAnimatedValueListener = null;
      NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());
    }
  }, {
    key: 'stopAnimation',
    value: function stopAnimation(callback) {
      this.stopTracking();
      this._animation && this._animation.stop();
      this._animation = null;
      callback && callback(this.__getValue());
    }
  }, {
    key: 'resetAnimation',
    value: function resetAnimation(callback) {
      this.stopAnimation(callback);
      this._value = this._startingValue;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: 'animate',
    value: function animate(animation, callback) {
      var _this8 = this;

      var handle = null;
      if (animation.__isInteraction) {
        handle = InteractionManager.createInteractionHandle();
      }
      var previousAnimation = this._animation;
      this._animation && this._animation.stop();
      this._animation = animation;
      animation.start(this._value, function (value) {
        _this8._updateValue(value, true);
      }, function (result) {
        _this8._animation = null;
        if (handle !== null) {
          InteractionManager.clearInteractionHandle(handle);
        }
        callback && callback(result);
      }, previousAnimation, this);
    }
  }, {
    key: 'stopTracking',
    value: function stopTracking() {
      this._tracking && this._tracking.__detach();
      this._tracking = null;
    }
  }, {
    key: 'track',
    value: function track(tracking) {
      this.stopTracking();
      this._tracking = tracking;
    }
  }, {
    key: '_updateValue',
    value: function _updateValue(value, flush) {
      this._value = value;
      if (flush) {
        _flush(this);
      }
      for (var key in this._listeners) {
        this._listeners[key]({ value: this.__getValue() });
      }
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'value',
        value: this._value,
        offset: this._offset
      };
    }
  }]);
  return AnimatedValue;
}(AnimatedWithChildren);

var AnimatedValueXY = function (_AnimatedWithChildren2) {
  babelHelpers.inherits(AnimatedValueXY, _AnimatedWithChildren2);

  function AnimatedValueXY(valueIn) {
    babelHelpers.classCallCheck(this, AnimatedValueXY);

    var _this9 = babelHelpers.possibleConstructorReturn(this, (AnimatedValueXY.__proto__ || Object.getPrototypeOf(AnimatedValueXY)).call(this));

    var value = valueIn || { x: 0, y: 0 };
    if (typeof value.x === 'number' && typeof value.y === 'number') {
      _this9.x = new AnimatedValue(value.x);
      _this9.y = new AnimatedValue(value.y);
    } else {
      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initalized with an object of numbers or ' + 'AnimatedValues.');
      _this9.x = value.x;
      _this9.y = value.y;
    }
    _this9._listeners = {};
    return _this9;
  }

  babelHelpers.createClass(AnimatedValueXY, [{
    key: 'setValue',
    value: function setValue(value) {
      this.x.setValue(value.x);
      this.y.setValue(value.y);
    }
  }, {
    key: 'setOffset',
    value: function setOffset(offset) {
      this.x.setOffset(offset.x);
      this.y.setOffset(offset.y);
    }
  }, {
    key: 'flattenOffset',
    value: function flattenOffset() {
      this.x.flattenOffset();
      this.y.flattenOffset();
    }
  }, {
    key: 'extractOffset',
    value: function extractOffset() {
      this.x.extractOffset();
      this.y.extractOffset();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return {
        x: this.x.__getValue(),
        y: this.y.__getValue()
      };
    }
  }, {
    key: 'resetAnimation',
    value: function resetAnimation(callback) {
      this.x.resetAnimation();
      this.y.resetAnimation();
      callback && callback(this.__getValue());
    }
  }, {
    key: 'stopAnimation',
    value: function stopAnimation(callback) {
      this.x.stopAnimation();
      this.y.stopAnimation();
      callback && callback(this.__getValue());
    }
  }, {
    key: 'addListener',
    value: function addListener(callback) {
      var _this10 = this;

      var id = String(_uniqueId++);
      var jointCallback = function jointCallback(_ref2) {
        var number = _ref2.value;

        callback(_this10.__getValue());
      };
      this._listeners[id] = {
        x: this.x.addListener(jointCallback),
        y: this.y.addListener(jointCallback)
      };
      return id;
    }
  }, {
    key: 'removeListener',
    value: function removeListener(id) {
      this.x.removeListener(this._listeners[id].x);
      this.y.removeListener(this._listeners[id].y);
      delete this._listeners[id];
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this.x.removeAllListeners();
      this.y.removeAllListeners();
      this._listeners = {};
    }
  }, {
    key: 'getLayout',
    value: function getLayout() {
      return {
        left: this.x,
        top: this.y
      };
    }
  }, {
    key: 'getTranslateTransform',
    value: function getTranslateTransform() {
      return [{ translateX: this.x }, { translateY: this.y }];
    }
  }]);
  return AnimatedValueXY;
}(AnimatedWithChildren);

var AnimatedInterpolation = function (_AnimatedWithChildren3) {
  babelHelpers.inherits(AnimatedInterpolation, _AnimatedWithChildren3);

  function AnimatedInterpolation(parent, config) {
    babelHelpers.classCallCheck(this, AnimatedInterpolation);

    var _this11 = babelHelpers.possibleConstructorReturn(this, (AnimatedInterpolation.__proto__ || Object.getPrototypeOf(AnimatedInterpolation)).call(this));

    _this11._parent = parent;
    _this11._config = config;
    _this11._interpolation = Interpolation.create(config);
    return _this11;
  }

  babelHelpers.createClass(AnimatedInterpolation, [{
    key: '__getValue',
    value: function __getValue() {
      var parentValue = this._parent.__getValue();
      invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');
      return this._interpolation(parentValue);
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._parent.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._parent.__removeChild(this);
      babelHelpers.get(AnimatedInterpolation.prototype.__proto__ || Object.getPrototypeOf(AnimatedInterpolation.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__transformDataType',
    value: function __transformDataType(range) {
      return range.map(function (value) {
        if (typeof value !== 'string') {
          return value;
        }
        if (/deg$/.test(value)) {
          var degrees = parseFloat(value) || 0;
          var radians = degrees * Math.PI / 180.0;
          return radians;
        } else {
          return parseFloat(value) || 0;
        }
      });
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      if (__DEV__) {
        NativeAnimatedHelper.validateInterpolation(this._config);
      }

      return {
        inputRange: this._config.inputRange,

        outputRange: this.__transformDataType(this._config.outputRange),
        extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',
        extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',
        type: 'interpolation'
      };
    }
  }]);
  return AnimatedInterpolation;
}(AnimatedWithChildren);

var AnimatedAddition = function (_AnimatedWithChildren4) {
  babelHelpers.inherits(AnimatedAddition, _AnimatedWithChildren4);

  function AnimatedAddition(a, b) {
    babelHelpers.classCallCheck(this, AnimatedAddition);

    var _this12 = babelHelpers.possibleConstructorReturn(this, (AnimatedAddition.__proto__ || Object.getPrototypeOf(AnimatedAddition)).call(this));

    _this12._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this12._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this12;
  }

  babelHelpers.createClass(AnimatedAddition, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedAddition.prototype.__proto__ || Object.getPrototypeOf(AnimatedAddition.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._a.__getValue() + this._b.__getValue();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedAddition.prototype.__proto__ || Object.getPrototypeOf(AnimatedAddition.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'addition',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedAddition;
}(AnimatedWithChildren);

var AnimatedDivision = function (_AnimatedWithChildren5) {
  babelHelpers.inherits(AnimatedDivision, _AnimatedWithChildren5);

  function AnimatedDivision(a, b) {
    babelHelpers.classCallCheck(this, AnimatedDivision);

    var _this13 = babelHelpers.possibleConstructorReturn(this, (AnimatedDivision.__proto__ || Object.getPrototypeOf(AnimatedDivision)).call(this));

    _this13._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this13._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this13;
  }

  babelHelpers.createClass(AnimatedDivision, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedDivision.prototype.__proto__ || Object.getPrototypeOf(AnimatedDivision.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var a = this._a.__getValue();
      var b = this._b.__getValue();
      if (b === 0) {
        console.error('Detected division by zero in AnimatedDivision');
      }
      return a / b;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedDivision.prototype.__proto__ || Object.getPrototypeOf(AnimatedDivision.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'division',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedDivision;
}(AnimatedWithChildren);

var AnimatedMultiplication = function (_AnimatedWithChildren6) {
  babelHelpers.inherits(AnimatedMultiplication, _AnimatedWithChildren6);

  function AnimatedMultiplication(a, b) {
    babelHelpers.classCallCheck(this, AnimatedMultiplication);

    var _this14 = babelHelpers.possibleConstructorReturn(this, (AnimatedMultiplication.__proto__ || Object.getPrototypeOf(AnimatedMultiplication)).call(this));

    _this14._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this14._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this14;
  }

  babelHelpers.createClass(AnimatedMultiplication, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedMultiplication.prototype.__proto__ || Object.getPrototypeOf(AnimatedMultiplication.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._a.__getValue() * this._b.__getValue();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedMultiplication.prototype.__proto__ || Object.getPrototypeOf(AnimatedMultiplication.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'multiplication',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedMultiplication;
}(AnimatedWithChildren);

var AnimatedModulo = function (_AnimatedWithChildren7) {
  babelHelpers.inherits(AnimatedModulo, _AnimatedWithChildren7);

  function AnimatedModulo(a, modulus) {
    babelHelpers.classCallCheck(this, AnimatedModulo);

    var _this15 = babelHelpers.possibleConstructorReturn(this, (AnimatedModulo.__proto__ || Object.getPrototypeOf(AnimatedModulo)).call(this));

    _this15._a = a;
    _this15._modulus = modulus;
    return _this15;
  }

  babelHelpers.createClass(AnimatedModulo, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      babelHelpers.get(AnimatedModulo.prototype.__proto__ || Object.getPrototypeOf(AnimatedModulo.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return (this._a.__getValue() % this._modulus + this._modulus) % this._modulus;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      babelHelpers.get(AnimatedModulo.prototype.__proto__ || Object.getPrototypeOf(AnimatedModulo.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'modulus',
        input: this._a.__getNativeTag(),
        modulus: this._modulus
      };
    }
  }]);
  return AnimatedModulo;
}(AnimatedWithChildren);

var AnimatedDiffClamp = function (_AnimatedWithChildren8) {
  babelHelpers.inherits(AnimatedDiffClamp, _AnimatedWithChildren8);

  function AnimatedDiffClamp(a, min, max) {
    babelHelpers.classCallCheck(this, AnimatedDiffClamp);

    var _this16 = babelHelpers.possibleConstructorReturn(this, (AnimatedDiffClamp.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp)).call(this));

    _this16._a = a;
    _this16._min = min;
    _this16._max = max;
    _this16._value = _this16._lastValue = _this16._a.__getValue();
    return _this16;
  }

  babelHelpers.createClass(AnimatedDiffClamp, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      babelHelpers.get(AnimatedDiffClamp.prototype.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var value = this._a.__getValue();
      var diff = value - this._lastValue;
      this._lastValue = value;
      this._value = Math.min(Math.max(this._value + diff, this._min), this._max);
      return this._value;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      babelHelpers.get(AnimatedDiffClamp.prototype.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'diffclamp',
        input: this._a.__getNativeTag(),
        min: this._min,
        max: this._max
      };
    }
  }]);
  return AnimatedDiffClamp;
}(AnimatedWithChildren);

var AnimatedTransform = function (_AnimatedWithChildren9) {
  babelHelpers.inherits(AnimatedTransform, _AnimatedWithChildren9);

  function AnimatedTransform(transforms) {
    babelHelpers.classCallCheck(this, AnimatedTransform);

    var _this17 = babelHelpers.possibleConstructorReturn(this, (AnimatedTransform.__proto__ || Object.getPrototypeOf(AnimatedTransform)).call(this));

    _this17._transforms = transforms;
    return _this17;
  }

  babelHelpers.createClass(AnimatedTransform, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedTransform.prototype.__proto__ || Object.getPrototypeOf(AnimatedTransform.prototype), '__makeNative', this).call(this);
      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            value.__makeNative();
          }
        }
      });
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._transforms.map(function (transform) {
        var result = {};
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            result[key] = value.__getValue();
          } else {
            result[key] = value;
          }
        }
        return result;
      });
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this._transforms.map(function (transform) {
        var result = {};
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            result[key] = value.__getAnimatedValue();
          } else {
            result[key] = value;
          }
        }
        return result;
      });
    }
  }, {
    key: '__attach',
    value: function __attach() {
      var _this18 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            value.__addChild(_this18);
          }
        }
      });
    }
  }, {
    key: '__detach',
    value: function __detach() {
      var _this19 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            value.__removeChild(_this19);
          }
        }
      });
      babelHelpers.get(AnimatedTransform.prototype.__proto__ || Object.getPrototypeOf(AnimatedTransform.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var transConfigs = [];

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            transConfigs.push({
              type: 'animated',
              property: key,
              nodeTag: value.__getNativeTag()
            });
          } else {
            transConfigs.push({
              type: 'static',
              property: key,
              value: value
            });
          }
        }
      });

      NativeAnimatedHelper.validateTransform(transConfigs);
      return {
        type: 'transform',
        transforms: transConfigs
      };
    }
  }]);
  return AnimatedTransform;
}(AnimatedWithChildren);

var AnimatedStyle = function (_AnimatedWithChildren10) {
  babelHelpers.inherits(AnimatedStyle, _AnimatedWithChildren10);

  function AnimatedStyle(style) {
    babelHelpers.classCallCheck(this, AnimatedStyle);

    var _this20 = babelHelpers.possibleConstructorReturn(this, (AnimatedStyle.__proto__ || Object.getPrototypeOf(AnimatedStyle)).call(this));

    style = flattenStyle(style) || {};
    if (style.transform) {
      style = babelHelpers.extends({}, style, {
        transform: new AnimatedTransform(style.transform)
      });
    }
    _this20._style = style;
    return _this20;
  }

  babelHelpers.createClass(AnimatedStyle, [{
    key: '__walkStyleAndGetValues',
    value: function __walkStyleAndGetValues(style) {
      var updatedStyle = {};
      for (var _key in style) {
        var _value = style[_key];
        if (_value instanceof Animated) {
          if (!_value.__isNative) {
            updatedStyle[_key] = _value.__getValue();
          }
        } else if (_value && !Array.isArray(_value) && typeof _value === 'object') {
          updatedStyle[_key] = this.__walkStyleAndGetValues(_value);
        } else {
          updatedStyle[_key] = _value;
        }
      }
      return updatedStyle;
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this.__walkStyleAndGetValues(this._style);
    }
  }, {
    key: '__walkStyleAndGetAnimatedValues',
    value: function __walkStyleAndGetAnimatedValues(style) {
      var updatedStyle = {};
      for (var _key2 in style) {
        var _value2 = style[_key2];
        if (_value2 instanceof Animated) {
          updatedStyle[_key2] = _value2.__getAnimatedValue();
        } else if (_value2 && !Array.isArray(_value2) && typeof _value2 === 'object') {
          updatedStyle[_key2] = this.__walkStyleAndGetAnimatedValues(_value2);
        }
      }
      return updatedStyle;
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this.__walkStyleAndGetAnimatedValues(this._style);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          value.__addChild(this);
        }
      }
    }
  }, {
    key: '__detach',
    value: function __detach() {
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          value.__removeChild(this);
        }
      }
      babelHelpers.get(AnimatedStyle.prototype.__proto__ || Object.getPrototypeOf(AnimatedStyle.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedStyle.prototype.__proto__ || Object.getPrototypeOf(AnimatedStyle.prototype), '__makeNative', this).call(this);
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          value.__makeNative();
        }
      }
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var styleConfig = {};
      for (var styleKey in this._style) {
        if (this._style[styleKey] instanceof Animated) {
          styleConfig[styleKey] = this._style[styleKey].__getNativeTag();
        }
      }
      NativeAnimatedHelper.validateStyles(styleConfig);
      return {
        type: 'style',
        style: styleConfig
      };
    }
  }]);
  return AnimatedStyle;
}(AnimatedWithChildren);

var AnimatedProps = function (_Animated2) {
  babelHelpers.inherits(AnimatedProps, _Animated2);

  function AnimatedProps(props, callback) {
    babelHelpers.classCallCheck(this, AnimatedProps);

    var _this21 = babelHelpers.possibleConstructorReturn(this, (AnimatedProps.__proto__ || Object.getPrototypeOf(AnimatedProps)).call(this));

    if (props.style) {
      props = babelHelpers.extends({}, props, {
        style: new AnimatedStyle(props.style)
      });
    }
    _this21._props = props;
    _this21._callback = callback;
    _this21.__attach();
    return _this21;
  }

  babelHelpers.createClass(AnimatedProps, [{
    key: '__getValue',
    value: function __getValue() {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          if (!value.__isNative || value instanceof AnimatedStyle) {
            props[key] = value.__getValue();
          }
        } else if (value instanceof AnimatedEvent) {
          props[key] = value.__getHandler();
        } else {
          props[key] = value;
        }
      }
      return props;
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          props[key] = value.__getAnimatedValue();
        }
      }
      return props;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          value.__addChild(this);
        }
      }
    }
  }, {
    key: '__detach',
    value: function __detach() {
      if (this.__isNative && this._animatedView) {
        this.__disconnectAnimatedView();
      }
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          value.__removeChild(this);
        }
      }
      babelHelpers.get(AnimatedProps.prototype.__proto__ || Object.getPrototypeOf(AnimatedProps.prototype), '__detach', this).call(this);
    }
  }, {
    key: 'update',
    value: function update() {
      this._callback();
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var key in this._props) {
          var value = this._props[key];
          if (value instanceof Animated) {
            value.__makeNative();
          }
        }
        if (this._animatedView) {
          this.__connectAnimatedView();
        }
      }
    }
  }, {
    key: 'setNativeView',
    value: function setNativeView(animatedView) {
      if (this._animatedView === animatedView) {
        return;
      }
      this._animatedView = animatedView;
      if (this.__isNative) {
        this.__connectAnimatedView();
      }
    }
  }, {
    key: '__connectAnimatedView',
    value: function __connectAnimatedView() {
      invariant(this.__isNative, 'Expected node to be marked as "native"');
      var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);
      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
      NativeAnimatedAPI.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);
    }
  }, {
    key: '__disconnectAnimatedView',
    value: function __disconnectAnimatedView() {
      invariant(this.__isNative, 'Expected node to be marked as "native"');
      var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);
      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
      NativeAnimatedAPI.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var propsConfig = {};
      for (var propKey in this._props) {
        var value = this._props[propKey];
        if (value instanceof Animated) {
          propsConfig[propKey] = value.__getNativeTag();
        }
      }
      return {
        type: 'props',
        props: propsConfig
      };
    }
  }]);
  return AnimatedProps;
}(Animated);

function createAnimatedComponent(Component) {
  var AnimatedComponent = function (_React$Component) {
    babelHelpers.inherits(AnimatedComponent, _React$Component);

    function AnimatedComponent(props) {
      babelHelpers.classCallCheck(this, AnimatedComponent);

      var _this22 = babelHelpers.possibleConstructorReturn(this, (AnimatedComponent.__proto__ || Object.getPrototypeOf(AnimatedComponent)).call(this, props));

      _this22._eventDetachers = [];

      _this22._setComponentRef = _this22._setComponentRef.bind(_this22);
      return _this22;
    }

    babelHelpers.createClass(AnimatedComponent, [{
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._propsAnimated && this._propsAnimated.__detach();
        this._detachNativeEvents();
      }
    }, {
      key: 'setNativeProps',
      value: function setNativeProps(props) {
        this._component.setNativeProps(props);
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._attachProps(this.props);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._propsAnimated.setNativeView(this._component);
        this._attachNativeEvents();
      }
    }, {
      key: '_attachNativeEvents',
      value: function _attachNativeEvents() {
        var _this23 = this;

        var scrollableNode = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;

        var _loop = function _loop(_key3) {
          var prop = _this23.props[_key3];
          if (prop instanceof AnimatedEvent && prop.__isNative) {
            prop.__attach(scrollableNode, _key3);
            _this23._eventDetachers.push(function () {
              return prop.__detach(scrollableNode, _key3);
            });
          }
        };

        for (var _key3 in this.props) {
          _loop(_key3);
        }
      }
    }, {
      key: '_detachNativeEvents',
      value: function _detachNativeEvents() {
        this._eventDetachers.forEach(function (remove) {
          return remove();
        });
        this._eventDetachers = [];
      }
    }, {
      key: '_attachProps',
      value: function _attachProps(nextProps) {
        var _this24 = this;

        var oldPropsAnimated = this._propsAnimated;

        var callback = function callback() {
          if (_this24._component.setNativeProps) {
            if (!_this24._propsAnimated.__isNative) {
              _this24._component.setNativeProps(_this24._propsAnimated.__getAnimatedValue());
            } else {
              throw new Error('Attempting to run JS driven animation on animated ' + 'node that has been moved to "native" earlier by starting an ' + 'animation with `useNativeDriver: true`');
            }
          } else {
            _this24.forceUpdate();
          }
        };

        this._propsAnimated = new AnimatedProps(nextProps, callback);

        oldPropsAnimated && oldPropsAnimated.__detach();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(newProps) {
        this._attachProps(newProps);
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        if (this._component !== this._prevComponent) {
          this._propsAnimated.setNativeView(this._component);
        }
        if (this._component !== this._prevComponent || prevProps !== this.props) {
          this._detachNativeEvents();
          this._attachNativeEvents();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var props = this._propsAnimated.__getValue();
        return React.createElement(Component, babelHelpers.extends({}, props, {
          ref: this._setComponentRef,

          collapsable: this._propsAnimated.__isNative ? false : props.collapsable,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 1844
          }
        }));
      }
    }, {
      key: '_setComponentRef',
      value: function _setComponentRef(c) {
        this._prevComponent = this._component;
        this._component = c;
      }
    }, {
      key: 'getNode',
      value: function getNode() {
        return this._component;
      }
    }]);
    return AnimatedComponent;
  }(React.Component);

  var propTypes = Component.__propTypesSecretDontUseThesePlease || Component.propTypes;

  AnimatedComponent.propTypes = {
    style: function style(props, propName, componentName) {
      if (!propTypes) {
        return;
      }

      for (var key in ViewStylePropTypes) {
        if (!propTypes[key] && props[key] !== undefined) {
          console.warn('You are setting the style `{ ' + key + ': ... }` as a prop. You ' + 'should nest it in a style object. ' + 'E.g. `{ style: { ' + key + ': ... } }`');
        }
      }
    }
  };

  return AnimatedComponent;
}

var AnimatedTracking = function (_Animated3) {
  babelHelpers.inherits(AnimatedTracking, _Animated3);

  function AnimatedTracking(value, parent, animationClass, animationConfig, callback) {
    babelHelpers.classCallCheck(this, AnimatedTracking);

    var _this25 = babelHelpers.possibleConstructorReturn(this, (AnimatedTracking.__proto__ || Object.getPrototypeOf(AnimatedTracking)).call(this));

    _this25._value = value;
    _this25._parent = parent;
    _this25._animationClass = animationClass;
    _this25._animationConfig = animationConfig;
    _this25._callback = callback;
    _this25.__attach();
    return _this25;
  }

  babelHelpers.createClass(AnimatedTracking, [{
    key: '__getValue',
    value: function __getValue() {
      return this._parent.__getValue();
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._parent.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._parent.__removeChild(this);
      babelHelpers.get(AnimatedTracking.prototype.__proto__ || Object.getPrototypeOf(AnimatedTracking.prototype), '__detach', this).call(this);
    }
  }, {
    key: 'update',
    value: function update() {
      this._value.animate(new this._animationClass(babelHelpers.extends({}, this._animationConfig, {
        toValue: this._animationConfig.toValue.__getValue()
      })), this._callback);
    }
  }]);
  return AnimatedTracking;
}(Animated);

var add = function add(a, b) {
  return new AnimatedAddition(a, b);
};

var divide = function divide(a, b) {
  return new AnimatedDivision(a, b);
};

var multiply = function multiply(a, b) {
  return new AnimatedMultiplication(a, b);
};

var modulo = function modulo(a, modulus) {
  return new AnimatedModulo(a, modulus);
};

var diffClamp = function diffClamp(a, min, max) {
  return new AnimatedDiffClamp(a, min, max);
};

var _combineCallbacks = function _combineCallbacks(callback, config) {
  if (callback && config.onComplete) {
    return function () {
      config.onComplete && config.onComplete.apply(config, arguments);
      callback && callback.apply(undefined, arguments);
    };
  } else {
    return callback || config.onComplete;
  }
};

var maybeVectorAnim = function maybeVectorAnim(value, config, anim) {
  if (value instanceof AnimatedValueXY) {
    var configX = babelHelpers.extends({}, config);
    var configY = babelHelpers.extends({}, config);
    for (var key in config) {
      var _config$key = config[key],
          x = _config$key.x,
          y = _config$key.y;

      if (x !== undefined && y !== undefined) {
        configX[key] = x;
        configY[key] = y;
      }
    }
    var aX = anim(value.x, configX);
    var aY = anim(value.y, configY);

    return parallel([aX, aY], { stopTogether: false });
  }
  return null;
};

var spring = function spring(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    if (configuration.toValue instanceof Animated) {
      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));
    } else {
      singleValue.animate(new SpringAnimation(singleConfig), callback);
    }
  };
  return maybeVectorAnim(value, config, spring) || {
    start: function (_start) {
      function start(_x) {
        return _start.apply(this, arguments);
      }

      start.toString = function () {
        return _start.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var timing = function timing(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    if (configuration.toValue instanceof Animated) {
      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));
    } else {
      singleValue.animate(new TimingAnimation(singleConfig), callback);
    }
  };

  return maybeVectorAnim(value, config, timing) || {
    start: function (_start2) {
      function start(_x2) {
        return _start2.apply(this, arguments);
      }

      start.toString = function () {
        return _start2.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var decay = function decay(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    singleValue.animate(new DecayAnimation(singleConfig), callback);
  };

  return maybeVectorAnim(value, config, decay) || {
    start: function (_start3) {
      function start(_x3) {
        return _start3.apply(this, arguments);
      }

      start.toString = function () {
        return _start3.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var sequence = function sequence(animations) {
  var current = 0;
  return {
    start: function start(callback) {
      var onComplete = function onComplete(result) {
        if (!result.finished) {
          callback && callback(result);
          return;
        }

        current++;

        if (current === animations.length) {
          callback && callback(result);
          return;
        }

        animations[current].start(onComplete);
      };

      if (animations.length === 0) {
        callback && callback({ finished: true });
      } else {
        animations[current].start(onComplete);
      }
    },

    stop: function stop() {
      if (current < animations.length) {
        animations[current].stop();
      }
    },

    reset: function reset() {
      animations.forEach(function (animation, idx) {
        if (idx <= current) {
          animation.reset();
        }
      });
      current = 0;
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };
};

var parallel = function parallel(animations, config) {
  var doneCount = 0;

  var hasEnded = {};
  var stopTogether = !(config && config.stopTogether === false);

  var result = {
    start: function start(callback) {
      if (doneCount === animations.length) {
        callback && callback({ finished: true });
        return;
      }

      animations.forEach(function (animation, idx) {
        var cb = function cb(endResult) {
          hasEnded[idx] = true;
          doneCount++;
          if (doneCount === animations.length) {
            doneCount = 0;
            callback && callback(endResult);
            return;
          }

          if (!endResult.finished && stopTogether) {
            result.stop();
          }
        };

        if (!animation) {
          cb({ finished: true });
        } else {
          animation.start(cb);
        }
      });
    },

    stop: function stop() {
      animations.forEach(function (animation, idx) {
        !hasEnded[idx] && animation.stop();
        hasEnded[idx] = true;
      });
    },

    reset: function reset() {
      animations.forEach(function (animation, idx) {
        animation.reset();
        hasEnded[idx] = false;
        doneCount = 0;
      });
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  return result;
};

var delay = function delay(time) {
  return timing(new AnimatedValue(0), { toValue: 0, delay: time, duration: 0 });
};

var stagger = function stagger(time, animations) {
  return parallel(animations.map(function (animation, i) {
    return sequence([delay(time * i), animation]);
  }));
};

var loop = function loop(animation) {
  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref3$iterations = _ref3.iterations,
      iterations = _ref3$iterations === undefined ? -1 : _ref3$iterations;

  var isFinished = false;
  var iterationsSoFar = 0;
  return {
    start: function start(callback) {
      var restart = function restart() {
        var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { finished: true };

        if (isFinished || iterationsSoFar === iterations || result.finished === false) {
          callback && callback(result);
        } else {
          iterationsSoFar++;
          animation.reset();
          animation.start(restart);
        }
      };
      if (!animation || iterations === 0) {
        callback && callback({ finished: true });
      } else {
        if (animation._isUsingNativeDriver()) {
          animation._startNativeLoop(iterations);
        } else {
          restart();
        }
      }
    },

    stop: function stop() {
      isFinished = true;
      animation.stop();
    },

    reset: function reset() {
      iterationsSoFar = 0;
      isFinished = false;
      animation.reset();
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return animation._isUsingNativeDriver();
    }
  };
};

function attachNativeEvent(viewRef, eventName, argMapping) {
  var eventMappings = [];

  var traverse = function traverse(value, path) {
    if (value instanceof AnimatedValue) {
      value.__makeNative();

      eventMappings.push({
        nativeEventPath: path,
        animatedValueTag: value.__getNativeTag()
      });
    } else if (typeof value === 'object') {
      for (var _key4 in value) {
        traverse(value[_key4], path.concat(_key4));
      }
    }
  };

  invariant(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');

  traverse(argMapping[0].nativeEvent, []);

  var viewTag = ReactNative.findNodeHandle(viewRef);

  eventMappings.forEach(function (mapping) {
    NativeAnimatedAPI.addAnimatedEventToView(viewTag, eventName, mapping);
  });

  return {
    detach: function detach() {
      eventMappings.forEach(function (mapping) {
        NativeAnimatedAPI.removeAnimatedEventFromView(viewTag, eventName, mapping.animatedValueTag);
      });
    }
  };
}

function forkEvent(event, listener) {
  if (!event) {
    return listener;
  } else if (event instanceof AnimatedEvent) {
    event.__addListener(listener);
    return event;
  } else {
    return function () {
      typeof event === 'function' && event.apply(undefined, arguments);
      listener.apply(undefined, arguments);
    };
  }
}

function unforkEvent(event, listener) {
  if (event && event instanceof AnimatedEvent) {
    event.__removeListener(listener);
  }
}

var AnimatedEvent = function () {
  function AnimatedEvent(argMapping) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    babelHelpers.classCallCheck(this, AnimatedEvent);
    this._listeners = [];

    this._argMapping = argMapping;
    if (config.listener) {
      this.__addListener(config.listener);
    }
    this._callListeners = this._callListeners.bind(this);
    this._attachedEvent = null;
    this.__isNative = shouldUseNativeDriver(config);

    if (__DEV__) {
      this._validateMapping();
    }
  }

  babelHelpers.createClass(AnimatedEvent, [{
    key: '__addListener',
    value: function __addListener(callback) {
      this._listeners.push(callback);
    }
  }, {
    key: '__removeListener',
    value: function __removeListener(callback) {
      this._listeners = this._listeners.filter(function (listener) {
        return listener !== callback;
      });
    }
  }, {
    key: '__attach',
    value: function __attach(viewRef, eventName) {
      invariant(this.__isNative, 'Only native driven events need to be attached.');

      this._attachedEvent = attachNativeEvent(viewRef, eventName, this._argMapping);
    }
  }, {
    key: '__detach',
    value: function __detach(viewTag, eventName) {
      invariant(this.__isNative, 'Only native driven events need to be detached.');

      this._attachedEvent && this._attachedEvent.detach();
    }
  }, {
    key: '__getHandler',
    value: function __getHandler() {
      var _this26 = this;

      if (this.__isNative) {
        return this._callListeners;
      }

      return function () {
        for (var _len = arguments.length, args = Array(_len), _key5 = 0; _key5 < _len; _key5++) {
          args[_key5] = arguments[_key5];
        }

        var traverse = function traverse(recMapping, recEvt, key) {
          if (typeof recEvt === 'number' && recMapping instanceof AnimatedValue) {
            recMapping.setValue(recEvt);
          } else if (typeof recMapping === 'object') {
            for (var mappingKey in recMapping) {
              traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
            }
          }
        };

        if (!_this26.__isNative) {
          _this26._argMapping.forEach(function (mapping, idx) {
            traverse(mapping, args[idx], 'arg' + idx);
          });
        }
        _this26._callListeners.apply(_this26, args);
      };
    }
  }, {
    key: '_callListeners',
    value: function _callListeners() {
      for (var _len2 = arguments.length, args = Array(_len2), _key6 = 0; _key6 < _len2; _key6++) {
        args[_key6] = arguments[_key6];
      }

      this._listeners.forEach(function (listener) {
        return listener.apply(undefined, args);
      });
    }
  }, {
    key: '_validateMapping',
    value: function _validateMapping() {
      var traverse = function traverse(recMapping, recEvt, key) {
        if (typeof recEvt === 'number') {
          invariant(recMapping instanceof AnimatedValue, 'Bad mapping of type ' + typeof recMapping + ' for key ' + key + ', event value must map to AnimatedValue');
          return;
        }
        invariant(typeof recMapping === 'object', 'Bad mapping of type ' + typeof recMapping + ' for key ' + key);
        invariant(typeof recEvt === 'object', 'Bad event of type ' + typeof recEvt + ' for key ' + key);
        for (var mappingKey in recMapping) {
          traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
        }
      };
    }
  }]);
  return AnimatedEvent;
}();

var event = function event(argMapping, config) {
  var animatedEvent = new AnimatedEvent(argMapping, config);
  if (animatedEvent.__isNative) {
    return animatedEvent;
  } else {
    return animatedEvent.__getHandler();
  }
};

module.exports = {
  Value: AnimatedValue,

  ValueXY: AnimatedValueXY,

  Interpolation: AnimatedInterpolation,

  decay: decay,

  timing: timing,

  spring: spring,

  add: add,

  divide: divide,

  multiply: multiply,

  modulo: modulo,

  diffClamp: diffClamp,

  delay: delay,

  sequence: sequence,

  parallel: parallel,

  stagger: stagger,

  loop: loop,

  event: event,

  createAnimatedComponent: createAnimatedComponent,

  attachNativeEvent: attachNativeEvent,

  forkEvent: forkEvent,
  unforkEvent: unforkEvent,

  __PropsOnlyForTests: AnimatedProps
};
}, 190, null, "AnimatedImplementation");
__d(/* InteractionManager */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(29             ); // 29 = BatchedBridge
var EventEmitter = require(45            ); // 45 = EventEmitter
var Set = require(78   ); // 78 = Set
var TaskQueue = require(192        ); // 192 = TaskQueue

var infoLog = require(108      ); // 108 = infoLog
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var keyMirror = require(129                 ); // 129 = fbjs/lib/keyMirror

var _emitter = new EventEmitter();

var DEBUG_DELAY = 0;
var DEBUG = false;

var InteractionManager = {
  Events: keyMirror({
    interactionStart: true,
    interactionComplete: true
  }),

  runAfterInteractions: function runAfterInteractions(task) {
    var tasks = [];
    var promise = new Promise(function (resolve) {
      _scheduleUpdate();
      if (task) {
        tasks.push(task);
      }
      tasks.push({ run: resolve, name: 'resolve ' + (task && task.name || '?') });
      _taskQueue.enqueueTasks(tasks);
    });
    return {
      then: promise.then.bind(promise),
      done: function done() {
        if (promise.done) {
          return promise.done.apply(promise, arguments);
        } else {
          console.warn('Tried to call done when not supported by current Promise implementation.');
        }
      },
      cancel: function cancel() {
        _taskQueue.cancelTasks(tasks);
      }
    };
  },
  createInteractionHandle: function createInteractionHandle() {
    DEBUG && infoLog('create interaction handle');
    _scheduleUpdate();
    var handle = ++_inc;
    _addInteractionSet.add(handle);
    return handle;
  },
  clearInteractionHandle: function clearInteractionHandle(handle) {
    DEBUG && infoLog('clear interaction handle');
    invariant(!!handle, 'Must provide a handle to clear.');
    _scheduleUpdate();
    _addInteractionSet.delete(handle);
    _deleteInteractionSet.add(handle);
  },


  addListener: _emitter.addListener.bind(_emitter),

  setDeadline: function setDeadline(deadline) {
    _deadline = deadline;
  }
};

var _interactionSet = new Set();
var _addInteractionSet = new Set();
var _deleteInteractionSet = new Set();
var _taskQueue = new TaskQueue({ onMoreTasks: _scheduleUpdate });
var _nextUpdateHandle = 0;
var _inc = 0;
var _deadline = -1;

function _scheduleUpdate() {
  if (!_nextUpdateHandle) {
    if (_deadline > 0) {
      _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);
    } else {
      _nextUpdateHandle = setImmediate(_processUpdate);
    }
  }
}

function _processUpdate() {
  _nextUpdateHandle = 0;

  var interactionCount = _interactionSet.size;
  _addInteractionSet.forEach(function (handle) {
    return _interactionSet.add(handle);
  });
  _deleteInteractionSet.forEach(function (handle) {
    return _interactionSet.delete(handle);
  });
  var nextInteractionCount = _interactionSet.size;

  if (interactionCount !== 0 && nextInteractionCount === 0) {
    _emitter.emit(InteractionManager.Events.interactionComplete);
  } else if (interactionCount === 0 && nextInteractionCount !== 0) {
    _emitter.emit(InteractionManager.Events.interactionStart);
  }

  if (nextInteractionCount === 0) {
    while (_taskQueue.hasTasksToProcess()) {
      _taskQueue.processNext();
      if (_deadline > 0 && BatchedBridge.getEventLoopRunningTime() >= _deadline) {
        _scheduleUpdate();
        break;
      }
    }
  }
  _addInteractionSet.clear();
  _deleteInteractionSet.clear();
}

module.exports = InteractionManager;
}, 191, null, "InteractionManager");
__d(/* TaskQueue */function(global, require, module, exports) {
'use strict';

var infoLog = require(108      ); // 108 = infoLog
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var DEBUG = false;

var TaskQueue = function () {
  function TaskQueue(_ref) {
    var onMoreTasks = _ref.onMoreTasks;
    babelHelpers.classCallCheck(this, TaskQueue);

    this._onMoreTasks = onMoreTasks;
    this._queueStack = [{ tasks: [], popable: false }];
  }

  babelHelpers.createClass(TaskQueue, [{
    key: 'enqueue',
    value: function enqueue(task) {
      this._getCurrentQueue().push(task);
    }
  }, {
    key: 'enqueueTasks',
    value: function enqueueTasks(tasks) {
      var _this = this;

      tasks.forEach(function (task) {
        return _this.enqueue(task);
      });
    }
  }, {
    key: 'cancelTasks',
    value: function cancelTasks(tasksToCancel) {
      this._queueStack = this._queueStack.map(function (queue) {
        return babelHelpers.extends({}, queue, {
          tasks: queue.tasks.filter(function (task) {
            return tasksToCancel.indexOf(task) === -1;
          })
        });
      }).filter(function (queue, idx) {
        return queue.tasks.length > 0 || idx === 0;
      });
    }
  }, {
    key: 'hasTasksToProcess',
    value: function hasTasksToProcess() {
      return this._getCurrentQueue().length > 0;
    }
  }, {
    key: 'processNext',
    value: function processNext() {
      var queue = this._getCurrentQueue();
      if (queue.length) {
        var task = queue.shift();
        try {
          if (task.gen) {
            DEBUG && infoLog('genPromise for task ' + task.name);
            this._genPromise(task);
          } else if (task.run) {
            DEBUG && infoLog('run task ' + task.name);
            task.run();
          } else {
            invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\n' + JSON.stringify(task, null, 2));
            DEBUG && infoLog('run anonymous task');
            task();
          }
        } catch (e) {
          e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;
          throw e;
        }
      }
    }
  }, {
    key: '_getCurrentQueue',
    value: function _getCurrentQueue() {
      var stackIdx = this._queueStack.length - 1;
      var queue = this._queueStack[stackIdx];
      if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {
        this._queueStack.pop();
        DEBUG && infoLog('popped queue: ', { stackIdx: stackIdx, queueStackSize: this._queueStack.length });
        return this._getCurrentQueue();
      } else {
        return queue.tasks;
      }
    }
  }, {
    key: '_genPromise',
    value: function _genPromise(task) {
      var _this2 = this;

      this._queueStack.push({ tasks: [], popable: false });
      var stackIdx = this._queueStack.length - 1;
      DEBUG && infoLog('push new queue: ', { stackIdx: stackIdx });
      DEBUG && infoLog('exec gen task ' + task.name);
      task.gen().then(function () {
        DEBUG && infoLog('onThen for gen task ' + task.name, { stackIdx: stackIdx, queueStackSize: _this2._queueStack.length });
        _this2._queueStack[stackIdx].popable = true;
        _this2.hasTasksToProcess() && _this2._onMoreTasks();
      }).catch(function (ex) {
        ex.message = 'TaskQueue: Error resolving Promise in task ' + task.name + ': ' + ex.message;
        throw ex;
      }).done();
    }
  }]);
  return TaskQueue;
}();

module.exports = TaskQueue;
}, 192, null, "TaskQueue");
__d(/* Interpolation */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var normalizeColor = require(60              ); // 60 = normalizeColor

var linear = function linear(t) {
  return t;
};

var Interpolation = function () {
  function Interpolation() {
    babelHelpers.classCallCheck(this, Interpolation);
  }

  babelHelpers.createClass(Interpolation, null, [{
    key: 'create',
    value: function create(config) {

      if (config.outputRange && typeof config.outputRange[0] === 'string') {
        return createInterpolationFromStringOutputRange(config);
      }

      var outputRange = config.outputRange;
      checkInfiniteRange('outputRange', outputRange);

      var inputRange = config.inputRange;
      checkInfiniteRange('inputRange', inputRange);
      checkValidInputRange(inputRange);

      invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');

      var easing = config.easing || linear;

      var extrapolateLeft = 'extend';
      if (config.extrapolateLeft !== undefined) {
        extrapolateLeft = config.extrapolateLeft;
      } else if (config.extrapolate !== undefined) {
        extrapolateLeft = config.extrapolate;
      }

      var extrapolateRight = 'extend';
      if (config.extrapolateRight !== undefined) {
        extrapolateRight = config.extrapolateRight;
      } else if (config.extrapolate !== undefined) {
        extrapolateRight = config.extrapolate;
      }

      return function (input) {
        invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');

        var range = findRange(input, inputRange);
        return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);
      };
    }
  }]);
  return Interpolation;
}();

function interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {
  var result = input;

  if (result < inputMin) {
    if (extrapolateLeft === 'identity') {
      return result;
    } else if (extrapolateLeft === 'clamp') {
      result = inputMin;
    } else if (extrapolateLeft === 'extend') {}
  }

  if (result > inputMax) {
    if (extrapolateRight === 'identity') {
      return result;
    } else if (extrapolateRight === 'clamp') {
      result = inputMax;
    } else if (extrapolateRight === 'extend') {}
  }

  if (outputMin === outputMax) {
    return outputMin;
  }

  if (inputMin === inputMax) {
    if (input <= inputMin) {
      return outputMin;
    }
    return outputMax;
  }

  if (inputMin === -Infinity) {
    result = -result;
  } else if (inputMax === Infinity) {
    result = result - inputMin;
  } else {
    result = (result - inputMin) / (inputMax - inputMin);
  }

  result = easing(result);

  if (outputMin === -Infinity) {
    result = -result;
  } else if (outputMax === Infinity) {
    result = result + outputMin;
  } else {
    result = result * (outputMax - outputMin) + outputMin;
  }

  return result;
}

function colorToRgba(input) {
  var int32Color = normalizeColor(input);
  if (int32Color === null) {
    return input;
  }

  int32Color = int32Color || 0;

  var r = (int32Color & 0xff000000) >>> 24;
  var g = (int32Color & 0x00ff0000) >>> 16;
  var b = (int32Color & 0x0000ff00) >>> 8;
  var a = (int32Color & 0x000000ff) / 255;

  return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')';
}

var stringShapeRegex = /[0-9\.-]+/g;

function createInterpolationFromStringOutputRange(config) {
  var outputRange = config.outputRange;
  invariant(outputRange.length >= 2, 'Bad output range');
  outputRange = outputRange.map(colorToRgba);
  checkPattern(outputRange);

  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {
    return [];
  });
  outputRange.forEach(function (value) {
    value.match(stringShapeRegex).forEach(function (number, i) {
      outputRanges[i].push(+number);
    });
  });

  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {
    return Interpolation.create(babelHelpers.extends({}, config, {
      outputRange: outputRanges[i]
    }));
  });

  var shouldRound = isRgbOrRgba(outputRange[0]);

  return function (input) {
    var i = 0;

    return outputRange[0].replace(stringShapeRegex, function () {
      var val = +interpolations[i++](input);
      var rounded = shouldRound && i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;
      return String(rounded);
    });
  };
}

function isRgbOrRgba(range) {
  return typeof range === 'string' && range.startsWith('rgb');
}

function checkPattern(arr) {
  var pattern = arr[0].replace(stringShapeRegex, '');
  for (var i = 1; i < arr.length; ++i) {
    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);
  }
}

function findRange(input, inputRange) {
  for (var i = 1; i < inputRange.length - 1; ++i) {
    if (inputRange[i] >= input) {
      break;
    }
  }
  return i - 1;
}

function checkValidInputRange(arr) {
  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');
  for (var i = 1; i < arr.length; ++i) {
    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically increasing ' + arr);
  }
}

function checkInfiniteRange(name, arr) {
  invariant(arr.length >= 2, name + ' must have at least 2 elements');
  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);
}

module.exports = Interpolation;
}, 193, null, "Interpolation");
__d(/* NativeAnimatedHelper */function(global, require, module, exports) {
'use strict';

var NativeAnimatedModule = require(28             ).NativeAnimatedModule; // 28 = NativeModules
var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var __nativeAnimatedNodeTagCount = 1;
var __nativeAnimationIdCount = 1;

var nativeEventEmitter = void 0;

var API = {
  createAnimatedNode: function createAnimatedNode(tag, config) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.createAnimatedNode(tag, config);
  },
  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.startListeningToAnimatedNodeValue(tag);
  },
  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.stopListeningToAnimatedNodeValue(tag);
  },
  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.connectAnimatedNodes(parentTag, childTag);
  },
  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.disconnectAnimatedNodes(parentTag, childTag);
  },
  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.startAnimatingNode(animationId, nodeTag, config, endCallback);
  },
  stopAnimation: function stopAnimation(animationId) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.stopAnimation(animationId);
  },
  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.setAnimatedNodeValue(nodeTag, value);
  },
  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.setAnimatedNodeOffset(nodeTag, offset);
  },
  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.flattenAnimatedNodeOffset(nodeTag);
  },
  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.extractAnimatedNodeOffset(nodeTag);
  },
  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.connectAnimatedNodeToView(nodeTag, viewTag);
  },
  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.disconnectAnimatedNodeFromView(nodeTag, viewTag);
  },
  dropAnimatedNode: function dropAnimatedNode(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.dropAnimatedNode(tag);
  },
  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.addAnimatedEventToView(viewTag, eventName, eventMapping);
  },
  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag);
  }
};

var STYLES_WHITELIST = {
  opacity: true,
  transform: true,

  scaleX: true,
  scaleY: true,
  translateX: true,
  translateY: true
};

var TRANSFORM_WHITELIST = {
  translateX: true,
  translateY: true,
  scale: true,
  scaleX: true,
  scaleY: true,
  rotate: true,
  rotateX: true,
  rotateY: true,
  perspective: true
};

function validateTransform(configs) {
  configs.forEach(function (config) {
    if (!TRANSFORM_WHITELIST.hasOwnProperty(config.property)) {
      throw new Error('Property \'' + config.property + '\' is not supported by native animated module');
    }
  });
}

function validateStyles(styles) {
  for (var key in styles) {
    if (!STYLES_WHITELIST.hasOwnProperty(key)) {
      throw new Error('Style property \'' + key + '\' is not supported by native animated module');
    }
  }
}

function validateInterpolation(config) {
  var SUPPORTED_INTERPOLATION_PARAMS = {
    inputRange: true,
    outputRange: true,
    extrapolate: true,
    extrapolateRight: true,
    extrapolateLeft: true
  };
  for (var key in config) {
    if (!SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(key)) {
      throw new Error('Interpolation property \'' + key + '\' is not supported by native animated module');
    }
  }
}

function generateNewNodeTag() {
  return __nativeAnimatedNodeTagCount++;
}

function generateNewAnimationId() {
  return __nativeAnimationIdCount++;
}

function assertNativeAnimatedModule() {
  invariant(NativeAnimatedModule, 'Native animated module is not available');
}

function isNativeAnimatedAvailable() {
  return !!NativeAnimatedModule;
}

module.exports = {
  API: API,
  validateStyles: validateStyles,
  validateTransform: validateTransform,
  validateInterpolation: validateInterpolation,
  generateNewNodeTag: generateNewNodeTag,
  generateNewAnimationId: generateNewAnimationId,
  assertNativeAnimatedModule: assertNativeAnimatedModule,
  isNativeAnimatedAvailable: isNativeAnimatedAvailable,
  get nativeEventEmitter() {
    if (!nativeEventEmitter) {
      nativeEventEmitter = new NativeEventEmitter(NativeAnimatedModule);
    }
    return nativeEventEmitter;
  }
};
}, 194, null, "NativeAnimatedHelper");
__d(/* SpringConfig */function(global, require, module, exports) {

'use strict';

function tensionFromOrigamiValue(oValue) {
  return (oValue - 30) * 3.62 + 194;
}

function frictionFromOrigamiValue(oValue) {
  return (oValue - 8) * 3 + 25;
}

function fromOrigamiTensionAndFriction(tension, friction) {
  return {
    tension: tensionFromOrigamiValue(tension),
    friction: frictionFromOrigamiValue(friction)
  };
}

function fromBouncinessAndSpeed(bounciness, speed) {
  function normalize(value, startValue, endValue) {
    return (value - startValue) / (endValue - startValue);
  }

  function projectNormal(n, start, end) {
    return start + n * (end - start);
  }

  function linearInterpolation(t, start, end) {
    return t * end + (1 - t) * start;
  }

  function quadraticOutInterpolation(t, start, end) {
    return linearInterpolation(2 * t - t * t, start, end);
  }

  function b3Friction1(x) {
    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
  }

  function b3Friction2(x) {
    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;
  }

  function b3Friction3(x) {
    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
  }

  function b3Nobounce(tension) {
    if (tension <= 18) {
      return b3Friction1(tension);
    } else if (tension > 18 && tension <= 44) {
      return b3Friction2(tension);
    } else {
      return b3Friction3(tension);
    }
  }

  var b = normalize(bounciness / 1.7, 0, 20);
  b = projectNormal(b, 0, 0.8);
  var s = normalize(speed / 1.7, 0, 20);
  var bouncyTension = projectNormal(s, 0.5, 200);
  var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);

  return {
    tension: tensionFromOrigamiValue(bouncyTension),
    friction: frictionFromOrigamiValue(bouncyFriction)
  };
}

module.exports = {
  fromOrigamiTensionAndFriction: fromOrigamiTensionAndFriction,
  fromBouncinessAndSpeed: fromBouncinessAndSpeed
};
}, 195, null, "SpringConfig");
__d(/* fbjs/lib/requestAnimationFrame.js */function(global, require, module, exports) {'use strict';

var emptyFunction = require(16               ); // 16 = ./emptyFunction
var nativeRequestAnimationFrame = require(197                            ); // 197 = ./nativeRequestAnimationFrame

var lastTime = 0;

var requestAnimationFrame = nativeRequestAnimationFrame || function (callback) {
  var currTime = Date.now();
  var timeDelay = Math.max(0, 16 - (currTime - lastTime));
  lastTime = currTime + timeDelay;
  return global.setTimeout(function () {
    callback(Date.now());
  }, timeDelay);
};

requestAnimationFrame(emptyFunction);

module.exports = requestAnimationFrame;
}, 196, null, "fbjs/lib/requestAnimationFrame.js");
__d(/* fbjs/lib/nativeRequestAnimationFrame.js */function(global, require, module, exports) {"use strict";

var nativeRequestAnimationFrame = global.requestAnimationFrame || global.webkitRequestAnimationFrame || global.mozRequestAnimationFrame || global.oRequestAnimationFrame || global.msRequestAnimationFrame;

module.exports = nativeRequestAnimationFrame;
}, 197, null, "fbjs/lib/nativeRequestAnimationFrame.js");
__d(/* Easing */function(global, require, module, exports) {
'use strict';

var _ease = void 0;

var Easing = function () {
  function Easing() {
    babelHelpers.classCallCheck(this, Easing);
  }

  babelHelpers.createClass(Easing, null, [{
    key: 'step0',
    value: function step0(n) {
      return n > 0 ? 1 : 0;
    }
  }, {
    key: 'step1',
    value: function step1(n) {
      return n >= 1 ? 1 : 0;
    }
  }, {
    key: 'linear',
    value: function linear(t) {
      return t;
    }
  }, {
    key: 'ease',
    value: function ease(t) {
      if (!_ease) {
        _ease = Easing.bezier(0.42, 0, 1, 1);
      }
      return _ease(t);
    }
  }, {
    key: 'quad',
    value: function quad(t) {
      return t * t;
    }
  }, {
    key: 'cubic',
    value: function cubic(t) {
      return t * t * t;
    }
  }, {
    key: 'poly',
    value: function poly(n) {
      return function (t) {
        return Math.pow(t, n);
      };
    }
  }, {
    key: 'sin',
    value: function sin(t) {
      return 1 - Math.cos(t * Math.PI / 2);
    }
  }, {
    key: 'circle',
    value: function circle(t) {
      return 1 - Math.sqrt(1 - t * t);
    }
  }, {
    key: 'exp',
    value: function exp(t) {
      return Math.pow(2, 10 * (t - 1));
    }
  }, {
    key: 'elastic',
    value: function elastic() {
      var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

      var p = bounciness * Math.PI;
      return function (t) {
        return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);
      };
    }
  }, {
    key: 'back',
    value: function back(s) {
      if (s === undefined) {
        s = 1.70158;
      }
      return function (t) {
        return t * t * ((s + 1) * t - s);
      };
    }
  }, {
    key: 'bounce',
    value: function bounce(t) {
      if (t < 1 / 2.75) {
        return 7.5625 * t * t;
      }

      if (t < 2 / 2.75) {
        t -= 1.5 / 2.75;
        return 7.5625 * t * t + 0.75;
      }

      if (t < 2.5 / 2.75) {
        t -= 2.25 / 2.75;
        return 7.5625 * t * t + 0.9375;
      }

      t -= 2.625 / 2.75;
      return 7.5625 * t * t + 0.984375;
    }
  }, {
    key: 'bezier',
    value: function bezier(x1, y1, x2, y2) {
      var _bezier = require(199     ); // 199 = bezier
      return _bezier(x1, y1, x2, y2);
    }
  }, {
    key: 'in',
    value: function _in(easing) {
      return easing;
    }
  }, {
    key: 'out',
    value: function out(easing) {
      return function (t) {
        return 1 - easing(1 - t);
      };
    }
  }, {
    key: 'inOut',
    value: function inOut(easing) {
      return function (t) {
        if (t < 0.5) {
          return easing(t * 2) / 2;
        }
        return 1 - easing((1 - t) * 2) / 2;
      };
    }
  }]);
  return Easing;
}();

module.exports = Easing;
}, 198, null, "Easing");
__d(/* bezier */function(global, require, module, exports) {
'use strict';

var NEWTON_ITERATIONS = 4;
var NEWTON_MIN_SLOPE = 0.001;
var SUBDIVISION_PRECISION = 0.0000001;
var SUBDIVISION_MAX_ITERATIONS = 10;

var kSplineTableSize = 11;
var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

var float32ArraySupported = typeof Float32Array === 'function';

function A(aA1, aA2) {
  return 1.0 - 3.0 * aA2 + 3.0 * aA1;
}
function B(aA1, aA2) {
  return 3.0 * aA2 - 6.0 * aA1;
}
function C(aA1) {
  return 3.0 * aA1;
}

function calcBezier(aT, aA1, aA2) {
  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
}

function getSlope(aT, aA1, aA2) {
  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
}

function binarySubdivide(aX, aA, aB, mX1, mX2) {
  var currentX,
      currentT,
      i = 0;
  do {
    currentT = aA + (aB - aA) / 2.0;
    currentX = calcBezier(currentT, mX1, mX2) - aX;
    if (currentX > 0.0) {
      aB = currentT;
    } else {
      aA = currentT;
    }
  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
  return currentT;
}

function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
  for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
    var currentSlope = getSlope(aGuessT, mX1, mX2);
    if (currentSlope === 0.0) {
      return aGuessT;
    }
    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
    aGuessT -= currentX / currentSlope;
  }
  return aGuessT;
}

module.exports = function bezier(mX1, mY1, mX2, mY2) {
  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {
    throw new Error('bezier x values must be in [0, 1] range');
  }

  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
  if (mX1 !== mY1 || mX2 !== mY2) {
    for (var i = 0; i < kSplineTableSize; ++i) {
      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
    }
  }

  function getTForX(aX) {
    var intervalStart = 0.0;
    var currentSample = 1;
    var lastSample = kSplineTableSize - 1;

    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
      intervalStart += kSampleStepSize;
    }
    --currentSample;

    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
    var guessForT = intervalStart + dist * kSampleStepSize;

    var initialSlope = getSlope(guessForT, mX1, mX2);
    if (initialSlope >= NEWTON_MIN_SLOPE) {
      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
    } else if (initialSlope === 0.0) {
      return guessForT;
    } else {
      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
  }

  return function BezierEasing(x) {
    if (mX1 === mY1 && mX2 === mY2) {
      return x;
    }

    if (x === 0) {
      return 0;
    }
    if (x === 1) {
      return 1;
    }
    return calcBezier(getTForX(x), mY1, mY2);
  };
};
}, 199, null, "bezier");
__d(/* Image */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Image\\Image.android.js';

var regeneratorRuntime = require(67                   ); // 67 = regenerator-runtime

var ImageResizeMode = require(128              ); // 128 = ImageResizeMode
var ImageStylePropTypes = require(127                  ); // 127 = ImageStylePropTypes
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var NativeModules = require(28             ); // 28 = NativeModules
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ReactNativeViewAttributes = require(140                        ); // 140 = ReactNativeViewAttributes
var Set = require(78   ); // 78 = Set
var StyleSheet = require(153         ); // 153 = StyleSheet
var StyleSheetPropType = require(147                 ); // 147 = StyleSheetPropType
var View = require(124   ); // 124 = View
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes
var ViewStylePropTypes = require(135                 ); // 135 = ViewStylePropTypes

var createReactClass = require(150                 ); // 150 = create-react-class
var filterObject = require(201                    ); // 201 = fbjs/lib/filterObject
var flattenStyle = require(114           ); // 114 = flattenStyle
var merge = require(144    ); // 144 = merge
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent
var resolveAssetSource = require(162                 ); // 162 = resolveAssetSource

var ImageLoader = NativeModules.ImageLoader;


var _requestId = 1;
function generateRequestId() {
  return _requestId++;
}

var ImageViewAttributes = merge(ReactNativeViewAttributes.UIView, {
  src: true,
  loadingIndicatorSrc: true,
  resizeMethod: true,
  resizeMode: true,
  progressiveRenderingEnabled: true,
  fadeDuration: true,
  shouldNotifyLoadEvents: true
});

var ViewStyleKeys = new Set(Object.keys(ViewStylePropTypes));
var ImageSpecificStyleKeys = new Set(Object.keys(ImageStylePropTypes).filter(function (x) {
  return !ViewStyleKeys.has(x);
}));

var Image = createReactClass({
  displayName: 'Image',
  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    style: StyleSheetPropType(ImageStylePropTypes),

    source: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string,
      headers: PropTypes.objectOf(PropTypes.string)
    }), PropTypes.number, PropTypes.arrayOf(PropTypes.shape({
      uri: PropTypes.string,
      width: PropTypes.number,
      height: PropTypes.number
    }))]),

    blurRadius: PropTypes.number,

    loadingIndicatorSource: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string
    }), PropTypes.number]),
    progressiveRenderingEnabled: PropTypes.bool,
    fadeDuration: PropTypes.number,

    onLoadStart: PropTypes.func,

    onError: PropTypes.func,

    onLoad: PropTypes.func,

    onLoadEnd: PropTypes.func,

    testID: PropTypes.string,

    resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),

    resizeMode: PropTypes.oneOf(['cover', 'contain', 'stretch', 'center'])
  }),

  statics: {
    resizeMode: ImageResizeMode,

    getSize: function getSize(url, success, failure) {
      return ImageLoader.getSize(url).then(function (sizes) {
        success(sizes.width, sizes.height);
      }).catch(failure || function () {
        console.warn('Failed to get size for image: ' + url);
      });
    },
    prefetch: function prefetch(url, callback) {
      var requestId = generateRequestId();
      callback && callback(requestId);
      return ImageLoader.prefetchImage(url, requestId);
    },
    abortPrefetch: function abortPrefetch(requestId) {
      ImageLoader.abortRequest(requestId);
    },
    queryCache: function queryCache(urls) {
      return regeneratorRuntime.async(function queryCache$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(ImageLoader.queryCache(urls));

            case 2:
              return _context.abrupt('return', _context.sent);

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    },

    resolveAssetSource: resolveAssetSource
  },

  mixins: [NativeMethodsMixin],

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  _updateViewConfig: function _updateViewConfig(props) {
    if (props.children) {
      this.viewConfig = {
        uiViewClassName: 'RCTView',
        validAttributes: ReactNativeViewAttributes.RCTView
      };
    } else {
      this.viewConfig = {
        uiViewClassName: 'RCTImageView',
        validAttributes: ImageViewAttributes
      };
    }
  },

  componentWillMount: function componentWillMount() {
    this._updateViewConfig(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    this._updateViewConfig(nextProps);
  },

  contextTypes: {
    isInAParentText: PropTypes.bool
  },

  render: function render() {
    var source = resolveAssetSource(this.props.source);
    var loadingIndicatorSource = resolveAssetSource(this.props.loadingIndicatorSource);

    if (source && source.uri === '') {
      console.warn('source.uri should not be an empty string');
    }

    if (this.props.src) {
      console.warn('The <Image> component requires a `source` property rather than `src`.');
    }

    if (source && (source.uri || Array.isArray(source))) {
      var style = void 0;
      var sources = void 0;
      if (source.uri) {
        var _width = source.width,
            _height = source.height;

        style = flattenStyle([{ width: _width, height: _height }, styles.base, this.props.style]);
        sources = [{ uri: source.uri }];
      } else {
        style = flattenStyle([styles.base, this.props.style]);
        sources = source;
      }

      var _props = this.props,
          onLoadStart = _props.onLoadStart,
          onLoad = _props.onLoad,
          onLoadEnd = _props.onLoadEnd,
          onError = _props.onError;

      var nativeProps = merge(this.props, {
        style: style,
        shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd || onError),
        src: sources,
        headers: source.headers,
        loadingIndicatorSrc: loadingIndicatorSource ? loadingIndicatorSource.uri : null
      });

      if (nativeProps.children) {
        var containerStyle = filterObject(style, function (val, key) {
          return !ImageSpecificStyleKeys.has(key);
        });
        var imageStyle = filterObject(style, function (val, key) {
          return ImageSpecificStyleKeys.has(key);
        });
        var imageProps = merge(nativeProps, {
          style: [imageStyle, styles.absoluteImage],
          children: undefined
        });

        return React.createElement(
          View,
          { style: containerStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 329
            }
          },
          React.createElement(RKImage, babelHelpers.extends({}, imageProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 330
            }
          })),
          this.props.children
        );
      } else {
        if (this.context.isInAParentText) {
          return React.createElement(RCTTextInlineImage, babelHelpers.extends({}, nativeProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 336
            }
          }));
        } else {
          return React.createElement(RKImage, babelHelpers.extends({}, nativeProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 338
            }
          }));
        }
      }
    }
    return null;
  }
});

var styles = StyleSheet.create({
  base: {
    overflow: 'hidden'
  },
  absoluteImage: {
    left: 0,
    right: 0,
    top: 0,
    bottom: 0,
    position: 'absolute'
  }
});

var cfg = {
  nativeOnly: {
    src: true,
    headers: true,
    loadingIndicatorSrc: true,
    shouldNotifyLoadEvents: true
  }
};
var RKImage = requireNativeComponent('RCTImageView', Image, cfg);
var RCTTextInlineImage = requireNativeComponent('RCTTextInlineImage', Image, cfg);

module.exports = Image;
}, 200, null, "Image");
__d(/* fbjs/lib/filterObject.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function filterObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name) && callback.call(context, object[name], name, object)) {
      result[name] = object[name];
    }
  }
  return result;
}

module.exports = filterObject;
}, 201, null, "fbjs/lib/filterObject.js");
__d(/* ScrollView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\ScrollView\\ScrollView.js';
var Animated = require(189       ); // 189 = Animated
var ColorPropType = require(59             ); // 59 = ColorPropType
var EdgeInsetsPropType = require(142                 ); // 142 = EdgeInsetsPropType
var Platform = require(36        ); // 36 = Platform
var PointPropType = require(203            ); // 203 = PointPropType
var PropTypes = require(19          ); // 19 = prop-types
var React = require(125    ); // 125 = React
var ReactNative = require(62           ); // 62 = ReactNative
var ScrollResponder = require(204              ); // 204 = ScrollResponder
var ScrollViewStickyHeader = require(209                     ); // 209 = ScrollViewStickyHeader
var StyleSheet = require(153         ); // 153 = StyleSheet
var StyleSheetPropType = require(147                 ); // 147 = StyleSheetPropType
var View = require(124   ); // 124 = View
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes
var ViewStylePropTypes = require(135                 ); // 135 = ViewStylePropTypes

var createReactClass = require(150                 ); // 150 = create-react-class
var dismissKeyboard = require(52               ); // 52 = dismissKeyboard
var flattenStyle = require(114           ); // 114 = flattenStyle
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var processDecelerationRate = require(210                      ); // 210 = processDecelerationRate
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent
var warning = require(15                ); // 15 = fbjs/lib/warning

var ScrollView = createReactClass({
  displayName: 'ScrollView',
  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    automaticallyAdjustContentInsets: PropTypes.bool,

    contentInset: EdgeInsetsPropType,

    contentOffset: PointPropType,

    bounces: PropTypes.bool,

    bouncesZoom: PropTypes.bool,

    alwaysBounceHorizontal: PropTypes.bool,

    alwaysBounceVertical: PropTypes.bool,

    centerContent: PropTypes.bool,

    contentContainerStyle: StyleSheetPropType(ViewStylePropTypes),

    decelerationRate: PropTypes.oneOfType([PropTypes.oneOf(['fast', 'normal']), PropTypes.number]),

    horizontal: PropTypes.bool,

    indicatorStyle: PropTypes.oneOf(['default', 'black', 'white']),

    directionalLockEnabled: PropTypes.bool,

    canCancelContentTouches: PropTypes.bool,

    keyboardDismissMode: PropTypes.oneOf(['none', 'interactive', 'on-drag']),

    keyboardShouldPersistTaps: PropTypes.oneOf(['always', 'never', 'handled', false, true]),

    maximumZoomScale: PropTypes.number,

    minimumZoomScale: PropTypes.number,

    onScroll: PropTypes.func,

    onScrollAnimationEnd: PropTypes.func,

    onContentSizeChange: PropTypes.func,

    pagingEnabled: PropTypes.bool,

    scrollEnabled: PropTypes.bool,

    scrollEventThrottle: PropTypes.number,

    scrollIndicatorInsets: EdgeInsetsPropType,

    scrollsToTop: PropTypes.bool,

    showsHorizontalScrollIndicator: PropTypes.bool,

    showsVerticalScrollIndicator: PropTypes.bool,

    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number),
    style: StyleSheetPropType(ViewStylePropTypes),

    snapToInterval: PropTypes.number,

    snapToAlignment: PropTypes.oneOf(['start', 'center', 'end']),

    removeClippedSubviews: PropTypes.bool,

    zoomScale: PropTypes.number,

    refreshControl: PropTypes.element,

    endFillColor: ColorPropType,

    scrollPerfTag: PropTypes.string,

    overScrollMode: PropTypes.oneOf(['auto', 'always', 'never']),

    DEPRECATED_sendUpdatedChildFrames: PropTypes.bool
  }),

  mixins: [ScrollResponder.Mixin],

  _scrollAnimatedValue: new Animated.Value(0),
  _scrollAnimatedValueAttachment: null,
  _stickyHeaderRefs: new Map(),
  _headerLayoutYs: new Map(),
  getInitialState: function getInitialState() {
    return this.scrollResponderMixinGetInitialState();
  },

  componentWillMount: function componentWillMount() {
    this._scrollAnimatedValue = new Animated.Value(0);
    this._stickyHeaderRefs = new Map();
    this._headerLayoutYs = new Map();
  },

  componentDidMount: function componentDidMount() {
    this._updateAnimatedNodeAttachment();
  },

  componentDidUpdate: function componentDidUpdate() {
    this._updateAnimatedNodeAttachment();
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this._scrollAnimatedValueAttachment) {
      this._scrollAnimatedValueAttachment.detach();
    }
  },

  setNativeProps: function setNativeProps(props) {
    this._scrollViewRef && this._scrollViewRef.setNativeProps(props);
  },

  getScrollResponder: function getScrollResponder() {
    return this;
  },

  getScrollableNode: function getScrollableNode() {
    return ReactNative.findNodeHandle(this._scrollViewRef);
  },

  getInnerViewNode: function getInnerViewNode() {
    return ReactNative.findNodeHandle(this._innerViewRef);
  },

  scrollTo: function scrollTo(y, x, animated) {
    if (typeof y === 'number') {
      console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, ' + 'animated: true})` instead.');
    } else {
      var _ref = y || {};

      x = _ref.x;
      y = _ref.y;
      animated = _ref.animated;
    }
    this.getScrollResponder().scrollResponderScrollTo({ x: x || 0, y: y || 0, animated: animated !== false });
  },

  scrollToEnd: function scrollToEnd(options) {
    var animated = (options && options.animated) !== false;
    this.getScrollResponder().scrollResponderScrollToEnd({
      animated: animated
    });
  },

  scrollWithoutAnimationTo: function scrollWithoutAnimationTo() {
    var y = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    console.warn('`scrollWithoutAnimationTo` is deprecated. Use `scrollTo` instead');
    this.scrollTo({ x: x, y: y, animated: false });
  },

  flashScrollIndicators: function flashScrollIndicators() {
    this.getScrollResponder().scrollResponderFlashScrollIndicators();
  },

  _getKeyForIndex: function _getKeyForIndex(index, childArray) {
    var child = childArray[index];
    return child && child.key;
  },

  _updateAnimatedNodeAttachment: function _updateAnimatedNodeAttachment() {
    if (this._scrollAnimatedValueAttachment) {
      this._scrollAnimatedValueAttachment.detach();
    }
    if (this.props.stickyHeaderIndices && this.props.stickyHeaderIndices.length > 0) {
      this._scrollAnimatedValueAttachment = Animated.attachNativeEvent(this._scrollViewRef, 'onScroll', [{ nativeEvent: { contentOffset: { y: this._scrollAnimatedValue } } }]);
    }
  },

  _setStickyHeaderRef: function _setStickyHeaderRef(key, ref) {
    if (ref) {
      this._stickyHeaderRefs.set(key, ref);
    } else {
      this._stickyHeaderRefs.delete(key);
    }
  },

  _onStickyHeaderLayout: function _onStickyHeaderLayout(index, event, key) {
    if (!this.props.stickyHeaderIndices) {
      return;
    }
    var childArray = React.Children.toArray(this.props.children);
    if (key !== this._getKeyForIndex(index, childArray)) {
      return;
    }

    var layoutY = event.nativeEvent.layout.y;
    this._headerLayoutYs.set(key, layoutY);

    var indexOfIndex = this.props.stickyHeaderIndices.indexOf(index);
    var previousHeaderIndex = this.props.stickyHeaderIndices[indexOfIndex - 1];
    if (previousHeaderIndex != null) {
      var previousHeader = this._stickyHeaderRefs.get(this._getKeyForIndex(previousHeaderIndex, childArray));
      previousHeader && previousHeader.setNextHeaderY(layoutY);
    }
  },

  _handleScroll: function _handleScroll(e) {
    if (__DEV__) {
      if (this.props.onScroll && this.props.scrollEventThrottle == null && Platform.OS === 'ios') {
        console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + 'cause frame drops, use a bigger number if you don\'t need as ' + 'much precision.');
      }
    }
    if (Platform.OS === 'android') {
      if (this.props.keyboardDismissMode === 'on-drag') {
        dismissKeyboard();
      }
    }
    this.scrollResponderHandleScroll(e);
  },

  _handleContentOnLayout: function _handleContentOnLayout(e) {
    var _e$nativeEvent$layout = e.nativeEvent.layout,
        width = _e$nativeEvent$layout.width,
        height = _e$nativeEvent$layout.height;

    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
  },

  _scrollViewRef: null,
  _setScrollViewRef: function _setScrollViewRef(ref) {
    this._scrollViewRef = ref;
  },

  _innerViewRef: null,
  _setInnerViewRef: function _setInnerViewRef(ref) {
    this._innerViewRef = ref;
  },

  render: function render() {
    var _this = this;

    var ScrollViewClass = void 0;
    var ScrollContentContainerViewClass = void 0;
    if (Platform.OS === 'ios') {
      ScrollViewClass = RCTScrollView;
      ScrollContentContainerViewClass = RCTScrollContentView;
      warning(!this.props.snapToInterval || !this.props.pagingEnabled, 'snapToInterval is currently ignored when pagingEnabled is true.');
    } else if (Platform.OS === 'android') {
      if (this.props.horizontal) {
        ScrollViewClass = AndroidHorizontalScrollView;
      } else {
        ScrollViewClass = AndroidScrollView;
      }
      ScrollContentContainerViewClass = View;
    }

    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');

    invariant(ScrollContentContainerViewClass !== undefined, 'ScrollContentContainerViewClass must not be undefined');

    var contentContainerStyle = [this.props.horizontal && styles.contentContainerHorizontal, this.props.contentContainerStyle];
    var style = void 0,
        childLayoutProps = void 0;
    if (__DEV__ && this.props.style) {
      style = flattenStyle(this.props.style);
      childLayoutProps = ['alignItems', 'justifyContent'].filter(function (prop) {
        return style && style[prop] !== undefined;
      });
      invariant(childLayoutProps.length === 0, 'ScrollView child layout (' + JSON.stringify(childLayoutProps) + ') must be applied through the contentContainerStyle prop.');
    }

    var contentSizeChangeProps = {};
    if (this.props.onContentSizeChange) {
      contentSizeChangeProps = {
        onLayout: this._handleContentOnLayout
      };
    }

    var stickyHeaderIndices = this.props.stickyHeaderIndices;

    var hasStickyHeaders = stickyHeaderIndices && stickyHeaderIndices.length > 0;
    var childArray = hasStickyHeaders && React.Children.toArray(this.props.children);
    var children = hasStickyHeaders ? childArray.map(function (child, index) {
      var indexOfIndex = child ? stickyHeaderIndices.indexOf(index) : -1;
      if (indexOfIndex > -1) {
        var key = child.key;
        var nextIndex = stickyHeaderIndices[indexOfIndex + 1];
        return React.createElement(
          ScrollViewStickyHeader,
          {
            key: key,
            ref: function ref(_ref2) {
              return _this._setStickyHeaderRef(key, _ref2);
            },
            nextHeaderLayoutY: _this._headerLayoutYs.get(_this._getKeyForIndex(nextIndex, childArray)),
            onLayout: function onLayout(event) {
              return _this._onStickyHeaderLayout(index, event, key);
            },
            scrollAnimatedValue: _this._scrollAnimatedValue, __source: {
              fileName: _jsxFileName,
              lineNumber: 669
            }
          },
          child
        );
      } else {
        return child;
      }
    }) : this.props.children;
    var contentContainer = React.createElement(
      ScrollContentContainerViewClass,
      babelHelpers.extends({}, contentSizeChangeProps, {
        ref: this._setInnerViewRef,
        style: contentContainerStyle,
        removeClippedSubviews: Platform.OS === 'android' && hasStickyHeaders ? false : this.props.removeClippedSubviews,
        collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 686
        }
      }),
      children
    );

    var alwaysBounceHorizontal = this.props.alwaysBounceHorizontal !== undefined ? this.props.alwaysBounceHorizontal : this.props.horizontal;

    var alwaysBounceVertical = this.props.alwaysBounceVertical !== undefined ? this.props.alwaysBounceVertical : !this.props.horizontal;

    var DEPRECATED_sendUpdatedChildFrames = !!this.props.DEPRECATED_sendUpdatedChildFrames;

    var baseStyle = this.props.horizontal ? styles.baseHorizontal : styles.baseVertical;
    var props = babelHelpers.extends({}, this.props, {
      alwaysBounceHorizontal: alwaysBounceHorizontal,
      alwaysBounceVertical: alwaysBounceVertical,
      style: [baseStyle, this.props.style],

      onContentSizeChange: null,
      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,
      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,
      onResponderGrant: this.scrollResponderHandleResponderGrant,
      onResponderReject: this.scrollResponderHandleResponderReject,
      onResponderRelease: this.scrollResponderHandleResponderRelease,
      onResponderTerminate: this.scrollResponderHandleTerminate,
      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,
      onScroll: this._handleScroll,
      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,
      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,
      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,
      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,
      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,
      onTouchEnd: this.scrollResponderHandleTouchEnd,
      onTouchMove: this.scrollResponderHandleTouchMove,
      onTouchStart: this.scrollResponderHandleTouchStart,
      scrollEventThrottle: hasStickyHeaders ? 1 : this.props.scrollEventThrottle,
      sendMomentumEvents: this.props.onMomentumScrollBegin || this.props.onMomentumScrollEnd ? true : false,
      DEPRECATED_sendUpdatedChildFrames: DEPRECATED_sendUpdatedChildFrames
    });

    var decelerationRate = this.props.decelerationRate;

    if (decelerationRate) {
      props.decelerationRate = processDecelerationRate(decelerationRate);
    }

    var refreshControl = this.props.refreshControl;

    if (refreshControl) {
      if (Platform.OS === 'ios') {
        return React.createElement(
          ScrollViewClass,
          babelHelpers.extends({}, props, { ref: this._setScrollViewRef, __source: {
              fileName: _jsxFileName,
              lineNumber: 757
            }
          }),
          Platform.isTVOS ? null : refreshControl,
          contentContainer
        );
      } else if (Platform.OS === 'android') {

        return React.cloneElement(refreshControl, { style: props.style }, React.createElement(
          ScrollViewClass,
          babelHelpers.extends({}, props, { style: baseStyle, ref: this._setScrollViewRef, __source: {
              fileName: _jsxFileName,
              lineNumber: 772
            }
          }),
          contentContainer
        ));
      }
    }
    return React.createElement(
      ScrollViewClass,
      babelHelpers.extends({}, props, { ref: this._setScrollViewRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 779
        }
      }),
      contentContainer
    );
  }
});

var styles = StyleSheet.create({
  baseVertical: {
    flexGrow: 1,
    flexShrink: 1,
    flexDirection: 'column',
    overflow: 'scroll'
  },
  baseHorizontal: {
    flexGrow: 1,
    flexShrink: 1,
    flexDirection: 'row',
    overflow: 'scroll'
  },
  contentContainerHorizontal: {
    flexDirection: 'row'
  }
});

var nativeOnlyProps = void 0,
    AndroidScrollView = void 0,
    AndroidHorizontalScrollView = void 0,
    RCTScrollView = void 0,
    RCTScrollContentView = void 0;
if (Platform.OS === 'android') {
  nativeOnlyProps = {
    nativeOnly: {
      sendMomentumEvents: true
    }
  };
  AndroidScrollView = requireNativeComponent('RCTScrollView', ScrollView, nativeOnlyProps);
  AndroidHorizontalScrollView = requireNativeComponent('AndroidHorizontalScrollView', ScrollView, nativeOnlyProps);
} else if (Platform.OS === 'ios') {
  nativeOnlyProps = {
    nativeOnly: {
      onMomentumScrollBegin: true,
      onMomentumScrollEnd: true,
      onScrollBeginDrag: true,
      onScrollEndDrag: true
    }
  };
  RCTScrollView = requireNativeComponent('RCTScrollView', ScrollView, nativeOnlyProps);

  RCTScrollContentView = requireNativeComponent('RCTScrollContentView', View);
}

module.exports = ScrollView;
}, 202, null, "ScrollView");
__d(/* PointPropType */function(global, require, module, exports) {
'use strict';

var PropTypes = require(19          ); // 19 = prop-types

var createStrictShapeTypeChecker = require(143                           ); // 143 = createStrictShapeTypeChecker

var PointPropType = createStrictShapeTypeChecker({
  x: PropTypes.number,
  y: PropTypes.number
});

module.exports = PointPropType;
}, 203, null, "PointPropType");
__d(/* ScrollResponder */function(global, require, module, exports) {
'use strict';

var Dimensions = require(155         ); // 155 = Dimensions
var FrameRateLogger = require(205              ); // 205 = FrameRateLogger
var Keyboard = require(51        ); // 51 = Keyboard
var ReactNative = require(62           ); // 62 = ReactNative
var Subscribable = require(206           ); // 206 = Subscribable
var TextInputState = require(53              ); // 53 = TextInputState
var UIManager = require(54         ); // 54 = UIManager

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var nullthrows = require(207                  ); // 207 = fbjs/lib/nullthrows
var performanceNow = require(37                       ); // 37 = fbjs/lib/performanceNow
var warning = require(15                ); // 15 = fbjs/lib/warning

var _require = require(28             ), // 28 = NativeModules
    ScrollViewManager = _require.ScrollViewManager;

var _require2 = require(208                       ), // 208 = ReactNativeComponentTree
    getInstanceFromNode = _require2.getInstanceFromNode;

var IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;

function isTagInstanceOfTextInput(tag) {
  var instance = getInstanceFromNode(tag);
  return instance && instance.viewConfig && (instance.viewConfig.uiViewClassName === 'AndroidTextInput' || instance.viewConfig.uiViewClassName === 'RCTTextView' || instance.viewConfig.uiViewClassName === 'RCTTextField');
}

var ScrollResponderMixin = {
  mixins: [Subscribable.Mixin],
  scrollResponderMixinGetInitialState: function scrollResponderMixinGetInitialState() {
    return {
      isTouching: false,
      lastMomentumScrollBeginTime: 0,
      lastMomentumScrollEndTime: 0,

      observedScrollSinceBecomingResponder: false,
      becameResponderWhileAnimating: false
    };
  },

  scrollResponderHandleScrollShouldSetResponder: function scrollResponderHandleScrollShouldSetResponder() {
    return this.state.isTouching;
  },

  scrollResponderHandleStartShouldSetResponder: function scrollResponderHandleStartShouldSetResponder(e) {
    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();

    if (this.props.keyboardShouldPersistTaps === 'handled' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput) {
      return true;
    }
    return false;
  },

  scrollResponderHandleStartShouldSetResponderCapture: function scrollResponderHandleStartShouldSetResponderCapture(e) {
    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
    var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;

    var keyboardNeverPersistTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';
    if (keyboardNeverPersistTaps && currentlyFocusedTextInput != null && !isTagInstanceOfTextInput(e.target)) {
      return true;
    }
    return this.scrollResponderIsAnimating();
  },

  scrollResponderHandleResponderReject: function scrollResponderHandleResponderReject() {},

  scrollResponderHandleTerminationRequest: function scrollResponderHandleTerminationRequest() {
    return !this.state.observedScrollSinceBecomingResponder;
  },

  scrollResponderHandleTouchEnd: function scrollResponderHandleTouchEnd(e) {
    var nativeEvent = e.nativeEvent;
    this.state.isTouching = nativeEvent.touches.length !== 0;
    this.props.onTouchEnd && this.props.onTouchEnd(e);
  },

  scrollResponderHandleResponderRelease: function scrollResponderHandleResponderRelease(e) {
    this.props.onResponderRelease && this.props.onResponderRelease(e);

    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
    if (this.props.keyboardShouldPersistTaps !== true && this.props.keyboardShouldPersistTaps !== 'always' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.state.observedScrollSinceBecomingResponder && !this.state.becameResponderWhileAnimating) {
      this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);
      TextInputState.blurTextInput(currentlyFocusedTextInput);
    }
  },

  scrollResponderHandleScroll: function scrollResponderHandleScroll(e) {
    this.state.observedScrollSinceBecomingResponder = true;
    this.props.onScroll && this.props.onScroll(e);
  },

  scrollResponderHandleResponderGrant: function scrollResponderHandleResponderGrant(e) {
    this.state.observedScrollSinceBecomingResponder = false;
    this.props.onResponderGrant && this.props.onResponderGrant(e);
    this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();
  },

  scrollResponderHandleScrollBeginDrag: function scrollResponderHandleScrollBeginDrag(e) {
    FrameRateLogger.beginScroll();
    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);
  },

  scrollResponderHandleScrollEndDrag: function scrollResponderHandleScrollEndDrag(e) {
    var velocity = e.nativeEvent.velocity;

    if (!this.scrollResponderIsAnimating() && (!velocity || velocity.x === 0 && velocity.y === 0)) {
      FrameRateLogger.endScroll();
    }
    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);
  },

  scrollResponderHandleMomentumScrollBegin: function scrollResponderHandleMomentumScrollBegin(e) {
    this.state.lastMomentumScrollBeginTime = performanceNow();
    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);
  },

  scrollResponderHandleMomentumScrollEnd: function scrollResponderHandleMomentumScrollEnd(e) {
    FrameRateLogger.endScroll();
    this.state.lastMomentumScrollEndTime = performanceNow();
    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);
  },

  scrollResponderHandleTouchStart: function scrollResponderHandleTouchStart(e) {
    this.state.isTouching = true;
    this.props.onTouchStart && this.props.onTouchStart(e);
  },

  scrollResponderHandleTouchMove: function scrollResponderHandleTouchMove(e) {
    this.props.onTouchMove && this.props.onTouchMove(e);
  },

  scrollResponderIsAnimating: function scrollResponderIsAnimating() {
    var now = performanceNow();
    var timeSinceLastMomentumScrollEnd = now - this.state.lastMomentumScrollEndTime;
    var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
    return isAnimating;
  },

  scrollResponderGetScrollableNode: function scrollResponderGetScrollableNode() {
    return this.getScrollableNode ? this.getScrollableNode() : ReactNative.findNodeHandle(this);
  },

  scrollResponderScrollTo: function scrollResponderScrollTo(x, y, animated) {
    if (typeof x === 'number') {
      console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');
    } else {
      var _ref = x || {};

      x = _ref.x;
      y = _ref.y;
      animated = _ref.animated;
    }
    UIManager.dispatchViewManagerCommand(nullthrows(this.scrollResponderGetScrollableNode()), UIManager.RCTScrollView.Commands.scrollTo, [x || 0, y || 0, animated !== false]);
  },

  scrollResponderScrollToEnd: function scrollResponderScrollToEnd(options) {
    var animated = (options && options.animated) !== false;
    UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.RCTScrollView.Commands.scrollToEnd, [animated]);
  },

  scrollResponderScrollWithoutAnimationTo: function scrollResponderScrollWithoutAnimationTo(offsetX, offsetY) {
    console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead');
    this.scrollResponderScrollTo({ x: offsetX, y: offsetY, animated: false });
  },

  scrollResponderZoomTo: function scrollResponderZoomTo(rect, animated) {
    invariant(ScrollViewManager && ScrollViewManager.zoomToRect, 'zoomToRect is not implemented');
    if ('animated' in rect) {
      var animated = rect.animated,
          rect = babelHelpers.objectWithoutProperties(rect, ['animated']);
    } else if (typeof animated !== 'undefined') {
      console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead');
    }
    ScrollViewManager.zoomToRect(this.scrollResponderGetScrollableNode(), rect, animated !== false);
  },

  scrollResponderFlashScrollIndicators: function scrollResponderFlashScrollIndicators() {
    invariant(ScrollViewManager && ScrollViewManager.flashScrollIndicators, 'flashScrollIndicators is not implemented');
    ScrollViewManager.flashScrollIndicators(this.scrollResponderGetScrollableNode());
  },

  scrollResponderScrollNativeHandleToKeyboard: function scrollResponderScrollNativeHandleToKeyboard(nodeHandle, additionalOffset, preventNegativeScrollOffset) {
    this.additionalScrollOffset = additionalOffset || 0;
    this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
    UIManager.measureLayout(nodeHandle, ReactNative.findNodeHandle(this.getInnerViewNode()), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);
  },

  scrollResponderInputMeasureAndScrollToKeyboard: function scrollResponderInputMeasureAndScrollToKeyboard(left, top, width, height) {
    var keyboardScreenY = Dimensions.get('window').height;
    if (this.keyboardWillOpenTo) {
      keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;
    }
    var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;

    if (this.preventNegativeScrollOffset) {
      scrollOffsetY = Math.max(0, scrollOffsetY);
    }
    this.scrollResponderScrollTo({ x: 0, y: scrollOffsetY, animated: true });

    this.additionalOffset = 0;
    this.preventNegativeScrollOffset = false;
  },

  scrollResponderTextInputFocusError: function scrollResponderTextInputFocusError(e) {
    console.error('Error measuring text field: ', e);
  },

  componentWillMount: function componentWillMount() {
    var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;

    warning(typeof keyboardShouldPersistTaps !== 'boolean', '\'keyboardShouldPersistTaps={' + keyboardShouldPersistTaps + '}\' is deprecated. ' + ('Use \'keyboardShouldPersistTaps="' + (keyboardShouldPersistTaps ? "always" : "never") + '"\' instead'));

    this.keyboardWillOpenTo = null;
    this.additionalScrollOffset = 0;
    this.addListenerOn(Keyboard, 'keyboardWillShow', this.scrollResponderKeyboardWillShow);
    this.addListenerOn(Keyboard, 'keyboardWillHide', this.scrollResponderKeyboardWillHide);
    this.addListenerOn(Keyboard, 'keyboardDidShow', this.scrollResponderKeyboardDidShow);
    this.addListenerOn(Keyboard, 'keyboardDidHide', this.scrollResponderKeyboardDidHide);
  },

  scrollResponderKeyboardWillShow: function scrollResponderKeyboardWillShow(e) {
    this.keyboardWillOpenTo = e;
    this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);
  },

  scrollResponderKeyboardWillHide: function scrollResponderKeyboardWillHide(e) {
    this.keyboardWillOpenTo = null;
    this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);
  },

  scrollResponderKeyboardDidShow: function scrollResponderKeyboardDidShow(e) {
    if (e) {
      this.keyboardWillOpenTo = e;
    }
    this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);
  },

  scrollResponderKeyboardDidHide: function scrollResponderKeyboardDidHide(e) {
    this.keyboardWillOpenTo = null;
    this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);
  }

};

var ScrollResponder = {
  Mixin: ScrollResponderMixin
};

module.exports = ScrollResponder;
}, 204, null, "ScrollResponder");
__d(/* FrameRateLogger */function(global, require, module, exports) {
'use strict';

var NativeModules = require(28             ); // 28 = NativeModules

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var FrameRateLogger = {
  setGlobalOptions: function setGlobalOptions(options) {
    if (options.debug !== undefined) {
      invariant(NativeModules.FrameRateLogger, 'Trying to debug FrameRateLogger without the native module!');
    }
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.setGlobalOptions(options);
  },

  setContext: function setContext(context) {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.setContext(context);
  },

  beginScroll: function beginScroll() {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.beginScroll();
  },
  endScroll: function endScroll() {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.endScroll();
  }
};

module.exports = FrameRateLogger;
}, 205, null, "FrameRateLogger");
__d(/* Subscribable */function(global, require, module, exports) {
'use strict';

var Subscribable = {};

Subscribable.Mixin = {

  componentWillMount: function componentWillMount() {
    this._subscribableSubscriptions = [];
  },

  componentWillUnmount: function componentWillUnmount() {
    this._subscribableSubscriptions.forEach(function (subscription) {
      return subscription.remove();
    });
    this._subscribableSubscriptions = null;
  },

  addListenerOn: function addListenerOn(eventEmitter, eventType, listener, context) {
    this._subscribableSubscriptions.push(eventEmitter.addListener(eventType, listener, context));
  }
};

module.exports = Subscribable;
}, 206, null, "Subscribable");
__d(/* fbjs/lib/nullthrows.js */function(global, require, module, exports) {"use strict";

var nullthrows = function nullthrows(x) {
  if (x != null) {
    return x;
  }
  throw new Error("Got unexpected null or undefined");
};

module.exports = nullthrows;
}, 207, null, "fbjs/lib/nullthrows.js");
__d(/* ReactNativeComponentTree */function(global, require, module, exports) {

'use strict';

var _require = require(62           ), // 62 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactNativeComponentTree;
}, 208, null, "ReactNativeComponentTree");
__d(/* ScrollViewStickyHeader */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\ScrollView\\ScrollViewStickyHeader.js';
var Animated = require(189       ); // 189 = Animated
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet

var ScrollViewStickyHeader = function (_React$Component) {
  babelHelpers.inherits(ScrollViewStickyHeader, _React$Component);

  function ScrollViewStickyHeader(props, context) {
    babelHelpers.classCallCheck(this, ScrollViewStickyHeader);

    var _this = babelHelpers.possibleConstructorReturn(this, (ScrollViewStickyHeader.__proto__ || Object.getPrototypeOf(ScrollViewStickyHeader)).call(this, props, context));

    _this._onLayout = function (event) {
      _this.setState({
        measured: true,
        layoutY: event.nativeEvent.layout.y,
        layoutHeight: event.nativeEvent.layout.height
      });

      _this.props.onLayout(event);
      var child = React.Children.only(_this.props.children);
      if (child.props.onLayout) {
        child.props.onLayout(event);
      }
    };

    _this.state = {
      measured: false,
      layoutY: 0,
      layoutHeight: 0,
      nextHeaderLayoutY: props.nextHeaderLayoutY
    };
    return _this;
  }

  babelHelpers.createClass(ScrollViewStickyHeader, [{
    key: 'setNextHeaderY',
    value: function setNextHeaderY(y) {
      this.setState({ nextHeaderLayoutY: y });
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          measured = _state.measured,
          layoutHeight = _state.layoutHeight,
          layoutY = _state.layoutY,
          nextHeaderLayoutY = _state.nextHeaderLayoutY;

      var inputRange = [-1, 0];
      var outputRange = [0, 0];

      if (measured) {
        inputRange.push(layoutY);
        outputRange.push(0);

        var collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;
        if (collisionPoint >= layoutY) {
          inputRange.push(collisionPoint, collisionPoint + 1);
          outputRange.push(collisionPoint - layoutY, collisionPoint - layoutY);
        } else {
          inputRange.push(layoutY + 1);
          outputRange.push(1);
        }
      }

      var translateY = this.props.scrollAnimatedValue.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });
      var child = React.Children.only(this.props.children);

      return React.createElement(
        Animated.View,
        {
          collapsable: false,
          onLayout: this._onLayout,
          style: [child.props.style, styles.header, { transform: [{ translateY: translateY }] }], __source: {
            fileName: _jsxFileName,
            lineNumber: 99
          }
        },
        React.cloneElement(child, {
          style: styles.fill,
          onLayout: undefined })
      );
    }
  }]);
  return ScrollViewStickyHeader;
}(React.Component);

var styles = StyleSheet.create({
  header: {
    zIndex: 10
  },
  fill: {
    flex: 1
  }
});

module.exports = ScrollViewStickyHeader;
}, 209, null, "ScrollViewStickyHeader");
__d(/* processDecelerationRate */function(global, require, module, exports) {
'use strict';

function processDecelerationRate(decelerationRate) {
  if (decelerationRate === 'normal') {
    decelerationRate = 0.998;
  } else if (decelerationRate === 'fast') {
    decelerationRate = 0.99;
  }
  return decelerationRate;
}

module.exports = processDecelerationRate;
}, 210, null, "processDecelerationRate");
__d(/* DatePickerIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\DatePicker\\DatePickerIOS.android.js';
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var View = require(124   ); // 124 = View

var DummyDatePickerIOS = function (_React$Component) {
  babelHelpers.inherits(DummyDatePickerIOS, _React$Component);

  function DummyDatePickerIOS() {
    babelHelpers.classCallCheck(this, DummyDatePickerIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyDatePickerIOS.__proto__ || Object.getPrototypeOf(DummyDatePickerIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyDatePickerIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummyDatePickerIOS, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        },
        React.createElement(
          Text,
          { style: styles.datePickerText, __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          },
          'DatePickerIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummyDatePickerIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummyDatePickerIOS: {
    height: 100,
    width: 300,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 10
  },
  datePickerText: {
    color: '#333333',
    margin: 20
  }
});

module.exports = DummyDatePickerIOS;
}, 211, null, "DatePickerIOS");
__d(/* DrawerLayoutAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\DrawerAndroid\\DrawerLayoutAndroid.android.js';
var ColorPropType = require(59             ); // 59 = ColorPropType
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ReactNative = require(62           ); // 62 = ReactNative
var StatusBar = require(213        ); // 213 = StatusBar
var StyleSheet = require(153         ); // 153 = StyleSheet
var UIManager = require(54         ); // 54 = UIManager
var View = require(124   ); // 124 = View
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var DrawerConsts = UIManager.AndroidDrawerLayout.Constants;

var createReactClass = require(150                 ); // 150 = create-react-class
var dismissKeyboard = require(52               ); // 52 = dismissKeyboard
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent

var RK_DRAWER_REF = 'drawerlayout';
var INNERVIEW_REF = 'innerView';

var DRAWER_STATES = ['Idle', 'Dragging', 'Settling'];

var DrawerLayoutAndroid = createReactClass({
  displayName: 'DrawerLayoutAndroid',
  statics: {
    positions: DrawerConsts.DrawerPosition
  },

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    keyboardDismissMode: PropTypes.oneOf(['none', 'on-drag']),

    drawerBackgroundColor: ColorPropType,

    drawerPosition: PropTypes.oneOf([DrawerConsts.DrawerPosition.Left, DrawerConsts.DrawerPosition.Right]),

    drawerWidth: PropTypes.number,

    drawerLockMode: PropTypes.oneOf(['unlocked', 'locked-closed', 'locked-open']),

    onDrawerSlide: PropTypes.func,

    onDrawerStateChanged: PropTypes.func,

    onDrawerOpen: PropTypes.func,

    onDrawerClose: PropTypes.func,

    renderNavigationView: PropTypes.func.isRequired,

    statusBarBackgroundColor: ColorPropType
  }),

  mixins: [NativeMethodsMixin],

  getDefaultProps: function getDefaultProps() {
    return {
      drawerBackgroundColor: 'white'
    };
  },

  getInitialState: function getInitialState() {
    return { statusBarBackgroundColor: undefined };
  },

  getInnerViewNode: function getInnerViewNode() {
    return this.refs[INNERVIEW_REF].getInnerViewNode();
  },

  componentDidMount: function componentDidMount() {
    this._updateStatusBarBackground();
  },

  componentDidReceiveProps: function componentDidReceiveProps() {
    this._updateStatusBarBackground();
  },

  render: function render() {
    var drawStatusBar = Platform.Version >= 21 && this.props.statusBarBackgroundColor;
    var drawerViewWrapper = React.createElement(
      View,
      {
        style: [styles.drawerSubview, { width: this.props.drawerWidth, backgroundColor: this.props.drawerBackgroundColor }],
        collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 184
        }
      },
      this.props.renderNavigationView(),
      drawStatusBar && React.createElement(View, { style: styles.drawerStatusBar, __source: {
          fileName: _jsxFileName,
          lineNumber: 191
        }
      })
    );
    var childrenWrapper = React.createElement(
      View,
      { ref: INNERVIEW_REF, style: styles.mainSubview, collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 194
        }
      },
      drawStatusBar && React.createElement(StatusBar, {
        translucent: true,
        backgroundColor: this.state.statusBarBackgroundColor,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 196
        }
      }),
      drawStatusBar && React.createElement(View, { style: [styles.statusBar, { backgroundColor: this.props.statusBarBackgroundColor }], __source: {
          fileName: _jsxFileName,
          lineNumber: 201
        }
      }),
      this.props.children
    );
    return React.createElement(
      AndroidDrawerLayout,
      babelHelpers.extends({}, this.props, {
        ref: RK_DRAWER_REF,
        drawerWidth: this.props.drawerWidth,
        drawerPosition: this.props.drawerPosition,
        drawerLockMode: this.props.drawerLockMode,
        style: [styles.base, this.props.style],
        onDrawerSlide: this._onDrawerSlide,
        onDrawerOpen: this._onDrawerOpen,
        onDrawerClose: this._onDrawerClose,
        onDrawerStateChanged: this._onDrawerStateChanged, __source: {
          fileName: _jsxFileName,
          lineNumber: 208
        }
      }),
      childrenWrapper,
      drawerViewWrapper
    );
  },

  _onDrawerSlide: function _onDrawerSlide(event) {
    if (this.props.onDrawerSlide) {
      this.props.onDrawerSlide(event);
    }
    if (this.props.keyboardDismissMode === 'on-drag') {
      dismissKeyboard();
    }
  },

  _onDrawerOpen: function _onDrawerOpen() {
    if (this.props.onDrawerOpen) {
      this.props.onDrawerOpen();
    }
  },

  _onDrawerClose: function _onDrawerClose() {
    if (this.props.onDrawerClose) {
      this.props.onDrawerClose();
    }
  },

  _onDrawerStateChanged: function _onDrawerStateChanged(event) {
    if (this.props.onDrawerStateChanged) {
      this.props.onDrawerStateChanged(DRAWER_STATES[event.nativeEvent.drawerState]);
    }
  },

  openDrawer: function openDrawer() {
    UIManager.dispatchViewManagerCommand(this._getDrawerLayoutHandle(), UIManager.AndroidDrawerLayout.Commands.openDrawer, null);
  },

  closeDrawer: function closeDrawer() {
    UIManager.dispatchViewManagerCommand(this._getDrawerLayoutHandle(), UIManager.AndroidDrawerLayout.Commands.closeDrawer, null);
  },

  _getDrawerLayoutHandle: function _getDrawerLayoutHandle() {
    return ReactNative.findNodeHandle(this.refs[RK_DRAWER_REF]);
  },

  _updateStatusBarBackground: function _updateStatusBarBackground() {
    var _this = this;

    if (Platform.Version >= 21 && this.props.statusBarBackgroundColor) {
      if (this.state.statusBarBackgroundColor !== 'transparent') {
        requestAnimationFrame(function () {
          _this.setState({ statusBarBackgroundColor: 'transparent' });
        });
      }
    } else {
      this.setState({ statusBarBackgroundColor: undefined });
    }
  }
});

var styles = StyleSheet.create({
  base: {
    flex: 1,
    elevation: 16
  },
  mainSubview: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  drawerSubview: {
    position: 'absolute',
    top: 0,
    bottom: 0
  },
  statusBar: {
    height: StatusBar.currentHeight
  },
  drawerStatusBar: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    height: StatusBar.currentHeight,
    backgroundColor: 'rgba(0, 0, 0, 0.251)'
  }
});

var AndroidDrawerLayout = requireNativeComponent('AndroidDrawerLayout', DrawerLayoutAndroid);

module.exports = DrawerLayoutAndroid;
}, 212, null, "DrawerLayoutAndroid");
__d(/* StatusBar */function(global, require, module, exports) {
'use strict';

var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ColorPropType = require(59             ); // 59 = ColorPropType
var Platform = require(36        ); // 36 = Platform

var processColor = require(136           ); // 136 = processColor

var StatusBarManager = require(28             ).StatusBarManager; // 28 = NativeModules

function mergePropsStack(propsStack, defaultValues) {
  return propsStack.reduce(function (prev, cur) {
    for (var prop in cur) {
      if (cur[prop] != null) {
        prev[prop] = cur[prop];
      }
    }
    return prev;
  }, babelHelpers.extends({}, defaultValues));
}

function createStackEntry(props) {
  return {
    backgroundColor: props.backgroundColor != null ? {
      value: props.backgroundColor,
      animated: props.animated
    } : null,
    barStyle: props.barStyle != null ? {
      value: props.barStyle,
      animated: props.animated
    } : null,
    translucent: props.translucent,
    hidden: props.hidden != null ? {
      value: props.hidden,
      animated: props.animated,
      transition: props.showHideTransition
    } : null,
    networkActivityIndicatorVisible: props.networkActivityIndicatorVisible
  };
}

var StatusBar = function (_React$Component) {
  babelHelpers.inherits(StatusBar, _React$Component);

  function StatusBar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, StatusBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = StatusBar.__proto__ || Object.getPrototypeOf(StatusBar)).call.apply(_ref, [this].concat(args))), _this), _this._stackEntry = null, _this._updatePropsStack = function () {
      clearImmediate(StatusBar._updateImmediate);
      StatusBar._updateImmediate = setImmediate(function () {
        var oldProps = StatusBar._currentValues;
        var mergedProps = mergePropsStack(StatusBar._propsStack, StatusBar._defaultProps);

        if (Platform.OS === 'ios') {
          if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
            StatusBarManager.setStyle(mergedProps.barStyle.value, mergedProps.barStyle.animated);
          }
          if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
            StatusBarManager.setHidden(mergedProps.hidden.value, mergedProps.hidden.animated ? mergedProps.hidden.transition : 'none');
          }

          if (!oldProps || oldProps.networkActivityIndicatorVisible !== mergedProps.networkActivityIndicatorVisible) {
            StatusBarManager.setNetworkActivityIndicatorVisible(mergedProps.networkActivityIndicatorVisible);
          }
        } else if (Platform.OS === 'android') {
          if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
            StatusBarManager.setStyle(mergedProps.barStyle.value);
          }
          if (!oldProps || oldProps.backgroundColor.value !== mergedProps.backgroundColor.value) {
            StatusBarManager.setColor(processColor(mergedProps.backgroundColor.value), mergedProps.backgroundColor.animated);
          }
          if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
            StatusBarManager.setHidden(mergedProps.hidden.value);
          }
          if (!oldProps || oldProps.translucent !== mergedProps.translucent) {
            StatusBarManager.setTranslucent(mergedProps.translucent);
          }
        }

        StatusBar._currentValues = mergedProps;
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(StatusBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._stackEntry = createStackEntry(this.props);
      StatusBar._propsStack.push(this._stackEntry);
      this._updatePropsStack();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var index = StatusBar._propsStack.indexOf(this._stackEntry);
      StatusBar._propsStack.splice(index, 1);

      this._updatePropsStack();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var index = StatusBar._propsStack.indexOf(this._stackEntry);
      this._stackEntry = createStackEntry(this.props);
      StatusBar._propsStack[index] = this._stackEntry;

      this._updatePropsStack();
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }], [{
    key: 'setHidden',
    value: function setHidden(hidden, animation) {
      animation = animation || 'none';
      StatusBar._defaultProps.hidden.value = hidden;
      if (Platform.OS === 'ios') {
        StatusBarManager.setHidden(hidden, animation);
      } else if (Platform.OS === 'android') {
        StatusBarManager.setHidden(hidden);
      }
    }
  }, {
    key: 'setBarStyle',
    value: function setBarStyle(style, animated) {
      animated = animated || false;
      StatusBar._defaultProps.barStyle.value = style;
      if (Platform.OS === 'ios') {
        StatusBarManager.setStyle(style, animated);
      } else if (Platform.OS === 'android') {
        StatusBarManager.setStyle(style);
      }
    }
  }, {
    key: 'setNetworkActivityIndicatorVisible',
    value: function setNetworkActivityIndicatorVisible(visible) {
      if (Platform.OS !== 'ios') {
        console.warn('`setNetworkActivityIndicatorVisible` is only available on iOS');
        return;
      }
      StatusBar._defaultProps.networkActivityIndicatorVisible = visible;
      StatusBarManager.setNetworkActivityIndicatorVisible(visible);
    }
  }, {
    key: 'setBackgroundColor',
    value: function setBackgroundColor(color, animated) {
      if (Platform.OS !== 'android') {
        console.warn('`setBackgroundColor` is only available on Android');
        return;
      }
      animated = animated || false;
      StatusBar._defaultProps.backgroundColor.value = color;
      StatusBarManager.setColor(processColor(color), animated);
    }
  }, {
    key: 'setTranslucent',
    value: function setTranslucent(translucent) {
      if (Platform.OS !== 'android') {
        console.warn('`setTranslucent` is only available on Android');
        return;
      }
      StatusBar._defaultProps.translucent = translucent;
      StatusBarManager.setTranslucent(translucent);
    }
  }]);
  return StatusBar;
}(React.Component);

StatusBar._propsStack = [];
StatusBar._defaultProps = createStackEntry({
  animated: false,
  showHideTransition: 'fade',
  backgroundColor: 'black',
  barStyle: 'default',
  translucent: false,
  hidden: false,
  networkActivityIndicatorVisible: false
});
StatusBar._updateImmediate = null;
StatusBar._currentValues = null;
StatusBar.currentHeight = StatusBarManager.HEIGHT;
StatusBar.propTypes = {
  hidden: PropTypes.bool,

  animated: PropTypes.bool,

  backgroundColor: ColorPropType,

  translucent: PropTypes.bool,

  barStyle: PropTypes.oneOf(['default', 'light-content', 'dark-content']),

  networkActivityIndicatorVisible: PropTypes.bool,

  showHideTransition: PropTypes.oneOf(['fade', 'slide'])
};
StatusBar.defaultProps = {
  animated: false,
  showHideTransition: 'fade'
};


module.exports = StatusBar;
}, 213, null, "StatusBar");
__d(/* FlatList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Lists\\FlatList.js';
var MetroListView = require(215            ); // 215 = MetroListView
var React = require(125    ); // 125 = React
var View = require(124   ); // 124 = View
var VirtualizedList = require(222              ); // 222 = VirtualizedList

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var defaultProps = babelHelpers.extends({}, VirtualizedList.defaultProps, {
  numColumns: 1
});

var FlatList = function (_React$PureComponent) {
  babelHelpers.inherits(FlatList, _React$PureComponent);

  function FlatList() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, FlatList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = FlatList.__proto__ || Object.getPrototypeOf(FlatList)).call.apply(_ref, [this].concat(args))), _this), _this._hasWarnedLegacy = false, _this._captureRef = function (ref) {
      _this._listRef = ref;
    }, _this._getItem = function (data, index) {
      var numColumns = _this.props.numColumns;

      if (numColumns > 1) {
        var ret = [];
        for (var kk = 0; kk < numColumns; kk++) {
          var _item = data[index * numColumns + kk];
          _item && ret.push(_item);
        }
        return ret;
      } else {
        return data[index];
      }
    }, _this._getItemCount = function (data) {
      return data ? Math.ceil(data.length / _this.props.numColumns) : 0;
    }, _this._keyExtractor = function (items, index) {
      var _this$props = _this.props,
          keyExtractor = _this$props.keyExtractor,
          numColumns = _this$props.numColumns;

      if (numColumns > 1) {
        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);
        return items.map(function (it, kk) {
          return keyExtractor(it, index * numColumns + kk);
        }).join(':');
      } else {
        return keyExtractor(items, index);
      }
    }, _this._onViewableItemsChanged = function (info) {
      var _this$props2 = _this.props,
          numColumns = _this$props2.numColumns,
          onViewableItemsChanged = _this$props2.onViewableItemsChanged;

      if (!onViewableItemsChanged) {
        return;
      }
      if (numColumns > 1) {
        var _changed = [];
        var _viewableItems = [];
        info.viewableItems.forEach(function (v) {
          return _this._pushMultiColumnViewable(_viewableItems, v);
        });
        info.changed.forEach(function (v) {
          return _this._pushMultiColumnViewable(_changed, v);
        });
        onViewableItemsChanged({ viewableItems: _viewableItems, changed: _changed });
      } else {
        onViewableItemsChanged(info);
      }
    }, _this._renderItem = function (info) {
      var _this$props3 = _this.props,
          renderItem = _this$props3.renderItem,
          numColumns = _this$props3.numColumns,
          columnWrapperStyle = _this$props3.columnWrapperStyle;

      if (numColumns > 1) {
        var _item2 = info.item,
            _index = info.index;

        invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');
        return React.createElement(
          View,
          { style: [{ flexDirection: 'row' }, columnWrapperStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 529
            }
          },
          _item2.map(function (it, kk) {
            var element = renderItem({
              item: it,
              index: _index * numColumns + kk,
              separators: info.separators
            });
            return element && React.cloneElement(element, { key: kk });
          })
        );
      } else {
        return renderItem(info);
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(FlatList, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      this._listRef.scrollToEnd(params);
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      this._listRef.scrollToIndex(params);
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      this._listRef.scrollToItem(params);
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      this._listRef.scrollToOffset(params);
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._listRef.recordInteraction();
    }
  }, {
    key: 'flashScrollIndicators',
    value: function flashScrollIndicators() {
      this._listRef.flashScrollIndicators();
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._listRef) {
        return this._listRef.getScrollResponder();
      }
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      if (this._listRef) {
        return this._listRef.getScrollableNode();
      }
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      if (this._listRef) {
        this._listRef.setNativeProps(props);
      }
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._checkProps(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      invariant(nextProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');
      this._checkProps(nextProps);
    }
  }, {
    key: '_checkProps',
    value: function _checkProps(props) {
      var getItem = props.getItem,
          getItemCount = props.getItemCount,
          horizontal = props.horizontal,
          legacyImplementation = props.legacyImplementation,
          numColumns = props.numColumns,
          columnWrapperStyle = props.columnWrapperStyle;

      invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');
      if (numColumns > 1) {
        invariant(!horizontal, 'numColumns does not support horizontal.');
      } else {
        invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');
      }
      if (legacyImplementation) {
        invariant(numColumns === 1, 'Legacy list does not support multiple columns.');

        if (!this._hasWarnedLegacy) {
          console.warn('FlatList: Using legacyImplementation - some features not supported and performance ' + 'may suffer');
          this._hasWarnedLegacy = true;
        }
      }
    }
  }, {
    key: '_pushMultiColumnViewable',
    value: function _pushMultiColumnViewable(arr, v) {
      var _props = this.props,
          numColumns = _props.numColumns,
          keyExtractor = _props.keyExtractor;

      v.item.forEach(function (item, ii) {
        invariant(v.index != null, 'Missing index!');
        var index = v.index * numColumns + ii;
        arr.push(babelHelpers.extends({}, v, { item: item, key: keyExtractor(item, index), index: index }));
      });
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.legacyImplementation) {
        return React.createElement(MetroListView, babelHelpers.extends({}, this.props, {
          items: this.props.data,
          ref: this._captureRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 548
          }
        }));
      } else {
        return React.createElement(VirtualizedList, babelHelpers.extends({}, this.props, {
          renderItem: this._renderItem,
          getItem: this._getItem,
          getItemCount: this._getItemCount,
          keyExtractor: this._keyExtractor,
          ref: this._captureRef,
          onViewableItemsChanged: this.props.onViewableItemsChanged && this._onViewableItemsChanged,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 556
          }
        }));
      }
    }
  }]);
  return FlatList;
}(React.PureComponent);

FlatList.defaultProps = defaultProps;


module.exports = FlatList;
}, 214, null, "FlatList");
__d(/* MetroListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Lists\\MetroListView.js';
var ListView = require(216       ); // 216 = ListView
var React = require(125    ); // 125 = React
var RefreshControl = require(221             ); // 221 = RefreshControl
var ScrollView = require(202         ); // 202 = ScrollView

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var MetroListView = function (_React$Component) {
  babelHelpers.inherits(MetroListView, _React$Component);

  function MetroListView() {
    var _ref,
        _this2 = this;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, MetroListView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = MetroListView.__proto__ || Object.getPrototypeOf(MetroListView)).call.apply(_ref, [this].concat(args))), _this), _this.state = _this._computeState(_this.props, {
      ds: new ListView.DataSource({
        rowHasChanged: function rowHasChanged(itemA, itemB) {
          return true;
        },
        sectionHeaderHasChanged: function sectionHeaderHasChanged() {
          return true;
        },
        getSectionHeaderData: function getSectionHeaderData(dataBlob, sectionID) {
          return _this.state.sectionHeaderData[sectionID];
        }
      }),
      sectionHeaderData: {}
    }), _this._captureRef = function (ref) {
      _this._listRef = ref;
    }, _this._renderFooter = function () {
      return React.createElement(_this2.props.FooterComponent, { key: '$footer', __source: {
          fileName: _jsxFileName,
          lineNumber: 174
        }
      });
    }, _this._renderRow = function (item, sectionID, rowID, highlightRow) {
      return _this.props.renderItem({ item: item, index: rowID });
    }, _this._renderSectionHeader = function (section, sectionID) {
      var renderSectionHeader = _this.props.renderSectionHeader;

      invariant(renderSectionHeader, 'Must provide renderSectionHeader with sections prop');
      return renderSectionHeader({ section: section });
    }, _this._renderSeparator = function (sID, rID) {
      return React.createElement(_this2.props.SeparatorComponent, { key: sID + rID, __source: {
          fileName: _jsxFileName,
          lineNumber: 187
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(MetroListView, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      throw new Error('scrollToEnd not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      throw new Error('scrollToIndex not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      throw new Error('scrollToItem not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToLocation',
    value: function scrollToLocation(params) {
      throw new Error('scrollToLocation not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      var animated = params.animated,
          offset = params.offset;

      this._listRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'getListRef',
    value: function getListRef() {
      return this._listRef;
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      if (this._listRef) {
        this._listRef.setNativeProps(props);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      var _this3 = this;

      this.setState(function (state) {
        return _this3._computeState(newProps, state);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(ListView, babelHelpers.extends({}, this.props, {
        dataSource: this.state.ds,
        ref: this._captureRef,
        renderRow: this._renderRow,
        renderFooter: this.props.FooterComponent && this._renderFooter,
        renderSectionHeader: this.props.sections && this._renderSectionHeader,
        renderSeparator: this.props.SeparatorComponent && this._renderSeparator,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 137
        }
      }));
    }
  }, {
    key: '_computeState',
    value: function _computeState(props, state) {
      var sectionHeaderData = {};
      if (props.sections) {
        invariant(!props.items, 'Cannot have both sections and items props.');
        var _sections = {};
        props.sections.forEach(function (sectionIn, ii) {
          var sectionID = 's' + ii;
          _sections[sectionID] = sectionIn.data;
          sectionHeaderData[sectionID] = sectionIn;
        });
        return {
          ds: state.ds.cloneWithRowsAndSections(_sections),
          sectionHeaderData: sectionHeaderData
        };
      } else {
        invariant(!props.sections, 'Cannot have both sections and items props.');
        return {
          ds: state.ds.cloneWithRows(props.items),
          sectionHeaderData: sectionHeaderData
        };
      }
    }
  }]);
  return MetroListView;
}(React.Component);

MetroListView.defaultProps = {
  keyExtractor: function keyExtractor(item, index) {
    return item.key || String(index);
  },
  renderScrollComponent: function renderScrollComponent(props) {
    if (props.onRefresh) {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        refreshControl: React.createElement(RefreshControl, {
          refreshing: props.refreshing,
          onRefresh: props.onRefresh,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 111
          }
        }),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 108
        }
      }));
    } else {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 119
        }
      }));
    }
  }
};


module.exports = MetroListView;
}, 215, null, "MetroListView");
__d(/* ListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Lists\\ListView\\ListView.js';
var ListViewDataSource = require(217                 ); // 217 = ListViewDataSource
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ReactNative = require(62           ); // 62 = ReactNative
var RCTScrollViewManager = require(28             ).ScrollViewManager; // 28 = NativeModules
var ScrollView = require(202         ); // 202 = ScrollView
var ScrollResponder = require(204              ); // 204 = ScrollResponder
var StaticRenderer = require(219             ); // 219 = StaticRenderer
var TimerMixin = require(186                ); // 186 = react-timer-mixin
var View = require(124   ); // 124 = View

var cloneReferencedElement = require(220                             ); // 220 = react-clone-referenced-element
var createReactClass = require(150                 ); // 150 = create-react-class
var isEmpty = require(218      ); // 218 = isEmpty
var merge = require(144    ); // 144 = merge

var DEFAULT_PAGE_SIZE = 1;
var DEFAULT_INITIAL_ROWS = 10;
var DEFAULT_SCROLL_RENDER_AHEAD = 1000;
var DEFAULT_END_REACHED_THRESHOLD = 1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE = 50;

var ListView = createReactClass({
  displayName: 'ListView',
  _childFrames: [],
  _sentEndForContentLength: null,
  _scrollComponent: null,
  _prevRenderedRowsCount: 0,
  _visibleRows: {},
  scrollProperties: {},

  mixins: [ScrollResponder.Mixin, TimerMixin],

  statics: {
    DataSource: ListViewDataSource
  },

  propTypes: babelHelpers.extends({}, ScrollView.propTypes, {
    dataSource: PropTypes.instanceOf(ListViewDataSource).isRequired,

    renderSeparator: PropTypes.func,

    renderRow: PropTypes.func.isRequired,

    initialListSize: PropTypes.number.isRequired,

    onEndReached: PropTypes.func,

    onEndReachedThreshold: PropTypes.number.isRequired,

    pageSize: PropTypes.number.isRequired,

    renderFooter: PropTypes.func,
    renderHeader: PropTypes.func,

    renderSectionHeader: PropTypes.func,

    renderScrollComponent: PropTypes.func.isRequired,

    scrollRenderAheadDistance: PropTypes.number.isRequired,

    onChangeVisibleRows: PropTypes.func,

    removeClippedSubviews: PropTypes.bool,

    stickySectionHeadersEnabled: PropTypes.bool,

    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number).isRequired,

    enableEmptySections: PropTypes.bool
  }),

  getMetrics: function getMetrics() {
    return {
      contentLength: this.scrollProperties.contentLength,
      totalRows: this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount(),
      renderedRows: this.state.curRenderedRowsCount,
      visibleRows: Object.keys(this._visibleRows).length
    };
  },

  getScrollResponder: function getScrollResponder() {
    if (this._scrollComponent && this._scrollComponent.getScrollResponder) {
      return this._scrollComponent.getScrollResponder();
    }
  },

  getScrollableNode: function getScrollableNode() {
    if (this._scrollComponent && this._scrollComponent.getScrollableNode) {
      return this._scrollComponent.getScrollableNode();
    } else {
      return ReactNative.findNodeHandle(this._scrollComponent);
    }
  },

  scrollTo: function scrollTo() {
    if (this._scrollComponent && this._scrollComponent.scrollTo) {
      var _scrollComponent;

      (_scrollComponent = this._scrollComponent).scrollTo.apply(_scrollComponent, arguments);
    }
  },

  scrollToEnd: function scrollToEnd(options) {
    if (this._scrollComponent) {
      if (this._scrollComponent.scrollToEnd) {
        this._scrollComponent.scrollToEnd(options);
      } else {
        console.warn('The scroll component used by the ListView does not support ' + 'scrollToEnd. Check the renderScrollComponent prop of your ListView.');
      }
    }
  },

  flashScrollIndicators: function flashScrollIndicators() {
    if (this._scrollComponent && this._scrollComponent.flashScrollIndicators) {
      this._scrollComponent.flashScrollIndicators();
    }
  },

  setNativeProps: function setNativeProps(props) {
    if (this._scrollComponent) {
      this._scrollComponent.setNativeProps(props);
    }
  },

  getDefaultProps: function getDefaultProps() {
    return {
      initialListSize: DEFAULT_INITIAL_ROWS,
      pageSize: DEFAULT_PAGE_SIZE,
      renderScrollComponent: function renderScrollComponent(props) {
        return React.createElement(ScrollView, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 324
          }
        }));
      },
      scrollRenderAheadDistance: DEFAULT_SCROLL_RENDER_AHEAD,
      onEndReachedThreshold: DEFAULT_END_REACHED_THRESHOLD,
      stickySectionHeadersEnabled: Platform.OS === 'ios',
      stickyHeaderIndices: []
    };
  },

  getInitialState: function getInitialState() {
    return {
      curRenderedRowsCount: this.props.initialListSize,
      highlightedRow: {}
    };
  },

  getInnerViewNode: function getInnerViewNode() {
    return this._scrollComponent.getInnerViewNode();
  },

  componentWillMount: function componentWillMount() {
    this.scrollProperties = {
      visibleLength: null,
      contentLength: null,
      offset: 0
    };
    this._childFrames = [];
    this._visibleRows = {};
    this._prevRenderedRowsCount = 0;
    this._sentEndForContentLength = null;
  },

  componentDidMount: function componentDidMount() {
    var _this = this;

    this.requestAnimationFrame(function () {
      _this._measureAndUpdateScrollProps();
    });
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var _this2 = this;

    if (this.props.dataSource !== nextProps.dataSource || this.props.initialListSize !== nextProps.initialListSize) {
      this.setState(function (state, props) {
        _this2._prevRenderedRowsCount = 0;
        return {
          curRenderedRowsCount: Math.min(Math.max(state.curRenderedRowsCount, props.initialListSize), props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount())
        };
      }, function () {
        return _this2._renderMoreRowsIfNeeded();
      });
    }
  },

  componentDidUpdate: function componentDidUpdate() {
    var _this3 = this;

    this.requestAnimationFrame(function () {
      _this3._measureAndUpdateScrollProps();
    });
  },

  _onRowHighlighted: function _onRowHighlighted(sectionID, rowID) {
    this.setState({ highlightedRow: { sectionID: sectionID, rowID: rowID } });
  },

  render: function render() {
    var bodyComponents = [];

    var dataSource = this.props.dataSource;
    var allRowIDs = dataSource.rowIdentities;
    var rowCount = 0;
    var stickySectionHeaderIndices = [];

    var renderSectionHeader = this.props.renderSectionHeader;


    var header = this.props.renderHeader && this.props.renderHeader();
    var footer = this.props.renderFooter && this.props.renderFooter();
    var totalIndex = header ? 1 : 0;

    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var sectionID = dataSource.sectionIdentities[sectionIdx];
      var rowIDs = allRowIDs[sectionIdx];
      if (rowIDs.length === 0) {
        if (this.props.enableEmptySections === undefined) {
          var warning = require(15                ); // 15 = fbjs/lib/warning
          warning(false, 'In next release empty section headers will be rendered.' + " In this release you can use 'enableEmptySections' flag to render empty section headers.");
          continue;
        } else {
          var invariant = require(18                  ); // 18 = fbjs/lib/invariant
          invariant(this.props.enableEmptySections, "In next release 'enableEmptySections' flag will be deprecated, empty section headers will always be rendered." + ' If empty section headers are not desirable their indices should be excluded from sectionIDs object.' + " In this release 'enableEmptySections' may only have value 'true' to allow empty section headers rendering.");
        }
      }

      if (renderSectionHeader) {
        var element = renderSectionHeader(dataSource.getSectionHeaderData(sectionIdx), sectionID);
        if (element) {
          bodyComponents.push(React.cloneElement(element, { key: 's_' + sectionID }));
          if (this.props.stickySectionHeadersEnabled) {
            stickySectionHeaderIndices.push(totalIndex);
          }
          totalIndex++;
        }
      }

      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
        var rowID = rowIDs[rowIdx];
        var comboID = sectionID + '_' + rowID;
        var shouldUpdateRow = rowCount >= this._prevRenderedRowsCount && dataSource.rowShouldUpdate(sectionIdx, rowIdx);
        var row = React.createElement(StaticRenderer, {
          key: 'r_' + comboID,
          shouldUpdate: !!shouldUpdateRow,
          render: this.props.renderRow.bind(null, dataSource.getRowData(sectionIdx, rowIdx), sectionID, rowID, this._onRowHighlighted),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 456
          }
        });
        bodyComponents.push(row);
        totalIndex++;

        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
          var adjacentRowHighlighted = this.state.highlightedRow.sectionID === sectionID && (this.state.highlightedRow.rowID === rowID || this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);
          var separator = this.props.renderSeparator(sectionID, rowID, adjacentRowHighlighted);
          if (separator) {
            bodyComponents.push(React.createElement(
              View,
              { key: 's_' + comboID, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 486
                }
              },
              separator
            ));
            totalIndex++;
          }
        }
        if (++rowCount === this.state.curRenderedRowsCount) {
          break;
        }
      }
      if (rowCount >= this.state.curRenderedRowsCount) {
        break;
      }
    }

    var _props = this.props,
        renderScrollComponent = _props.renderScrollComponent,
        props = babelHelpers.objectWithoutProperties(_props, ['renderScrollComponent']);

    if (!props.scrollEventThrottle) {
      props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;
    }
    if (props.removeClippedSubviews === undefined) {
      props.removeClippedSubviews = true;
    }
    babelHelpers.extends(props, {
      onScroll: this._onScroll,
      stickyHeaderIndices: this.props.stickyHeaderIndices.concat(stickySectionHeaderIndices),

      onKeyboardWillShow: undefined,
      onKeyboardWillHide: undefined,
      onKeyboardDidShow: undefined,
      onKeyboardDidHide: undefined
    });

    return cloneReferencedElement(renderScrollComponent(props), {
      ref: this._setScrollComponentRef,
      onContentSizeChange: this._onContentSizeChange,
      onLayout: this._onLayout,
      DEPRECATED_sendUpdatedChildFrames: typeof props.onChangeVisibleRows !== undefined
    }, header, bodyComponents, footer);
  },

  _measureAndUpdateScrollProps: function _measureAndUpdateScrollProps() {
    var scrollComponent = this.getScrollResponder();
    if (!scrollComponent || !scrollComponent.getInnerViewNode) {
      return;
    }

    RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && RCTScrollViewManager.calculateChildFrames(ReactNative.findNodeHandle(scrollComponent), this._updateVisibleRows);
  },

  _setScrollComponentRef: function _setScrollComponentRef(scrollComponent) {
    this._scrollComponent = scrollComponent;
  },

  _onContentSizeChange: function _onContentSizeChange(width, height) {
    var contentLength = !this.props.horizontal ? height : width;
    if (contentLength !== this.scrollProperties.contentLength) {
      this.scrollProperties.contentLength = contentLength;
      this._updateVisibleRows();
      this._renderMoreRowsIfNeeded();
    }
    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
  },

  _onLayout: function _onLayout(event) {
    var _event$nativeEvent$la = event.nativeEvent.layout,
        width = _event$nativeEvent$la.width,
        height = _event$nativeEvent$la.height;

    var visibleLength = !this.props.horizontal ? height : width;
    if (visibleLength !== this.scrollProperties.visibleLength) {
      this.scrollProperties.visibleLength = visibleLength;
      this._updateVisibleRows();
      this._renderMoreRowsIfNeeded();
    }
    this.props.onLayout && this.props.onLayout(event);
  },

  _maybeCallOnEndReached: function _maybeCallOnEndReached(event) {
    if (this.props.onEndReached && this.scrollProperties.contentLength !== this._sentEndForContentLength && this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold && this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
      this._sentEndForContentLength = this.scrollProperties.contentLength;
      this.props.onEndReached(event);
      return true;
    }
    return false;
  },

  _renderMoreRowsIfNeeded: function _renderMoreRowsIfNeeded() {
    if (this.scrollProperties.contentLength === null || this.scrollProperties.visibleLength === null || this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
      this._maybeCallOnEndReached();
      return;
    }

    var distanceFromEnd = this._getDistanceFromEnd(this.scrollProperties);
    if (distanceFromEnd < this.props.scrollRenderAheadDistance) {
      this._pageInNewRows();
    }
  },

  _pageInNewRows: function _pageInNewRows() {
    var _this4 = this;

    this.setState(function (state, props) {
      var rowsToRender = Math.min(state.curRenderedRowsCount + props.pageSize, props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount());
      _this4._prevRenderedRowsCount = state.curRenderedRowsCount;
      return {
        curRenderedRowsCount: rowsToRender
      };
    }, function () {
      _this4._measureAndUpdateScrollProps();
      _this4._prevRenderedRowsCount = _this4.state.curRenderedRowsCount;
    });
  },

  _getDistanceFromEnd: function _getDistanceFromEnd(scrollProperties) {
    return scrollProperties.contentLength - scrollProperties.visibleLength - scrollProperties.offset;
  },

  _updateVisibleRows: function _updateVisibleRows(updatedFrames) {
    var _this5 = this;

    if (!this.props.onChangeVisibleRows) {
      return;
    }
    if (updatedFrames) {
      updatedFrames.forEach(function (newFrame) {
        _this5._childFrames[newFrame.index] = merge(newFrame);
      });
    }
    var isVertical = !this.props.horizontal;
    var dataSource = this.props.dataSource;
    var visibleMin = this.scrollProperties.offset;
    var visibleMax = visibleMin + this.scrollProperties.visibleLength;
    var allRowIDs = dataSource.rowIdentities;

    var header = this.props.renderHeader && this.props.renderHeader();
    var totalIndex = header ? 1 : 0;
    var visibilityChanged = false;
    var changedRows = {};
    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var rowIDs = allRowIDs[sectionIdx];
      if (rowIDs.length === 0) {
        continue;
      }
      var sectionID = dataSource.sectionIdentities[sectionIdx];
      if (this.props.renderSectionHeader) {
        totalIndex++;
      }
      var visibleSection = this._visibleRows[sectionID];
      if (!visibleSection) {
        visibleSection = {};
      }
      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
        var rowID = rowIDs[rowIdx];
        var frame = this._childFrames[totalIndex];
        totalIndex++;
        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
          totalIndex++;
        }
        if (!frame) {
          break;
        }
        var rowVisible = visibleSection[rowID];
        var min = isVertical ? frame.y : frame.x;
        var max = min + (isVertical ? frame.height : frame.width);
        if (!min && !max || min === max) {
          break;
        }
        if (min > visibleMax || max < visibleMin) {
          if (rowVisible) {
            visibilityChanged = true;
            delete visibleSection[rowID];
            if (!changedRows[sectionID]) {
              changedRows[sectionID] = {};
            }
            changedRows[sectionID][rowID] = false;
          }
        } else if (!rowVisible) {
          visibilityChanged = true;
          visibleSection[rowID] = true;
          if (!changedRows[sectionID]) {
            changedRows[sectionID] = {};
          }
          changedRows[sectionID][rowID] = true;
        }
      }
      if (!isEmpty(visibleSection)) {
        this._visibleRows[sectionID] = visibleSection;
      } else if (this._visibleRows[sectionID]) {
        delete this._visibleRows[sectionID];
      }
    }
    visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows, changedRows);
  },

  _onScroll: function _onScroll(e) {
    var isVertical = !this.props.horizontal;
    this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[isVertical ? 'height' : 'width'];
    this.scrollProperties.contentLength = e.nativeEvent.contentSize[isVertical ? 'height' : 'width'];
    this.scrollProperties.offset = e.nativeEvent.contentOffset[isVertical ? 'y' : 'x'];
    this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
    if (!this._maybeCallOnEndReached(e)) {
      this._renderMoreRowsIfNeeded();
    }

    if (this.props.onEndReached && this._getDistanceFromEnd(this.scrollProperties) > this.props.onEndReachedThreshold) {
      this._sentEndForContentLength = null;
    }

    this.props.onScroll && this.props.onScroll(e);
  }
});

module.exports = ListView;
}, 216, null, "ListView");
__d(/* ListViewDataSource */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var isEmpty = require(218      ); // 218 = isEmpty
var warning = require(15                ); // 15 = fbjs/lib/warning

function defaultGetRowData(dataBlob, sectionID, rowID) {
  return dataBlob[sectionID][rowID];
}

function defaultGetSectionHeaderData(dataBlob, sectionID) {
  return dataBlob[sectionID];
}

var ListViewDataSource = function () {
  function ListViewDataSource(params) {
    babelHelpers.classCallCheck(this, ListViewDataSource);

    invariant(params && typeof params.rowHasChanged === 'function', 'Must provide a rowHasChanged function.');
    this._rowHasChanged = params.rowHasChanged;
    this._getRowData = params.getRowData || defaultGetRowData;
    this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
    this._getSectionHeaderData = params.getSectionHeaderData || defaultGetSectionHeaderData;

    this._dataBlob = null;
    this._dirtyRows = [];
    this._dirtySections = [];
    this._cachedRowCount = 0;

    this.rowIdentities = [];
    this.sectionIdentities = [];
  }

  babelHelpers.createClass(ListViewDataSource, [{
    key: 'cloneWithRows',
    value: function cloneWithRows(dataBlob, rowIdentities) {
      var rowIds = rowIdentities ? [[].concat(babelHelpers.toConsumableArray(rowIdentities))] : null;
      if (!this._sectionHeaderHasChanged) {
        this._sectionHeaderHasChanged = function () {
          return false;
        };
      }
      return this.cloneWithRowsAndSections({ s1: dataBlob }, ['s1'], rowIds);
    }
  }, {
    key: 'cloneWithRowsAndSections',
    value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
      invariant(typeof this._sectionHeaderHasChanged === 'function', 'Must provide a sectionHeaderHasChanged function with section data.');
      invariant(!sectionIdentities || !rowIdentities || sectionIdentities.length === rowIdentities.length, 'row and section ids lengths must be the same');

      var newSource = new ListViewDataSource({
        getRowData: this._getRowData,
        getSectionHeaderData: this._getSectionHeaderData,
        rowHasChanged: this._rowHasChanged,
        sectionHeaderHasChanged: this._sectionHeaderHasChanged
      });
      newSource._dataBlob = dataBlob;
      if (sectionIdentities) {
        newSource.sectionIdentities = sectionIdentities;
      } else {
        newSource.sectionIdentities = Object.keys(dataBlob);
      }
      if (rowIdentities) {
        newSource.rowIdentities = rowIdentities;
      } else {
        newSource.rowIdentities = [];
        newSource.sectionIdentities.forEach(function (sectionID) {
          newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));
        });
      }
      newSource._cachedRowCount = countRows(newSource.rowIdentities);

      newSource._calculateDirtyArrays(this._dataBlob, this.sectionIdentities, this.rowIdentities);

      return newSource;
    }
  }, {
    key: 'getRowCount',
    value: function getRowCount() {
      return this._cachedRowCount;
    }
  }, {
    key: 'getRowAndSectionCount',
    value: function getRowAndSectionCount() {
      return this._cachedRowCount + this.sectionIdentities.length;
    }
  }, {
    key: 'rowShouldUpdate',
    value: function rowShouldUpdate(sectionIndex, rowIndex) {
      var needsUpdate = this._dirtyRows[sectionIndex][rowIndex];
      warning(needsUpdate !== undefined, 'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
      return needsUpdate;
    }
  }, {
    key: 'getRowData',
    value: function getRowData(sectionIndex, rowIndex) {
      var sectionID = this.sectionIdentities[sectionIndex];
      var rowID = this.rowIdentities[sectionIndex][rowIndex];
      warning(sectionID !== undefined && rowID !== undefined, 'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);
      return this._getRowData(this._dataBlob, sectionID, rowID);
    }
  }, {
    key: 'getRowIDForFlatIndex',
    value: function getRowIDForFlatIndex(index) {
      var accessIndex = index;
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        if (accessIndex >= this.rowIdentities[ii].length) {
          accessIndex -= this.rowIdentities[ii].length;
        } else {
          return this.rowIdentities[ii][accessIndex];
        }
      }
      return null;
    }
  }, {
    key: 'getSectionIDForFlatIndex',
    value: function getSectionIDForFlatIndex(index) {
      var accessIndex = index;
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        if (accessIndex >= this.rowIdentities[ii].length) {
          accessIndex -= this.rowIdentities[ii].length;
        } else {
          return this.sectionIdentities[ii];
        }
      }
      return null;
    }
  }, {
    key: 'getSectionLengths',
    value: function getSectionLengths() {
      var results = [];
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        results.push(this.rowIdentities[ii].length);
      }
      return results;
    }
  }, {
    key: 'sectionHeaderShouldUpdate',
    value: function sectionHeaderShouldUpdate(sectionIndex) {
      var needsUpdate = this._dirtySections[sectionIndex];
      warning(needsUpdate !== undefined, 'missing dirtyBit for section: ' + sectionIndex);
      return needsUpdate;
    }
  }, {
    key: 'getSectionHeaderData',
    value: function getSectionHeaderData(sectionIndex) {
      if (!this._getSectionHeaderData) {
        return null;
      }
      var sectionID = this.sectionIdentities[sectionIndex];
      warning(sectionID !== undefined, 'renderSection called on invalid section: ' + sectionIndex);
      return this._getSectionHeaderData(this._dataBlob, sectionID);
    }
  }, {
    key: '_calculateDirtyArrays',
    value: function _calculateDirtyArrays(prevDataBlob, prevSectionIDs, prevRowIDs) {
      var prevSectionsHash = keyedDictionaryFromArray(prevSectionIDs);
      var prevRowsHash = {};
      for (var ii = 0; ii < prevRowIDs.length; ii++) {
        var sectionID = prevSectionIDs[ii];
        warning(!prevRowsHash[sectionID], 'SectionID appears more than once: ' + sectionID);
        prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);
      }

      this._dirtySections = [];
      this._dirtyRows = [];

      var dirty;
      for (var sIndex = 0; sIndex < this.sectionIdentities.length; sIndex++) {
        var sectionID = this.sectionIdentities[sIndex];

        dirty = !prevSectionsHash[sectionID];
        var sectionHeaderHasChanged = this._sectionHeaderHasChanged;
        if (!dirty && sectionHeaderHasChanged) {
          dirty = sectionHeaderHasChanged(this._getSectionHeaderData(prevDataBlob, sectionID), this._getSectionHeaderData(this._dataBlob, sectionID));
        }
        this._dirtySections.push(!!dirty);

        this._dirtyRows[sIndex] = [];
        for (var rIndex = 0; rIndex < this.rowIdentities[sIndex].length; rIndex++) {
          var rowID = this.rowIdentities[sIndex][rIndex];

          dirty = !prevSectionsHash[sectionID] || !prevRowsHash[sectionID][rowID] || this._rowHasChanged(this._getRowData(prevDataBlob, sectionID, rowID), this._getRowData(this._dataBlob, sectionID, rowID));
          this._dirtyRows[sIndex].push(!!dirty);
        }
      }
    }
  }]);
  return ListViewDataSource;
}();

function countRows(allRowIDs) {
  var totalRows = 0;
  for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
    var rowIDs = allRowIDs[sectionIdx];
    totalRows += rowIDs.length;
  }
  return totalRows;
}

function keyedDictionaryFromArray(arr) {
  if (isEmpty(arr)) {
    return {};
  }
  var result = {};
  for (var ii = 0; ii < arr.length; ii++) {
    var key = arr[ii];
    warning(!result[key], 'Value appears more than once in array: ' + key);
    result[key] = true;
  }
  return result;
}

module.exports = ListViewDataSource;
}, 217, null, "ListViewDataSource");
__d(/* isEmpty */function(global, require, module, exports) {
'use strict';

function isEmpty(obj) {
  if (Array.isArray(obj)) {
    return obj.length === 0;
  } else if (typeof obj === 'object') {
    for (var i in obj) {
      return false;
    }
    return true;
  } else {
    return !obj;
  }
}

module.exports = isEmpty;
}, 218, null, "isEmpty");
__d(/* StaticRenderer */function(global, require, module, exports) {
'use strict';

var React = require(125    ); // 125 = React

var PropTypes = require(19          ); // 19 = prop-types

var StaticRenderer = function (_React$Component) {
  babelHelpers.inherits(StaticRenderer, _React$Component);

  function StaticRenderer() {
    babelHelpers.classCallCheck(this, StaticRenderer);
    return babelHelpers.possibleConstructorReturn(this, (StaticRenderer.__proto__ || Object.getPrototypeOf(StaticRenderer)).apply(this, arguments));
  }

  babelHelpers.createClass(StaticRenderer, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.shouldUpdate;
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.render();
    }
  }]);
  return StaticRenderer;
}(React.Component);

StaticRenderer.propTypes = {
  shouldUpdate: PropTypes.bool.isRequired,
  render: PropTypes.func.isRequired
};


module.exports = StaticRenderer;
}, 219, null, "StaticRenderer");
__d(/* react-clone-referenced-element/cloneReferencedElement.js */function(global, require, module, exports) {'use strict';

var React = require(12     ); // 12 = react

function cloneReferencedElement(element, config) {
  var cloneRef = config.ref;
  var originalRef = element.ref;

  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    children[_key - 2] = arguments[_key];
  }

  if (originalRef == null || cloneRef == null) {
    return React.cloneElement.apply(React, [element, config].concat(children));
  }

  if (typeof originalRef !== 'function') {
    if (__DEV__) {
      console.warn('Cloning an element with a ref that will be overwritten because it ' + 'is not a function. Use a composable callback-style ref instead. ' + 'Ignoring ref: ' + originalRef);
    }
    return React.cloneElement.apply(React, [element, config].concat(children));
  }

  return React.cloneElement.apply(React, [element, babelHelpers.extends({}, config, {
    ref: function ref(component) {
      cloneRef(component);
      originalRef(component);
    }
  })].concat(children));
}

module.exports = cloneReferencedElement;
}, 220, null, "react-clone-referenced-element/cloneReferencedElement.js");
__d(/* RefreshControl */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\RefreshControl\\RefreshControl.js';
var ColorPropType = require(59             ); // 59 = ColorPropType
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var createReactClass = require(150                 ); // 150 = create-react-class
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent

if (Platform.OS === 'android') {
  var RefreshLayoutConsts = require(54         ).AndroidSwipeRefreshLayout.Constants; // 54 = UIManager
} else {
  var RefreshLayoutConsts = { SIZE: {} };
}

var RefreshControl = createReactClass({
  displayName: 'RefreshControl',
  statics: {
    SIZE: RefreshLayoutConsts.SIZE
  },

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    onRefresh: PropTypes.func,

    refreshing: PropTypes.bool.isRequired,

    tintColor: ColorPropType,

    titleColor: ColorPropType,

    title: PropTypes.string,

    enabled: PropTypes.bool,

    colors: PropTypes.arrayOf(ColorPropType),

    progressBackgroundColor: ColorPropType,

    size: PropTypes.oneOf([RefreshLayoutConsts.SIZE.DEFAULT, RefreshLayoutConsts.SIZE.LARGE]),

    progressViewOffset: PropTypes.number
  }),

  _nativeRef: null,
  _lastNativeRefreshing: false,

  componentDidMount: function componentDidMount() {
    this._lastNativeRefreshing = this.props.refreshing;
  },
  componentDidUpdate: function componentDidUpdate(prevProps) {
    if (this.props.refreshing !== prevProps.refreshing) {
      this._lastNativeRefreshing = this.props.refreshing;
    } else if (this.props.refreshing !== this._lastNativeRefreshing) {
      this._nativeRef.setNativeProps({ refreshing: this.props.refreshing });
      this._lastNativeRefreshing = this.props.refreshing;
    }
  },
  render: function render() {
    var _this = this;

    return React.createElement(NativeRefreshControl, babelHelpers.extends({}, this.props, {
      ref: function ref(_ref) {
        _this._nativeRef = _ref;
      },
      onRefresh: this._onRefresh,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 157
      }
    }));
  },
  _onRefresh: function _onRefresh() {
    this._lastNativeRefreshing = true;

    this.props.onRefresh && this.props.onRefresh();

    this.forceUpdate();
  }
});

if (Platform.OS === 'ios') {
  var NativeRefreshControl = requireNativeComponent('RCTRefreshControl', RefreshControl);
} else if (Platform.OS === 'android') {
  var NativeRefreshControl = requireNativeComponent('AndroidSwipeRefreshLayout', RefreshControl);
}

module.exports = RefreshControl;
}, 221, null, "RefreshControl");
__d(/* VirtualizedList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Lists\\VirtualizedList.js';
var Batchinator = require(223          ); // 223 = Batchinator
var FillRateHelper = require(224             ); // 224 = FillRateHelper
var PropTypes = require(19          ); // 19 = prop-types
var React = require(125    ); // 125 = React
var ReactNative = require(62           ); // 62 = ReactNative
var RefreshControl = require(221             ); // 221 = RefreshControl
var ScrollView = require(202         ); // 202 = ScrollView
var StyleSheet = require(153         ); // 153 = StyleSheet
var View = require(124   ); // 124 = View
var ViewabilityHelper = require(225                ); // 225 = ViewabilityHelper

var flattenStyle = require(114           ); // 114 = flattenStyle
var infoLog = require(108      ); // 108 = infoLog
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var warning = require(15                ); // 15 = fbjs/lib/warning

var _require = require(226              ), // 226 = VirtualizeUtils
    computeWindowedRenderLimits = _require.computeWindowedRenderLimits;

var _usedIndexForKey = false;

var VirtualizedList = function (_React$PureComponent) {
  babelHelpers.inherits(VirtualizedList, _React$PureComponent);
  babelHelpers.createClass(VirtualizedList, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      var animated = params ? params.animated : true;
      var veryLast = this.props.getItemCount(this.props.data) - 1;
      var frame = this._getFrameMetricsApprox(veryLast);
      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);
      this._scrollRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      var _props = this.props,
          data = _props.data,
          horizontal = _props.horizontal,
          getItemCount = _props.getItemCount,
          getItemLayout = _props.getItemLayout;
      var animated = params.animated,
          index = params.index,
          viewOffset = params.viewOffset,
          viewPosition = params.viewPosition;

      invariant(index >= 0 && index < getItemCount(data), 'scrollToIndex out of range: ' + index + ' vs ' + (getItemCount(data) - 1));
      invariant(getItemLayout || index < this._highestMeasuredFrameIndex, 'scrollToIndex should be used in conjunction with getItemLayout, ' + 'otherwise there is no way to know the location of an arbitrary index.');
      var frame = this._getFrameMetricsApprox(index);
      var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);
      this._scrollRef.scrollTo(horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      var item = params.item;
      var _props2 = this.props,
          data = _props2.data,
          getItem = _props2.getItem,
          getItemCount = _props2.getItemCount;

      var itemCount = getItemCount(data);
      for (var _index = 0; _index < itemCount; _index++) {
        if (getItem(data, _index) === item) {
          this.scrollToIndex(babelHelpers.extends({}, params, { index: _index }));
          break;
        }
      }
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      var animated = params.animated,
          offset = params.offset;

      this._scrollRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._viewabilityHelper.recordInteraction();
      this._updateViewableItems(this.props.data);
    }
  }, {
    key: 'flashScrollIndicators',
    value: function flashScrollIndicators() {
      this._scrollRef.flashScrollIndicators();
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._scrollRef && this._scrollRef.getScrollResponder) {
        return this._scrollRef.getScrollResponder();
      }
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      if (this._scrollRef && this._scrollRef.getScrollableNode) {
        return this._scrollRef.getScrollableNode();
      } else {
        return ReactNative.findNodeHandle(this._scrollRef);
      }
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      if (this._scrollRef) {
        this._scrollRef.setNativeProps(props);
      }
    }
  }, {
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        virtualizedList: {
          horizontal: this.props.horizontal
        }
      };
    }
  }]);

  function VirtualizedList(props, context) {
    babelHelpers.classCallCheck(this, VirtualizedList);

    var _this = babelHelpers.possibleConstructorReturn(this, (VirtualizedList.__proto__ || Object.getPrototypeOf(VirtualizedList)).call(this, props, context));

    _initialiseProps.call(_this);

    invariant(!props.onScroll || !props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');
    invariant(!(_this._isNestedWithSameOrientation() && props.onViewableItemsChanged), 'Nesting lists that scroll in the same direction does not support onViewableItemsChanged' + 'on the inner list.');

    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);
    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);
    _this._viewabilityHelper = new ViewabilityHelper(_this.props.viewabilityConfig);
    _this.state = {
      first: _this.props.initialScrollIndex || 0,
      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1
    };
    return _this;
  }

  babelHelpers.createClass(VirtualizedList, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (this.props.initialScrollIndex) {
        this._initialScrollIndexTimeout = setTimeout(function () {
          return _this2.scrollToIndex({
            animated: false,
            index: _this2.props.initialScrollIndex
          });
        }, 0);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._updateViewableItems(null);
      this._updateCellsToRenderBatcher.dispose();
      this._viewabilityHelper.dispose();
      this._fillRateHelper.deactivateAndFlush();
      clearTimeout(this._initialScrollIndexTimeout);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      var data = newProps.data,
          extraData = newProps.extraData,
          getItemCount = newProps.getItemCount,
          maxToRenderPerBatch = newProps.maxToRenderPerBatch;

      this.setState({
        first: Math.max(0, Math.min(this.state.first, getItemCount(data) - 1 - maxToRenderPerBatch)),
        last: Math.max(0, Math.min(this.state.last, getItemCount(data) - 1))
      });
      if (data !== this.props.data || extraData !== this.props.extraData) {
        this._hasDataChangedSinceEndReached = true;
      }
    }
  }, {
    key: '_pushCells',
    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {
      var _this3 = this;

      var _props3 = this.props,
          ItemSeparatorComponent = _props3.ItemSeparatorComponent,
          data = _props3.data,
          getItem = _props3.getItem,
          getItemCount = _props3.getItemCount,
          keyExtractor = _props3.keyExtractor;

      var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;
      var end = getItemCount(data) - 1;
      var prevCellKey = void 0;
      last = Math.min(end, last);

      var _loop = function _loop(ii) {
        var item = getItem(data, ii);
        invariant(item, 'No item for index ' + ii);
        var key = keyExtractor(item, ii);
        if (stickyIndicesFromProps.has(ii + stickyOffset)) {
          stickyHeaderIndices.push(cells.length);
        }
        cells.push(React.createElement(CellRenderer, {
          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,
          cellKey: key,
          fillRateHelper: _this3._fillRateHelper,
          index: ii,
          inversionStyle: inversionStyle,
          item: item,
          key: key,
          prevCellKey: prevCellKey,
          onUpdateSeparators: _this3._onUpdateSeparators,
          onLayout: function onLayout(e) {
            return _this3._onCellLayout(e, key, ii);
          },
          onUnmount: _this3._onCellUnmount,
          parentProps: _this3.props,
          ref: function ref(_ref) {
            _this3._cellRefs[key] = _ref;
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 463
          }
        }));
        prevCellKey = key;
      };

      for (var ii = first; ii <= last; ii++) {
        _loop(ii);
      }
    }
  }, {
    key: '_isVirtualizationDisabled',
    value: function _isVirtualizationDisabled() {
      return this.props.disableVirtualization || this._isNestedWithSameOrientation();
    }
  }, {
    key: '_isNestedWithSameOrientation',
    value: function _isNestedWithSameOrientation() {
      var nestedContext = this.context.virtualizedList;
      return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);
    }
  }, {
    key: 'render',
    value: function render() {
      if (__DEV__) {
        var flatStyles = flattenStyle(this.props.contentContainerStyle);
        warning(flatStyles == null || flatStyles.flexWrap !== 'wrap', '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');
      }

      var _props4 = this.props,
          ListEmptyComponent = _props4.ListEmptyComponent,
          ListFooterComponent = _props4.ListFooterComponent,
          ListHeaderComponent = _props4.ListHeaderComponent;
      var _props5 = this.props,
          data = _props5.data,
          horizontal = _props5.horizontal;

      var isVirtualizationDisabled = this._isVirtualizationDisabled();
      var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;
      var cells = [];
      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);
      var stickyHeaderIndices = [];
      if (ListHeaderComponent) {
        var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 533
          }
        });
        cells.push(React.createElement(
          View,
          {
            key: '$header',
            onLayout: this._onLayoutHeader,
            style: inversionStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 535
            }
          },
          element
        ));
      }
      var itemCount = this.props.getItemCount(data);
      if (itemCount > 0) {
        _usedIndexForKey = false;
        var spacerKey = !horizontal ? 'height' : 'width';
        var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;
        var _state = this.state,
            _first = _state.first,
            _last = _state.last;

        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);
        var firstAfterInitial = Math.max(lastInitialIndex + 1, _first);
        if (!isVirtualizationDisabled && _first > lastInitialIndex + 1) {
          var insertedStickySpacer = false;
          if (stickyIndicesFromProps.size > 0) {
            var stickyOffset = ListHeaderComponent ? 1 : 0;

            for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {
              if (stickyIndicesFromProps.has(ii + stickyOffset)) {
                var initBlock = this._getFrameMetricsApprox(lastInitialIndex);
                var stickyBlock = this._getFrameMetricsApprox(ii);
                var leadSpace = stickyBlock.offset - (initBlock.offset + initBlock.length);
                cells.push(React.createElement(View, { key: '$sticky_lead', style: babelHelpers.defineProperty({}, spacerKey, leadSpace), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 572
                  }
                }));
                this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);
                var trailSpace = this._getFrameMetricsApprox(_first).offset - (stickyBlock.offset + stickyBlock.length);
                cells.push(React.createElement(View, { key: '$sticky_trail', style: babelHelpers.defineProperty({}, spacerKey, trailSpace), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 586
                  }
                }));
                insertedStickySpacer = true;
                break;
              }
            }
          }
          if (!insertedStickySpacer) {
            var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);
            var firstSpace = this._getFrameMetricsApprox(_first).offset - (_initBlock.offset + _initBlock.length);
            cells.push(React.createElement(View, { key: '$lead_spacer', style: babelHelpers.defineProperty({}, spacerKey, firstSpace), __source: {
                fileName: _jsxFileName,
                lineNumber: 599
              }
            }));
          }
        }
        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, _last, inversionStyle);
        if (!this._hasWarned.keys && _usedIndexForKey) {
          console.warn('VirtualizedList: missing keys for items, make sure to specify a key property on each ' + 'item or provide a custom keyExtractor.');
          this._hasWarned.keys = true;
        }
        if (!isVirtualizationDisabled && _last < itemCount - 1) {
          var lastFrame = this._getFrameMetricsApprox(_last);

          var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);
          var endFrame = this._getFrameMetricsApprox(end);
          var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);
          cells.push(React.createElement(View, { key: '$tail_spacer', style: babelHelpers.defineProperty({}, spacerKey, tailSpacerLength), __source: {
              fileName: _jsxFileName,
              lineNumber: 632
            }
          }));
        }
      } else if (ListEmptyComponent) {
        var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 638
          }
        });
        cells.push(React.createElement(
          View,
          {
            key: '$empty',
            onLayout: this._onLayoutEmpty,
            style: inversionStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 640
            }
          },
          _element
        ));
      }
      if (ListFooterComponent) {
        var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 651
          }
        });
        cells.push(React.createElement(
          View,
          {
            key: '$footer',
            onLayout: this._onLayoutFooter,
            style: inversionStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 653
            }
          },
          _element2
        ));
      }
      var scrollProps = babelHelpers.extends({}, this.props, {
        onContentSizeChange: this._onContentSizeChange,
        onLayout: this._onLayout,
        onScroll: this._onScroll,
        onScrollBeginDrag: this._onScrollBeginDrag,
        onScrollEndDrag: this._onScrollEndDrag,
        onMomentumScrollEnd: this._onMomentumScrollEnd,
        scrollEventThrottle: this.props.scrollEventThrottle,
        stickyHeaderIndices: stickyHeaderIndices
      });
      if (inversionStyle) {
        scrollProps.style = [inversionStyle, this.props.style];
      }
      var ret = React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {
        ref: this._captureScrollRef
      }, cells);
      if (this.props.debug) {
        return React.createElement(
          View,
          { style: { flex: 1 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 686
            }
          },
          ret,
          this._renderDebugOverlay()
        );
      } else {
        return ret;
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this._scheduleCellsToRenderUpdate();
    }
  }, {
    key: '_computeBlankness',
    value: function _computeBlankness() {
      this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);
    }
  }, {
    key: '_onCellLayout',
    value: function _onCellLayout(e, cellKey, index) {
      var layout = e.nativeEvent.layout;
      var next = {
        offset: this._selectOffset(layout),
        length: this._selectLength(layout),
        index: index,
        inLayout: true
      };
      var curr = this._frames[cellKey];
      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {
        this._totalCellLength += next.length - (curr ? curr.length : 0);
        this._totalCellsMeasured += curr ? 0 : 1;
        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;
        this._frames[cellKey] = next;
        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);
        this._scheduleCellsToRenderUpdate();
      } else {
        this._frames[cellKey].inLayout = true;
      }
      this._computeBlankness();
    }
  }, {
    key: '_renderDebugOverlay',
    value: function _renderDebugOverlay() {
      var normalize = this._scrollMetrics.visibleLength / this._scrollMetrics.contentLength;
      var framesInLayout = [];
      var itemCount = this.props.getItemCount(this.props.data);
      for (var ii = 0; ii < itemCount; ii++) {
        var frame = this._getFrameMetricsApprox(ii);
        if (frame.inLayout) {
          framesInLayout.push(frame);
        }
      }
      var windowTop = this._getFrameMetricsApprox(this.state.first).offset;
      var frameLast = this._getFrameMetricsApprox(this.state.last);
      var windowLen = frameLast.offset + frameLast.length - windowTop;
      var visTop = this._scrollMetrics.offset;
      var visLen = this._scrollMetrics.visibleLength;
      var baseStyle = { position: 'absolute', top: 0, right: 0 };
      return React.createElement(
        View,
        {
          style: babelHelpers.extends({}, baseStyle, {
            bottom: 0,
            width: 20,
            borderColor: 'blue',
            borderWidth: 1
          }), __source: {
            fileName: _jsxFileName,
            lineNumber: 842
          }
        },
        framesInLayout.map(function (f, ii) {
          return React.createElement(View, {
            key: 'f' + ii,
            style: babelHelpers.extends({}, baseStyle, {
              left: 0,
              top: f.offset * normalize,
              height: f.length * normalize,
              backgroundColor: 'orange'
            }),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 851
            }
          });
        }),
        React.createElement(View, {
          style: babelHelpers.extends({}, baseStyle, {
            left: 0,
            top: windowTop * normalize,
            height: windowLen * normalize,
            borderColor: 'green',
            borderWidth: 2
          }),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 862
          }
        }),
        React.createElement(View, {
          style: babelHelpers.extends({}, baseStyle, {
            left: 0,
            top: visTop * normalize,
            height: visLen * normalize,
            borderColor: 'red',
            borderWidth: 2
          }),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 872
          }
        })
      );
    }
  }, {
    key: '_selectLength',
    value: function _selectLength(metrics) {
      return !this.props.horizontal ? metrics.height : metrics.width;
    }
  }, {
    key: '_selectOffset',
    value: function _selectOffset(metrics) {
      return !this.props.horizontal ? metrics.y : metrics.x;
    }
  }, {
    key: '_maybeCallOnEndReached',
    value: function _maybeCallOnEndReached() {
      var _props6 = this.props,
          data = _props6.data,
          getItemCount = _props6.getItemCount,
          onEndReached = _props6.onEndReached,
          onEndReachedThreshold = _props6.onEndReachedThreshold;
      var _scrollMetrics = this._scrollMetrics,
          contentLength = _scrollMetrics.contentLength,
          visibleLength = _scrollMetrics.visibleLength,
          offset = _scrollMetrics.offset;

      var distanceFromEnd = contentLength - visibleLength - offset;
      if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < onEndReachedThreshold * visibleLength && (this._hasDataChangedSinceEndReached || this._scrollMetrics.contentLength !== this._sentEndForContentLength)) {
        this._hasDataChangedSinceEndReached = false;
        this._sentEndForContentLength = this._scrollMetrics.contentLength;
        onEndReached({ distanceFromEnd: distanceFromEnd });
      }
    }
  }, {
    key: '_scheduleCellsToRenderUpdate',
    value: function _scheduleCellsToRenderUpdate() {
      var _state2 = this.state,
          first = _state2.first,
          last = _state2.last;
      var _scrollMetrics2 = this._scrollMetrics,
          offset = _scrollMetrics2.offset,
          visibleLength = _scrollMetrics2.visibleLength,
          velocity = _scrollMetrics2.velocity;

      var itemCount = this.props.getItemCount(this.props.data);
      var hiPri = false;
      if (first > 0 || last < itemCount - 1) {
        var distTop = offset - this._getFrameMetricsApprox(first).offset;
        var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);
        var scrollingThreshold = this.props.onEndReachedThreshold * visibleLength / 2;
        hiPri = Math.min(distTop, distBottom) < 0 || velocity < -2 && distTop < scrollingThreshold || velocity > 2 && distBottom < scrollingThreshold;
      }

      if (hiPri && this._averageCellLength) {
        this._updateCellsToRenderBatcher.dispose({ abort: true });
        this._updateCellsToRender();
        return;
      } else {
        this._updateCellsToRenderBatcher.schedule();
      }
    }
  }, {
    key: '_updateViewableItems',
    value: function _updateViewableItems(data) {
      var _props7 = this.props,
          getItemCount = _props7.getItemCount,
          onViewableItemsChanged = _props7.onViewableItemsChanged;

      if (!onViewableItemsChanged) {
        return;
      }
      this._viewabilityHelper.onUpdate(getItemCount(data), this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, onViewableItemsChanged, this.state);
    }
  }]);
  return VirtualizedList;
}(React.PureComponent);

VirtualizedList.defaultProps = {
  disableVirtualization: false,
  horizontal: false,
  initialNumToRender: 10,
  keyExtractor: function keyExtractor(item, index) {
    if (item.key != null) {
      return item.key;
    }
    _usedIndexForKey = true;
    return String(index);
  },
  maxToRenderPerBatch: 10,
  onEndReachedThreshold: 2,
  scrollEventThrottle: 50,
  updateCellsBatchingPeriod: 50,
  windowSize: 21 };
VirtualizedList.contextTypes = {
  virtualizedList: PropTypes.shape({
    horizontal: PropTypes.bool
  })
};
VirtualizedList.childContextTypes = {
  virtualizedList: PropTypes.shape({
    horizontal: PropTypes.bool
  })
};

var _initialiseProps = function _initialiseProps() {
  var _this5 = this;

  this._onUpdateSeparators = function (keys, newProps) {
    keys.forEach(function (key) {
      var ref = key != null && _this5._cellRefs[key];
      ref && ref.updateSeparatorProps(newProps);
    });
  };

  this._averageCellLength = 0;
  this._cellRefs = {};
  this._hasDataChangedSinceEndReached = true;
  this._hasWarned = {};
  this._highestMeasuredFrameIndex = 0;
  this._headerLength = 0;
  this._initialScrollIndexTimeout = 0;
  this._frames = {};
  this._footerLength = 0;
  this._scrollMetrics = {
    contentLength: 0,
    dOffset: 0,
    dt: 10,
    offset: 0,
    timestamp: 0,
    velocity: 0,
    visibleLength: 0
  };
  this._scrollRef = null;
  this._sentEndForContentLength = 0;
  this._totalCellLength = 0;
  this._totalCellsMeasured = 0;

  this._captureScrollRef = function (ref) {
    _this5._scrollRef = ref;
  };

  this._defaultRenderScrollComponent = function (props) {
    if (_this5._isNestedWithSameOrientation()) {
      return React.createElement(View, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 740
        }
      }));
    } else if (props.onRefresh) {
      invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        refreshControl: React.createElement(RefreshControl, {
          refreshing: props.refreshing,
          onRefresh: props.onRefresh,
          progressViewOffset: props.progressViewOffset,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 752
          }
        }),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 749
        }
      }));
    } else {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 761
        }
      }));
    }
  };

  this._onCellUnmount = function (cellKey) {
    var curr = _this5._frames[cellKey];
    if (curr) {
      _this5._frames[cellKey] = babelHelpers.extends({}, curr, { inLayout: false });
    }
  };

  this._onLayout = function (e) {
    _this5._scrollMetrics.visibleLength = _this5._selectLength(e.nativeEvent.layout);
    _this5.props.onLayout && _this5.props.onLayout(e);
    _this5._scheduleCellsToRenderUpdate();
    _this5._maybeCallOnEndReached();
  };

  this._onLayoutEmpty = function (e) {
    _this5.props.onLayout && _this5.props.onLayout(e);
  };

  this._onLayoutFooter = function (e) {
    _this5._footerLength = _this5._selectLength(e.nativeEvent.layout);
  };

  this._onLayoutHeader = function (e) {
    _this5._headerLength = _this5._selectLength(e.nativeEvent.layout);
  };

  this._onContentSizeChange = function (width, height) {
    if (_this5.props.onContentSizeChange) {
      _this5.props.onContentSizeChange(width, height);
    }
    _this5._scrollMetrics.contentLength = _this5._selectLength({ height: height, width: width });
    _this5._scheduleCellsToRenderUpdate();
    _this5._maybeCallOnEndReached();
  };

  this._onScroll = function (e) {
    if (_this5.props.onScroll) {
      _this5.props.onScroll(e);
    }
    var timestamp = e.timeStamp;
    var visibleLength = _this5._selectLength(e.nativeEvent.layoutMeasurement);
    var contentLength = _this5._selectLength(e.nativeEvent.contentSize);
    var offset = _this5._selectOffset(e.nativeEvent.contentOffset);
    var dt = _this5._scrollMetrics.timestamp ? Math.max(1, timestamp - _this5._scrollMetrics.timestamp) : 1;
    if (dt > 500 && _this5._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this5._hasWarned.perf) {
      infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', { dt: dt, prevDt: _this5._scrollMetrics.dt, contentLength: contentLength });
      _this5._hasWarned.perf = true;
    }
    var dOffset = offset - _this5._scrollMetrics.offset;
    var velocity = dOffset / dt;
    _this5._scrollMetrics = {
      contentLength: contentLength,
      dt: dt,
      dOffset: dOffset,
      offset: offset,
      timestamp: timestamp,
      velocity: velocity,
      visibleLength: visibleLength
    };
    _this5._updateViewableItems(_this5.props.data);
    if (!_this5.props) {
      return;
    }
    _this5._maybeCallOnEndReached();
    if (velocity !== 0) {
      _this5._fillRateHelper.activate();
    }
    _this5._computeBlankness();
    _this5._scheduleCellsToRenderUpdate();
  };

  this._onScrollBeginDrag = function (e) {
    _this5._viewabilityHelper.recordInteraction();
    _this5.props.onScrollBeginDrag && _this5.props.onScrollBeginDrag(e);
  };

  this._onScrollEndDrag = function (e) {
    var velocity = e.nativeEvent.velocity;

    if (velocity) {
      _this5._scrollMetrics.velocity = _this5._selectOffset(velocity);
    }
    _this5._computeBlankness();
    _this5.props.onScrollEndDrag && _this5.props.onScrollEndDrag(e);
  };

  this._onMomentumScrollEnd = function (e) {
    _this5._scrollMetrics.velocity = 0;
    _this5._computeBlankness();
    _this5.props.onMomentumScrollEnd && _this5.props.onMomentumScrollEnd(e);
  };

  this._updateCellsToRender = function () {
    var _props9 = _this5.props,
        data = _props9.data,
        getItemCount = _props9.getItemCount,
        onEndReachedThreshold = _props9.onEndReachedThreshold;

    var isVirtualizationDisabled = _this5._isVirtualizationDisabled();
    _this5._updateViewableItems(data);
    if (!data) {
      return;
    }
    _this5.setState(function (state) {
      var newState = void 0;
      if (!isVirtualizationDisabled) {
        if (_this5._scrollMetrics.visibleLength) {
          if (!_this5.props.initialScrollIndex || _this5._scrollMetrics.offset) {
            newState = computeWindowedRenderLimits(_this5.props, state, _this5._getFrameMetricsApprox, _this5._scrollMetrics);
          }
        }
      } else {
        var _scrollMetrics3 = _this5._scrollMetrics,
            contentLength = _scrollMetrics3.contentLength,
            _offset = _scrollMetrics3.offset,
            visibleLength = _scrollMetrics3.visibleLength;

        var _distanceFromEnd = contentLength - visibleLength - _offset;
        var renderAhead = _distanceFromEnd < onEndReachedThreshold * visibleLength ? _this5.props.maxToRenderPerBatch : 0;
        newState = {
          first: 0,
          last: Math.min(state.last + renderAhead, getItemCount(data) - 1)
        };
      }
      return newState;
    });
  };

  this._createViewToken = function (index, isViewable) {
    var _props10 = _this5.props,
        data = _props10.data,
        getItem = _props10.getItem,
        keyExtractor = _props10.keyExtractor;

    var item = getItem(data, index);
    invariant(item, 'Missing item for index ' + index);
    return { index: index, item: item, key: keyExtractor(item, index), isViewable: isViewable };
  };

  this._getFrameMetricsApprox = function (index) {
    var frame = _this5._getFrameMetrics(index);
    if (frame && frame.index === index) {
      return frame;
    } else {
      var _getItemLayout = _this5.props.getItemLayout;

      invariant(!_getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');
      return {
        length: _this5._averageCellLength,
        offset: _this5._averageCellLength * index
      };
    }
  };

  this._getFrameMetrics = function (index) {
    var _props11 = _this5.props,
        data = _props11.data,
        getItem = _props11.getItem,
        getItemCount = _props11.getItemCount,
        getItemLayout = _props11.getItemLayout,
        keyExtractor = _props11.keyExtractor;

    invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);
    var item = getItem(data, index);
    var frame = item && _this5._frames[keyExtractor(item, index)];
    if (!frame || frame.index !== index) {
      if (getItemLayout) {
        frame = getItemLayout(data, index);
        if (__DEV__) {
          var frameType = PropTypes.shape({
            length: PropTypes.number.isRequired,
            offset: PropTypes.number.isRequired,
            index: PropTypes.number.isRequired
          }).isRequired;
          PropTypes.checkPropTypes({ frame: frameType }, { frame: frame }, 'frame', 'VirtualizedList.getItemLayout');
        }
      }
    }
    return frame;
  };
};

var CellRenderer = function (_React$Component) {
  babelHelpers.inherits(CellRenderer, _React$Component);

  function CellRenderer() {
    var _ref6;

    var _temp, _this4, _ret2;

    babelHelpers.classCallCheck(this, CellRenderer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret2 = (_temp = (_this4 = babelHelpers.possibleConstructorReturn(this, (_ref6 = CellRenderer.__proto__ || Object.getPrototypeOf(CellRenderer)).call.apply(_ref6, [this].concat(args))), _this4), _this4.state = {
      separatorProps: {
        highlighted: false,
        leadingItem: _this4.props.item
      }
    }, _this4._separators = {
      highlight: function highlight() {
        var _this4$props = _this4.props,
            cellKey = _this4$props.cellKey,
            prevCellKey = _this4$props.prevCellKey;

        _this4.props.onUpdateSeparators([cellKey, prevCellKey], {
          highlighted: true
        });
      },
      unhighlight: function unhighlight() {
        var _this4$props2 = _this4.props,
            cellKey = _this4$props2.cellKey,
            prevCellKey = _this4$props2.prevCellKey;

        _this4.props.onUpdateSeparators([cellKey, prevCellKey], {
          highlighted: false
        });
      },
      updateProps: function updateProps(select, newProps) {
        var _this4$props3 = _this4.props,
            cellKey = _this4$props3.cellKey,
            prevCellKey = _this4$props3.prevCellKey;

        _this4.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this4, _ret2);
  }

  babelHelpers.createClass(CellRenderer, [{
    key: 'updateSeparatorProps',
    value: function updateSeparatorProps(newProps) {
      this.setState(function (state) {
        return {
          separatorProps: babelHelpers.extends({}, state.separatorProps, newProps)
        };
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.props.onUnmount(this.props.cellKey);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props8 = this.props,
          ItemSeparatorComponent = _props8.ItemSeparatorComponent,
          fillRateHelper = _props8.fillRateHelper,
          item = _props8.item,
          index = _props8.index,
          inversionStyle = _props8.inversionStyle,
          parentProps = _props8.parentProps;
      var renderItem = parentProps.renderItem,
          getItemLayout = parentProps.getItemLayout;

      invariant(renderItem, 'no renderItem!');
      var element = renderItem({
        item: item,
        index: index,
        separators: this._separators
      });
      var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;

      return React.createElement(
        View,
        { onLayout: onLayout, style: inversionStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 1238
          }
        },
        element,
        ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, babelHelpers.extends({}, this.state.separatorProps, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 1241
          }
        }))
      );
    }
  }]);
  return CellRenderer;
}(React.Component);

var styles = StyleSheet.create({
  verticallyInverted: {
    transform: [{ scaleY: -1 }]
  },
  horizontallyInverted: {
    transform: [{ scaleX: -1 }]
  }
});

module.exports = VirtualizedList;
}, 222, null, "VirtualizedList");
__d(/* Batchinator */function(global, require, module, exports) {
'use strict';

var InteractionManager = require(191                 ); // 191 = InteractionManager

var Batchinator = function () {
  function Batchinator(callback, delayMS) {
    babelHelpers.classCallCheck(this, Batchinator);

    this._delay = delayMS;
    this._callback = callback;
  }

  babelHelpers.createClass(Batchinator, [{
    key: 'dispose',
    value: function dispose() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { abort: false };

      if (this._taskHandle) {
        this._taskHandle.cancel();
        if (!options.abort) {
          this._callback();
        }
        this._taskHandle = null;
      }
    }
  }, {
    key: 'schedule',
    value: function schedule() {
      var _this = this;

      if (this._taskHandle) {
        return;
      }
      var timeoutHandle = setTimeout(function () {
        _this._taskHandle = InteractionManager.runAfterInteractions(function () {
          _this._taskHandle = null;
          _this._callback();
        });
      }, this._delay);
      this._taskHandle = { cancel: function cancel() {
          return clearTimeout(timeoutHandle);
        } };
    }
  }]);
  return Batchinator;
}();

module.exports = Batchinator;
}, 223, null, "Batchinator");
__d(/* FillRateHelper */function(global, require, module, exports) {

'use strict';

var performanceNow = require(37                       ); // 37 = fbjs/lib/performanceNow
var warning = require(15                ); // 15 = fbjs/lib/warning

var Info = function Info() {
  babelHelpers.classCallCheck(this, Info);
  this.any_blank_count = 0;
  this.any_blank_ms = 0;
  this.any_blank_speed_sum = 0;
  this.mostly_blank_count = 0;
  this.mostly_blank_ms = 0;
  this.pixels_blank = 0;
  this.pixels_sampled = 0;
  this.pixels_scrolled = 0;
  this.total_time_spent = 0;
  this.sample_count = 0;
};

var DEBUG = false;

var _listeners = [];
var _minSampleCount = 10;
var _sampleRate = DEBUG ? 1 : null;

var FillRateHelper = function () {
  babelHelpers.createClass(FillRateHelper, null, [{
    key: 'addListener',
    value: function addListener(callback) {
      warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');
      _listeners.push(callback);
      return {
        remove: function remove() {
          _listeners = _listeners.filter(function (listener) {
            return callback !== listener;
          });
        }
      };
    }
  }, {
    key: 'setSampleRate',
    value: function setSampleRate(sampleRate) {
      _sampleRate = sampleRate;
    }
  }, {
    key: 'setMinSampleCount',
    value: function setMinSampleCount(minSampleCount) {
      _minSampleCount = minSampleCount;
    }
  }]);

  function FillRateHelper(getFrameMetrics) {
    babelHelpers.classCallCheck(this, FillRateHelper);
    this._anyBlankStartTime = null;
    this._enabled = false;
    this._info = new Info();
    this._mostlyBlankStartTime = null;
    this._samplesStartTime = null;

    this._getFrameMetrics = getFrameMetrics;
    this._enabled = (_sampleRate || 0) > Math.random();
    this._resetData();
  }

  babelHelpers.createClass(FillRateHelper, [{
    key: 'activate',
    value: function activate() {
      if (this._enabled && this._samplesStartTime == null) {
        DEBUG && console.debug('FillRateHelper: activate');
        this._samplesStartTime = performanceNow();
      }
    }
  }, {
    key: 'deactivateAndFlush',
    value: function deactivateAndFlush() {
      if (!this._enabled) {
        return;
      }
      var start = this._samplesStartTime;
      if (start == null) {
        DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');
        return;
      }
      if (this._info.sample_count < _minSampleCount) {
        this._resetData();
        return;
      }
      var total_time_spent = performanceNow() - start;
      var info = babelHelpers.extends({}, this._info, {
        total_time_spent: total_time_spent
      });
      if (DEBUG) {
        var derived = {
          avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,
          avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),
          avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,
          any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),
          any_blank_time_frac: this._info.any_blank_ms / total_time_spent,
          mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),
          mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent
        };
        for (var key in derived) {
          derived[key] = Math.round(1000 * derived[key]) / 1000;
        }
        console.debug('FillRateHelper deactivateAndFlush: ', { derived: derived, info: info });
      }
      _listeners.forEach(function (listener) {
        return listener(info);
      });
      this._resetData();
    }
  }, {
    key: 'computeBlankness',
    value: function computeBlankness(props, state, scrollMetrics) {
      if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {
        return 0;
      }
      var dOffset = scrollMetrics.dOffset,
          offset = scrollMetrics.offset,
          velocity = scrollMetrics.velocity,
          visibleLength = scrollMetrics.visibleLength;

      this._info.sample_count++;
      this._info.pixels_sampled += Math.round(visibleLength);
      this._info.pixels_scrolled += Math.round(Math.abs(dOffset));
      var scrollSpeed = Math.round(Math.abs(velocity) * 1000);
      var now = performanceNow();
      if (this._anyBlankStartTime != null) {
        this._info.any_blank_ms += now - this._anyBlankStartTime;
      }
      this._anyBlankStartTime = null;
      if (this._mostlyBlankStartTime != null) {
        this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;
      }
      this._mostlyBlankStartTime = null;

      var blankTop = 0;
      var first = state.first;
      var firstFrame = this._getFrameMetrics(first);
      while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {
        firstFrame = this._getFrameMetrics(first);
        first++;
      }

      if (firstFrame && first > 0) {
        blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));
      }
      var blankBottom = 0;
      var last = state.last;
      var lastFrame = this._getFrameMetrics(last);
      while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {
        lastFrame = this._getFrameMetrics(last);
        last--;
      }

      if (lastFrame && last < props.getItemCount(props.data) - 1) {
        var bottomEdge = lastFrame.offset + lastFrame.length;
        blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));
      }
      var pixels_blank = Math.round(blankTop + blankBottom);
      var blankness = pixels_blank / visibleLength;
      if (blankness > 0) {
        this._anyBlankStartTime = now;
        this._info.any_blank_speed_sum += scrollSpeed;
        this._info.any_blank_count++;
        this._info.pixels_blank += pixels_blank;
        if (blankness > 0.5) {
          this._mostlyBlankStartTime = now;
          this._info.mostly_blank_count++;
        }
      } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {
        this.deactivateAndFlush();
      }
      return blankness;
    }
  }, {
    key: 'enabled',
    value: function enabled() {
      return this._enabled;
    }
  }, {
    key: '_resetData',
    value: function _resetData() {
      this._anyBlankStartTime = null;
      this._info = new Info();
      this._mostlyBlankStartTime = null;
      this._samplesStartTime = null;
    }
  }]);
  return FillRateHelper;
}();

module.exports = FillRateHelper;
}, 224, null, "FillRateHelper");
__d(/* ViewabilityHelper */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var ViewabilityHelper = function () {
  function ViewabilityHelper() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { viewAreaCoveragePercentThreshold: 0 };
    babelHelpers.classCallCheck(this, ViewabilityHelper);
    this._hasInteracted = false;
    this._lastUpdateTime = 0;
    this._timers = new Set();
    this._viewableIndices = [];
    this._viewableItems = new Map();

    this._config = config;
  }

  babelHelpers.createClass(ViewabilityHelper, [{
    key: 'dispose',
    value: function dispose() {
      this._timers.forEach(clearTimeout);
    }
  }, {
    key: 'computeViewableItems',
    value: function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {
      var _config = this._config,
          itemVisiblePercentThreshold = _config.itemVisiblePercentThreshold,
          viewAreaCoveragePercentThreshold = _config.viewAreaCoveragePercentThreshold;

      var viewAreaMode = viewAreaCoveragePercentThreshold != null;
      var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;
      invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');
      var viewableIndices = [];
      if (itemCount === 0) {
        return viewableIndices;
      }
      var firstVisible = -1;

      var _ref = renderRange || { first: 0, last: itemCount - 1 },
          first = _ref.first,
          last = _ref.last;

      invariant(last < itemCount, 'Invalid render range ' + JSON.stringify({ renderRange: renderRange, itemCount: itemCount }));
      for (var idx = first; idx <= last; idx++) {
        var metrics = getFrameMetrics(idx);
        if (!metrics) {
          continue;
        }
        var top = metrics.offset - scrollOffset;
        var bottom = top + metrics.length;
        if (top < viewportHeight && bottom > 0) {
          firstVisible = idx;
          if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {
            viewableIndices.push(idx);
          }
        } else if (firstVisible >= 0) {
          break;
        }
      }
      return viewableIndices;
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {
      var _this = this;

      var updateTime = Date.now();
      if (this._lastUpdateTime === 0 && itemCount > 0 && getFrameMetrics(0)) {
        this._lastUpdateTime = updateTime;
      }
      var updateElapsed = this._lastUpdateTime ? updateTime - this._lastUpdateTime : 0;
      if (this._config.waitForInteraction && !this._hasInteracted) {
        return;
      }
      var viewableIndices = [];
      if (itemCount) {
        viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);
      }
      if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {
        return v === viewableIndices[ii];
      })) {
        return;
      }
      this._viewableIndices = viewableIndices;
      this._lastUpdateTime = updateTime;
      if (this._config.minimumViewTime && updateElapsed < this._config.minimumViewTime) {
        var handle = setTimeout(function () {
          _this._timers.delete(handle);
          _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);
        }, this._config.minimumViewTime);
        this._timers.add(handle);
      } else {
        this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);
      }
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._hasInteracted = true;
    }
  }, {
    key: '_onUpdateSync',
    value: function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {
      var _this2 = this;

      viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {
        return _this2._viewableIndices.includes(ii);
      });
      var prevItems = this._viewableItems;
      var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {
        var viewable = createViewToken(ii, true);
        return [viewable.key, viewable];
      }));

      var changed = [];
      for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref4;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref4 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref4 = _i.value;
        }

        var _ref2 = _ref4;

        var _ref3 = babelHelpers.slicedToArray(_ref2, 2);

        var _key = _ref3[0];
        var viewable = _ref3[1];

        if (!prevItems.has(_key)) {
          changed.push(viewable);
        }
      }
      for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref7;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref7 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref7 = _i2.value;
        }

        var _ref5 = _ref7;

        var _ref6 = babelHelpers.slicedToArray(_ref5, 2);

        var _key2 = _ref6[0];
        var _viewable = _ref6[1];

        if (!nextItems.has(_key2)) {
          changed.push(babelHelpers.extends({}, _viewable, { isViewable: false }));
        }
      }
      if (changed.length > 0) {
        this._viewableItems = nextItems;
        onViewableItemsChanged({
          viewableItems: Array.from(nextItems.values()),
          changed: changed
        });
      }
    }
  }]);
  return ViewabilityHelper;
}();

function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {
  if (_isEntirelyVisible(top, bottom, viewportHeight)) {
    return true;
  } else {
    var pixels = _getPixelsVisible(top, bottom, viewportHeight);
    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);
    return percent >= viewablePercentThreshold;
  }
}

function _getPixelsVisible(top, bottom, viewportHeight) {
  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);
  return Math.max(0, visibleHeight);
}

function _isEntirelyVisible(top, bottom, viewportHeight) {
  return top >= 0 && bottom <= viewportHeight && bottom > top;
}

module.exports = ViewabilityHelper;
}, 225, null, "ViewabilityHelper");
__d(/* VirtualizeUtils */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

function elementsThatOverlapOffsets(offsets, itemCount, getFrameMetrics) {
  var out = [];
  for (var ii = 0; ii < itemCount; ii++) {
    var frame = getFrameMetrics(ii);
    var trailingOffset = frame.offset + frame.length;
    for (var kk = 0; kk < offsets.length; kk++) {
      if (out[kk] == null && trailingOffset >= offsets[kk]) {
        out[kk] = ii;
        if (kk === offsets.length - 1) {
          invariant(out.length === offsets.length, 'bad offsets input, should be in increasing order ' + JSON.stringify(offsets));
          return out;
        }
      }
    }
  }
  return out;
}

function newRangeCount(prev, next) {
  return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));
}

function computeWindowedRenderLimits(props, prev, getFrameMetricsApprox, scrollMetrics) {
  var data = props.data,
      getItemCount = props.getItemCount,
      maxToRenderPerBatch = props.maxToRenderPerBatch,
      windowSize = props.windowSize;

  var itemCount = getItemCount(data);
  if (itemCount === 0) {
    return prev;
  }
  var offset = scrollMetrics.offset,
      velocity = scrollMetrics.velocity,
      visibleLength = scrollMetrics.visibleLength;

  var visibleBegin = Math.max(0, offset);
  var visibleEnd = visibleBegin + visibleLength;
  var overscanLength = (windowSize - 1) * visibleLength;

  var leadFactor = 0.5;

  var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';

  var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);
  var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);

  var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props.getItemCount(props.data), getFrameMetricsApprox),
      _elementsThatOverlapO2 = babelHelpers.slicedToArray(_elementsThatOverlapO, 4),
      overscanFirst = _elementsThatOverlapO2[0],
      first = _elementsThatOverlapO2[1],
      last = _elementsThatOverlapO2[2],
      overscanLast = _elementsThatOverlapO2[3];

  overscanFirst = overscanFirst == null ? 0 : overscanFirst;
  first = first == null ? Math.max(0, overscanFirst) : first;
  overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;
  last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;
  var visible = { first: first, last: last };

  var newCellCount = newRangeCount(prev, visible);

  while (true) {
    if (first <= overscanFirst && last >= overscanLast) {
      break;
    }
    var maxNewCells = newCellCount >= maxToRenderPerBatch;
    var firstWillAddMore = first <= prev.first || first > prev.last;
    var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);
    var lastWillAddMore = last >= prev.last || last < prev.first;
    var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);
    if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {
      break;
    }
    if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {
      if (firstWillAddMore) {
        newCellCount++;
      }
      first--;
    }
    if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {
      if (lastWillAddMore) {
        newCellCount++;
      }
      last++;
    }
  }
  if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {
    throw new Error('Bad window calculation ' + JSON.stringify({
      first: first,
      last: last,
      itemCount: itemCount,
      overscanFirst: overscanFirst,
      overscanLast: overscanLast,
      visible: visible
    }));
  }
  return { first: first, last: last };
}

var VirtualizeUtils = {
  computeWindowedRenderLimits: computeWindowedRenderLimits,
  elementsThatOverlapOffsets: elementsThatOverlapOffsets,
  newRangeCount: newRangeCount
};

module.exports = VirtualizeUtils;
}, 226, null, "VirtualizeUtils");
__d(/* ImageBackground */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Image\\ImageBackground.js';
var Image = require(200    ); // 200 = Image
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet
var View = require(124   ); // 124 = View

var ImageBackground = function (_React$Component) {
  babelHelpers.inherits(ImageBackground, _React$Component);

  function ImageBackground() {
    babelHelpers.classCallCheck(this, ImageBackground);
    return babelHelpers.possibleConstructorReturn(this, (ImageBackground.__proto__ || Object.getPrototypeOf(ImageBackground)).apply(this, arguments));
  }

  babelHelpers.createClass(ImageBackground, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          style = _props.style,
          imageStyle = _props.imageStyle,
          imageRef = _props.imageRef,
          props = babelHelpers.objectWithoutProperties(_props, ['children', 'style', 'imageStyle', 'imageRef']);


      return React.createElement(
        View,
        { style: style, __source: {
            fileName: _jsxFileName,
            lineNumber: 49
          }
        },
        React.createElement(Image, babelHelpers.extends({}, props, {
          style: [StyleSheet.absoluteFill, {
            width: style.width,
            height: style.height
          }, imageStyle],
          ref: imageRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 50
          }
        })),
        children
      );
    }
  }]);
  return ImageBackground;
}(React.Component);

module.exports = ImageBackground;
}, 227, null, "ImageBackground");
__d(/* ImageEditor */function(global, require, module, exports) {
'use strict';

var RCTImageEditingManager = require(28             ).ImageEditingManager; // 28 = NativeModules

var ImageEditor = function () {
  function ImageEditor() {
    babelHelpers.classCallCheck(this, ImageEditor);
  }

  babelHelpers.createClass(ImageEditor, null, [{
    key: 'cropImage',
    value: function cropImage(uri, cropData, success, failure) {
      RCTImageEditingManager.cropImage(uri, cropData, success, failure);
    }
  }]);
  return ImageEditor;
}();

module.exports = ImageEditor;
}, 228, null, "ImageEditor");
__d(/* ImageStore */function(global, require, module, exports) {
'use strict';

var RCTImageStoreManager = require(28             ).ImageStoreManager; // 28 = NativeModules

var ImageStore = function () {
  function ImageStore() {
    babelHelpers.classCallCheck(this, ImageStore);
  }

  babelHelpers.createClass(ImageStore, null, [{
    key: 'hasImageForTag',
    value: function hasImageForTag(uri, callback) {
      if (RCTImageStoreManager.hasImageForTag) {
        RCTImageStoreManager.hasImageForTag(uri, callback);
      } else {
        console.warn('hasImageForTag() not implemented');
      }
    }
  }, {
    key: 'removeImageForTag',
    value: function removeImageForTag(uri) {
      if (RCTImageStoreManager.removeImageForTag) {
        RCTImageStoreManager.removeImageForTag(uri);
      } else {
        console.warn('removeImageForTag() not implemented');
      }
    }
  }, {
    key: 'addImageFromBase64',
    value: function addImageFromBase64(base64ImageData, success, failure) {
      RCTImageStoreManager.addImageFromBase64(base64ImageData, success, failure);
    }
  }, {
    key: 'getBase64ForTag',
    value: function getBase64ForTag(uri, success, failure) {
      RCTImageStoreManager.getBase64ForTag(uri, success, failure);
    }
  }]);
  return ImageStore;
}();

module.exports = ImageStore;
}, 229, null, "ImageStore");
__d(/* KeyboardAvoidingView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\Keyboard\\KeyboardAvoidingView.js';
var createReactClass = require(150                 ); // 150 = create-react-class
var Keyboard = require(51        ); // 51 = Keyboard
var LayoutAnimation = require(231              ); // 231 = LayoutAnimation
var Platform = require(36        ); // 36 = Platform
var PropTypes = require(19          ); // 19 = prop-types
var React = require(125    ); // 125 = React
var TimerMixin = require(186                ); // 186 = react-timer-mixin
var View = require(124   ); // 124 = View
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var viewRef = 'VIEW';

var KeyboardAvoidingView = createReactClass({
  displayName: 'KeyboardAvoidingView',
  mixins: [TimerMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    behavior: PropTypes.oneOf(['height', 'position', 'padding']),

    contentContainerStyle: ViewPropTypes.style,

    keyboardVerticalOffset: PropTypes.number.isRequired
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      keyboardVerticalOffset: 0
    };
  },
  getInitialState: function getInitialState() {
    return {
      bottom: 0
    };
  },


  subscriptions: [],
  frame: null,

  relativeKeyboardHeight: function relativeKeyboardHeight(keyboardFrame) {
    var frame = this.frame;
    if (!frame || !keyboardFrame) {
      return 0;
    }

    var keyboardY = keyboardFrame.screenY - this.props.keyboardVerticalOffset;

    return Math.max(frame.y + frame.height - keyboardY, 0);
  },
  onKeyboardChange: function onKeyboardChange(event) {
    if (!event) {
      this.setState({ bottom: 0 });
      return;
    }

    var duration = event.duration,
        easing = event.easing,
        endCoordinates = event.endCoordinates;

    var height = this.relativeKeyboardHeight(endCoordinates);

    if (duration && easing) {
      LayoutAnimation.configureNext({
        duration: duration,
        update: {
          duration: duration,
          type: LayoutAnimation.Types[easing] || 'keyboard'
        }
      });
    }
    this.setState({ bottom: height });
  },
  onLayout: function onLayout(event) {
    this.frame = event.nativeEvent.layout;
  },
  componentWillUpdate: function componentWillUpdate(nextProps, nextState, nextContext) {
    if (nextState.bottom === this.state.bottom && this.props.behavior === 'height' && nextProps.behavior === 'height') {
      nextState.bottom = 0;
    }
  },
  componentWillMount: function componentWillMount() {
    if (Platform.OS === 'ios') {
      this.subscriptions = [Keyboard.addListener('keyboardWillChangeFrame', this.onKeyboardChange)];
    } else {
      this.subscriptions = [Keyboard.addListener('keyboardDidHide', this.onKeyboardChange), Keyboard.addListener('keyboardDidShow', this.onKeyboardChange)];
    }
  },
  componentWillUnmount: function componentWillUnmount() {
    this.subscriptions.forEach(function (sub) {
      return sub.remove();
    });
  },
  render: function render() {
    var _props = this.props,
        behavior = _props.behavior,
        children = _props.children,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['behavior', 'children', 'style']);


    switch (behavior) {
      case 'height':
        var heightStyle = void 0;
        if (this.frame) {
          heightStyle = { height: this.frame.height - this.state.bottom, flex: 0 };
        }
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: [style, heightStyle], onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 172
            }
          }),
          children
        );

      case 'position':
        var positionStyle = { bottom: this.state.bottom };
        var contentContainerStyle = this.props.contentContainerStyle;


        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: style, onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 182
            }
          }),
          React.createElement(
            View,
            { style: [contentContainerStyle, positionStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 183
              }
            },
            children
          )
        );

      case 'padding':
        var paddingStyle = { paddingBottom: this.state.bottom };
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: [style, paddingStyle], onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 192
            }
          }),
          children
        );

      default:
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, onLayout: this.onLayout, style: style }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 199
            }
          }),
          children
        );
    }
  }
});

module.exports = KeyboardAvoidingView;
}, 230, null, "KeyboardAvoidingView");
__d(/* LayoutAnimation */function(global, require, module, exports) {
'use strict';

var PropTypes = require(19          ); // 19 = prop-types
var UIManager = require(54         ); // 54 = UIManager

var keyMirror = require(129                 ); // 129 = fbjs/lib/keyMirror

var checkPropTypes = PropTypes.checkPropTypes;


var TypesEnum = {
  spring: true,
  linear: true,
  easeInEaseOut: true,
  easeIn: true,
  easeOut: true,
  keyboard: true
};
var Types = keyMirror(TypesEnum);

var PropertiesEnum = {
  opacity: true,
  scaleXY: true
};
var Properties = keyMirror(PropertiesEnum);

var animType = PropTypes.shape({
  duration: PropTypes.number,
  delay: PropTypes.number,
  springDamping: PropTypes.number,
  initialVelocity: PropTypes.number,
  type: PropTypes.oneOf(Object.keys(Types)).isRequired,
  property: PropTypes.oneOf(Object.keys(Properties))
});

var configType = PropTypes.shape({
  duration: PropTypes.number.isRequired,
  create: animType,
  update: animType,
  delete: animType
});

function checkConfig(config, location, name) {
  checkPropTypes({ config: configType }, { config: config }, location, name);
}

function configureNext(config, onAnimationDidEnd) {
  if (__DEV__) {
    checkConfig(config, 'config', 'LayoutAnimation.configureNext');
  }
  UIManager.configureNextLayoutAnimation(config, onAnimationDidEnd || function () {}, function () {});
}

function create(duration, type, creationProp) {
  return {
    duration: duration,
    create: {
      type: type,
      property: creationProp
    },
    update: {
      type: type
    },
    delete: {
      type: type,
      property: creationProp
    }
  };
}

var Presets = {
  easeInEaseOut: create(300, Types.easeInEaseOut, Properties.opacity),
  linear: create(500, Types.linear, Properties.opacity),
  spring: {
    duration: 700,
    create: {
      type: Types.linear,
      property: Properties.opacity
    },
    update: {
      type: Types.spring,
      springDamping: 0.4
    },
    delete: {
      type: Types.linear,
      property: Properties.opacity
    }
  }
};

var LayoutAnimation = {
  configureNext: configureNext,

  create: create,
  Types: Types,
  Properties: Properties,
  checkConfig: checkConfig,
  Presets: Presets,
  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),
  linear: configureNext.bind(null, Presets.linear),
  spring: configureNext.bind(null, Presets.spring)
};

module.exports = LayoutAnimation;
}, 231, null, "LayoutAnimation");
__d(/* Modal */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Modal\\Modal.js',
    _container;

var AppContainer = require(233           ); // 233 = AppContainer
var I18nManager = require(253          ); // 253 = I18nManager
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var StyleSheet = require(153         ); // 153 = StyleSheet
var View = require(124   ); // 124 = View

var deprecatedPropType = require(133                 ); // 133 = deprecatedPropType
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent
var RCTModalHostView = requireNativeComponent('RCTModalHostView', null);

var Modal = function (_React$Component) {
  babelHelpers.inherits(Modal, _React$Component);

  function Modal(props) {
    babelHelpers.classCallCheck(this, Modal);

    var _this = babelHelpers.possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));

    Modal._confirmProps(props);
    return _this;
  }

  babelHelpers.createClass(Modal, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      Modal._confirmProps(nextProps);
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.visible === false) {
        return null;
      }

      var containerStyles = {
        backgroundColor: this.props.transparent ? 'transparent' : 'white'
      };

      var animationType = this.props.animationType;
      if (!animationType) {
        animationType = 'none';
        if (this.props.animated) {
          animationType = 'slide';
        }
      }

      var presentationStyle = this.props.presentationStyle;
      if (!presentationStyle) {
        presentationStyle = 'fullScreen';
        if (this.props.transparent) {
          presentationStyle = 'overFullScreen';
        }
      }

      var innerChildren = __DEV__ ? React.createElement(
        AppContainer,
        { rootTag: this.context.rootTag, __source: {
            fileName: _jsxFileName,
            lineNumber: 199
          }
        },
        this.props.children
      ) : this.props.children;

      return React.createElement(
        RCTModalHostView,
        {
          animationType: animationType,
          presentationStyle: presentationStyle,
          transparent: this.props.transparent,
          hardwareAccelerated: this.props.hardwareAccelerated,
          onRequestClose: this.props.onRequestClose,
          onShow: this.props.onShow,
          style: styles.modal,
          onStartShouldSetResponder: this._shouldSetResponder,
          supportedOrientations: this.props.supportedOrientations,
          onOrientationChange: this.props.onOrientationChange,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 205
          }
        },
        React.createElement(
          View,
          { style: [styles.container, containerStyles], __source: {
              fileName: _jsxFileName,
              lineNumber: 217
            }
          },
          innerChildren
        )
      );
    }
  }, {
    key: '_shouldSetResponder',
    value: function _shouldSetResponder() {
      return true;
    }
  }], [{
    key: '_confirmProps',
    value: function _confirmProps(props) {
      if (props.presentationStyle && props.presentationStyle !== 'overFullScreen' && props.transparent) {
        console.warn('Modal with \'' + props.presentationStyle + '\' presentation style and \'transparent\' value is not supported.');
      }
    }
  }]);
  return Modal;
}(React.Component);

Modal.propTypes = {
  animationType: PropTypes.oneOf(['none', 'slide', 'fade']),

  presentationStyle: PropTypes.oneOf(['fullScreen', 'pageSheet', 'formSheet', 'overFullScreen']),

  transparent: PropTypes.bool,

  hardwareAccelerated: PropTypes.bool,

  visible: PropTypes.bool,

  onRequestClose: Platform.OS === 'android' ? PropTypes.func.isRequired : PropTypes.func,

  onShow: PropTypes.func,
  animated: deprecatedPropType(PropTypes.bool, 'Use the `animationType` prop instead.'),

  supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf(['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'])),

  onOrientationChange: PropTypes.func
};
Modal.defaultProps = {
  visible: true,
  hardwareAccelerated: false
};
Modal.contextTypes = {
  rootTag: PropTypes.number
};


var side = I18nManager.isRTL ? 'right' : 'left';
var styles = StyleSheet.create({
  modal: {
    position: 'absolute'
  },
  container: (_container = {
    position: 'absolute'
  }, babelHelpers.defineProperty(_container, side, 0), babelHelpers.defineProperty(_container, 'top', 0), _container)
});

module.exports = Modal;
}, 232, null, "Modal");
__d(/* AppContainer */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\ReactNative\\AppContainer.js';
var EmitterSubscription = require(46                   ); // 46 = EmitterSubscription
var PropTypes = require(19          ); // 19 = prop-types
var RCTDeviceEventEmitter = require(44                     ); // 44 = RCTDeviceEventEmitter
var React = require(125    ); // 125 = React
var ReactNative = require(62           ); // 62 = ReactNative
var StyleSheet = require(153         ); // 153 = StyleSheet
var View = require(124   ); // 124 = View

var AppContainer = function (_React$Component) {
  babelHelpers.inherits(AppContainer, _React$Component);

  function AppContainer() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, AppContainer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = AppContainer.__proto__ || Object.getPrototypeOf(AppContainer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      inspector: null,
      mainKey: 1
    }, _this._subscription = null, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(AppContainer, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        rootTag: this.props.rootTag
      };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (__DEV__) {
        if (!global.__RCTProfileIsProfiling) {
          this._subscription = RCTDeviceEventEmitter.addListener('toggleElementInspector', function () {
            var Inspector = require(234        ); // 234 = Inspector
            var inspector = _this2.state.inspector ? null : React.createElement(Inspector, {
              inspectedViewTag: ReactNative.findNodeHandle(_this2._mainRef),
              onRequestRerenderApp: function onRequestRerenderApp(updateInspectedViewTag) {
                _this2.setState(function (s) {
                  return { mainKey: s.mainKey + 1 };
                }, function () {
                  return updateInspectedViewTag(ReactNative.findNodeHandle(_this2._mainRef));
                });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 65
              }
            });
            _this2.setState({ inspector: inspector });
          });
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._subscription) {
        this._subscription.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var yellowBox = null;
      if (__DEV__) {
        if (!global.__RCTProfileIsProfiling) {
          var YellowBox = require(252        ); // 252 = YellowBox
          yellowBox = React.createElement(YellowBox, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 95
            }
          });
        }
      }

      var innerView = React.createElement(
        View,
        {
          collapsable: !this.state.inspector,
          key: this.state.mainKey,
          pointerEvents: 'box-none',
          style: styles.appContainer,
          ref: function ref(_ref2) {
            _this3._mainRef = _ref2;
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 100
          }
        },
        this.props.children
      );

      var Wrapper = this.props.WrapperComponent;
      if (Wrapper) {
        innerView = React.createElement(
          Wrapper,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 115
            }
          },
          innerView
        );
      }
      return React.createElement(
        View,
        { style: styles.appContainer, pointerEvents: 'box-none', __source: {
            fileName: _jsxFileName,
            lineNumber: 121
          }
        },
        innerView,
        yellowBox,
        this.state.inspector
      );
    }
  }]);
  return AppContainer;
}(React.Component);

AppContainer.childContextTypes = {
  rootTag: PropTypes.number
};


var styles = StyleSheet.create({
  appContainer: {
    flex: 1
  }
});

module.exports = AppContainer;
}, 233, null, "AppContainer");
__d(/* Inspector */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Inspector\\Inspector.js';
var Dimensions = require(155         ); // 155 = Dimensions
var InspectorOverlay = require(235               ); // 235 = InspectorOverlay
var InspectorPanel = require(239             ); // 239 = InspectorPanel
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var ReactNative = require(62           ); // 62 = ReactNative
var StyleSheet = require(153         ); // 153 = StyleSheet
var Touchable = require(177        ); // 177 = Touchable
var UIManager = require(54         ); // 54 = UIManager
var View = require(124   ); // 124 = View

var emptyObject = require(17                    ); // 17 = fbjs/lib/emptyObject
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
var renderer = findRenderer();

hook.resolveRNStyle = require(114           ); // 114 = flattenStyle

function findRenderer() {
  var renderers = hook._renderers;
  var keys = Object.keys(renderers);
  invariant(keys.length === 1, 'Expected to find exactly one React Native renderer on DevTools hook.');
  return renderers[keys[0]];
}

var Inspector = function (_React$Component) {
  babelHelpers.inherits(Inspector, _React$Component);

  function Inspector(props) {
    babelHelpers.classCallCheck(this, Inspector);

    var _this = babelHelpers.possibleConstructorReturn(this, (Inspector.__proto__ || Object.getPrototypeOf(Inspector)).call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      devtoolsAgent: null,
      hierarchy: null,
      panelPos: 'bottom',
      inspecting: true,
      perfing: false,
      inspected: null,
      selection: null,
      inspectedViewTag: _this.props.inspectedViewTag,
      networking: false
    };
    return _this;
  }

  babelHelpers.createClass(Inspector, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      hook.on('react-devtools', this.attachToDevtools);

      if (hook.reactDevtoolsAgent) {
        this.attachToDevtools(hook.reactDevtoolsAgent);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._subs) {
        this._subs.map(function (fn) {
          return fn();
        });
      }
      hook.off('react-devtools', this.attachToDevtools);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      this.setState({ inspectedViewTag: newProps.inspectedViewTag });
    }
  }, {
    key: 'setSelection',
    value: function setSelection(i) {
      var _this2 = this;

      var hierarchyItem = this.state.hierarchy[i];

      var _hierarchyItem$getIns = hierarchyItem.getInspectorData(ReactNative.findNodeHandle),
          measure = _hierarchyItem$getIns.measure,
          props = _hierarchyItem$getIns.props,
          source = _hierarchyItem$getIns.source;

      measure(function (x, y, width, height, left, top) {
        _this2.setState({
          inspected: {
            frame: { left: left, top: top, width: width, height: height },
            style: props.style,
            source: source
          },
          selection: i
        });
      });
    }
  }, {
    key: 'onTouchViewTag',
    value: function onTouchViewTag(touchedViewTag, frame, pointerY) {
      var _renderer$getInspecto = renderer.getInspectorDataForViewTag(touchedViewTag),
          hierarchy = _renderer$getInspecto.hierarchy,
          props = _renderer$getInspecto.props,
          selection = _renderer$getInspecto.selection,
          source = _renderer$getInspecto.source;

      if (this.state.devtoolsAgent) {
        var offsetFromLeaf = hierarchy.length - 1 - selection;
        this.state.devtoolsAgent.selectFromDOMNode(touchedViewTag, true, offsetFromLeaf);
      }

      this.setState({
        panelPos: pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',
        selection: selection,
        hierarchy: hierarchy,
        inspected: {
          style: props.style,
          frame: frame,
          source: source
        }
      });
    }
  }, {
    key: 'setPerfing',
    value: function setPerfing(val) {
      this.setState({
        perfing: val,
        inspecting: false,
        inspected: null,
        networking: false
      });
    }
  }, {
    key: 'setInspecting',
    value: function setInspecting(val) {
      this.setState({
        inspecting: val,
        inspected: null
      });
    }
  }, {
    key: 'setTouchTargetting',
    value: function setTouchTargetting(val) {
      var _this3 = this;

      Touchable.TOUCH_TARGET_DEBUG = val;
      this.props.onRequestRerenderApp(function (inspectedViewTag) {
        _this3.setState({ inspectedViewTag: inspectedViewTag });
      });
    }
  }, {
    key: 'setNetworking',
    value: function setNetworking(val) {
      this.setState({
        networking: val,
        perfing: false,
        inspecting: false,
        inspected: null
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var panelContainerStyle = this.state.panelPos === 'bottom' ? { bottom: 0 } : { top: Platform.OS === 'ios' ? 20 : 0 };
      return React.createElement(
        View,
        { style: styles.container, pointerEvents: 'box-none', __source: {
            fileName: _jsxFileName,
            lineNumber: 232
          }
        },
        this.state.inspecting && React.createElement(InspectorOverlay, {
          inspected: this.state.inspected,
          inspectedViewTag: this.state.inspectedViewTag,
          onTouchViewTag: this.onTouchViewTag.bind(this),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 234
          }
        }),
        React.createElement(
          View,
          { style: [styles.panelContainer, panelContainerStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 239
            }
          },
          React.createElement(InspectorPanel, {
            devtoolsIsOpen: !!this.state.devtoolsAgent,
            inspecting: this.state.inspecting,
            perfing: this.state.perfing,
            setPerfing: this.setPerfing.bind(this),
            setInspecting: this.setInspecting.bind(this),
            inspected: this.state.inspected,
            hierarchy: this.state.hierarchy,
            selection: this.state.selection,
            setSelection: this.setSelection.bind(this),
            touchTargetting: Touchable.TOUCH_TARGET_DEBUG,
            setTouchTargetting: this.setTouchTargetting.bind(this),
            networking: this.state.networking,
            setNetworking: this.setNetworking.bind(this),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 240
            }
          })
        )
      );
    }
  }]);
  return Inspector;
}(React.Component);

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this.attachToDevtools = function (agent) {
    var _hideWait = null;
    var hlSub = agent.sub('highlight', function (_ref) {
      var node = _ref.node,
          name = _ref.name,
          props = _ref.props;

      clearTimeout(_hideWait);

      if (typeof node !== 'number') {
        node = ReactNative.findNodeHandle(node);
      }

      UIManager.measure(node, function (x, y, width, height, left, top) {
        _this4.setState({
          hierarchy: [],
          inspected: {
            frame: { left: left, top: top, width: width, height: height },
            style: props ? props.style : emptyObject
          }
        });
      });
    });
    var hideSub = agent.sub('hideHighlight', function () {
      if (_this4.state.inspected === null) {
        return;
      }

      _hideWait = setTimeout(function () {
        _this4.setState({
          inspected: null
        });
      }, 100);
    });
    _this4._subs = [hlSub, hideSub];

    agent.on('shutdown', function () {
      _this4.setState({ devtoolsAgent: null });
      _this4._subs = null;
    });
    _this4.setState({
      devtoolsAgent: agent
    });
  };
};

var styles = StyleSheet.create({
  container: {
    position: 'absolute',
    backgroundColor: 'transparent',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  panelContainer: {
    position: 'absolute',
    left: 0,
    right: 0
  }
});

module.exports = Inspector;
}, 234, null, "Inspector");
__d(/* InspectorOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Inspector\\InspectorOverlay.js';
var Dimensions = require(155         ); // 155 = Dimensions
var ElementBox = require(236         ); // 236 = ElementBox
var PropTypes = require(19          ); // 19 = prop-types
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet
var UIManager = require(54         ); // 54 = UIManager
var View = require(124   ); // 124 = View

var InspectorOverlay = function (_React$Component) {
  babelHelpers.inherits(InspectorOverlay, _React$Component);

  function InspectorOverlay() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, InspectorOverlay);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = InspectorOverlay.__proto__ || Object.getPrototypeOf(InspectorOverlay)).call.apply(_ref, [this].concat(args))), _this), _this.findViewForTouchEvent = function (e) {
      var _e$nativeEvent$touche = e.nativeEvent.touches[0],
          locationX = _e$nativeEvent$touche.locationX,
          locationY = _e$nativeEvent$touche.locationY;

      UIManager.findSubviewIn(_this.props.inspectedViewTag, [locationX, locationY], function (nativeViewTag, left, top, width, height) {
        _this.props.onTouchViewTag(nativeViewTag, { left: left, top: top, width: width, height: height }, locationY);
      });
    }, _this.shouldSetResponser = function (e) {
      _this.findViewForTouchEvent(e);
      return true;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(InspectorOverlay, [{
    key: 'render',
    value: function render() {
      var content = null;
      if (this.props.inspected) {
        content = React.createElement(ElementBox, { frame: this.props.inspected.frame, style: this.props.inspected.style, __source: {
            fileName: _jsxFileName,
            lineNumber: 64
          }
        });
      }

      return React.createElement(
        View,
        {
          onStartShouldSetResponder: this.shouldSetResponser,
          onResponderMove: this.findViewForTouchEvent,
          style: [styles.inspector, { height: Dimensions.get('window').height }], __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        },
        content
      );
    }
  }]);
  return InspectorOverlay;
}(React.Component);

InspectorOverlay.propTypes = {
  inspected: PropTypes.shape({
    frame: PropTypes.object,
    style: PropTypes.any
  }),
  inspectedViewTag: PropTypes.number,
  onTouchViewTag: PropTypes.func.isRequired
};


var styles = StyleSheet.create({
  inspector: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    top: 0,
    right: 0
  }
});

module.exports = InspectorOverlay;
}, 235, null, "InspectorOverlay");
__d(/* ElementBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Inspector\\ElementBox.js';
var React = require(125    ); // 125 = React
var View = require(124   ); // 124 = View
var StyleSheet = require(153         ); // 153 = StyleSheet
var BorderBox = require(237        ); // 237 = BorderBox
var resolveBoxStyle = require(238              ); // 238 = resolveBoxStyle

var flattenStyle = require(114           ); // 114 = flattenStyle

var ElementBox = function (_React$Component) {
  babelHelpers.inherits(ElementBox, _React$Component);

  function ElementBox() {
    babelHelpers.classCallCheck(this, ElementBox);
    return babelHelpers.possibleConstructorReturn(this, (ElementBox.__proto__ || Object.getPrototypeOf(ElementBox)).apply(this, arguments));
  }

  babelHelpers.createClass(ElementBox, [{
    key: 'render',
    value: function render() {
      var style = flattenStyle(this.props.style) || {};
      var margin = resolveBoxStyle('margin', style);
      var padding = resolveBoxStyle('padding', style);
      var frameStyle = this.props.frame;
      if (margin) {
        frameStyle = {
          top: frameStyle.top - margin.top,
          left: frameStyle.left - margin.left,
          height: frameStyle.height + margin.top + margin.bottom,
          width: frameStyle.width + margin.left + margin.right
        };
      }
      var contentStyle = {
        width: this.props.frame.width,
        height: this.props.frame.height
      };
      if (padding) {
        contentStyle = {
          width: contentStyle.width - padding.left - padding.right,
          height: contentStyle.height - padding.top - padding.bottom
        };
      }
      return React.createElement(
        View,
        { style: [styles.frame, frameStyle], pointerEvents: 'none', __source: {
            fileName: _jsxFileName,
            lineNumber: 47
          }
        },
        React.createElement(
          BorderBox,
          { box: margin, style: styles.margin, __source: {
              fileName: _jsxFileName,
              lineNumber: 48
            }
          },
          React.createElement(
            BorderBox,
            { box: padding, style: styles.padding, __source: {
                fileName: _jsxFileName,
                lineNumber: 49
              }
            },
            React.createElement(View, { style: [styles.content, contentStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 50
              }
            })
          )
        )
      );
    }
  }]);
  return ElementBox;
}(React.Component);

var styles = StyleSheet.create({
  frame: {
    position: 'absolute'
  },
  content: {
    backgroundColor: 'rgba(200, 230, 255, 0.8)'
  },
  padding: {
    borderColor: 'rgba(77, 255, 0, 0.3)'
  },
  margin: {
    borderColor: 'rgba(255, 132, 0, 0.3)'
  }
});

module.exports = ElementBox;
}, 236, null, "ElementBox");
__d(/* BorderBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Inspector\\BorderBox.js';
var React = require(125    ); // 125 = React
var View = require(124   ); // 124 = View

var BorderBox = function (_React$Component) {
  babelHelpers.inherits(BorderBox, _React$Component);

  function BorderBox() {
    babelHelpers.classCallCheck(this, BorderBox);
    return babelHelpers.possibleConstructorReturn(this, (BorderBox.__proto__ || Object.getPrototypeOf(BorderBox)).apply(this, arguments));
  }

  babelHelpers.createClass(BorderBox, [{
    key: 'render',
    value: function render() {
      var box = this.props.box;
      if (!box) {
        return this.props.children;
      }
      var style = {
        borderTopWidth: box.top,
        borderBottomWidth: box.bottom,
        borderLeftWidth: box.left,
        borderRightWidth: box.right
      };
      return React.createElement(
        View,
        { style: [style, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 30
          }
        },
        this.props.children
      );
    }
  }]);
  return BorderBox;
}(React.Component);

module.exports = BorderBox;
}, 237, null, "BorderBox");
__d(/* resolveBoxStyle */function(global, require, module, exports) {
'use strict';

function resolveBoxStyle(prefix, style) {
  var res = {};
  var subs = ['top', 'left', 'bottom', 'right'];
  var set = false;
  subs.forEach(function (sub) {
    res[sub] = style[prefix] || 0;
  });
  if (style[prefix]) {
    set = true;
  }
  if (style[prefix + 'Vertical']) {
    res.top = res.bottom = style[prefix + 'Vertical'];
    set = true;
  }
  if (style[prefix + 'Horizontal']) {
    res.left = res.right = style[prefix + 'Horizontal'];
    set = true;
  }
  subs.forEach(function (sub) {
    var val = style[prefix + capFirst(sub)];
    if (val) {
      res[sub] = val;
      set = true;
    }
  });
  if (!set) {
    return;
  }
  return res;
}

function capFirst(text) {
  return text[0].toUpperCase() + text.slice(1);
}

module.exports = resolveBoxStyle;
}, 238, null, "resolveBoxStyle");
__d(/* InspectorPanel */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Inspector\\InspectorPanel.js';
var ElementProperties = require(240                ); // 240 = ElementProperties
var NetworkOverlay = require(248             ); // 248 = NetworkOverlay
var PerformanceOverlay = require(251                 ); // 251 = PerformanceOverlay
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ScrollView = require(202         ); // 202 = ScrollView
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var TouchableHighlight = require(243                 ); // 243 = TouchableHighlight
var View = require(124   ); // 124 = View

var InspectorPanel = function (_React$Component) {
  babelHelpers.inherits(InspectorPanel, _React$Component);

  function InspectorPanel() {
    babelHelpers.classCallCheck(this, InspectorPanel);
    return babelHelpers.possibleConstructorReturn(this, (InspectorPanel.__proto__ || Object.getPrototypeOf(InspectorPanel)).apply(this, arguments));
  }

  babelHelpers.createClass(InspectorPanel, [{
    key: 'renderWaiting',
    value: function renderWaiting() {
      if (this.props.inspecting) {
        return React.createElement(
          Text,
          { style: styles.waitingText, __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          },
          'Tap something to inspect it'
        );
      }
      return React.createElement(
        Text,
        { style: styles.waitingText, __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        },
        'Nothing is inspected'
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var contents = void 0;
      if (this.props.inspected) {
        contents = React.createElement(
          ScrollView,
          { style: styles.properties, __source: {
              fileName: _jsxFileName,
              lineNumber: 41
            }
          },
          React.createElement(ElementProperties, {
            style: this.props.inspected.style,
            frame: this.props.inspected.frame,
            source: this.props.inspected.source,
            hierarchy: this.props.hierarchy,
            selection: this.props.selection,
            setSelection: this.props.setSelection,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 42
            }
          })
        );
      } else if (this.props.perfing) {
        contents = React.createElement(PerformanceOverlay, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 54
          }
        });
      } else if (this.props.networking) {
        contents = React.createElement(NetworkOverlay, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 58
          }
        });
      } else {
        contents = React.createElement(
          View,
          { style: styles.waiting, __source: {
              fileName: _jsxFileName,
              lineNumber: 62
            }
          },
          this.renderWaiting()
        );
      }
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        },
        !this.props.devtoolsIsOpen && contents,
        React.createElement(
          View,
          { style: styles.buttonRow, __source: {
              fileName: _jsxFileName,
              lineNumber: 70
            }
          },
          React.createElement(Button, {
            title: 'Inspect',
            pressed: this.props.inspecting,
            onClick: this.props.setInspecting,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 71
            }
          }),
          React.createElement(Button, { title: 'Perf',
            pressed: this.props.perfing,
            onClick: this.props.setPerfing,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          }),
          React.createElement(Button, { title: 'Network',
            pressed: this.props.networking,
            onClick: this.props.setNetworking,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 80
            }
          }),
          React.createElement(Button, { title: 'Touchables',
            pressed: this.props.touchTargetting,
            onClick: this.props.setTouchTargetting,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 84
            }
          })
        )
      );
    }
  }]);
  return InspectorPanel;
}(React.Component);

InspectorPanel.propTypes = {
  devtoolsIsOpen: PropTypes.bool,
  inspecting: PropTypes.bool,
  setInspecting: PropTypes.func,
  inspected: PropTypes.object,
  perfing: PropTypes.bool,
  setPerfing: PropTypes.func,
  touchTargetting: PropTypes.bool,
  setTouchTargetting: PropTypes.func,
  networking: PropTypes.bool,
  setNetworking: PropTypes.func
};

var Button = function (_React$Component2) {
  babelHelpers.inherits(Button, _React$Component2);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var _this3 = this;

      return React.createElement(
        TouchableHighlight,
        { onPress: function onPress() {
            return _this3.props.onClick(!_this3.props.pressed);
          }, style: [styles.button, this.props.pressed && styles.buttonPressed], __source: {
            fileName: _jsxFileName,
            lineNumber: 110
          }
        },
        React.createElement(
          Text,
          { style: styles.buttonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 114
            }
          },
          this.props.title
        )
      );
    }
  }]);
  return Button;
}(React.Component);

var styles = StyleSheet.create({
  buttonRow: {
    flexDirection: 'row'
  },
  button: {
    backgroundColor: 'rgba(0, 0, 0, 0.3)',
    margin: 2,
    height: 30,
    justifyContent: 'center',
    alignItems: 'center'
  },
  buttonPressed: {
    backgroundColor: 'rgba(255, 255, 255, 0.3)'
  },
  buttonText: {
    textAlign: 'center',
    color: 'white',
    margin: 5
  },
  container: {
    backgroundColor: 'rgba(0, 0, 0, 0.7)'
  },
  properties: {
    height: 200
  },
  waiting: {
    height: 100
  },
  waitingText: {
    fontSize: 20,
    textAlign: 'center',
    marginVertical: 20,
    color: 'white'
  }
});

module.exports = InspectorPanel;
}, 239, null, "InspectorPanel");
__d(/* ElementProperties */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Inspector\\ElementProperties.js';
var BoxInspector = require(241           ); // 241 = BoxInspector
var PropTypes = require(19          ); // 19 = prop-types
var React = require(125    ); // 125 = React
var StyleInspector = require(242             ); // 242 = StyleInspector
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var TouchableHighlight = require(243                 ); // 243 = TouchableHighlight
var TouchableWithoutFeedback = require(185                       ); // 185 = TouchableWithoutFeedback
var View = require(124   ); // 124 = View

var flattenStyle = require(114           ); // 114 = flattenStyle
var mapWithSeparator = require(246               ); // 246 = mapWithSeparator
var openFileInEditor = require(247               ); // 247 = openFileInEditor

var ElementProperties = function (_React$Component) {
  babelHelpers.inherits(ElementProperties, _React$Component);

  function ElementProperties() {
    babelHelpers.classCallCheck(this, ElementProperties);
    return babelHelpers.possibleConstructorReturn(this, (ElementProperties.__proto__ || Object.getPrototypeOf(ElementProperties)).apply(this, arguments));
  }

  babelHelpers.createClass(ElementProperties, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var style = flattenStyle(this.props.style);

      var selection = this.props.selection;
      var openFileButton = void 0;
      var source = this.props.source;

      var _ref = source || {},
          fileName = _ref.fileName,
          lineNumber = _ref.lineNumber;

      if (fileName && lineNumber) {
        var parts = fileName.split('/');
        var fileNameShort = parts[parts.length - 1];
        openFileButton = React.createElement(
          TouchableHighlight,
          {
            style: styles.openButton,
            onPress: openFileInEditor.bind(null, fileName, lineNumber), __source: {
              fileName: _jsxFileName,
              lineNumber: 62
            }
          },
          React.createElement(
            Text,
            { style: styles.openButtonTitle, numberOfLines: 1, __source: {
                fileName: _jsxFileName,
                lineNumber: 65
              }
            },
            fileNameShort,
            ':',
            lineNumber
          )
        );
      }

      return React.createElement(
        TouchableWithoutFeedback,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 74
          }
        },
        React.createElement(
          View,
          { style: styles.info, __source: {
              fileName: _jsxFileName,
              lineNumber: 75
            }
          },
          React.createElement(
            View,
            { style: styles.breadcrumb, __source: {
                fileName: _jsxFileName,
                lineNumber: 76
              }
            },
            mapWithSeparator(this.props.hierarchy, function (hierarchyItem, i) {
              return React.createElement(
                TouchableHighlight,
                {
                  key: 'item-' + i,
                  style: [styles.breadItem, i === selection && styles.selected],

                  onPress: function onPress() {
                    return _this2.props.setSelection(i);
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 80
                  }
                },
                React.createElement(
                  Text,
                  { style: styles.breadItemText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 85
                    }
                  },
                  hierarchyItem.name
                )
              );
            }, function (i) {
              return React.createElement(
                Text,
                { key: 'sep-' + i, style: styles.breadSep, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 91
                  }
                },
                '\u25B8'
              );
            })
          ),
          React.createElement(
            View,
            { style: styles.row, __source: {
                fileName: _jsxFileName,
                lineNumber: 97
              }
            },
            React.createElement(
              View,
              { style: styles.col, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 98
                }
              },
              React.createElement(StyleInspector, { style: style, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 99
                }
              }),
              openFileButton
            ),
            React.createElement(BoxInspector, { style: style, frame: this.props.frame, __source: {
                fileName: _jsxFileName,
                lineNumber: 104
              }
            })
          )
        )
      );
    }
  }]);
  return ElementProperties;
}(React.Component);

ElementProperties.propTypes = {
  hierarchy: PropTypes.array.isRequired,
  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),
  source: PropTypes.shape({
    fileName: PropTypes.string,
    lineNumber: PropTypes.number
  })
};


var styles = StyleSheet.create({
  breadSep: {
    fontSize: 8,
    color: 'white'
  },
  breadcrumb: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    alignItems: 'flex-start',
    marginBottom: 5
  },
  selected: {
    borderColor: 'white',
    borderRadius: 5
  },
  breadItem: {
    borderWidth: 1,
    borderColor: 'transparent',
    marginHorizontal: 2
  },
  breadItemText: {
    fontSize: 10,
    color: 'white',
    marginHorizontal: 5
  },
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between'
  },
  col: {
    flex: 1
  },
  info: {
    padding: 10
  },
  openButton: {
    padding: 10,
    backgroundColor: '#000',
    marginVertical: 5,
    marginRight: 5,
    borderRadius: 2
  },
  openButtonTitle: {
    color: 'white',
    fontSize: 8
  }
});

module.exports = ElementProperties;
}, 240, null, "ElementProperties");
__d(/* BoxInspector */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Inspector\\BoxInspector.js';
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var View = require(124   ); // 124 = View
var resolveBoxStyle = require(238              ); // 238 = resolveBoxStyle

var blank = {
  top: 0,
  left: 0,
  right: 0,
  bottom: 0
};

var BoxInspector = function (_React$Component) {
  babelHelpers.inherits(BoxInspector, _React$Component);

  function BoxInspector() {
    babelHelpers.classCallCheck(this, BoxInspector);
    return babelHelpers.possibleConstructorReturn(this, (BoxInspector.__proto__ || Object.getPrototypeOf(BoxInspector)).apply(this, arguments));
  }

  babelHelpers.createClass(BoxInspector, [{
    key: 'render',
    value: function render() {
      var frame = this.props.frame;
      var style = this.props.style;
      var margin = style && resolveBoxStyle('margin', style) || blank;
      var padding = style && resolveBoxStyle('padding', style) || blank;
      return React.createElement(
        BoxContainer,
        { title: 'margin', titleStyle: styles.marginLabel, box: margin, __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        },
        React.createElement(
          BoxContainer,
          { title: 'padding', box: padding, __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          React.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            },
            React.createElement(
              Text,
              { style: styles.innerText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 37
                }
              },
              '(',
              frame.left,
              ', ',
              frame.top,
              ')'
            ),
            React.createElement(
              Text,
              { style: styles.innerText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 40
                }
              },
              frame.width,
              ' \xD7 ',
              frame.height
            )
          )
        )
      );
    }
  }]);
  return BoxInspector;
}(React.Component);

var BoxContainer = function (_React$Component2) {
  babelHelpers.inherits(BoxContainer, _React$Component2);

  function BoxContainer() {
    babelHelpers.classCallCheck(this, BoxContainer);
    return babelHelpers.possibleConstructorReturn(this, (BoxContainer.__proto__ || Object.getPrototypeOf(BoxContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(BoxContainer, [{
    key: 'render',
    value: function render() {
      var box = this.props.box;
      return React.createElement(
        View,
        { style: styles.box, __source: {
            fileName: _jsxFileName,
            lineNumber: 54
          }
        },
        React.createElement(
          View,
          { style: styles.row, __source: {
              fileName: _jsxFileName,
              lineNumber: 55
            }
          },
          React.createElement(
            Text,
            { style: [this.props.titleStyle, styles.label], __source: {
                fileName: _jsxFileName,
                lineNumber: 56
              }
            },
            this.props.title
          ),
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 57
              }
            },
            box.top
          )
        ),
        React.createElement(
          View,
          { style: styles.row, __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          },
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 60
              }
            },
            box.left
          ),
          this.props.children,
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 62
              }
            },
            box.right
          )
        ),
        React.createElement(
          Text,
          { style: styles.boxText, __source: {
              fileName: _jsxFileName,
              lineNumber: 64
            }
          },
          box.bottom
        )
      );
    }
  }]);
  return BoxContainer;
}(React.Component);

var styles = StyleSheet.create({
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-around'
  },
  marginLabel: {
    width: 60
  },
  label: {
    fontSize: 10,
    color: 'rgb(255,100,0)',
    marginLeft: 5,
    flex: 1,
    textAlign: 'left',
    top: -3
  },
  buffer: {
    fontSize: 10,
    color: 'yellow',
    flex: 1,
    textAlign: 'center'
  },
  innerText: {
    color: 'yellow',
    fontSize: 12,
    textAlign: 'center',
    width: 70
  },
  box: {
    borderWidth: 1,
    borderColor: 'grey'
  },
  boxText: {
    color: 'white',
    fontSize: 12,
    marginHorizontal: 3,
    marginVertical: 2,
    textAlign: 'center'
  }
});

module.exports = BoxInspector;
}, 241, null, "BoxInspector");
__d(/* StyleInspector */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Inspector\\StyleInspector.js';
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var View = require(124   ); // 124 = View

var StyleInspector = function (_React$Component) {
  babelHelpers.inherits(StyleInspector, _React$Component);

  function StyleInspector() {
    babelHelpers.classCallCheck(this, StyleInspector);
    return babelHelpers.possibleConstructorReturn(this, (StyleInspector.__proto__ || Object.getPrototypeOf(StyleInspector)).apply(this, arguments));
  }

  babelHelpers.createClass(StyleInspector, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      if (!this.props.style) {
        return React.createElement(
          Text,
          { style: styles.noStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          },
          'No style'
        );
      }
      var names = Object.keys(this.props.style);
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 27
            }
          },
          names.map(function (name) {
            return React.createElement(
              Text,
              { key: name, style: styles.attr, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 28
                }
              },
              name,
              ':'
            );
          })
        ),
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          },
          names.map(function (name) {
            var value = typeof _this2.props.style[name] === 'object' ? JSON.stringify(_this2.props.style[name]) : _this2.props.style[name];
            return React.createElement(
              Text,
              { key: name, style: styles.value, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 34
                }
              },
              value
            );
          })
        )
      );
    }
  }]);
  return StyleInspector;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    flexDirection: 'row'
  },
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-around'
  },
  attr: {
    fontSize: 10,
    color: '#ccc'
  },
  value: {
    fontSize: 10,
    color: 'white',
    marginLeft: 10
  },
  noStyle: {
    color: 'white',
    fontSize: 10
  }
});

module.exports = StyleInspector;
}, 242, null, "StyleInspector");
__d(/* TouchableHighlight */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\Touchable\\TouchableHighlight.js';


var ColorPropType = require(59             ); // 59 = ColorPropType
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var PropTypes = require(19          ); // 19 = prop-types
var React = require(125    ); // 125 = React
var ReactNativeViewAttributes = require(140                        ); // 140 = ReactNativeViewAttributes
var StyleSheet = require(153         ); // 153 = StyleSheet
var TimerMixin = require(186                ); // 186 = react-timer-mixin
var Touchable = require(177        ); // 177 = Touchable
var TouchableWithoutFeedback = require(185                       ); // 185 = TouchableWithoutFeedback
var View = require(124   ); // 124 = View
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var createReactClass = require(150                 ); // 150 = create-react-class
var ensureComponentIsNative = require(244                      ); // 244 = ensureComponentIsNative
var ensurePositiveDelayProps = require(187                       ); // 187 = ensurePositiveDelayProps
var keyOf = require(245             ); // 245 = fbjs/lib/keyOf
var merge = require(144    ); // 144 = merge

var DEFAULT_PROPS = {
  activeOpacity: 0.85,
  underlayColor: 'black'
};

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableHighlight = createReactClass({
  displayName: 'TouchableHighlight',
  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    activeOpacity: PropTypes.number,

    underlayColor: ColorPropType,
    style: ViewPropTypes.style,

    onShowUnderlay: PropTypes.func,

    onHideUnderlay: PropTypes.func,

    hasTVPreferredFocus: PropTypes.bool,

    tvParallaxProperties: PropTypes.object

  }),

  mixins: [NativeMethodsMixin, TimerMixin, Touchable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return DEFAULT_PROPS;
  },

  _computeSyntheticState: function _computeSyntheticState(props) {
    return {
      activeProps: {
        style: {
          opacity: props.activeOpacity
        }
      },
      activeUnderlayProps: {
        style: {
          backgroundColor: props.underlayColor
        }
      },
      underlayStyle: [INACTIVE_UNDERLAY_PROPS.style, props.style],
      hasTVPreferredFocus: props.hasTVPreferredFocus
    };
  },

  getInitialState: function getInitialState() {
    this._isMounted = false;
    return merge(this.touchableGetInitialState(), this._computeSyntheticState(this.props));
  },

  componentDidMount: function componentDidMount() {
    this._isMounted = true;
    ensurePositiveDelayProps(this.props);
    ensureComponentIsNative(this.refs[CHILD_REF]);
  },

  componentWillUnmount: function componentWillUnmount() {
    this._isMounted = false;
  },

  componentDidUpdate: function componentDidUpdate() {
    ensureComponentIsNative(this.refs[CHILD_REF]);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
    if (nextProps.activeOpacity !== this.props.activeOpacity || nextProps.underlayColor !== this.props.underlayColor || nextProps.style !== this.props.style) {
      this.setState(this._computeSyntheticState(nextProps));
    }
  },

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.clearTimeout(this._hideTimeout);
    this._hideTimeout = null;
    this._showUnderlay();
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    if (!this._hideTimeout) {
      this._hideUnderlay();
    }
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.clearTimeout(this._hideTimeout);
    this._showUnderlay();
    this._hideTimeout = this.setTimeout(this._hideUnderlay, this.props.delayPressOut || 100);
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _showUnderlay: function _showUnderlay() {
    if (!this._isMounted || !this._hasPressHandler()) {
      return;
    }

    this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
    this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
    this.props.onShowUnderlay && this.props.onShowUnderlay();
  },

  _hideUnderlay: function _hideUnderlay() {
    this.clearTimeout(this._hideTimeout);
    this._hideTimeout = null;
    if (this._hasPressHandler() && this.refs[UNDERLAY_REF]) {
      this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
      this.refs[UNDERLAY_REF].setNativeProps(babelHelpers.extends({}, INACTIVE_UNDERLAY_PROPS, {
        style: this.state.underlayStyle
      }));
      this.props.onHideUnderlay && this.props.onHideUnderlay();
    }
  },

  _hasPressHandler: function _hasPressHandler() {
    return !!(this.props.onPress || this.props.onPressIn || this.props.onPressOut || this.props.onLongPress);
  },

  render: function render() {
    return React.createElement(
      View,
      {
        accessible: this.props.accessible !== false,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        ref: UNDERLAY_REF,
        style: this.state.underlayStyle,
        onLayout: this.props.onLayout,
        hitSlop: this.props.hitSlop,
        isTVSelectable: true,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hasTVPreferredFocus: this.state.hasTVPreferredFocus,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate,
        nativeID: this.props.nativeID,
        testID: this.props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 260
        }
      },
      React.cloneElement(React.Children.only(this.props.children), {
        ref: CHILD_REF
      }),
      Touchable.renderDebugView({ color: 'green', hitSlop: this.props.hitSlop })
    );
  }
});

var CHILD_REF = keyOf({ childRef: null });
var UNDERLAY_REF = keyOf({ underlayRef: null });
var INACTIVE_CHILD_PROPS = {
  style: StyleSheet.create({ x: { opacity: 1.0 } }).x
};
var INACTIVE_UNDERLAY_PROPS = {
  style: StyleSheet.create({ x: { backgroundColor: 'transparent' } }).x
};

module.exports = TouchableHighlight;
}, 243, null, "TouchableHighlight");
__d(/* ensureComponentIsNative */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var ensureComponentIsNative = function ensureComponentIsNative(component) {
  invariant(component && typeof component.setNativeProps === 'function', 'Touchable child must either be native or forward setNativeProps to a ' + 'native component');
};

module.exports = ensureComponentIsNative;
}, 244, null, "ensureComponentIsNative");
__d(/* fbjs/lib/keyOf.js */function(global, require, module, exports) {"use strict";

var keyOf = function keyOf(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};

module.exports = keyOf;
}, 245, null, "fbjs/lib/keyOf.js");
__d(/* mapWithSeparator */function(global, require, module, exports) {
'use strict';

function mapWithSeparator(items, itemRenderer, spacerRenderer) {
  var mapped = [];
  if (items.length > 0) {
    mapped.push(itemRenderer(items[0], 0, items));
    for (var ii = 1; ii < items.length; ii++) {
      mapped.push(spacerRenderer(ii - 1), itemRenderer(items[ii], ii, items));
    }
  }
  return mapped;
}

module.exports = mapWithSeparator;
}, 246, null, "mapWithSeparator");
__d(/* openFileInEditor */function(global, require, module, exports) {
'use strict';

var getDevServer = require(69            ); // 69 = getDevServer

function openFileInEditor(file, lineNumber) {
  fetch(getDevServer().url + 'open-stack-frame', {
    method: 'POST',
    body: JSON.stringify({ file: file, lineNumber: lineNumber })
  });
}

module.exports = openFileInEditor;
}, 247, null, "openFileInEditor");
__d(/* NetworkOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Inspector\\NetworkOverlay.js';
var ListView = require(216       ); // 216 = ListView
var React = require(125    ); // 125 = React
var ScrollView = require(202         ); // 202 = ScrollView
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var TouchableHighlight = require(243                 ); // 243 = TouchableHighlight
var View = require(124   ); // 124 = View
var WebSocketInterceptor = require(249                   ); // 249 = WebSocketInterceptor
var XHRInterceptor = require(250             ); // 250 = XHRInterceptor

var LISTVIEW_CELL_HEIGHT = 15;
var SEPARATOR_THICKNESS = 2;

var nextXHRId = 0;

var NetworkOverlay = function (_React$Component) {
  babelHelpers.inherits(NetworkOverlay, _React$Component);

  function NetworkOverlay(props) {
    babelHelpers.classCallCheck(this, NetworkOverlay);

    var _this = babelHelpers.possibleConstructorReturn(this, (NetworkOverlay.__proto__ || Object.getPrototypeOf(NetworkOverlay)).call(this, props));

    _this._requests = [];
    _this._detailViewItems = [];
    _this._listViewDataSource = new ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
        return r1 !== r2;
      } });
    _this.state = {
      dataSource: _this._listViewDataSource.cloneWithRows([]),
      newDetailInfo: false,
      detailRowID: null
    };
    _this._listViewHighlighted = false;
    _this._listViewHeight = 0;
    _this._captureRequestListView = _this._captureRequestListView.bind(_this);
    _this._captureDetailScrollView = _this._captureDetailScrollView.bind(_this);
    _this._listViewOnLayout = _this._listViewOnLayout.bind(_this);
    _this._renderRow = _this._renderRow.bind(_this);
    _this._closeButtonClicked = _this._closeButtonClicked.bind(_this);
    _this._socketIdMap = {};
    _this._xhrIdMap = {};
    return _this;
  }

  babelHelpers.createClass(NetworkOverlay, [{
    key: '_enableXHRInterception',
    value: function _enableXHRInterception() {
      var _this2 = this;

      if (XHRInterceptor.isInterceptorEnabled()) {
        return;
      }

      XHRInterceptor.setOpenCallback(function (method, url, xhr) {
        xhr._index = nextXHRId++;
        var xhrIndex = _this2._requests.length;
        _this2._xhrIdMap[xhr._index] = xhrIndex;

        var _xhr = {
          'type': 'XMLHttpRequest',
          'method': method,
          'url': url
        };
        _this2._requests.push(_xhr);
        _this2._detailViewItems.push([]);
        _this2._genDetailViewItem(xhrIndex);
        _this2.setState({ dataSource: _this2._listViewDataSource.cloneWithRows(_this2._requests) }, _this2._scrollToBottom());
      });

      XHRInterceptor.setRequestHeaderCallback(function (header, value, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        if (!networkInfo.requestHeaders) {
          networkInfo.requestHeaders = {};
        }
        networkInfo.requestHeaders[header] = value;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setSendCallback(function (data, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        _this2._requests[xhrIndex].dataSent = data;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setHeaderReceivedCallback(function (type, size, responseHeaders, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        networkInfo.responseContentType = type;
        networkInfo.responseSize = size;
        networkInfo.responseHeaders = responseHeaders;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setResponseCallback(function (status, timeout, response, responseURL, responseType, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        networkInfo.status = status;
        networkInfo.timeout = timeout;
        networkInfo.response = response;
        networkInfo.responseURL = responseURL;
        networkInfo.responseType = responseType;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.enableInterception();
    }
  }, {
    key: '_enableWebSocketInterception',
    value: function _enableWebSocketInterception() {
      var _this3 = this;

      if (WebSocketInterceptor.isInterceptorEnabled()) {
        return;
      }

      WebSocketInterceptor.setConnectCallback(function (url, protocols, options, socketId) {
        var socketIndex = _this3._requests.length;
        _this3._socketIdMap[socketId] = socketIndex;
        var _webSocket = {
          'type': 'WebSocket',
          'url': url,
          'protocols': protocols
        };
        _this3._requests.push(_webSocket);
        _this3._detailViewItems.push([]);
        _this3._genDetailViewItem(socketIndex);
        _this3.setState({ dataSource: _this3._listViewDataSource.cloneWithRows(_this3._requests) }, _this3._scrollToBottom());
      });

      WebSocketInterceptor.setCloseCallback(function (statusCode, closeReason, socketId) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (statusCode !== null && closeReason !== null) {
          _this3._requests[socketIndex].status = statusCode;
          _this3._requests[socketIndex].closeReason = closeReason;
        }
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setSendCallback(function (data, socketId) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (!_this3._requests[socketIndex].messages) {
          _this3._requests[socketIndex].messages = '';
        }
        _this3._requests[socketIndex].messages += 'Sent: ' + JSON.stringify(data) + '\n';
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnMessageCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (!_this3._requests[socketIndex].messages) {
          _this3._requests[socketIndex].messages = '';
        }
        _this3._requests[socketIndex].messages += 'Received: ' + JSON.stringify(message) + '\n';
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnCloseCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        _this3._requests[socketIndex].serverClose = message;
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnErrorCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        _this3._requests[socketIndex].serverError = message;
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.enableInterception();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._enableXHRInterception();
      this._enableWebSocketInterception();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      XHRInterceptor.disableInterception();
      WebSocketInterceptor.disableInterception();
    }
  }, {
    key: '_renderRow',
    value: function _renderRow(rowData, sectionID, rowID, highlightRow) {
      var _this4 = this;

      var urlCellViewStyle = styles.urlEvenCellView;
      var methodCellViewStyle = styles.methodEvenCellView;
      if (rowID % 2 === 1) {
        urlCellViewStyle = styles.urlOddCellView;
        methodCellViewStyle = styles.methodOddCellView;
      }
      return React.createElement(
        TouchableHighlight,
        { onPress: function onPress() {
            _this4._pressRow(rowID);
            highlightRow(sectionID, rowID);
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 302
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 306
            }
          },
          React.createElement(
            View,
            { style: styles.tableRow, __source: {
                fileName: _jsxFileName,
                lineNumber: 307
              }
            },
            React.createElement(
              View,
              { style: urlCellViewStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 308
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 309
                  }
                },
                rowData.url
              )
            ),
            React.createElement(
              View,
              { style: methodCellViewStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 313
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 314
                  }
                },
                this._getTypeShortName(rowData.type)
              )
            )
          )
        )
      );
    }
  }, {
    key: '_renderSeperator',
    value: function _renderSeperator(sectionID, rowID, adjacentRowHighlighted) {
      return React.createElement(View, {
        key: sectionID + '-' + rowID,
        style: {
          height: adjacentRowHighlighted ? SEPARATOR_THICKNESS : 0,
          backgroundColor: adjacentRowHighlighted ? '#3B5998' : '#CCCCCC'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 329
        }
      });
    }
  }, {
    key: '_scrollToBottom',
    value: function _scrollToBottom() {
      if (this._listView) {
        var scrollResponder = this._listView.getScrollResponder();
        if (scrollResponder) {
          var scrollY = Math.max(this._requests.length * LISTVIEW_CELL_HEIGHT + (this._listViewHighlighted ? 2 * SEPARATOR_THICKNESS : 0) - this._listViewHeight, 0);
          scrollResponder.scrollResponderScrollTo({
            x: 0,
            y: scrollY,
            animated: true
          });
        }
      }
    }
  }, {
    key: '_captureRequestListView',
    value: function _captureRequestListView(listRef) {
      this._listView = listRef;
    }
  }, {
    key: '_listViewOnLayout',
    value: function _listViewOnLayout(event) {
      var height = event.nativeEvent.layout.height;

      this._listViewHeight = height;
    }
  }, {
    key: '_pressRow',
    value: function _pressRow(rowID) {
      this._listViewHighlighted = true;
      this.setState({ detailRowID: rowID }, this._scrollToTop());
    }
  }, {
    key: '_scrollToTop',
    value: function _scrollToTop() {
      if (this._scrollView) {
        this._scrollView.scrollTo({
          y: 0,
          animated: false
        });
      }
    }
  }, {
    key: '_captureDetailScrollView',
    value: function _captureDetailScrollView(scrollRef) {
      this._scrollView = scrollRef;
    }
  }, {
    key: '_closeButtonClicked',
    value: function _closeButtonClicked() {
      this.setState({ detailRowID: null });
    }
  }, {
    key: '_getStringByValue',
    value: function _getStringByValue(value) {
      if (value === undefined) {
        return 'undefined';
      }
      if (typeof value === 'object') {
        return JSON.stringify(value);
      }
      if (typeof value === 'string' && value.length > 500) {
        return String(value).substr(0, 500).concat('\n***TRUNCATED TO 500 CHARACTERS***');
      }
      return value;
    }
  }, {
    key: '_getRequestIndexByXHRID',
    value: function _getRequestIndexByXHRID(index) {
      if (index === undefined) {
        return -1;
      }
      var xhrIndex = this._xhrIdMap[index];
      if (xhrIndex === undefined) {
        return -1;
      } else {
        return xhrIndex;
      }
    }
  }, {
    key: '_getTypeShortName',
    value: function _getTypeShortName(type) {
      if (type === 'XMLHttpRequest') {
        return 'XHR';
      } else if (type === 'WebSocket') {
        return 'WS';
      }

      return '';
    }
  }, {
    key: '_genDetailViewItem',
    value: function _genDetailViewItem(index) {
      this._detailViewItems[index] = [];
      var detailViewItem = this._detailViewItems[index];
      var requestItem = this._requests[index];
      for (var _key in requestItem) {
        detailViewItem.push(React.createElement(
          View,
          { style: styles.detailViewRow, key: _key, __source: {
              fileName: _jsxFileName,
              lineNumber: 444
            }
          },
          React.createElement(
            Text,
            { style: [styles.detailViewText, styles.detailKeyCellView], __source: {
                fileName: _jsxFileName,
                lineNumber: 445
              }
            },
            _key
          ),
          React.createElement(
            Text,
            { style: [styles.detailViewText, styles.detailValueCellView], __source: {
                fileName: _jsxFileName,
                lineNumber: 448
              }
            },
            this._getStringByValue(requestItem[_key])
          )
        ));
      }

      if (this.state.detailRowID != null && Number(this.state.detailRowID) === index) {
        this.setState({ newDetailInfo: true });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 463
          }
        },
        this.state.detailRowID != null && React.createElement(
          TouchableHighlight,
          {
            style: styles.closeButton,
            onPress: this._closeButtonClicked, __source: {
              fileName: _jsxFileName,
              lineNumber: 465
            }
          },
          React.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 468
              }
            },
            React.createElement(
              Text,
              { style: styles.clostButtonText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 469
                }
              },
              'v'
            )
          )
        ),
        this.state.detailRowID != null && React.createElement(
          ScrollView,
          {
            style: styles.detailScrollView,
            ref: this._captureDetailScrollView, __source: {
              fileName: _jsxFileName,
              lineNumber: 473
            }
          },
          this._detailViewItems[this.state.detailRowID]
        ),
        React.createElement(
          View,
          { style: styles.listViewTitle, __source: {
              fileName: _jsxFileName,
              lineNumber: 478
            }
          },
          this._requests.length > 0 && React.createElement(
            View,
            { style: styles.tableRow, __source: {
                fileName: _jsxFileName,
                lineNumber: 480
              }
            },
            React.createElement(
              View,
              { style: styles.urlTitleCellView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 481
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 482
                  }
                },
                'URL'
              )
            ),
            React.createElement(
              View,
              { style: styles.methodTitleCellView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 484
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 485
                  }
                },
                'Type'
              )
            )
          )
        ),
        React.createElement(ListView, {
          style: styles.listView,
          ref: this._captureRequestListView,
          dataSource: this.state.dataSource,
          renderRow: this._renderRow,
          enableEmptySections: true,
          renderSeparator: this._renderSeperator,
          onLayout: this._listViewOnLayout,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 489
          }
        })
      );
    }
  }]);
  return NetworkOverlay;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    paddingTop: 10,
    paddingBottom: 10,
    paddingLeft: 5,
    paddingRight: 5
  },
  listViewTitle: {
    height: 20
  },
  listView: {
    flex: 1,
    height: 60
  },
  tableRow: {
    flexDirection: 'row',
    flex: 1
  },
  cellText: {
    color: 'white',
    fontSize: 12
  },
  methodTitleCellView: {
    height: 18,
    borderColor: '#DCD7CD',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#444',
    flex: 1
  },
  urlTitleCellView: {
    height: 18,
    borderColor: '#DCD7CD',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#444',
    flex: 5,
    paddingLeft: 3
  },
  methodOddCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#000',
    flex: 1
  },
  urlOddCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#000',
    flex: 5,
    paddingLeft: 3
  },
  methodEvenCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#888',
    flex: 1
  },
  urlEvenCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#888',
    flex: 5,
    paddingLeft: 3
  },
  detailScrollView: {
    flex: 1,
    height: 180,
    marginTop: 5,
    marginBottom: 5
  },
  detailKeyCellView: {
    flex: 1.3
  },
  detailValueCellView: {
    flex: 2
  },
  detailViewRow: {
    flexDirection: 'row',
    paddingHorizontal: 3
  },
  detailViewText: {
    color: 'white',
    fontSize: 11
  },
  clostButtonText: {
    color: 'white',
    fontSize: 10
  },
  closeButton: {
    marginTop: 5,
    backgroundColor: '#888',
    justifyContent: 'center',
    alignItems: 'center'
  }
});

module.exports = NetworkOverlay;
}, 248, null, "NetworkOverlay");
__d(/* WebSocketInterceptor */function(global, require, module, exports) {
'use strict';

var RCTWebSocketModule = require(28             ).WebSocketModule; // 28 = NativeModules
var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter

var base64 = require(95         ); // 95 = base64-js

var originalRCTWebSocketConnect = RCTWebSocketModule.connect;
var originalRCTWebSocketSend = RCTWebSocketModule.send;
var originalRCTWebSocketSendBinary = RCTWebSocketModule.sendBinary;
var originalRCTWebSocketClose = RCTWebSocketModule.close;

var eventEmitter = void 0;
var subscriptions = void 0;

var closeCallback = void 0;
var sendCallback = void 0;
var connectCallback = void 0;
var onOpenCallback = void 0;
var onMessageCallback = void 0;
var onErrorCallback = void 0;
var onCloseCallback = void 0;

var _isInterceptorEnabled = false;

var WebSocketInterceptor = {
  setCloseCallback: function setCloseCallback(callback) {
    closeCallback = callback;
  },
  setSendCallback: function setSendCallback(callback) {
    sendCallback = callback;
  },
  setConnectCallback: function setConnectCallback(callback) {
    connectCallback = callback;
  },
  setOnOpenCallback: function setOnOpenCallback(callback) {
    onOpenCallback = callback;
  },
  setOnMessageCallback: function setOnMessageCallback(callback) {
    onMessageCallback = callback;
  },
  setOnErrorCallback: function setOnErrorCallback(callback) {
    onErrorCallback = callback;
  },
  setOnCloseCallback: function setOnCloseCallback(callback) {
    onCloseCallback = callback;
  },
  isInterceptorEnabled: function isInterceptorEnabled() {
    return _isInterceptorEnabled;
  },
  _unregisterEvents: function _unregisterEvents() {
    subscriptions.forEach(function (e) {
      return e.remove();
    });
    subscriptions = [];
  },
  _registerEvents: function _registerEvents() {
    subscriptions = [eventEmitter.addListener('websocketMessage', function (ev) {
      if (onMessageCallback) {
        onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);
      }
    }), eventEmitter.addListener('websocketOpen', function (ev) {
      if (onOpenCallback) {
        onOpenCallback(ev.id);
      }
    }), eventEmitter.addListener('websocketClosed', function (ev) {
      if (onCloseCallback) {
        onCloseCallback(ev.id, { code: ev.code, reason: ev.reason });
      }
    }), eventEmitter.addListener('websocketFailed', function (ev) {
      if (onErrorCallback) {
        onErrorCallback(ev.id, { message: ev.message });
      }
    })];
  },
  enableInterception: function enableInterception() {
    if (_isInterceptorEnabled) {
      return;
    }
    eventEmitter = new NativeEventEmitter(RCTWebSocketModule);
    WebSocketInterceptor._registerEvents();

    RCTWebSocketModule.connect = function (url, protocols, options, socketId) {
      if (connectCallback) {
        connectCallback(url, protocols, options, socketId);
      }
      originalRCTWebSocketConnect.apply(this, arguments);
    };

    RCTWebSocketModule.send = function (data, socketId) {
      if (sendCallback) {
        sendCallback(data, socketId);
      }
      originalRCTWebSocketSend.apply(this, arguments);
    };

    RCTWebSocketModule.sendBinary = function (data, socketId) {
      if (sendCallback) {
        sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);
      }
      originalRCTWebSocketSendBinary.apply(this, arguments);
    };

    RCTWebSocketModule.close = function () {
      if (closeCallback) {
        if (arguments.length === 3) {
          closeCallback(arguments[0], arguments[1], arguments[2]);
        } else {
          closeCallback(null, null, arguments[0]);
        }
      }
      originalRCTWebSocketClose.apply(this, arguments);
    };

    _isInterceptorEnabled = true;
  },
  _arrayBufferToString: function _arrayBufferToString(data) {
    var value = base64.toByteArray(data).buffer;
    if (value === undefined || value === null) {
      return '(no value)';
    }
    if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {
      return 'ArrayBuffer {' + String(Array.from(new Uint8Array(value))) + '}';
    }
    return value;
  },
  disableInterception: function disableInterception() {
    if (!_isInterceptorEnabled) {
      return;
    }
    _isInterceptorEnabled = false;
    RCTWebSocketModule.send = originalRCTWebSocketSend;
    RCTWebSocketModule.sendBinary = originalRCTWebSocketSendBinary;
    RCTWebSocketModule.close = originalRCTWebSocketClose;
    RCTWebSocketModule.connect = originalRCTWebSocketConnect;

    connectCallback = null;
    closeCallback = null;
    sendCallback = null;
    onOpenCallback = null;
    onMessageCallback = null;
    onCloseCallback = null;
    onErrorCallback = null;

    WebSocketInterceptor._unregisterEvents();
  }
};

module.exports = WebSocketInterceptor;
}, 249, null, "WebSocketInterceptor");
__d(/* XHRInterceptor */function(global, require, module, exports) {
'use strict';

var XMLHttpRequest = require(87              ); // 87 = XMLHttpRequest
var originalXHROpen = XMLHttpRequest.prototype.open;
var originalXHRSend = XMLHttpRequest.prototype.send;
var originalXHRSetRequestHeader = XMLHttpRequest.prototype.setRequestHeader;

var openCallback;
var sendCallback;
var requestHeaderCallback;
var headerReceivedCallback;
var responseCallback;

var _isInterceptorEnabled = false;

var XHRInterceptor = {
  setOpenCallback: function setOpenCallback(callback) {
    openCallback = callback;
  },
  setSendCallback: function setSendCallback(callback) {
    sendCallback = callback;
  },
  setHeaderReceivedCallback: function setHeaderReceivedCallback(callback) {
    headerReceivedCallback = callback;
  },
  setResponseCallback: function setResponseCallback(callback) {
    responseCallback = callback;
  },
  setRequestHeaderCallback: function setRequestHeaderCallback(callback) {
    requestHeaderCallback = callback;
  },
  isInterceptorEnabled: function isInterceptorEnabled() {
    return _isInterceptorEnabled;
  },
  enableInterception: function enableInterception() {
    if (_isInterceptorEnabled) {
      return;
    }

    XMLHttpRequest.prototype.open = function (method, url) {
      if (openCallback) {
        openCallback(method, url, this);
      }
      originalXHROpen.apply(this, arguments);
    };

    XMLHttpRequest.prototype.setRequestHeader = function (header, value) {
      if (requestHeaderCallback) {
        requestHeaderCallback(header, value, this);
      }
      originalXHRSetRequestHeader.apply(this, arguments);
    };

    XMLHttpRequest.prototype.send = function (data) {
      var _this = this;

      if (sendCallback) {
        sendCallback(data, this);
      }
      if (this.addEventListener) {
        this.addEventListener('readystatechange', function () {
          if (!_isInterceptorEnabled) {
            return;
          }
          if (_this.readyState === _this.HEADERS_RECEIVED) {
            var contentTypeString = _this.getResponseHeader('Content-Type');
            var contentLengthString = _this.getResponseHeader('Content-Length');
            var responseContentType = void 0,
                responseSize = void 0;
            if (contentTypeString) {
              responseContentType = contentTypeString.split(';')[0];
            }
            if (contentLengthString) {
              responseSize = parseInt(contentLengthString, 10);
            }
            if (headerReceivedCallback) {
              headerReceivedCallback(responseContentType, responseSize, _this.getAllResponseHeaders(), _this);
            }
          }
          if (_this.readyState === _this.DONE) {
            if (responseCallback) {
              responseCallback(_this.status, _this.timeout, _this.response, _this.responseURL, _this.responseType, _this);
            }
          }
        }, false);
      }
      originalXHRSend.apply(this, arguments);
    };
    _isInterceptorEnabled = true;
  },
  disableInterception: function disableInterception() {
    if (!_isInterceptorEnabled) {
      return;
    }
    _isInterceptorEnabled = false;
    XMLHttpRequest.prototype.send = originalXHRSend;
    XMLHttpRequest.prototype.open = originalXHROpen;
    XMLHttpRequest.prototype.setRequestHeader = originalXHRSetRequestHeader;
    responseCallback = null;
    openCallback = null;
    sendCallback = null;
    headerReceivedCallback = null;
    requestHeaderCallback = null;
  }
};

module.exports = XHRInterceptor;
}, 250, null, "XHRInterceptor");
__d(/* PerformanceOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Inspector\\PerformanceOverlay.js';
var PerformanceLogger = require(107                ); // 107 = PerformanceLogger
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var View = require(124   ); // 124 = View

var PerformanceOverlay = function (_React$Component) {
  babelHelpers.inherits(PerformanceOverlay, _React$Component);

  function PerformanceOverlay() {
    babelHelpers.classCallCheck(this, PerformanceOverlay);
    return babelHelpers.possibleConstructorReturn(this, (PerformanceOverlay.__proto__ || Object.getPrototypeOf(PerformanceOverlay)).apply(this, arguments));
  }

  babelHelpers.createClass(PerformanceOverlay, [{
    key: 'render',
    value: function render() {
      var perfLogs = PerformanceLogger.getTimespans();
      var items = [];

      for (var key in perfLogs) {
        if (perfLogs[key].totalTime) {
          var unit = key === 'BundleSize' ? 'b' : 'ms';
          items.push(React.createElement(
            View,
            { style: styles.row, key: key, __source: {
                fileName: _jsxFileName,
                lineNumber: 29
              }
            },
            React.createElement(
              Text,
              { style: [styles.text, styles.label], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 30
                }
              },
              key
            ),
            React.createElement(
              Text,
              { style: [styles.text, styles.totalTime], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 31
                }
              },
              perfLogs[key].totalTime + unit
            )
          ));
        }
      }

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 40
          }
        },
        items
      );
    }
  }]);
  return PerformanceOverlay;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    height: 100,
    paddingTop: 10
  },
  label: {
    flex: 1
  },
  row: {
    flexDirection: 'row',
    paddingHorizontal: 10
  },
  text: {
    color: 'white',
    fontSize: 12
  },
  totalTime: {
    paddingRight: 100
  }
});

module.exports = PerformanceOverlay;
}, 251, null, "PerformanceOverlay");
__d(/* YellowBox */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\ReactNative\\YellowBox.js';
var EventEmitter = require(45            ); // 45 = EventEmitter
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet

var infoLog = require(108      ); // 108 = infoLog
var openFileInEditor = require(247               ); // 247 = openFileInEditor
var parseErrorStack = require(40               ); // 40 = parseErrorStack
var symbolicateStackTrace = require(66                     ); // 66 = symbolicateStackTrace

var _warningEmitter = new EventEmitter();
var _warningMap = new Map();
var IGNORED_WARNINGS = [];

if (__DEV__) {
  var _console = console,
      error = _console.error,
      warn = _console.warn;


  console.error = function () {
    error.apply(console, arguments);

    if (typeof arguments[0] === 'string' && arguments[0].startsWith('Warning: ')) {
      updateWarningMap.apply(null, arguments);
    }
  };

  console.warn = function () {
    warn.apply(console, arguments);

    if (typeof arguments[0] === 'string' && arguments[0].startsWith('(ADVICE)')) {
      return;
    }

    updateWarningMap.apply(null, arguments);
  };

  if (Platform.isTesting) {
    console.disableYellowBox = true;
  }
}

function sprintf(format) {
  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  var index = 0;
  return format.replace(/%s/g, function (match) {
    return args[index++];
  });
}

function updateWarningMap(format) {
  if (console.disableYellowBox) {
    return;
  }
  var stringifySafe = require(34             ); // 34 = stringifySafe

  format = String(format);
  var argCount = (format.match(/%s/g) || []).length;

  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  var warning = [sprintf.apply(undefined, [format].concat(babelHelpers.toConsumableArray(args.slice(0, argCount))))].concat(babelHelpers.toConsumableArray(args.slice(argCount).map(stringifySafe))).join(' ');

  var warningInfo = _warningMap.get(warning);
  if (warningInfo) {
    warningInfo.count += 1;
  } else {
    var _error = new Error();
    _error.framesToPop = 2;

    _warningMap.set(warning, {
      count: 1,
      stacktrace: parseErrorStack(_error),
      symbolicated: false
    });
  }

  _warningEmitter.emit('warning', _warningMap);
}

function ensureSymbolicatedWarning(warning) {
  var prevWarningInfo = _warningMap.get(warning);
  if (!prevWarningInfo || prevWarningInfo.symbolicated) {
    return;
  }
  prevWarningInfo.symbolicated = true;

  symbolicateStackTrace(prevWarningInfo.stacktrace).then(function (stack) {
    var nextWarningInfo = _warningMap.get(warning);
    if (nextWarningInfo) {
      nextWarningInfo.stacktrace = stack;
      _warningEmitter.emit('warning', _warningMap);
    }
  }, function (error) {
    var nextWarningInfo = _warningMap.get(warning);
    if (nextWarningInfo) {
      infoLog('Failed to symbolicate warning, "%s":', warning, error);
      _warningEmitter.emit('warning', _warningMap);
    }
  });
}

function isWarningIgnored(warning) {
  var isIgnored = IGNORED_WARNINGS.some(function (ignoredWarning) {
    return warning.startsWith(ignoredWarning);
  });

  if (isIgnored) {
    return true;
  }

  return Array.isArray(console.ignoredYellowBox) && console.ignoredYellowBox.some(function (ignorePrefix) {
    return warning.startsWith(String(ignorePrefix));
  });
}

var WarningRow = function WarningRow(_ref) {
  var count = _ref.count,
      warning = _ref.warning,
      onPress = _ref.onPress;

  var Text = require(176   ); // 176 = Text
  var TouchableHighlight = require(243                 ); // 243 = TouchableHighlight
  var View = require(124   ); // 124 = View

  var countText = count > 1 ? React.createElement(
    Text,
    { style: styles.listRowCount, __source: {
        fileName: _jsxFileName,
        lineNumber: 185
      }
    },
    '(' + count + ') '
  ) : null;

  return React.createElement(
    View,
    { style: styles.listRow, __source: {
        fileName: _jsxFileName,
        lineNumber: 189
      }
    },
    React.createElement(
      TouchableHighlight,
      {
        activeOpacity: 0.5,
        onPress: onPress,
        style: styles.listRowContent,
        underlayColor: 'transparent', __source: {
          fileName: _jsxFileName,
          lineNumber: 190
        }
      },
      React.createElement(
        Text,
        { style: styles.listRowText, numberOfLines: 2, __source: {
            fileName: _jsxFileName,
            lineNumber: 195
          }
        },
        countText,
        warning
      )
    )
  );
};

var StackRow = function StackRow(_ref2) {
  var frame = _ref2.frame;

  var Text = require(176   ); // 176 = Text
  var TouchableHighlight = require(243                 ); // 243 = TouchableHighlight
  var file = frame.file,
      lineNumber = frame.lineNumber;

  var fileName = void 0;
  if (file) {
    var fileParts = file.split('/');
    fileName = fileParts[fileParts.length - 1];
  } else {
    fileName = '<unknown file>';
  }

  return React.createElement(
    TouchableHighlight,
    {
      activeOpacity: 0.5,
      style: styles.openInEditorButton,
      underlayColor: 'transparent',
      onPress: openFileInEditor.bind(null, file, lineNumber), __source: {
        fileName: _jsxFileName,
        lineNumber: 218
      }
    },
    React.createElement(
      Text,
      { style: styles.inspectorCountText, __source: {
          fileName: _jsxFileName,
          lineNumber: 223
        }
      },
      fileName,
      ':',
      lineNumber
    )
  );
};

var WarningInspector = function WarningInspector(_ref3) {
  var warningInfo = _ref3.warningInfo,
      warning = _ref3.warning,
      stacktraceVisible = _ref3.stacktraceVisible,
      onDismiss = _ref3.onDismiss,
      onDismissAll = _ref3.onDismissAll,
      onMinimize = _ref3.onMinimize,
      toggleStacktrace = _ref3.toggleStacktrace;

  var ScrollView = require(202         ); // 202 = ScrollView
  var Text = require(176   ); // 176 = Text
  var TouchableHighlight = require(243                 ); // 243 = TouchableHighlight
  var View = require(124   ); // 124 = View

  var _ref4 = warningInfo || {},
      count = _ref4.count,
      stacktrace = _ref4.stacktrace;

  var countSentence = 'Warning encountered ' + count + ' time' + (count - 1 ? 's' : '') + '.';

  var stacktraceList = void 0;
  if (stacktraceVisible && stacktrace) {
    stacktraceList = React.createElement(
      View,
      { style: styles.stacktraceList, __source: {
          fileName: _jsxFileName,
          lineNumber: 251
        }
      },
      stacktrace.map(function (frame, ii) {
        return React.createElement(StackRow, { frame: frame, key: ii, __source: {
            fileName: _jsxFileName,
            lineNumber: 252
          }
        });
      })
    );
  }

  return React.createElement(
    View,
    { style: styles.inspector, __source: {
        fileName: _jsxFileName,
        lineNumber: 258
      }
    },
    React.createElement(
      View,
      { style: styles.inspectorCount, __source: {
          fileName: _jsxFileName,
          lineNumber: 259
        }
      },
      React.createElement(
        Text,
        { style: styles.inspectorCountText, __source: {
            fileName: _jsxFileName,
            lineNumber: 260
          }
        },
        countSentence
      ),
      React.createElement(
        TouchableHighlight,
        { onPress: toggleStacktrace, underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 261
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 262
            }
          },
          stacktraceVisible ? '\u25BC' : '\u25B6',
          ' Stacktrace'
        )
      )
    ),
    React.createElement(
      ScrollView,
      { style: styles.inspectorWarning, __source: {
          fileName: _jsxFileName,
          lineNumber: 267
        }
      },
      stacktraceList,
      React.createElement(
        Text,
        { style: styles.inspectorWarningText, __source: {
            fileName: _jsxFileName,
            lineNumber: 269
          }
        },
        warning
      )
    ),
    React.createElement(
      View,
      { style: styles.inspectorButtons, __source: {
          fileName: _jsxFileName,
          lineNumber: 271
        }
      },
      React.createElement(
        TouchableHighlight,
        {
          activeOpacity: 0.5,
          onPress: onMinimize,
          style: styles.inspectorButton,
          underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 272
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 277
            }
          },
          'Minimize'
        )
      ),
      React.createElement(
        TouchableHighlight,
        {
          activeOpacity: 0.5,
          onPress: onDismiss,
          style: styles.inspectorButton,
          underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 281
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 286
            }
          },
          'Dismiss'
        )
      ),
      React.createElement(
        TouchableHighlight,
        {
          activeOpacity: 0.5,
          onPress: onDismissAll,
          style: styles.inspectorButton,
          underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 290
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 295
            }
          },
          'Dismiss All'
        )
      )
    )
  );
};

var YellowBox = function (_React$Component) {
  babelHelpers.inherits(YellowBox, _React$Component);

  function YellowBox(props, context) {
    babelHelpers.classCallCheck(this, YellowBox);

    var _this = babelHelpers.possibleConstructorReturn(this, (YellowBox.__proto__ || Object.getPrototypeOf(YellowBox)).call(this, props, context));

    _this.state = {
      inspecting: null,
      stacktraceVisible: false,
      warningMap: _warningMap
    };
    _this.dismissWarning = function (warning) {
      var _this$state = _this.state,
          inspecting = _this$state.inspecting,
          warningMap = _this$state.warningMap;

      if (warning) {
        warningMap.delete(warning);
      } else {
        warningMap.clear();
      }
      _this.setState({
        inspecting: warning && inspecting !== warning ? inspecting : null,
        warningMap: warningMap
      });
    };
    return _this;
  }

  babelHelpers.createClass(YellowBox, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var scheduled = null;
      this._listener = _warningEmitter.addListener('warning', function (warningMap) {
        scheduled = scheduled || setImmediate(function () {
          scheduled = null;
          _this2.setState({
            warningMap: warningMap
          });
        });
      });
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var inspecting = this.state.inspecting;

      if (inspecting != null) {
        ensureSymbolicatedWarning(inspecting);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._listener) {
        this._listener.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      if (console.disableYellowBox || this.state.warningMap.size === 0) {
        return null;
      }
      var ScrollView = require(202         ); // 202 = ScrollView
      var View = require(124   ); // 124 = View

      var _state = this.state,
          inspecting = _state.inspecting,
          stacktraceVisible = _state.stacktraceVisible;

      var inspector = inspecting !== null ? React.createElement(WarningInspector, {
        warningInfo: this.state.warningMap.get(inspecting),
        warning: inspecting,
        stacktraceVisible: stacktraceVisible,
        onDismiss: function onDismiss() {
          return _this3.dismissWarning(inspecting);
        },
        onDismissAll: function onDismissAll() {
          return _this3.dismissWarning(null);
        },
        onMinimize: function onMinimize() {
          return _this3.setState({ inspecting: null });
        },
        toggleStacktrace: function toggleStacktrace() {
          return _this3.setState({ stacktraceVisible: !stacktraceVisible });
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 378
        }
      }) : null;

      var rows = [];
      this.state.warningMap.forEach(function (warningInfo, warning) {
        if (!isWarningIgnored(warning)) {
          rows.push(React.createElement(WarningRow, {
            key: warning,
            count: warningInfo.count,
            warning: warning,
            onPress: function onPress() {
              return _this3.setState({ inspecting: warning });
            },
            onDismiss: function onDismiss() {
              return _this3.dismissWarning(warning);
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 393
            }
          }));
        }
      });

      var listStyle = [styles.list, { height: Math.min(rows.length, 4.4) * (rowGutter + rowHeight) }];
      return React.createElement(
        View,
        { style: inspector ? styles.fullScreen : listStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 410
          }
        },
        React.createElement(
          ScrollView,
          { style: listStyle, scrollsToTop: false, __source: {
              fileName: _jsxFileName,
              lineNumber: 411
            }
          },
          rows
        ),
        inspector
      );
    }
  }], [{
    key: 'ignoreWarnings',
    value: function ignoreWarnings(warnings) {
      warnings.forEach(function (warning) {
        if (IGNORED_WARNINGS.indexOf(warning) === -1) {
          IGNORED_WARNINGS.push(warning);
        }
      });
    }
  }]);
  return YellowBox;
}(React.Component);

var backgroundColor = function backgroundColor(opacity) {
  return 'rgba(250, 186, 48, ' + opacity + ')';
};
var textColor = 'white';
var rowGutter = 1;
var rowHeight = 46;

var elevation = Platform.OS === 'android' ? Number.MAX_SAFE_INTEGER : undefined;

var styles = StyleSheet.create({
  fullScreen: {
    height: '100%',
    width: '100%',
    elevation: elevation,
    position: 'absolute'
  },
  inspector: {
    backgroundColor: backgroundColor(0.95),
    height: '100%',
    paddingTop: 5,
    elevation: elevation
  },
  inspectorButtons: {
    flexDirection: 'row'
  },
  inspectorButton: {
    flex: 1,
    paddingVertical: 22,
    backgroundColor: backgroundColor(1)
  },
  stacktraceList: {
    paddingBottom: 5
  },
  inspectorButtonText: {
    color: textColor,
    fontSize: 14,
    opacity: 0.8,
    textAlign: 'center'
  },
  openInEditorButton: {
    paddingTop: 5,
    paddingBottom: 5
  },
  inspectorCount: {
    padding: 15,
    paddingBottom: 0,
    flexDirection: 'row',
    justifyContent: 'space-between'
  },
  inspectorCountText: {
    color: textColor,
    fontSize: 14
  },
  inspectorWarning: {
    flex: 1,
    paddingHorizontal: 15
  },
  inspectorWarningText: {
    color: textColor,
    fontSize: 16,
    fontWeight: '600'
  },
  list: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    elevation: elevation
  },
  listRow: {
    backgroundColor: backgroundColor(0.95),
    height: rowHeight,
    marginTop: rowGutter
  },
  listRowContent: {
    flex: 1
  },
  listRowCount: {
    color: 'rgba(255, 255, 255, 0.5)'
  },
  listRowText: {
    color: textColor,
    position: 'absolute',
    left: 0,
    top: Platform.OS === 'android' ? 5 : 7,
    marginLeft: 15,
    marginRight: 15
  }
});

module.exports = YellowBox;
}, 252, null, "YellowBox");
__d(/* I18nManager */function(global, require, module, exports) {
'use strict';

var I18nManager = require(28             ).I18nManager || { // 28 = NativeModules
  isRTL: false,
  allowRTL: function allowRTL() {},
  forceRTL: function forceRTL() {}
};

module.exports = I18nManager;
}, 253, null, "I18nManager");
__d(/* NavigatorIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(152                ); // 152 = UnimplementedView
}, 254, null, "NavigatorIOS");
__d(/* Picker */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\Picker\\Picker.js';
var ColorPropType = require(59             ); // 59 = ColorPropType
var PickerIOS = require(256        ); // 256 = PickerIOS
var PickerAndroid = require(257            ); // 257 = PickerAndroid
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var StyleSheetPropType = require(147                 ); // 147 = StyleSheetPropType
var TextStylePropTypes = require(134                 ); // 134 = TextStylePropTypes
var UnimplementedView = require(152                ); // 152 = UnimplementedView
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes
var ViewStylePropTypes = require(135                 ); // 135 = ViewStylePropTypes

var itemStylePropType = StyleSheetPropType(TextStylePropTypes);

var pickerStyleType = StyleSheetPropType(babelHelpers.extends({}, ViewStylePropTypes, {
  color: ColorPropType
}));

var MODE_DIALOG = 'dialog';
var MODE_DROPDOWN = 'dropdown';

var PickerItem = function (_React$Component) {
  babelHelpers.inherits(PickerItem, _React$Component);

  function PickerItem() {
    babelHelpers.classCallCheck(this, PickerItem);
    return babelHelpers.possibleConstructorReturn(this, (PickerItem.__proto__ || Object.getPrototypeOf(PickerItem)).apply(this, arguments));
  }

  babelHelpers.createClass(PickerItem, [{
    key: 'render',
    value: function render() {
      throw null;
    }
  }]);
  return PickerItem;
}(React.Component);

PickerItem.propTypes = {
  label: PropTypes.string.isRequired,

  value: PropTypes.any,

  color: ColorPropType,

  testID: PropTypes.string
};

var Picker = function (_React$Component2) {
  babelHelpers.inherits(Picker, _React$Component2);

  function Picker() {
    babelHelpers.classCallCheck(this, Picker);
    return babelHelpers.possibleConstructorReturn(this, (Picker.__proto__ || Object.getPrototypeOf(Picker)).apply(this, arguments));
  }

  babelHelpers.createClass(Picker, [{
    key: 'render',
    value: function render() {
      if (Platform.OS === 'ios') {
        return React.createElement(
          PickerIOS,
          babelHelpers.extends({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 161
            }
          }),
          this.props.children
        );
      } else if (Platform.OS === 'android') {
        return React.createElement(
          PickerAndroid,
          babelHelpers.extends({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 164
            }
          }),
          this.props.children
        );
      } else {
        return React.createElement(UnimplementedView, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 166
          }
        });
      }
    }
  }]);
  return Picker;
}(React.Component);

Picker.MODE_DIALOG = MODE_DIALOG;
Picker.MODE_DROPDOWN = MODE_DROPDOWN;
Picker.Item = PickerItem;
Picker.defaultProps = {
  mode: MODE_DIALOG
};
Picker.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  style: pickerStyleType,

  selectedValue: PropTypes.any,

  onValueChange: PropTypes.func,

  enabled: PropTypes.bool,

  mode: PropTypes.oneOf(['dialog', 'dropdown']),

  itemStyle: itemStylePropType,

  prompt: PropTypes.string,

  testID: PropTypes.string
});


module.exports = Picker;
}, 255, null, "Picker");
__d(/* PickerIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(152                ); // 152 = UnimplementedView
}, 256, null, "PickerIOS");
__d(/* PickerAndroid */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\Picker\\PickerAndroid.android.js';
var ColorPropType = require(59             ); // 59 = ColorPropType
var React = require(125    ); // 125 = React
var ReactPropTypes = require(19          ); // 19 = prop-types
var StyleSheet = require(153         ); // 153 = StyleSheet
var StyleSheetPropType = require(147                 ); // 147 = StyleSheetPropType
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes
var ViewStylePropTypes = require(135                 ); // 135 = ViewStylePropTypes

var processColor = require(136           ); // 136 = processColor
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent

var REF_PICKER = 'picker';
var MODE_DROPDOWN = 'dropdown';

var pickerStyleType = StyleSheetPropType(babelHelpers.extends({}, ViewStylePropTypes, {
  color: ColorPropType
}));

var PickerAndroid = function (_React$Component) {
  babelHelpers.inherits(PickerAndroid, _React$Component);

  function PickerAndroid(props, context) {
    babelHelpers.classCallCheck(this, PickerAndroid);

    var _this = babelHelpers.possibleConstructorReturn(this, (PickerAndroid.__proto__ || Object.getPrototypeOf(PickerAndroid)).call(this, props, context));

    _initialiseProps.call(_this);

    var state = _this._stateFromProps(props);

    _this.state = babelHelpers.extends({}, state, {
      initialSelectedIndex: state.selectedIndex
    });
    return _this;
  }

  babelHelpers.createClass(PickerAndroid, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState(this._stateFromProps(nextProps));
    }
  }, {
    key: 'render',
    value: function render() {
      var Picker = this.props.mode === MODE_DROPDOWN ? DropdownPicker : DialogPicker;

      var nativeProps = {
        enabled: this.props.enabled,
        items: this.state.items,
        mode: this.props.mode,
        onSelect: this._onChange,
        prompt: this.props.prompt,
        selected: this.state.initialSelectedIndex,
        testID: this.props.testID,
        style: [styles.pickerAndroid, this.props.style],
        accessibilityLabel: this.props.accessibilityLabel
      };

      return React.createElement(Picker, babelHelpers.extends({ ref: REF_PICKER }, nativeProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 111
        }
      }));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._lastNativePosition = this.state.initialSelectedIndex;
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.refs[REF_PICKER] && this.state.selectedIndex !== this._lastNativePosition) {
        this.refs[REF_PICKER].setNativeProps({ selected: this.state.selectedIndex });
        this._lastNativePosition = this.state.selectedIndex;
      }
    }
  }]);
  return PickerAndroid;
}(React.Component);

PickerAndroid.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  style: pickerStyleType,
  selectedValue: ReactPropTypes.any,
  enabled: ReactPropTypes.bool,
  mode: ReactPropTypes.oneOf(['dialog', 'dropdown']),
  onValueChange: ReactPropTypes.func,
  prompt: ReactPropTypes.string,
  testID: ReactPropTypes.string
});

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this._stateFromProps = function (props) {
    var selectedIndex = 0;
    var items = React.Children.map(props.children, function (child, index) {
      if (child.props.value === props.selectedValue) {
        selectedIndex = index;
      }
      var childProps = {
        value: child.props.value,
        label: child.props.label
      };
      if (child.props.color) {
        childProps.color = processColor(child.props.color);
      }
      return childProps;
    });
    return { selectedIndex: selectedIndex, items: items };
  };

  this._onChange = function (event) {
    if (_this2.props.onValueChange) {
      var position = event.nativeEvent.position;
      if (position >= 0) {
        var children = React.Children.toArray(_this2.props.children);
        var value = children[position].props.value;
        _this2.props.onValueChange(value, position);
      } else {
        _this2.props.onValueChange(null, position);
      }
    }
    _this2._lastNativePosition = event.nativeEvent.position;
    _this2.forceUpdate();
  };
};

var styles = StyleSheet.create({
  pickerAndroid: {
    height: 50
  }
});

var cfg = {
  nativeOnly: {
    items: true,
    selected: true
  }
};

var DropdownPicker = requireNativeComponent('AndroidDropdownPicker', PickerAndroid, cfg);
var DialogPicker = requireNativeComponent('AndroidDialogPicker', PickerAndroid, cfg);

module.exports = PickerAndroid;
}, 257, null, "PickerAndroid");
__d(/* ProgressBarAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\ProgressBarAndroid\\ProgressBarAndroid.android.js';
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes
var ColorPropType = require(59             ); // 59 = ColorPropType

var createReactClass = require(150                 ); // 150 = create-react-class
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent

var STYLE_ATTRIBUTES = ['Horizontal', 'Normal', 'Small', 'Large', 'Inverse', 'SmallInverse', 'LargeInverse'];

var indeterminateType = function indeterminateType(props, propName, componentName) {
  var checker = function checker() {
    var indeterminate = props[propName];
    var styleAttr = props.styleAttr;
    if (!indeterminate && styleAttr !== 'Horizontal') {
      return new Error('indeterminate=false is only valid for styleAttr=Horizontal');
    }
  };

  for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    rest[_key - 3] = arguments[_key];
  }

  return PropTypes.bool.apply(PropTypes, [props, propName, componentName].concat(rest)) || checker();
};

var ProgressBarAndroid = createReactClass({
  displayName: 'ProgressBarAndroid',
  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    styleAttr: PropTypes.oneOf(STYLE_ATTRIBUTES),

    indeterminate: indeterminateType,

    progress: PropTypes.number,

    color: ColorPropType,

    testID: PropTypes.string
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      styleAttr: 'Normal',
      indeterminate: true
    };
  },

  mixins: [NativeMethodsMixin],

  componentDidMount: function componentDidMount() {
    if (this.props.indeterminate && this.props.styleAttr !== 'Horizontal') {
      console.warn('Circular indeterminate `ProgressBarAndroid`' + 'is deprecated. Use `ActivityIndicator` instead.');
    }
  },

  render: function render() {
    return React.createElement(AndroidProgressBar, babelHelpers.extends({}, this.props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 121
      }
    }));
  }
});

var AndroidProgressBar = requireNativeComponent('AndroidProgressBar', ProgressBarAndroid, { nativeOnly: { animating: true } });

module.exports = ProgressBarAndroid;
}, 258, null, "ProgressBarAndroid");
__d(/* ProgressViewIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\ProgressViewIOS\\ProgressViewIOS.android.js';
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var View = require(124   ); // 124 = View

var DummyProgressViewIOS = function (_React$Component) {
  babelHelpers.inherits(DummyProgressViewIOS, _React$Component);

  function DummyProgressViewIOS() {
    babelHelpers.classCallCheck(this, DummyProgressViewIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyProgressViewIOS.__proto__ || Object.getPrototypeOf(DummyProgressViewIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyProgressViewIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummy, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        React.createElement(
          Text,
          { style: styles.text, __source: {
              fileName: _jsxFileName,
              lineNumber: 24
            }
          },
          'ProgressViewIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummyProgressViewIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummy: {
    width: 120,
    height: 20,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    color: '#333333',
    margin: 5,
    fontSize: 10
  }
});

module.exports = DummyProgressViewIOS;
}, 259, null, "ProgressViewIOS");
__d(/* SectionList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Lists\\SectionList.js';
var MetroListView = require(215            ); // 215 = MetroListView
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var VirtualizedSectionList = require(261                     ); // 261 = VirtualizedSectionList

var defaultProps = babelHelpers.extends({}, VirtualizedSectionList.defaultProps, {
  stickySectionHeadersEnabled: Platform.OS === 'ios'
});

var SectionList = function (_React$PureComponent) {
  babelHelpers.inherits(SectionList, _React$PureComponent);

  function SectionList() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, SectionList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = SectionList.__proto__ || Object.getPrototypeOf(SectionList)).call.apply(_ref, [this].concat(args))), _this), _this._captureRef = function (ref) {
      _this._wrapperListRef = ref;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(SectionList, [{
    key: 'scrollToLocation',
    value: function scrollToLocation(params) {
      this._wrapperListRef.scrollToLocation(params);
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      listRef && listRef.recordInteraction();
    }
  }, {
    key: 'flashScrollIndicators',
    value: function flashScrollIndicators() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      listRef && listRef.flashScrollIndicators();
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      if (listRef) {
        return listRef.getScrollResponder();
      }
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      if (listRef) {
        return listRef.getScrollableNode();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var List = this.props.legacyImplementation ? MetroListView : VirtualizedSectionList;
      return React.createElement(List, babelHelpers.extends({}, this.props, { ref: this._captureRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 323
        }
      }));
    }
  }]);
  return SectionList;
}(React.PureComponent);

SectionList.defaultProps = defaultProps;


module.exports = SectionList;
}, 260, null, "SectionList");
__d(/* VirtualizedSectionList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Lists\\VirtualizedSectionList.js';
var React = require(125    ); // 125 = React
var View = require(124   ); // 124 = View
var VirtualizedList = require(222              ); // 222 = VirtualizedList

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var VirtualizedSectionList = function (_React$PureComponent) {
  babelHelpers.inherits(VirtualizedSectionList, _React$PureComponent);
  babelHelpers.createClass(VirtualizedSectionList, [{
    key: 'scrollToLocation',
    value: function scrollToLocation(params) {
      var index = params.itemIndex + 1;
      for (var ii = 0; ii < params.sectionIndex; ii++) {
        index += this.props.sections[ii].data.length + 2;
      }
      var toIndexParams = babelHelpers.extends({}, params, {
        index: index
      });
      this._listRef.scrollToIndex(toIndexParams);
    }
  }, {
    key: 'getListRef',
    value: function getListRef() {
      return this._listRef;
    }
  }, {
    key: '_subExtractor',
    value: function _subExtractor(index) {
      var itemIndex = index;
      var defaultKeyExtractor = this.props.keyExtractor;
      for (var ii = 0; ii < this.props.sections.length; ii++) {
        var _section = this.props.sections[ii];
        var _key = _section.key || String(ii);
        itemIndex -= 1;
        if (itemIndex >= _section.data.length + 1) {
          itemIndex -= _section.data.length + 1;
        } else if (itemIndex === -1) {
          return {
            section: _section,
            key: _key + ':header',
            index: null,
            header: true,
            trailingSection: this.props.sections[ii + 1]
          };
        } else if (itemIndex === _section.data.length) {
          return {
            section: _section,
            key: _key + ':footer',
            index: null,
            header: false,
            trailingSection: this.props.sections[ii + 1]
          };
        } else {
          var _keyExtractor = _section.keyExtractor || defaultKeyExtractor;
          return {
            section: _section,
            key: _key + ':' + _keyExtractor(_section.data[itemIndex], itemIndex),
            index: itemIndex,
            leadingItem: _section.data[itemIndex - 1],
            leadingSection: this.props.sections[ii - 1],
            trailingItem: _section.data[itemIndex + 1],
            trailingSection: this.props.sections[ii + 1]
          };
        }
      }
    }
  }, {
    key: '_getSeparatorComponent',
    value: function _getSeparatorComponent(index, info) {
      info = info || this._subExtractor(index);
      if (!info) {
        return null;
      }
      var ItemSeparatorComponent = info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;
      var SectionSeparatorComponent = this.props.SectionSeparatorComponent;

      var isLastItemInList = index === this.state.childProps.getItemCount() - 1;
      var isLastItemInSection = info.index === info.section.data.length - 1;
      if (SectionSeparatorComponent && isLastItemInSection) {
        return SectionSeparatorComponent;
      }
      if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {
        return ItemSeparatorComponent;
      }
      return null;
    }
  }, {
    key: '_computeState',
    value: function _computeState(props) {
      var offset = props.ListHeaderComponent ? 1 : 0;
      var stickyHeaderIndices = [];
      var itemCount = props.sections.reduce(function (v, section) {
        stickyHeaderIndices.push(v + offset);
        return v + section.data.length + 2;
      }, 0);

      return {
        childProps: babelHelpers.extends({}, props, {
          renderItem: this._renderItem,
          ItemSeparatorComponent: undefined,
          data: props.sections,
          getItemCount: function getItemCount() {
            return itemCount;
          },
          getItem: getItem,
          keyExtractor: this._keyExtractor,
          onViewableItemsChanged: props.onViewableItemsChanged ? this._onViewableItemsChanged : undefined,
          stickyHeaderIndices: props.stickySectionHeadersEnabled ? stickyHeaderIndices : undefined
        })
      };
    }
  }]);

  function VirtualizedSectionList(props, context) {
    babelHelpers.classCallCheck(this, VirtualizedSectionList);

    var _this = babelHelpers.possibleConstructorReturn(this, (VirtualizedSectionList.__proto__ || Object.getPrototypeOf(VirtualizedSectionList)).call(this, props, context));

    _this._keyExtractor = function (item, index) {
      var info = _this._subExtractor(index);
      return info && info.key || String(index);
    };

    _this._convertViewable = function (viewable) {
      invariant(viewable.index != null, 'Received a broken ViewToken');
      var info = _this._subExtractor(viewable.index);
      if (!info) {
        return null;
      }
      var keyExtractor = info.section.keyExtractor || _this.props.keyExtractor;
      return babelHelpers.extends({}, viewable, {
        index: info.index,
        key: keyExtractor(viewable.item, info.index),
        section: info.section
      });
    };

    _this._onViewableItemsChanged = function (_ref) {
      var viewableItems = _ref.viewableItems,
          changed = _ref.changed;

      if (_this.props.onViewableItemsChanged) {
        _this.props.onViewableItemsChanged({
          viewableItems: viewableItems.map(_this._convertViewable, _this).filter(Boolean),
          changed: changed.map(_this._convertViewable, _this).filter(Boolean)
        });
      }
    };

    _this._renderItem = function (_ref2) {
      var item = _ref2.item,
          index = _ref2.index;

      var info = _this._subExtractor(index);
      if (!info) {
        return null;
      }
      var infoIndex = info.index;
      if (infoIndex == null) {
        var _section2 = info.section;

        if (info.header === true) {
          var _renderSectionHeader = _this.props.renderSectionHeader;

          return _renderSectionHeader ? _renderSectionHeader({ section: _section2 }) : null;
        } else {
          var _renderSectionFooter = _this.props.renderSectionFooter;

          return _renderSectionFooter ? _renderSectionFooter({ section: _section2 }) : null;
        }
      } else {
        var _renderItem = info.section.renderItem || _this.props.renderItem;
        var _SeparatorComponent = _this._getSeparatorComponent(index, info);
        invariant(_renderItem, 'no renderItem!');
        return React.createElement(ItemWithSeparator, {
          SeparatorComponent: _SeparatorComponent,
          LeadingSeparatorComponent: infoIndex === 0 ? _this.props.SectionSeparatorComponent : undefined,
          cellKey: info.key,
          index: infoIndex,
          item: item,
          leadingItem: info.leadingItem,
          leadingSection: info.leadingSection,
          onUpdateSeparator: _this._onUpdateSeparator,
          prevCellKey: (_this._subExtractor(index - 1) || {}).key,
          ref: function ref(_ref3) {
            _this._cellRefs[info.key] = _ref3;
          },
          renderItem: _renderItem,
          section: info.section,
          trailingItem: info.trailingItem,
          trailingSection: info.trailingSection,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 279
          }
        });
      }
    };

    _this._onUpdateSeparator = function (key, newProps) {
      var ref = _this._cellRefs[key];
      ref && ref.updateSeparatorProps(newProps);
    };

    _this._cellRefs = {};

    _this._captureRef = function (ref) {
      _this._listRef = ref;
    };

    _this.state = _this._computeState(props);
    return _this;
  }

  babelHelpers.createClass(VirtualizedSectionList, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState(this._computeState(nextProps));
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(VirtualizedList, babelHelpers.extends({}, this.state.childProps, { ref: this._captureRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 365
        }
      }));
    }
  }]);
  return VirtualizedSectionList;
}(React.PureComponent);

VirtualizedSectionList.defaultProps = babelHelpers.extends({}, VirtualizedList.defaultProps, {
  data: []
});

var ItemWithSeparator = function (_React$Component) {
  babelHelpers.inherits(ItemWithSeparator, _React$Component);

  function ItemWithSeparator() {
    var _ref4;

    var _temp, _this2, _ret;

    babelHelpers.classCallCheck(this, ItemWithSeparator);

    for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret = (_temp = (_this2 = babelHelpers.possibleConstructorReturn(this, (_ref4 = ItemWithSeparator.__proto__ || Object.getPrototypeOf(ItemWithSeparator)).call.apply(_ref4, [this].concat(args))), _this2), _this2.state = {
      separatorProps: {
        highlighted: false,
        leadingItem: _this2.props.item,
        leadingSection: _this2.props.leadingSection,
        section: _this2.props.section,
        trailingItem: _this2.props.trailingItem,
        trailingSection: _this2.props.trailingSection
      },
      leadingSeparatorProps: {
        highlighted: false,
        leadingItem: _this2.props.leadingItem,
        leadingSection: _this2.props.leadingSection,
        section: _this2.props.section,
        trailingItem: _this2.props.item,
        trailingSection: _this2.props.trailingSection
      }
    }, _this2._separators = {
      highlight: function highlight() {
        ['leading', 'trailing'].forEach(function (s) {
          return _this2._separators.updateProps(s, { highlighted: true });
        });
      },
      unhighlight: function unhighlight() {
        ['leading', 'trailing'].forEach(function (s) {
          return _this2._separators.updateProps(s, { highlighted: false });
        });
      },
      updateProps: function updateProps(select, newProps) {
        var _this2$props = _this2.props,
            LeadingSeparatorComponent = _this2$props.LeadingSeparatorComponent,
            cellKey = _this2$props.cellKey,
            prevCellKey = _this2$props.prevCellKey;

        if (select === 'leading' && LeadingSeparatorComponent) {
          _this2.setState(function (state) {
            return {
              leadingSeparatorProps: babelHelpers.extends({}, state.leadingSeparatorProps, newProps)
            };
          });
        } else {
          _this2.props.onUpdateSeparator(select === 'leading' && prevCellKey || cellKey, newProps);
        }
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this2, _ret);
  }

  babelHelpers.createClass(ItemWithSeparator, [{
    key: 'updateSeparatorProps',
    value: function updateSeparatorProps(newProps) {
      this.setState(function (state) {
        return {
          separatorProps: babelHelpers.extends({}, state.separatorProps, newProps)
        };
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          LeadingSeparatorComponent = _props.LeadingSeparatorComponent,
          SeparatorComponent = _props.SeparatorComponent,
          item = _props.item,
          index = _props.index,
          section = _props.section;

      var element = this.props.renderItem({
        item: item,
        index: index,
        section: section,
        separators: this._separators
      });
      var leadingSeparator = LeadingSeparatorComponent && React.createElement(LeadingSeparatorComponent, babelHelpers.extends({}, this.state.leadingSeparatorProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 460
        }
      }));
      var separator = SeparatorComponent && React.createElement(SeparatorComponent, babelHelpers.extends({}, this.state.separatorProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 463
        }
      }));
      return leadingSeparator || separator ? React.createElement(
        View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 465
          }
        },
        leadingSeparator,
        element,
        separator
      ) : element;
    }
  }]);
  return ItemWithSeparator;
}(React.Component);

function getItem(sections, index) {
  if (!sections) {
    return null;
  }
  var itemIdx = index - 1;
  for (var ii = 0; ii < sections.length; ii++) {
    if (itemIdx === -1 || itemIdx === sections[ii].data.length) {
      return sections[ii];
    } else if (itemIdx < sections[ii].data.length) {
      return sections[ii].data[itemIdx];
    } else {
      itemIdx -= sections[ii].data.length + 2;
    }
  }
  return null;
}

module.exports = VirtualizedSectionList;
}, 261, null, "VirtualizedSectionList");
__d(/* SegmentedControlIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\SegmentedControlIOS\\SegmentedControlIOS.android.js';
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var View = require(124   ); // 124 = View

var DummySegmentedControlIOS = function (_React$Component) {
  babelHelpers.inherits(DummySegmentedControlIOS, _React$Component);

  function DummySegmentedControlIOS() {
    babelHelpers.classCallCheck(this, DummySegmentedControlIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummySegmentedControlIOS.__proto__ || Object.getPrototypeOf(DummySegmentedControlIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummySegmentedControlIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummy, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        React.createElement(
          Text,
          { style: styles.text, __source: {
              fileName: _jsxFileName,
              lineNumber: 24
            }
          },
          'SegmentedControlIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummySegmentedControlIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummy: {
    width: 120,
    height: 50,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    color: '#333333',
    margin: 5,
    fontSize: 10
  }
});

module.exports = DummySegmentedControlIOS;
}, 262, null, "SegmentedControlIOS");
__d(/* Slider */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\Slider\\Slider.js';
var Image = require(200    ); // 200 = Image
var ColorPropType = require(59             ); // 59 = ColorPropType
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var ReactNativeViewAttributes = require(140                        ); // 140 = ReactNativeViewAttributes
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var StyleSheet = require(153         ); // 153 = StyleSheet
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var createReactClass = require(150                 ); // 150 = create-react-class
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent

var Slider = createReactClass({
  displayName: 'Slider',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    style: ViewPropTypes.style,

    value: PropTypes.number,

    step: PropTypes.number,

    minimumValue: PropTypes.number,

    maximumValue: PropTypes.number,

    minimumTrackTintColor: ColorPropType,

    maximumTrackTintColor: ColorPropType,

    disabled: PropTypes.bool,

    trackImage: Image.propTypes.source,

    minimumTrackImage: Image.propTypes.source,

    maximumTrackImage: Image.propTypes.source,

    thumbImage: Image.propTypes.source,

    thumbTintColor: ColorPropType,

    onValueChange: PropTypes.func,

    onSlidingComplete: PropTypes.func,

    testID: PropTypes.string
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      disabled: false,
      value: 0,
      minimumValue: 0,
      maximumValue: 1,
      step: 0
    };
  },

  viewConfig: {
    uiViewClassName: 'RCTSlider',
    validAttributes: babelHelpers.extends({}, ReactNativeViewAttributes.RCTView, {
      value: true
    })
  },

  render: function render() {
    var _props = this.props,
        style = _props.style,
        onValueChange = _props.onValueChange,
        onSlidingComplete = _props.onSlidingComplete,
        props = babelHelpers.objectWithoutProperties(_props, ['style', 'onValueChange', 'onSlidingComplete']);

    props.style = [styles.slider, style];

    props.onValueChange = onValueChange && function (event) {
      var userEvent = true;
      if (Platform.OS === 'android') {
        userEvent = event.nativeEvent.fromUser;
      }
      onValueChange && userEvent && onValueChange(event.nativeEvent.value);
    };

    props.onChange = props.onValueChange;

    props.onSlidingComplete = onSlidingComplete && function (event) {
      onSlidingComplete && onSlidingComplete(event.nativeEvent.value);
    };

    return React.createElement(RCTSlider, babelHelpers.extends({}, props, {
      enabled: !this.props.disabled,
      onStartShouldSetResponder: function onStartShouldSetResponder() {
        return true;
      },
      onResponderTerminationRequest: function onResponderTerminationRequest() {
        return false;
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 180
      }
    }));
  }
});

var styles = void 0;
if (Platform.OS === 'ios') {
  styles = StyleSheet.create({
    slider: {
      height: 40
    }
  });
} else {
  styles = StyleSheet.create({
    slider: {}
  });
}

var options = {};
if (Platform.OS === 'android') {
  options = {
    nativeOnly: {
      enabled: true
    }
  };
}
var RCTSlider = requireNativeComponent('RCTSlider', Slider, options);

module.exports = Slider;
}, 263, null, "Slider");
__d(/* SnapshotViewIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(152                ); // 152 = UnimplementedView
}, 264, null, "SnapshotViewIOS");
__d(/* Switch */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\Switch\\Switch.js';
var ColorPropType = require(59             ); // 59 = ColorPropType
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var StyleSheet = require(153         ); // 153 = StyleSheet
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var createReactClass = require(150                 ); // 150 = create-react-class
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent

var Switch = createReactClass({
  displayName: 'Switch',
  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    value: PropTypes.bool,

    disabled: PropTypes.bool,

    onValueChange: PropTypes.func,

    testID: PropTypes.string,

    tintColor: ColorPropType,

    onTintColor: ColorPropType,

    thumbTintColor: ColorPropType
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      value: false,
      disabled: false
    };
  },

  mixins: [NativeMethodsMixin],

  _rctSwitch: {},
  _onChange: function _onChange(event) {
    if (Platform.OS === 'android') {
      this._rctSwitch.setNativeProps({ on: this.props.value });
    } else {
      this._rctSwitch.setNativeProps({ value: this.props.value });
    }

    this.props.onChange && this.props.onChange(event);
    this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);
  },

  render: function render() {
    var _this = this;

    var props = babelHelpers.extends({}, this.props);
    props.onStartShouldSetResponder = function () {
      return true;
    };
    props.onResponderTerminationRequest = function () {
      return false;
    };
    if (Platform.OS === 'android') {
      props.enabled = !this.props.disabled;
      props.on = this.props.value;
      props.style = this.props.style;
      props.trackTintColor = this.props.value ? this.props.onTintColor : this.props.tintColor;
    } else if (Platform.OS === 'ios') {
      props.style = [styles.rctSwitchIOS, this.props.style];
    }
    return React.createElement(RCTSwitch, babelHelpers.extends({}, props, {
      ref: function ref(_ref) {
        _this._rctSwitch = _ref;
      },
      onChange: this._onChange,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 113
      }
    }));
  }
});

var styles = StyleSheet.create({
  rctSwitchIOS: {
    height: 31,
    width: 51
  }
});

if (Platform.OS === 'android') {
  var RCTSwitch = requireNativeComponent('AndroidSwitch', Switch, {
    nativeOnly: {
      onChange: true,
      on: true,
      enabled: true,
      trackTintColor: true
    }
  });
} else {
  var RCTSwitch = requireNativeComponent('RCTSwitch', Switch, {
    nativeOnly: {
      onChange: true
    }
  });
}

module.exports = Switch;
}, 265, null, "Switch");
__d(/* SwipeableListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Experimental\\SwipeableRow\\SwipeableListView.js';
var ListView = require(216       ); // 216 = ListView
var PropTypes = require(19          ); // 19 = prop-types
var React = require(125    ); // 125 = React
var SwipeableListViewDataSource = require(267                          ); // 267 = SwipeableListViewDataSource
var SwipeableRow = require(268           ); // 268 = SwipeableRow

var SwipeableListView = function (_React$Component) {
  babelHelpers.inherits(SwipeableListView, _React$Component);
  babelHelpers.createClass(SwipeableListView, null, [{
    key: 'getNewDataSource',
    value: function getNewDataSource() {
      return new SwipeableListViewDataSource({
        getRowData: function getRowData(data, sectionID, rowID) {
          return data[sectionID][rowID];
        },
        getSectionHeaderData: function getSectionHeaderData(data, sectionID) {
          return data[sectionID];
        },
        rowHasChanged: function rowHasChanged(row1, row2) {
          return row1 !== row2;
        },
        sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
          return s1 !== s2;
        }
      });
    }
  }]);

  function SwipeableListView(props, context) {
    babelHelpers.classCallCheck(this, SwipeableListView);

    var _this = babelHelpers.possibleConstructorReturn(this, (SwipeableListView.__proto__ || Object.getPrototypeOf(SwipeableListView)).call(this, props, context));

    _this._listViewRef = null;
    _this._shouldBounceFirstRowOnMount = false;

    _this._onScroll = function (e) {
      if (_this.props.dataSource.getOpenRowID()) {
        _this.setState({
          dataSource: _this.state.dataSource.setOpenRowID(null)
        });
      }
      _this.props.onScroll && _this.props.onScroll(e);
    };

    _this._renderRow = function (rowData, sectionID, rowID) {
      var slideoutView = _this.props.renderQuickActions(rowData, sectionID, rowID);

      if (!slideoutView) {
        return _this.props.renderRow(rowData, sectionID, rowID);
      }

      var shouldBounceOnMount = false;
      if (_this._shouldBounceFirstRowOnMount) {
        _this._shouldBounceFirstRowOnMount = false;
        shouldBounceOnMount = rowID === _this.props.dataSource.getFirstRowID();
      }

      return React.createElement(
        SwipeableRow,
        {
          slideoutView: slideoutView,
          isOpen: rowData.id === _this.props.dataSource.getOpenRowID(),
          maxSwipeDistance: _this._getMaxSwipeDistance(rowData, sectionID, rowID),
          key: rowID,
          onOpen: function onOpen() {
            return _this._onOpen(rowData.id);
          },
          onClose: function onClose() {
            return _this._onClose(rowData.id);
          },
          onSwipeEnd: function onSwipeEnd() {
            return _this._setListViewScrollable(true);
          },
          onSwipeStart: function onSwipeStart() {
            return _this._setListViewScrollable(false);
          },
          shouldBounceOnMount: shouldBounceOnMount, __source: {
            fileName: _jsxFileName,
            lineNumber: 185
          }
        },
        _this.props.renderRow(rowData, sectionID, rowID)
      );
    };

    _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
    _this.state = {
      dataSource: _this.props.dataSource
    };
    return _this;
  }

  babelHelpers.createClass(SwipeableListView, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.dataSource.getDataSource() !== nextProps.dataSource.getDataSource()) {
        this.setState({
          dataSource: nextProps.dataSource
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement(ListView, babelHelpers.extends({}, this.props, {
        ref: function ref(_ref) {
          _this2._listViewRef = _ref;
        },
        dataSource: this.state.dataSource.getDataSource(),
        onScroll: this._onScroll,
        renderRow: this._renderRow,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 118
        }
      }));
    }
  }, {
    key: '_setListViewScrollable',
    value: function _setListViewScrollable(value) {
      if (this._listViewRef && typeof this._listViewRef.setNativeProps === 'function') {
        this._listViewRef.setNativeProps({
          scrollEnabled: value
        });
      }
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._listViewRef && typeof this._listViewRef.getScrollResponder === 'function') {
        return this._listViewRef.getScrollResponder();
      }
    }
  }, {
    key: '_getMaxSwipeDistance',
    value: function _getMaxSwipeDistance(rowData, sectionID, rowID) {
      if (typeof this.props.maxSwipeDistance === 'function') {
        return this.props.maxSwipeDistance(rowData, sectionID, rowID);
      }

      return this.props.maxSwipeDistance;
    }
  }, {
    key: '_onOpen',
    value: function _onOpen(rowID) {
      this.setState({
        dataSource: this.state.dataSource.setOpenRowID(rowID)
      });
    }
  }, {
    key: '_onClose',
    value: function _onClose(rowID) {
      this.setState({
        dataSource: this.state.dataSource.setOpenRowID(null)
      });
    }
  }]);
  return SwipeableListView;
}(React.Component);

SwipeableListView.propTypes = {
  bounceFirstRowOnMount: PropTypes.bool.isRequired,

  dataSource: PropTypes.instanceOf(SwipeableListViewDataSource).isRequired,

  maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,

  renderRow: PropTypes.func.isRequired,

  renderQuickActions: PropTypes.func.isRequired
};
SwipeableListView.defaultProps = {
  bounceFirstRowOnMount: false,
  renderQuickActions: function renderQuickActions() {
    return null;
  }
};


module.exports = SwipeableListView;
}, 266, null, "SwipeableListView");
__d(/* SwipeableListViewDataSource */function(global, require, module, exports) {
'use strict';

var ListViewDataSource = require(217                 ); // 217 = ListViewDataSource

var SwipeableListViewDataSource = function () {
  function SwipeableListViewDataSource(params) {
    var _this = this;

    babelHelpers.classCallCheck(this, SwipeableListViewDataSource);

    this._dataSource = new ListViewDataSource({
      getRowData: params.getRowData,
      getSectionHeaderData: params.getSectionHeaderData,
      rowHasChanged: function rowHasChanged(row1, row2) {
        return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);
      },
      sectionHeaderHasChanged: params.sectionHeaderHasChanged
    });
  }

  babelHelpers.createClass(SwipeableListViewDataSource, [{
    key: 'cloneWithRowsAndSections',
    value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
      this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);

      this._dataBlob = dataBlob;
      this.rowIdentities = this._dataSource.rowIdentities;
      this.sectionIdentities = this._dataSource.sectionIdentities;

      return this;
    }
  }, {
    key: 'getDataSource',
    value: function getDataSource() {
      return this._dataSource;
    }
  }, {
    key: 'getOpenRowID',
    value: function getOpenRowID() {
      return this._openRowID;
    }
  }, {
    key: 'getFirstRowID',
    value: function getFirstRowID() {
      if (this.rowIdentities) {
        return this.rowIdentities[0] && this.rowIdentities[0][0];
      }
      return Object.keys(this._dataBlob)[0];
    }
  }, {
    key: 'setOpenRowID',
    value: function setOpenRowID(rowID) {
      this._previousOpenRowID = this._openRowID;
      this._openRowID = rowID;

      this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);

      return this;
    }
  }]);
  return SwipeableListViewDataSource;
}();

module.exports = SwipeableListViewDataSource;
}, 267, null, "SwipeableListViewDataSource");
__d(/* SwipeableRow */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Experimental\\SwipeableRow\\SwipeableRow.js';
var Animated = require(189       ); // 189 = Animated
var I18nManager = require(253          ); // 253 = I18nManager
var PanResponder = require(269           ); // 269 = PanResponder
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var StyleSheet = require(153         ); // 153 = StyleSheet
var TimerMixin = require(186                ); // 186 = react-timer-mixin
var View = require(124   ); // 124 = View

var createReactClass = require(150                 ); // 150 = create-react-class
var emptyFunction = require(16                      ); // 16 = fbjs/lib/emptyFunction

var IS_RTL = I18nManager.isRTL;

var CLOSED_LEFT_POSITION = 0;

var HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;

var HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;

var SLOW_SPEED_SWIPE_FACTOR = 4;

var SWIPE_DURATION = 300;

var ON_MOUNT_BOUNCE_DELAY = 700;
var ON_MOUNT_BOUNCE_DURATION = 400;

var RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;
var RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;

var RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;

var SwipeableRow = createReactClass({
  displayName: 'SwipeableRow',
  _panResponder: {},
  _previousLeft: CLOSED_LEFT_POSITION,

  mixins: [TimerMixin],

  propTypes: {
    children: PropTypes.any,
    isOpen: PropTypes.bool,
    maxSwipeDistance: PropTypes.number.isRequired,
    onOpen: PropTypes.func.isRequired,
    onClose: PropTypes.func.isRequired,
    onSwipeEnd: PropTypes.func.isRequired,
    onSwipeStart: PropTypes.func.isRequired,

    shouldBounceOnMount: PropTypes.bool,

    slideoutView: PropTypes.node.isRequired,

    swipeThreshold: PropTypes.number.isRequired
  },

  getInitialState: function getInitialState() {
    return {
      currentLeft: new Animated.Value(this._previousLeft),

      isSwipeableViewRendered: false,
      rowHeight: null
    };
  },
  getDefaultProps: function getDefaultProps() {
    return {
      isOpen: false,
      maxSwipeDistance: 0,
      onOpen: emptyFunction,
      onClose: emptyFunction,
      onSwipeEnd: emptyFunction,
      onSwipeStart: emptyFunction,
      swipeThreshold: 30
    };
  },
  componentWillMount: function componentWillMount() {
    this._panResponder = PanResponder.create({
      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,
      onPanResponderGrant: this._handlePanResponderGrant,
      onPanResponderMove: this._handlePanResponderMove,
      onPanResponderRelease: this._handlePanResponderEnd,
      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,
      onPanResponderTerminate: this._handlePanResponderEnd,
      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {
        return false;
      }
    });
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    if (this.props.shouldBounceOnMount) {
      this.setTimeout(function () {
        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);
      }, ON_MOUNT_BOUNCE_DELAY);
    }
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (this.props.isOpen && !nextProps.isOpen) {
      this._animateToClosedPosition();
    }
  },
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    if (this.props.shouldBounceOnMount && !nextProps.shouldBounceOnMount) {
      return false;
    }

    return true;
  },
  render: function render() {
    var slideOutView = void 0;
    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {
      slideOutView = React.createElement(
        View,
        { style: [styles.slideOutContainer, { height: this.state.rowHeight }], __source: {
            fileName: _jsxFileName,
            lineNumber: 168
          }
        },
        this.props.slideoutView
      );
    }

    var swipeableView = React.createElement(
      Animated.View,
      {
        onLayout: this._onSwipeableViewLayout,
        style: { transform: [{ translateX: this.state.currentLeft }] }, __source: {
          fileName: _jsxFileName,
          lineNumber: 179
        }
      },
      this.props.children
    );

    return React.createElement(
      View,
      babelHelpers.extends({}, this._panResponder.panHandlers, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 187
        }
      }),
      slideOutView,
      swipeableView
    );
  },
  close: function close() {
    this.props.onClose();
    this._animateToClosedPosition();
  },
  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {
    this.setState({
      isSwipeableViewRendered: true,
      rowHeight: event.nativeEvent.layout.height
    });
  },
  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {
    return gestureState.dy < 10 && this._isValidSwipe(gestureState);
  },
  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},
  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {
    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {
      return;
    }

    this.props.onSwipeStart();

    if (this._isSwipingRightFromClosed(gestureState)) {
      this._swipeSlowSpeed(gestureState);
    } else {
      this._swipeFullSpeed(gestureState);
    }
  },
  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {
    var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;
  },
  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {
    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);
  },
  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {
    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);
  },
  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {
    var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;
  },
  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {
    return false;
  },
  _animateTo: function _animateTo(toValue) {
    var _this2 = this;

    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SWIPE_DURATION;
    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFunction;

    Animated.timing(this.state.currentLeft, {
      duration: duration,
      toValue: toValue,
      useNativeDriver: true
    }).start(function () {
      _this2._previousLeft = toValue;
      callback();
    });
  },
  _animateToOpenPosition: function _animateToOpenPosition() {
    var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;
    this._animateTo(-maxSwipeDistance);
  },
  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {
    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;

    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);
    var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;
    this._animateTo(-maxSwipeDistance, duration);
  },
  _animateToClosedPosition: function _animateToClosedPosition() {
    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SWIPE_DURATION;

    this._animateTo(CLOSED_LEFT_POSITION, duration);
  },
  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {
    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
  },
  _animateBounceBack: function _animateBounceBack(duration) {
    var swipeBounceBackDistance = IS_RTL ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;
    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);
  },
  _isValidSwipe: function _isValidSwipe(gestureState) {
    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;
  },
  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {
    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;
  },
  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {
    var horizontalDistance = IS_RTL ? -gestureState.dx : gestureState.dx;
    if (this._isSwipingRightFromClosed(gestureState)) {
      this.props.onOpen();
      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
    } else if (this._shouldAnimateRemainder(gestureState)) {
      if (horizontalDistance < 0) {
        this.props.onOpen();
        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);
      } else {
        this.props.onClose();
        this._animateToClosedPosition();
      }
    } else {
      if (this._previousLeft === CLOSED_LEFT_POSITION) {
        this._animateToClosedPosition();
      } else {
        this._animateToOpenPosition();
      }
    }

    this.props.onSwipeEnd();
  }
});

var styles = StyleSheet.create({
  slideOutContainer: {
    bottom: 0,
    left: 0,
    position: 'absolute',
    right: 0,
    top: 0
  }
});

module.exports = SwipeableRow;
}, 268, null, "SwipeableRow");
__d(/* PanResponder */function(global, require, module, exports) {

'use strict';

var InteractionManager = require(191                   ); // 191 = ./InteractionManager
var TouchHistoryMath = require(270               ); // 270 = TouchHistoryMath

var currentCentroidXOfTouchesChangedAfter = TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter = TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter = TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter = TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX = TouchHistoryMath.currentCentroidX;
var currentCentroidY = TouchHistoryMath.currentCentroidY;

var PanResponder = {

  _initializeGestureState: function _initializeGestureState(gestureState) {
    gestureState.moveX = 0;
    gestureState.moveY = 0;
    gestureState.x0 = 0;
    gestureState.y0 = 0;
    gestureState.dx = 0;
    gestureState.dy = 0;
    gestureState.vx = 0;
    gestureState.vy = 0;
    gestureState.numberActiveTouches = 0;

    gestureState._accountsForMovesUpTo = 0;
  },

  _updateGestureStateOnMove: function _updateGestureStateOnMove(gestureState, touchHistory) {
    gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
    gestureState.moveX = currentCentroidXOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
    gestureState.moveY = currentCentroidYOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
    var movedAfter = gestureState._accountsForMovesUpTo;
    var prevX = previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
    var x = currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
    var prevY = previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
    var y = currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
    var nextDX = gestureState.dx + (x - prevX);
    var nextDY = gestureState.dy + (y - prevY);

    var dt = touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
    gestureState.vx = (nextDX - gestureState.dx) / dt;
    gestureState.vy = (nextDY - gestureState.dy) / dt;

    gestureState.dx = nextDX;
    gestureState.dy = nextDY;
    gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;
  },

  create: function create(config) {
    var interactionState = {
      handle: null
    };
    var gestureState = {
      stateID: Math.random()
    };
    PanResponder._initializeGestureState(gestureState);
    var panHandlers = {
      onStartShouldSetResponder: function onStartShouldSetResponder(e) {
        return config.onStartShouldSetPanResponder === undefined ? false : config.onStartShouldSetPanResponder(e, gestureState);
      },
      onMoveShouldSetResponder: function onMoveShouldSetResponder(e) {
        return config.onMoveShouldSetPanResponder === undefined ? false : config.onMoveShouldSetPanResponder(e, gestureState);
      },
      onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture(e) {
        if (e.nativeEvent.touches.length === 1) {
          PanResponder._initializeGestureState(gestureState);
        }
        gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
        return config.onStartShouldSetPanResponderCapture !== undefined ? config.onStartShouldSetPanResponderCapture(e, gestureState) : false;
      },

      onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture(e) {
        var touchHistory = e.touchHistory;

        if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
          return false;
        }
        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
        return config.onMoveShouldSetPanResponderCapture ? config.onMoveShouldSetPanResponderCapture(e, gestureState) : false;
      },

      onResponderGrant: function onResponderGrant(e) {
        if (!interactionState.handle) {
          interactionState.handle = InteractionManager.createInteractionHandle();
        }
        gestureState.x0 = currentCentroidX(e.touchHistory);
        gestureState.y0 = currentCentroidY(e.touchHistory);
        gestureState.dx = 0;
        gestureState.dy = 0;
        if (config.onPanResponderGrant) {
          config.onPanResponderGrant(e, gestureState);
        }

        return config.onShouldBlockNativeResponder === undefined ? true : config.onShouldBlockNativeResponder();
      },

      onResponderReject: function onResponderReject(e) {
        clearInteractionHandle(interactionState, config.onPanResponderReject, e, gestureState);
      },

      onResponderRelease: function onResponderRelease(e) {
        clearInteractionHandle(interactionState, config.onPanResponderRelease, e, gestureState);
        PanResponder._initializeGestureState(gestureState);
      },

      onResponderStart: function onResponderStart(e) {
        var touchHistory = e.touchHistory;
        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
        if (config.onPanResponderStart) {
          config.onPanResponderStart(e, gestureState);
        }
      },

      onResponderMove: function onResponderMove(e) {
        var touchHistory = e.touchHistory;

        if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
          return;
        }

        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
        if (config.onPanResponderMove) {
          config.onPanResponderMove(e, gestureState);
        }
      },

      onResponderEnd: function onResponderEnd(e) {
        var touchHistory = e.touchHistory;
        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
        clearInteractionHandle(interactionState, config.onPanResponderEnd, e, gestureState);
      },

      onResponderTerminate: function onResponderTerminate(e) {
        clearInteractionHandle(interactionState, config.onPanResponderTerminate, e, gestureState);
        PanResponder._initializeGestureState(gestureState);
      },

      onResponderTerminationRequest: function onResponderTerminationRequest(e) {
        return config.onPanResponderTerminationRequest === undefined ? true : config.onPanResponderTerminationRequest(e, gestureState);
      }
    };
    return {
      panHandlers: panHandlers,
      getInteractionHandle: function getInteractionHandle() {
        return interactionState.handle;
      }
    };
  }
};

function clearInteractionHandle(interactionState, callback, event, gestureState) {
  if (interactionState.handle) {
    InteractionManager.clearInteractionHandle(interactionState.handle);
    interactionState.handle = null;
  }
  if (callback) {
    callback(event, gestureState);
  }
}

module.exports = PanResponder;
}, 269, null, "PanResponder");
__d(/* TouchHistoryMath */function(global, require, module, exports) {

'use strict';

var _require = require(62           ), // 62 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.TouchHistoryMath;
}, 270, null, "TouchHistoryMath");
__d(/* TabBarIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\TabBarIOS\\TabBarIOS.android.js';
var React = require(125    ); // 125 = React
var StyleSheet = require(153         ); // 153 = StyleSheet
var TabBarItemIOS = require(272            ); // 272 = TabBarItemIOS
var View = require(124   ); // 124 = View

var DummyTabBarIOS = function (_React$Component) {
  babelHelpers.inherits(DummyTabBarIOS, _React$Component);

  function DummyTabBarIOS() {
    babelHelpers.classCallCheck(this, DummyTabBarIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyTabBarIOS.__proto__ || Object.getPrototypeOf(DummyTabBarIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyTabBarIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [this.props.style, styles.tabGroup], __source: {
            fileName: _jsxFileName,
            lineNumber: 25
          }
        },
        this.props.children
      );
    }
  }]);
  return DummyTabBarIOS;
}(React.Component);

DummyTabBarIOS.Item = TabBarItemIOS;


var styles = StyleSheet.create({
  tabGroup: {
    flex: 1
  }
});

module.exports = DummyTabBarIOS;
}, 271, null, "TabBarIOS");
__d(/* TabBarItemIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\TabBarIOS\\TabBarItemIOS.android.js';
var React = require(125    ); // 125 = React
var View = require(124   ); // 124 = View
var StyleSheet = require(153         ); // 153 = StyleSheet

var DummyTab = function (_React$Component) {
  babelHelpers.inherits(DummyTab, _React$Component);

  function DummyTab() {
    babelHelpers.classCallCheck(this, DummyTab);
    return babelHelpers.possibleConstructorReturn(this, (DummyTab.__proto__ || Object.getPrototypeOf(DummyTab)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyTab, [{
    key: 'render',
    value: function render() {
      if (!this.props.selected) {
        return React.createElement(View, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 21
          }
        });
      }
      return React.createElement(
        View,
        { style: [this.props.style, styles.tab], __source: {
            fileName: _jsxFileName,
            lineNumber: 24
          }
        },
        this.props.children
      );
    }
  }]);
  return DummyTab;
}(React.Component);

var styles = StyleSheet.create({
  tab: {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    borderColor: 'red',
    borderWidth: 1
  }
});

module.exports = DummyTab;
}, 272, null, "TabBarItemIOS");
__d(/* TextInput */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\TextInput\\TextInput.js';
var ColorPropType = require(59             ); // 59 = ColorPropType
var DocumentSelectionState = require(274                     ); // 274 = DocumentSelectionState
var EventEmitter = require(45            ); // 45 = EventEmitter
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var Platform = require(36        ); // 36 = Platform
var React = require(125    ); // 125 = React
var createReactClass = require(150                 ); // 150 = create-react-class
var PropTypes = require(19          ); // 19 = prop-types
var ReactNative = require(62           ); // 62 = ReactNative
var StyleSheet = require(153         ); // 153 = StyleSheet
var Text = require(176   ); // 176 = Text
var TextInputState = require(53              ); // 53 = TextInputState
var TimerMixin = require(186                ); // 186 = react-timer-mixin
var TouchableWithoutFeedback = require(185                       ); // 185 = TouchableWithoutFeedback
var UIManager = require(54         ); // 54 = UIManager
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var emptyFunction = require(16                      ); // 16 = fbjs/lib/emptyFunction
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent
var warning = require(15                ); // 15 = fbjs/lib/warning

var onlyMultiline = {
  onTextInput: true,
  children: true
};

if (Platform.OS === 'android') {
  var AndroidTextInput = requireNativeComponent('AndroidTextInput', null);
} else if (Platform.OS === 'ios') {
  var RCTTextView = requireNativeComponent('RCTTextView', null);
  var RCTTextField = requireNativeComponent('RCTTextField', null);
}

var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];

var TextInput = createReactClass({
  displayName: 'TextInput',
  statics: {
    State: TextInputState
  },

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),

    autoCorrect: PropTypes.bool,

    spellCheck: PropTypes.bool,

    autoFocus: PropTypes.bool,

    editable: PropTypes.bool,

    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'number-pad', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search']),

    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),

    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),

    returnKeyLabel: PropTypes.string,

    maxLength: PropTypes.number,

    numberOfLines: PropTypes.number,

    disableFullscreenUI: PropTypes.bool,

    enablesReturnKeyAutomatically: PropTypes.bool,

    multiline: PropTypes.bool,

    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),

    onBlur: PropTypes.func,

    onFocus: PropTypes.func,

    onChange: PropTypes.func,

    onChangeText: PropTypes.func,

    onContentSizeChange: PropTypes.func,

    onEndEditing: PropTypes.func,

    onSelectionChange: PropTypes.func,

    onSubmitEditing: PropTypes.func,

    onKeyPress: PropTypes.func,

    onLayout: PropTypes.func,

    onScroll: PropTypes.func,

    placeholder: PropTypes.node,

    placeholderTextColor: ColorPropType,

    secureTextEntry: PropTypes.bool,

    selectionColor: ColorPropType,

    selectionState: PropTypes.instanceOf(DocumentSelectionState),

    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),

    value: PropTypes.string,

    defaultValue: PropTypes.string,

    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),

    clearTextOnFocus: PropTypes.bool,

    selectTextOnFocus: PropTypes.bool,

    blurOnSubmit: PropTypes.bool,

    style: Text.propTypes.style,

    underlineColorAndroid: ColorPropType,

    inlineImageLeft: PropTypes.string,

    inlineImagePadding: PropTypes.number,

    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),

    caretHidden: PropTypes.bool
  }),

  mixins: [NativeMethodsMixin, TimerMixin],

  isFocused: function isFocused() {
    return TextInputState.currentlyFocusedField() === ReactNative.findNodeHandle(this._inputRef);
  },

  contextTypes: {
    onFocusRequested: PropTypes.func,
    focusEmitter: PropTypes.instanceOf(EventEmitter)
  },

  _inputRef: undefined,
  _focusSubscription: undefined,
  _lastNativeText: undefined,
  _lastNativeSelection: undefined,

  componentDidMount: function componentDidMount() {
    var _this = this;

    this._lastNativeText = this.props.value;
    if (!this.context.focusEmitter) {
      if (this.props.autoFocus) {
        this.requestAnimationFrame(this.focus);
      }
      return;
    }
    this._focusSubscription = this.context.focusEmitter.addListener('focus', function (el) {
      if (_this === el) {
        _this.requestAnimationFrame(_this.focus);
      } else if (_this.isFocused()) {
        _this.blur();
      }
    });
    if (this.props.autoFocus) {
      this.context.onFocusRequested(this);
    }
  },

  componentWillUnmount: function componentWillUnmount() {
    this._focusSubscription && this._focusSubscription.remove();
    if (this.isFocused()) {
      this.blur();
    }
  },

  getChildContext: function getChildContext() {
    return { isInAParentText: true };
  },

  childContextTypes: {
    isInAParentText: PropTypes.bool
  },

  clear: function clear() {
    this.setNativeProps({ text: '' });
  },

  render: function render() {
    if (Platform.OS === 'ios') {
      return this._renderIOS();
    } else if (Platform.OS === 'android') {
      return this._renderAndroid();
    }
  },

  _getText: function _getText() {
    return typeof this.props.value === 'string' ? this.props.value : typeof this.props.defaultValue === 'string' ? this.props.defaultValue : '';
  },

  _setNativeRef: function _setNativeRef(ref) {
    this._inputRef = ref;
  },

  _renderIOS: function _renderIOS() {
    var textContainer;

    var props = babelHelpers.extends({}, this.props);
    props.style = [this.props.style];

    if (props.selection && props.selection.end == null) {
      props.selection = { start: props.selection.start, end: props.selection.start };
    }

    if (!props.multiline) {
      if (__DEV__) {
        for (var propKey in onlyMultiline) {
          if (props[propKey]) {
            var error = new Error('TextInput prop `' + propKey + '` is only supported with multiline.');
            warning(false, '%s', error.stack);
          }
        }
      }
      textContainer = React.createElement(RCTTextField, babelHelpers.extends({
        ref: this._setNativeRef
      }, props, {
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onSelectionChange: this._onSelectionChange,
        onSelectionChangeShouldSetResponder: emptyFunction.thatReturnsTrue,
        text: this._getText(),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 651
        }
      }));
    } else {
      var children = props.children;
      var childCount = 0;
      React.Children.forEach(children, function () {
        return ++childCount;
      });
      invariant(!(props.value && childCount), 'Cannot specify both value and children.');
      if (childCount >= 1) {
        children = React.createElement(
          Text,
          { style: props.style, __source: {
              fileName: _jsxFileName,
              lineNumber: 670
            }
          },
          children
        );
      }
      if (props.inputView) {
        children = [children, props.inputView];
      }
      props.style.unshift(styles.multilineInput);
      textContainer = React.createElement(RCTTextView, babelHelpers.extends({
        ref: this._setNativeRef
      }, props, {
        children: children,
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onContentSizeChange: this.props.onContentSizeChange,
        onSelectionChange: this._onSelectionChange,
        onTextInput: this._onTextInput,
        onSelectionChangeShouldSetResponder: emptyFunction.thatReturnsTrue,
        text: this._getText(),
        dataDetectorTypes: this.props.dataDetectorTypes,
        onScroll: this._onScroll,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 677
        }
      }));
    }

    return React.createElement(
      TouchableWithoutFeedback,
      {
        onLayout: props.onLayout,
        onPress: this._onPress,
        rejectResponderTermination: true,
        accessible: props.accessible,
        accessibilityLabel: props.accessibilityLabel,
        accessibilityTraits: props.accessibilityTraits,
        nativeID: this.props.nativeID,
        testID: props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 695
        }
      },
      textContainer
    );
  },

  _renderAndroid: function _renderAndroid() {
    var props = babelHelpers.extends({}, this.props);
    props.style = [this.props.style];
    props.autoCapitalize = UIManager.AndroidTextInput.Constants.AutoCapitalizationType[this.props.autoCapitalize];
    var children = this.props.children;
    var childCount = 0;
    React.Children.forEach(children, function () {
      return ++childCount;
    });
    invariant(!(this.props.value && childCount), 'Cannot specify both value and children.');
    if (childCount > 1) {
      children = React.createElement(
        Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 722
          }
        },
        children
      );
    }

    if (props.selection && props.selection.end == null) {
      props.selection = { start: props.selection.start, end: props.selection.start };
    }

    var textContainer = React.createElement(AndroidTextInput, babelHelpers.extends({
      ref: this._setNativeRef
    }, props, {
      mostRecentEventCount: 0,
      onFocus: this._onFocus,
      onBlur: this._onBlur,
      onChange: this._onChange,
      onSelectionChange: this._onSelectionChange,
      onTextInput: this._onTextInput,
      text: this._getText(),
      children: children,
      disableFullscreenUI: this.props.disableFullscreenUI,
      textBreakStrategy: this.props.textBreakStrategy,
      onScroll: this._onScroll,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 730
      }
    }));

    return React.createElement(
      TouchableWithoutFeedback,
      {
        onLayout: this.props.onLayout,
        onPress: this._onPress,
        accessible: this.props.accessible,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        nativeID: this.props.nativeID,
        testID: this.props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 747
        }
      },
      textContainer
    );
  },

  _onFocus: function _onFocus(event) {
    if (this.props.onFocus) {
      this.props.onFocus(event);
    }

    if (this.props.selectionState) {
      this.props.selectionState.focus();
    }
  },

  _onPress: function _onPress(event) {
    if (this.props.editable || this.props.editable === undefined) {
      this.focus();
    }
  },

  _onChange: function _onChange(event) {
    if (this._inputRef) {
      this._inputRef.setNativeProps({
        mostRecentEventCount: event.nativeEvent.eventCount
      });
    }

    var text = event.nativeEvent.text;
    this.props.onChange && this.props.onChange(event);
    this.props.onChangeText && this.props.onChangeText(text);

    if (!this._inputRef) {
      return;
    }

    this._lastNativeText = text;
    this.forceUpdate();
  },

  _onSelectionChange: function _onSelectionChange(event) {
    this.props.onSelectionChange && this.props.onSelectionChange(event);

    if (!this._inputRef) {
      return;
    }

    this._lastNativeSelection = event.nativeEvent.selection;

    if (this.props.selection || this.props.selectionState) {
      this.forceUpdate();
    }
  },

  componentDidUpdate: function componentDidUpdate() {
    var nativeProps = {};

    if (this._lastNativeText !== this.props.value && typeof this.props.value === 'string') {
      nativeProps.text = this.props.value;
    }

    var selection = this.props.selection;

    if (this._lastNativeSelection && selection && (this._lastNativeSelection.start !== selection.start || this._lastNativeSelection.end !== selection.end)) {
      nativeProps.selection = this.props.selection;
    }

    if (Object.keys(nativeProps).length > 0 && this._inputRef) {
      this._inputRef.setNativeProps(nativeProps);
    }

    if (this.props.selectionState && selection) {
      this.props.selectionState.update(selection.start, selection.end);
    }
  },

  _onBlur: function _onBlur(event) {
    this.blur();
    if (this.props.onBlur) {
      this.props.onBlur(event);
    }

    if (this.props.selectionState) {
      this.props.selectionState.blur();
    }
  },

  _onTextInput: function _onTextInput(event) {
    this.props.onTextInput && this.props.onTextInput(event);
  },

  _onScroll: function _onScroll(event) {
    this.props.onScroll && this.props.onScroll(event);
  }
});

var styles = StyleSheet.create({
  multilineInput: {
    paddingTop: 5
  }
});

module.exports = TextInput;
}, 273, null, "TextInput");
__d(/* DocumentSelectionState */function(global, require, module, exports) {

'use strict';

var mixInEventEmitter = require(275                ); // 275 = mixInEventEmitter

var DocumentSelectionState = function () {
  function DocumentSelectionState(anchor, focus) {
    babelHelpers.classCallCheck(this, DocumentSelectionState);

    this._anchorOffset = anchor;
    this._focusOffset = focus;
    this._hasFocus = false;
  }

  babelHelpers.createClass(DocumentSelectionState, [{
    key: 'update',
    value: function update(anchor, focus) {
      if (this._anchorOffset !== anchor || this._focusOffset !== focus) {
        this._anchorOffset = anchor;
        this._focusOffset = focus;
        this.emit('update');
      }
    }
  }, {
    key: 'constrainLength',
    value: function constrainLength(maxLength) {
      this.update(Math.min(this._anchorOffset, maxLength), Math.min(this._focusOffset, maxLength));
    }
  }, {
    key: 'focus',
    value: function focus() {
      if (!this._hasFocus) {
        this._hasFocus = true;
        this.emit('focus');
      }
    }
  }, {
    key: 'blur',
    value: function blur() {
      if (this._hasFocus) {
        this._hasFocus = false;
        this.emit('blur');
      }
    }
  }, {
    key: 'hasFocus',
    value: function hasFocus() {
      return this._hasFocus;
    }
  }, {
    key: 'isCollapsed',
    value: function isCollapsed() {
      return this._anchorOffset === this._focusOffset;
    }
  }, {
    key: 'isBackward',
    value: function isBackward() {
      return this._anchorOffset > this._focusOffset;
    }
  }, {
    key: 'getAnchorOffset',
    value: function getAnchorOffset() {
      return this._hasFocus ? this._anchorOffset : null;
    }
  }, {
    key: 'getFocusOffset',
    value: function getFocusOffset() {
      return this._hasFocus ? this._focusOffset : null;
    }
  }, {
    key: 'getStartOffset',
    value: function getStartOffset() {
      return this._hasFocus ? Math.min(this._anchorOffset, this._focusOffset) : null;
    }
  }, {
    key: 'getEndOffset',
    value: function getEndOffset() {
      return this._hasFocus ? Math.max(this._anchorOffset, this._focusOffset) : null;
    }
  }, {
    key: 'overlaps',
    value: function overlaps(start, end) {
      return this.hasFocus() && this.getStartOffset() <= end && start <= this.getEndOffset();
    }
  }]);
  return DocumentSelectionState;
}();

mixInEventEmitter(DocumentSelectionState, {
  'blur': true,
  'focus': true,
  'update': true
});

module.exports = DocumentSelectionState;
}, 274, null, "DocumentSelectionState");
__d(/* mixInEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(45            ); // 45 = EventEmitter
var EventEmitterWithHolding = require(276                      ); // 276 = EventEmitterWithHolding
var EventHolder = require(277          ); // 277 = EventHolder

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var keyOf = require(245             ); // 245 = fbjs/lib/keyOf

var TYPES_KEY = keyOf({ __types: true });

function mixInEventEmitter(cls, types) {
  invariant(types, 'Must supply set of valid event types');

  var target = cls.prototype || cls;

  invariant(!target.__eventEmitter, 'An active emitter is already mixed in');

  var ctor = cls.constructor;
  if (ctor) {
    invariant(ctor === Object || ctor === Function, 'Mix EventEmitter into a class, not an instance');
  }

  if (target.hasOwnProperty(TYPES_KEY)) {
    babelHelpers.extends(target.__types, types);
  } else if (target.__types) {
    target.__types = babelHelpers.extends({}, target.__types, types);
  } else {
    target.__types = types;
  }
  babelHelpers.extends(target, EventEmitterMixin);
}

var EventEmitterMixin = {
  emit: function emit(eventType, a, b, c, d, e, _) {
    return this.__getEventEmitter().emit(eventType, a, b, c, d, e, _);
  },

  emitAndHold: function emitAndHold(eventType, a, b, c, d, e, _) {
    return this.__getEventEmitter().emitAndHold(eventType, a, b, c, d, e, _);
  },

  addListener: function addListener(eventType, listener, context) {
    return this.__getEventEmitter().addListener(eventType, listener, context);
  },

  once: function once(eventType, listener, context) {
    return this.__getEventEmitter().once(eventType, listener, context);
  },

  addRetroactiveListener: function addRetroactiveListener(eventType, listener, context) {
    return this.__getEventEmitter().addRetroactiveListener(eventType, listener, context);
  },

  addListenerMap: function addListenerMap(listenerMap, context) {
    return this.__getEventEmitter().addListenerMap(listenerMap, context);
  },

  addRetroactiveListenerMap: function addRetroactiveListenerMap(listenerMap, context) {
    return this.__getEventEmitter().addListenerMap(listenerMap, context);
  },

  removeAllListeners: function removeAllListeners() {
    this.__getEventEmitter().removeAllListeners();
  },

  removeCurrentListener: function removeCurrentListener() {
    this.__getEventEmitter().removeCurrentListener();
  },

  releaseHeldEventType: function releaseHeldEventType(eventType) {
    this.__getEventEmitter().releaseHeldEventType(eventType);
  },

  __getEventEmitter: function __getEventEmitter() {
    if (!this.__eventEmitter) {
      var emitter = new EventEmitter();
      if (__DEV__) {
        var EventValidator = require(278             ); // 278 = EventValidator
        emitter = EventValidator.addValidation(emitter, this.__types);
      }

      var holder = new EventHolder();
      this.__eventEmitter = new EventEmitterWithHolding(emitter, holder);
    }
    return this.__eventEmitter;
  }
};

module.exports = mixInEventEmitter;
}, 275, null, "mixInEventEmitter");
__d(/* EventEmitterWithHolding */function(global, require, module, exports) {
'use strict';

var EventEmitterWithHolding = function () {
  function EventEmitterWithHolding(emitter, holder) {
    babelHelpers.classCallCheck(this, EventEmitterWithHolding);

    this._emitter = emitter;
    this._eventHolder = holder;
    this._currentEventToken = null;
    this._emittingHeldEvents = false;
  }

  babelHelpers.createClass(EventEmitterWithHolding, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      return this._emitter.addListener(eventType, listener, context);
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      return this._emitter.once(eventType, listener, context);
    }
  }, {
    key: 'addRetroactiveListener',
    value: function addRetroactiveListener(eventType, listener, context) {
      var subscription = this._emitter.addListener(eventType, listener, context);

      this._emittingHeldEvents = true;
      this._eventHolder.emitToListener(eventType, listener, context);
      this._emittingHeldEvents = false;

      return subscription;
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._emitter.removeAllListeners(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      this._emitter.removeCurrentListener();
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      return this._emitter.listeners(eventType);
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var _emitter;

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      (_emitter = this._emitter).emit.apply(_emitter, [eventType].concat(babelHelpers.toConsumableArray(args)));
    }
  }, {
    key: 'emitAndHold',
    value: function emitAndHold(eventType) {
      var _eventHolder, _emitter2;

      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      this._currentEventToken = (_eventHolder = this._eventHolder).holdEvent.apply(_eventHolder, [eventType].concat(babelHelpers.toConsumableArray(args)));
      (_emitter2 = this._emitter).emit.apply(_emitter2, [eventType].concat(babelHelpers.toConsumableArray(args)));
      this._currentEventToken = null;
    }
  }, {
    key: 'releaseCurrentEvent',
    value: function releaseCurrentEvent() {
      if (this._currentEventToken) {
        this._eventHolder.releaseEvent(this._currentEventToken);
      } else if (this._emittingHeldEvents) {
        this._eventHolder.releaseCurrentEvent();
      }
    }
  }, {
    key: 'releaseHeldEventType',
    value: function releaseHeldEventType(eventType) {
      this._eventHolder.releaseEventType(eventType);
    }
  }]);
  return EventEmitterWithHolding;
}();

module.exports = EventEmitterWithHolding;
}, 276, null, "EventEmitterWithHolding");
__d(/* EventHolder */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var EventHolder = function () {
  function EventHolder() {
    babelHelpers.classCallCheck(this, EventHolder);

    this._heldEvents = {};
    this._currentEventKey = null;
  }

  babelHelpers.createClass(EventHolder, [{
    key: 'holdEvent',
    value: function holdEvent(eventType) {
      this._heldEvents[eventType] = this._heldEvents[eventType] || [];
      var eventsOfType = this._heldEvents[eventType];
      var key = {
        eventType: eventType,
        index: eventsOfType.length
      };

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      eventsOfType.push(args);
      return key;
    }
  }, {
    key: 'emitToListener',
    value: function emitToListener(eventType, listener, context) {
      var _this = this;

      var eventsOfType = this._heldEvents[eventType];
      if (!eventsOfType) {
        return;
      }
      var origEventKey = this._currentEventKey;
      eventsOfType.forEach(function (eventHeld, index) {
        if (!eventHeld) {
          return;
        }
        _this._currentEventKey = {
          eventType: eventType,
          index: index
        };
        listener.apply(context, eventHeld);
      });
      this._currentEventKey = origEventKey;
    }
  }, {
    key: 'releaseCurrentEvent',
    value: function releaseCurrentEvent() {
      invariant(this._currentEventKey !== null, 'Not in an emitting cycle; there is no current event');
      this._currentEventKey && this.releaseEvent(this._currentEventKey);
    }
  }, {
    key: 'releaseEvent',
    value: function releaseEvent(token) {
      delete this._heldEvents[token.eventType][token.index];
    }
  }, {
    key: 'releaseEventType',
    value: function releaseEventType(type) {
      this._heldEvents[type] = [];
    }
  }]);
  return EventHolder;
}();

module.exports = EventHolder;
}, 277, null, "EventHolder");
__d(/* EventValidator */function(global, require, module, exports) {
'use strict';

var EventValidator = {
  addValidation: function addValidation(emitter, types) {
    var eventTypes = Object.keys(types);
    var emitterWithValidation = Object.create(emitter);

    babelHelpers.extends(emitterWithValidation, {
      emit: function emit(type, a, b, c, d, e, _) {
        assertAllowsEventType(type, eventTypes);
        return emitter.emit.call(this, type, a, b, c, d, e, _);
      }
    });

    return emitterWithValidation;
  }
};

function assertAllowsEventType(type, allowedTypes) {
  if (allowedTypes.indexOf(type) === -1) {
    throw new TypeError(errorMessageFor(type, allowedTypes));
  }
}

function errorMessageFor(type, allowedTypes) {
  var message = 'Unknown event type "' + type + '". ';
  if (__DEV__) {
    message += recommendationFor(type, allowedTypes);
  }
  message += 'Known event types: ' + allowedTypes.join(', ') + '.';
  return message;
}

if (__DEV__) {
  var recommendationFor = function recommendationFor(type, allowedTypes) {
    var closestTypeRecommendation = closestTypeFor(type, allowedTypes);
    if (isCloseEnough(closestTypeRecommendation, type)) {
      return 'Did you mean "' + closestTypeRecommendation.type + '"? ';
    } else {
      return '';
    }
  };

  var closestTypeFor = function closestTypeFor(type, allowedTypes) {
    var typeRecommendations = allowedTypes.map(typeRecommendationFor.bind(this, type));
    return typeRecommendations.sort(recommendationSort)[0];
  };

  var typeRecommendationFor = function typeRecommendationFor(type, recomendedType) {
    return {
      type: recomendedType,
      distance: damerauLevenshteinDistance(type, recomendedType)
    };
  };

  var recommendationSort = function recommendationSort(recommendationA, recommendationB) {
    if (recommendationA.distance < recommendationB.distance) {
      return -1;
    } else if (recommendationA.distance > recommendationB.distance) {
      return 1;
    } else {
      return 0;
    }
  };

  var isCloseEnough = function isCloseEnough(closestType, actualType) {
    return closestType.distance / actualType.length < 0.334;
  };

  var damerauLevenshteinDistance = function damerauLevenshteinDistance(a, b) {
    var i = void 0,
        j = void 0;
    var d = [];

    for (i = 0; i <= a.length; i++) {
      d[i] = [i];
    }

    for (j = 1; j <= b.length; j++) {
      d[0][j] = j;
    }

    for (i = 1; i <= a.length; i++) {
      for (j = 1; j <= b.length; j++) {
        var cost = a.charAt(i - 1) === b.charAt(j - 1) ? 0 : 1;

        d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);

        if (i > 1 && j > 1 && a.charAt(i - 1) === b.charAt(j - 2) && a.charAt(i - 2) === b.charAt(j - 1)) {
          d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);
        }
      }
    }

    return d[a.length][b.length];
  };
}

module.exports = EventValidator;
}, 278, null, "EventValidator");
__d(/* ToolbarAndroid */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\ToolbarAndroid\\ToolbarAndroid.android.js';
var Image = require(200    ); // 200 = Image
var NativeMethodsMixin = require(61                  ); // 61 = NativeMethodsMixin
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ReactNativeViewAttributes = require(140                        ); // 140 = ReactNativeViewAttributes
var UIManager = require(54         ); // 54 = UIManager
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes
var ColorPropType = require(59             ); // 59 = ColorPropType

var createReactClass = require(150                 ); // 150 = create-react-class
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent
var resolveAssetSource = require(162                 ); // 162 = resolveAssetSource

var optionalImageSource = PropTypes.oneOfType([Image.propTypes.source, PropTypes.oneOf([])]);

var ToolbarAndroid = createReactClass({
  displayName: 'ToolbarAndroid',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    actions: PropTypes.arrayOf(PropTypes.shape({
      title: PropTypes.string.isRequired,
      icon: optionalImageSource,
      show: PropTypes.oneOf(['always', 'ifRoom', 'never']),
      showWithText: PropTypes.bool
    })),

    logo: optionalImageSource,

    navIcon: optionalImageSource,

    onActionSelected: PropTypes.func,

    onIconClicked: PropTypes.func,

    overflowIcon: optionalImageSource,

    subtitle: PropTypes.string,

    subtitleColor: ColorPropType,

    title: PropTypes.string,

    titleColor: ColorPropType,

    contentInsetStart: PropTypes.number,

    contentInsetEnd: PropTypes.number,

    rtl: PropTypes.bool,

    testID: PropTypes.string
  }),

  render: function render() {
    var nativeProps = babelHelpers.extends({}, this.props);
    if (this.props.logo) {
      nativeProps.logo = resolveAssetSource(this.props.logo);
    }
    if (this.props.navIcon) {
      nativeProps.navIcon = resolveAssetSource(this.props.navIcon);
    }
    if (this.props.overflowIcon) {
      nativeProps.overflowIcon = resolveAssetSource(this.props.overflowIcon);
    }
    if (this.props.actions) {
      var nativeActions = [];
      for (var i = 0; i < this.props.actions.length; i++) {
        var action = babelHelpers.extends({}, this.props.actions[i]);
        if (action.icon) {
          action.icon = resolveAssetSource(action.icon);
        }
        if (action.show) {
          action.show = UIManager.ToolbarAndroid.Constants.ShowAsAction[action.show];
        }
        nativeActions.push(action);
      }
      nativeProps.nativeActions = nativeActions;
    }

    return React.createElement(NativeToolbar, babelHelpers.extends({ onSelect: this._onSelect }, nativeProps, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 196
      }
    }));
  },

  _onSelect: function _onSelect(event) {
    var position = event.nativeEvent.position;
    if (position === -1) {
      this.props.onIconClicked && this.props.onIconClicked();
    } else {
      this.props.onActionSelected && this.props.onActionSelected(position);
    }
  }
});

var NativeToolbar = requireNativeComponent('ToolbarAndroid', ToolbarAndroid, {
  nativeOnly: {
    nativeActions: true
  }
});

module.exports = ToolbarAndroid;
}, 279, null, "ToolbarAndroid");
__d(/* ViewPagerAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\ViewPager\\ViewPagerAndroid.android.js';
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ReactNative = require(62           ); // 62 = ReactNative
var UIManager = require(54         ); // 54 = UIManager
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var dismissKeyboard = require(52               ); // 52 = dismissKeyboard
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent

var VIEWPAGER_REF = 'viewPager';

var ViewPagerAndroid = function (_React$Component) {
  babelHelpers.inherits(ViewPagerAndroid, _React$Component);

  function ViewPagerAndroid() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, ViewPagerAndroid);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = ViewPagerAndroid.__proto__ || Object.getPrototypeOf(ViewPagerAndroid)).call.apply(_ref, [this].concat(args))), _this), _this.getInnerViewNode = function () {
      return _this.refs[VIEWPAGER_REF].getInnerViewNode();
    }, _this._childrenWithOverridenStyle = function () {
      return React.Children.map(_this.props.children, function (child) {
        if (!child) {
          return null;
        }
        var newProps = babelHelpers.extends({}, child.props, {
          style: [child.props.style, {
            position: 'absolute',
            left: 0,
            top: 0,
            right: 0,
            bottom: 0,
            width: undefined,
            height: undefined
          }],
          collapsable: false
        });
        if (child.type && child.type.displayName && child.type.displayName !== 'RCTView' && child.type.displayName !== 'View') {
          console.warn('Each ViewPager child must be a <View>. Was ' + child.type.displayName);
        }
        return React.createElement(child.type, newProps);
      });
    }, _this._onPageScroll = function (e) {
      if (_this.props.onPageScroll) {
        _this.props.onPageScroll(e);
      }
      if (_this.props.keyboardDismissMode === 'on-drag') {
        dismissKeyboard();
      }
    }, _this._onPageScrollStateChanged = function (e) {
      if (_this.props.onPageScrollStateChanged) {
        _this.props.onPageScrollStateChanged(e.nativeEvent.pageScrollState);
      }
    }, _this._onPageSelected = function (e) {
      if (_this.props.onPageSelected) {
        _this.props.onPageSelected(e);
      }
    }, _this.setPage = function (selectedPage) {
      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_this), UIManager.AndroidViewPager.Commands.setPage, [selectedPage]);
    }, _this.setPageWithoutAnimation = function (selectedPage) {
      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_this), UIManager.AndroidViewPager.Commands.setPageWithoutAnimation, [selectedPage]);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(ViewPagerAndroid, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.initialPage != null) {
        this.setPageWithoutAnimation(this.props.initialPage);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(NativeAndroidViewPager, babelHelpers.extends({}, this.props, {
        ref: VIEWPAGER_REF,
        style: this.props.style,
        onPageScroll: this._onPageScroll,
        onPageScrollStateChanged: this._onPageScrollStateChanged,
        onPageSelected: this._onPageSelected,
        children: this._childrenWithOverridenStyle(),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 237
        }
      }));
    }
  }]);
  return ViewPagerAndroid;
}(React.Component);

ViewPagerAndroid.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  initialPage: PropTypes.number,

  onPageScroll: PropTypes.func,

  onPageScrollStateChanged: PropTypes.func,

  onPageSelected: PropTypes.func,

  pageMargin: PropTypes.number,

  keyboardDismissMode: PropTypes.oneOf(['none', 'on-drag']),

  scrollEnabled: PropTypes.bool,

  peekEnabled: PropTypes.bool
});


var NativeAndroidViewPager = requireNativeComponent('AndroidViewPager', ViewPagerAndroid);

module.exports = ViewPagerAndroid;
}, 280, null, "ViewPagerAndroid");
__d(/* WebView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\Components\\WebView\\WebView.android.js';
var EdgeInsetsPropType = require(142                 ); // 142 = EdgeInsetsPropType
var ActivityIndicator = require(58                 ); // 58 = ActivityIndicator
var React = require(125    ); // 125 = React
var PropTypes = require(19          ); // 19 = prop-types
var ReactNative = require(62           ); // 62 = ReactNative
var StyleSheet = require(153         ); // 153 = StyleSheet
var UIManager = require(54         ); // 54 = UIManager
var View = require(124   ); // 124 = View
var ViewPropTypes = require(141            ); // 141 = ViewPropTypes

var deprecatedPropType = require(133                 ); // 133 = deprecatedPropType
var keyMirror = require(129                 ); // 129 = fbjs/lib/keyMirror
var requireNativeComponent = require(151                     ); // 151 = requireNativeComponent
var resolveAssetSource = require(162                 ); // 162 = resolveAssetSource

var RCT_WEBVIEW_REF = 'webview';

var WebViewState = keyMirror({
  IDLE: null,
  LOADING: null,
  ERROR: null
});

var defaultRenderLoading = function defaultRenderLoading() {
  return React.createElement(
    View,
    { style: styles.loadingView, __source: {
        fileName: _jsxFileName,
        lineNumber: 37
      }
    },
    React.createElement(ActivityIndicator, {
      style: styles.loadingProgressBar,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 38
      }
    })
  );
};

var WebView = function (_React$Component) {
  babelHelpers.inherits(WebView, _React$Component);

  function WebView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, WebView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = WebView.__proto__ || Object.getPrototypeOf(WebView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      viewState: WebViewState.IDLE,
      lastErrorEvent: null,
      startInLoadingState: true
    }, _this.goForward = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.goForward, null);
    }, _this.goBack = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.goBack, null);
    }, _this.reload = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.reload, null);
    }, _this.stopLoading = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.stopLoading, null);
    }, _this.postMessage = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.postMessage, [String(data)]);
    }, _this.injectJavaScript = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.injectJavaScript, [data]);
    }, _this.updateNavigationState = function (event) {
      if (_this.props.onNavigationStateChange) {
        _this.props.onNavigationStateChange(event.nativeEvent);
      }
    }, _this.getWebViewHandle = function () {
      return ReactNative.findNodeHandle(_this.refs[RCT_WEBVIEW_REF]);
    }, _this.onLoadingStart = function (event) {
      var onLoadStart = _this.props.onLoadStart;
      onLoadStart && onLoadStart(event);
      _this.updateNavigationState(event);
    }, _this.onLoadingError = function (event) {
      event.persist();var _this$props = _this.props,
          onError = _this$props.onError,
          onLoadEnd = _this$props.onLoadEnd;

      onError && onError(event);
      onLoadEnd && onLoadEnd(event);
      console.warn('Encountered an error loading page', event.nativeEvent);

      _this.setState({
        lastErrorEvent: event.nativeEvent,
        viewState: WebViewState.ERROR
      });
    }, _this.onLoadingFinish = function (event) {
      var _this$props2 = _this.props,
          onLoad = _this$props2.onLoad,
          onLoadEnd = _this$props2.onLoadEnd;

      onLoad && onLoad(event);
      onLoadEnd && onLoadEnd(event);
      _this.setState({
        viewState: WebViewState.IDLE
      });
      _this.updateNavigationState(event);
    }, _this.onMessage = function (event) {
      var onMessage = _this.props.onMessage;

      onMessage && onMessage(event);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(WebView, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.startInLoadingState) {
        this.setState({ viewState: WebViewState.LOADING });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var otherView = null;

      if (this.state.viewState === WebViewState.LOADING) {
        otherView = (this.props.renderLoading || defaultRenderLoading)();
      } else if (this.state.viewState === WebViewState.ERROR) {
        var errorEvent = this.state.lastErrorEvent;
        otherView = this.props.renderError && this.props.renderError(errorEvent.domain, errorEvent.code, errorEvent.description);
      } else if (this.state.viewState !== WebViewState.IDLE) {
        console.error('RCTWebView invalid state encountered: ' + this.state.loading);
      }

      var webViewStyles = [styles.container, this.props.style];
      if (this.state.viewState === WebViewState.LOADING || this.state.viewState === WebViewState.ERROR) {
        webViewStyles.push(styles.hidden);
      }

      var source = this.props.source || {};
      if (this.props.html) {
        source.html = this.props.html;
      } else if (this.props.url) {
        source.uri = this.props.url;
      }

      if (source.method === 'POST' && source.headers) {
        console.warn('WebView: `source.headers` is not supported when using POST.');
      } else if (source.method === 'GET' && source.body) {
        console.warn('WebView: `source.body` is not supported when using GET.');
      }

      var webView = React.createElement(RCTWebView, {
        ref: RCT_WEBVIEW_REF,
        key: 'webViewKey',
        style: webViewStyles,
        source: resolveAssetSource(source),
        scalesPageToFit: this.props.scalesPageToFit,
        injectedJavaScript: this.props.injectedJavaScript,
        userAgent: this.props.userAgent,
        javaScriptEnabled: this.props.javaScriptEnabled,
        thirdPartyCookiesEnabled: this.props.thirdPartyCookiesEnabled,
        domStorageEnabled: this.props.domStorageEnabled,
        messagingEnabled: typeof this.props.onMessage === 'function',
        onMessage: this.onMessage,
        contentInset: this.props.contentInset,
        automaticallyAdjustContentInsets: this.props.automaticallyAdjustContentInsets,
        onContentSizeChange: this.props.onContentSizeChange,
        onLoadingStart: this.onLoadingStart,
        onLoadingFinish: this.onLoadingFinish,
        onLoadingError: this.onLoadingError,
        testID: this.props.testID,
        mediaPlaybackRequiresUserAction: this.props.mediaPlaybackRequiresUserAction,
        allowUniversalAccessFromFileURLs: this.props.allowUniversalAccessFromFileURLs,
        mixedContentMode: this.props.mixedContentMode,
        saveFormDataDisabled: this.props.saveFormDataDisabled,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 255
        }
      });

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 282
          }
        },
        webView,
        otherView
      );
    }
  }]);
  return WebView;
}(React.Component);

WebView.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  renderError: PropTypes.func,
  renderLoading: PropTypes.func,
  onLoad: PropTypes.func,
  onLoadEnd: PropTypes.func,
  onLoadStart: PropTypes.func,
  onError: PropTypes.func,
  automaticallyAdjustContentInsets: PropTypes.bool,
  contentInset: EdgeInsetsPropType,
  onNavigationStateChange: PropTypes.func,
  onMessage: PropTypes.func,
  onContentSizeChange: PropTypes.func,
  startInLoadingState: PropTypes.bool,
  style: ViewPropTypes.style,

  html: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),

  url: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),

  source: PropTypes.oneOfType([PropTypes.shape({
    uri: PropTypes.string,

    method: PropTypes.oneOf(['GET', 'POST']),

    headers: PropTypes.object,

    body: PropTypes.string
  }), PropTypes.shape({
    html: PropTypes.string,

    baseUrl: PropTypes.string
  }), PropTypes.number]),

  javaScriptEnabled: PropTypes.bool,

  thirdPartyCookiesEnabled: PropTypes.bool,

  domStorageEnabled: PropTypes.bool,

  injectedJavaScript: PropTypes.string,

  scalesPageToFit: PropTypes.bool,

  userAgent: PropTypes.string,

  testID: PropTypes.string,

  mediaPlaybackRequiresUserAction: PropTypes.bool,

  allowUniversalAccessFromFileURLs: PropTypes.bool,

  injectJavaScript: PropTypes.func,

  mixedContentMode: PropTypes.oneOf(['never', 'always', 'compatibility']),

  saveFormDataDisabled: PropTypes.bool
});
WebView.defaultProps = {
  javaScriptEnabled: true,
  thirdPartyCookiesEnabled: true,
  scalesPageToFit: true,
  saveFormDataDisabled: false
};


var RCTWebView = requireNativeComponent('RCTWebView', WebView, {
  nativeOnly: {
    messagingEnabled: PropTypes.bool
  }
});

var styles = StyleSheet.create({
  container: {
    flex: 1
  },
  hidden: {
    height: 0,
    flex: 0 },
  loadingView: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  loadingProgressBar: {
    height: 20
  }
});

module.exports = WebView;
}, 281, null, "WebView");
__d(/* ActionSheetIOS */function(global, require, module, exports) {
'use strict';

var RCTActionSheetManager = require(28             ).ActionSheetManager; // 28 = NativeModules

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var processColor = require(136           ); // 136 = processColor

var ActionSheetIOS = {
  showActionSheetWithOptions: function showActionSheetWithOptions(options, callback) {
    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
    invariant(typeof callback === 'function', 'Must provide a valid callback');
    RCTActionSheetManager.showActionSheetWithOptions(babelHelpers.extends({}, options, { tintColor: processColor(options.tintColor) }), callback);
  },
  showShareActionSheetWithOptions: function showShareActionSheetWithOptions(options, failureCallback, successCallback) {
    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
    invariant(typeof failureCallback === 'function', 'Must provide a valid failureCallback');
    invariant(typeof successCallback === 'function', 'Must provide a valid successCallback');
    RCTActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({}, options, { tintColor: processColor(options.tintColor) }), failureCallback, successCallback);
  }
};

module.exports = ActionSheetIOS;
}, 282, null, "ActionSheetIOS");
__d(/* AdSupportIOS */function(global, require, module, exports) {
'use strict';

var AdSupport = require(28             ).AdSupport; // 28 = NativeModules

module.exports = {
  getAdvertisingId: function getAdvertisingId(onSuccess, onFailure) {
    AdSupport.getAdvertisingId(onSuccess, onFailure);
  },

  getAdvertisingTrackingEnabled: function getAdvertisingTrackingEnabled(onSuccess, onFailure) {
    AdSupport.getAdvertisingTrackingEnabled(onSuccess, onFailure);
  }
};
}, 283, null, "AdSupportIOS");
__d(/* AppRegistry */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(29             ); // 29 = BatchedBridge
var BugReporting = require(285           ); // 285 = BugReporting
var NativeModules = require(28             ); // 28 = NativeModules
var ReactNative = require(62           ); // 62 = ReactNative
var SceneTracker = require(287           ); // 287 = SceneTracker

var infoLog = require(108      ); // 108 = infoLog
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var renderApplication = require(288                ); // 288 = renderApplication

var runnables = {};
var runCount = 1;
var sections = {};
var tasks = new Map();
var componentProviderInstrumentationHook = function componentProviderInstrumentationHook(component) {
  return component();
};

var wrapperComponentProvider = void 0;

var AppRegistry = {
  setWrapperComponentProvider: function setWrapperComponentProvider(provider) {
    wrapperComponentProvider = provider;
  },
  registerConfig: function registerConfig(config) {
    config.forEach(function (appConfig) {
      if (appConfig.run) {
        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);
      } else {
        invariant(appConfig.component != null, 'AppRegistry.registerConfig(...): Every config is expected to set ' + 'either `run` or `component`, but `%s` has neither.', appConfig.appKey);
        AppRegistry.registerComponent(appConfig.appKey, appConfig.component, appConfig.section);
      }
    });
  },
  registerComponent: function registerComponent(appKey, componentProvider, section) {
    runnables[appKey] = {
      componentProvider: componentProvider,
      run: function run(appParameters) {
        return renderApplication(componentProviderInstrumentationHook(componentProvider), appParameters.initialProps, appParameters.rootTag, wrapperComponentProvider && wrapperComponentProvider(appParameters));
      }
    };
    if (section) {
      sections[appKey] = runnables[appKey];
    }
    return appKey;
  },
  registerRunnable: function registerRunnable(appKey, run) {
    runnables[appKey] = { run: run };
    return appKey;
  },
  registerSection: function registerSection(appKey, component) {
    AppRegistry.registerComponent(appKey, component, true);
  },
  getAppKeys: function getAppKeys() {
    return Object.keys(runnables);
  },
  getSectionKeys: function getSectionKeys() {
    return Object.keys(sections);
  },
  getSections: function getSections() {
    return babelHelpers.extends({}, sections);
  },
  getRunnable: function getRunnable(appKey) {
    return runnables[appKey];
  },
  getRegistry: function getRegistry() {
    return {
      sections: AppRegistry.getSectionKeys(),
      runnables: babelHelpers.extends({}, runnables)
    };
  },
  setComponentProviderInstrumentationHook: function setComponentProviderInstrumentationHook(hook) {
    componentProviderInstrumentationHook = hook;
  },
  runApplication: function runApplication(appKey, appParameters) {
    var msg = 'Running application "' + appKey + '" with appParams: ' + JSON.stringify(appParameters) + '. ' + '__DEV__ === ' + String(__DEV__) + ', development-level warning are ' + (__DEV__ ? 'ON' : 'OFF') + ', performance optimizations are ' + (__DEV__ ? 'OFF' : 'ON');
    infoLog(msg);
    BugReporting.addSource('AppRegistry.runApplication' + runCount++, function () {
      return msg;
    });
    invariant(runnables[appKey] && runnables[appKey].run, 'Application ' + appKey + ' has not been registered.\n\n' + 'Hint: This error often happens when you\'re running the packager ' + '(local dev server) from a wrong folder. For example you have ' + 'multiple apps and the packager is still running for the app you ' + 'were working on before.\nIf this is the case, simply kill the old ' + 'packager instance (e.g. close the packager terminal window) ' + 'and start the packager in the correct app folder (e.g. cd into app ' + 'folder and run \'npm start\').\n\n' + 'This error can also happen due to a require() error during ' + 'initialization or failure to call AppRegistry.registerComponent.\n\n');

    SceneTracker.setActiveScene({ name: appKey });
    runnables[appKey].run(appParameters);
  },
  unmountApplicationComponentAtRootTag: function unmountApplicationComponentAtRootTag(rootTag) {
    ReactNative.unmountComponentAtNodeAndRemoveContainer(rootTag);
  },
  registerHeadlessTask: function registerHeadlessTask(taskKey, task) {
    if (tasks.has(taskKey)) {
      console.warn('registerHeadlessTask called multiple times for same key \'' + taskKey + '\'');
    }
    tasks.set(taskKey, task);
  },
  startHeadlessTask: function startHeadlessTask(taskId, taskKey, data) {
    var taskProvider = tasks.get(taskKey);
    if (!taskProvider) {
      throw new Error('No task registered for key ' + taskKey);
    }
    taskProvider()(data).then(function () {
      return NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);
    }).catch(function (reason) {
      console.error(reason);
      NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);
    });
  }
};

BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);

module.exports = AppRegistry;
}, 284, null, "AppRegistry");
__d(/* BugReporting */function(global, require, module, exports) {
'use strict';

var RCTDeviceEventEmitter = require(44                     ); // 44 = RCTDeviceEventEmitter
var Map = require(73   ); // 73 = Map
var infoLog = require(108      ); // 108 = infoLog

function defaultExtras() {
  BugReporting.addFileSource('react_hierarchy.txt', function () {
    return require(286            )(); // 286 = dumpReactTree
  });
}

var BugReporting = function () {
  function BugReporting() {
    babelHelpers.classCallCheck(this, BugReporting);
  }

  babelHelpers.createClass(BugReporting, null, [{
    key: '_maybeInit',
    value: function _maybeInit() {
      if (!BugReporting._subscription) {
        BugReporting._subscription = RCTDeviceEventEmitter.addListener('collectBugExtraData', BugReporting.collectExtraData, null);
        defaultExtras();
      }
    }
  }, {
    key: 'addSource',
    value: function addSource(key, callback) {
      return this._addSource(key, callback, BugReporting._extraSources);
    }
  }, {
    key: 'addFileSource',
    value: function addFileSource(key, callback) {
      return this._addSource(key, callback, BugReporting._fileSources);
    }
  }, {
    key: '_addSource',
    value: function _addSource(key, callback, source) {
      BugReporting._maybeInit();
      if (source.has(key)) {
        console.warn('BugReporting.add* called multiple times for same key \'' + key + '\'');
      }
      source.set(key, callback);
      return { remove: function remove() {
          source.delete(key);
        } };
    }
  }, {
    key: 'collectExtraData',
    value: function collectExtraData() {
      var extraData = {};
      for (var _iterator = BugReporting._extraSources, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref3;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref3 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref3 = _i.value;
        }

        var _ref = _ref3;

        var _ref2 = babelHelpers.slicedToArray(_ref, 2);

        var _key = _ref2[0];
        var callback = _ref2[1];

        extraData[_key] = callback();
      }
      var fileData = {};
      for (var _iterator2 = BugReporting._fileSources, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref6;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref6 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref6 = _i2.value;
        }

        var _ref4 = _ref6;

        var _ref5 = babelHelpers.slicedToArray(_ref4, 2);

        var _key2 = _ref5[0];
        var _callback = _ref5[1];

        fileData[_key2] = _callback();
      }
      infoLog('BugReporting extraData:', extraData);
      var BugReportingNativeModule = require(28             ).BugReporting; // 28 = NativeModules
      BugReportingNativeModule && BugReportingNativeModule.setExtraData && BugReportingNativeModule.setExtraData(extraData, fileData);

      return { extras: extraData, files: fileData };
    }
  }]);
  return BugReporting;
}();

BugReporting._extraSources = new Map();
BugReporting._fileSources = new Map();
BugReporting._subscription = null;


module.exports = BugReporting;
}, 285, null, "BugReporting");
__d(/* dumpReactTree */function(global, require, module, exports) {
'use strict';

function dumpReactTree() {
  try {
    return getReactTree();
  } catch (e) {
    return 'Failed to dump react tree: ' + e;
  }
}

function getReactTree() {
  return 'React tree dumps have been temporarily disabled while React is ' + 'upgraded to Fiber.';
}

module.exports = dumpReactTree;
}, 286, null, "dumpReactTree");
__d(/* SceneTracker */function(global, require, module, exports) {

'use strict';

var _listeners = [];

var _activeScene = { name: 'default' };

var SceneTracker = {
  setActiveScene: function setActiveScene(scene) {
    _activeScene = scene;
    _listeners.forEach(function (listener) {
      return listener(_activeScene);
    });
  },
  getActiveScene: function getActiveScene() {
    return _activeScene;
  },
  addActiveSceneChangedListener: function addActiveSceneChangedListener(callback) {
    _listeners.push(callback);
    return {
      remove: function remove() {
        _listeners = _listeners.filter(function (listener) {
          return callback !== listener;
        });
      }
    };
  }
};

module.exports = SceneTracker;
}, 287, null, "SceneTracker");
__d(/* renderApplication */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native\\Libraries\\ReactNative\\renderApplication.js';
var AppContainer = require(233           ); // 233 = AppContainer
var React = require(125    ); // 125 = React
var ReactNative = require(62           ); // 62 = ReactNative

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

require(289          ); // 289 = BackHandler

function renderApplication(RootComponent, initialProps, rootTag, WrapperComponent) {
  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);

  ReactNative.render(React.createElement(
    AppContainer,
    { rootTag: rootTag, WrapperComponent: WrapperComponent, __source: {
        fileName: _jsxFileName,
        lineNumber: 34
      }
    },
    React.createElement(RootComponent, babelHelpers.extends({}, initialProps, { rootTag: rootTag, __source: {
        fileName: _jsxFileName,
        lineNumber: 35
      }
    }))
  ), rootTag);
}

module.exports = renderApplication;
}, 288, null, "renderApplication");
__d(/* BackHandler */function(global, require, module, exports) {

'use strict';

var DeviceEventManager = require(28             ).DeviceEventManager; // 28 = NativeModules
var RCTDeviceEventEmitter = require(44                     ); // 44 = RCTDeviceEventEmitter

var DEVICE_BACK_EVENT = 'hardwareBackPress';

var _backPressSubscriptions = new Set();

RCTDeviceEventEmitter.addListener(DEVICE_BACK_EVENT, function () {
  var backPressSubscriptions = new Set(_backPressSubscriptions);
  var invokeDefault = true;
  var subscriptions = [].concat(babelHelpers.toConsumableArray(backPressSubscriptions)).reverse();
  for (var i = 0; i < subscriptions.length; ++i) {
    if (subscriptions[i]()) {
      invokeDefault = false;
      break;
    }
  }

  if (invokeDefault) {
    BackHandler.exitApp();
  }
});

var BackHandler = {

  exitApp: function exitApp() {
    DeviceEventManager.invokeDefaultBackPressHandler();
  },

  addEventListener: function addEventListener(eventName, handler) {
    _backPressSubscriptions.add(handler);
    return {
      remove: function remove() {
        return BackHandler.removeEventListener(eventName, handler);
      }
    };
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    _backPressSubscriptions.delete(handler);
  }

};

module.exports = BackHandler;
}, 289, null, "BackHandler");
__d(/* AsyncStorage */function(global, require, module, exports) {
'use strict';

var NativeModules = require(28             ); // 28 = NativeModules

var RCTAsyncStorage = NativeModules.AsyncRocksDBStorage || NativeModules.AsyncSQLiteDBStorage || NativeModules.AsyncLocalStorage;

var AsyncStorage = {
  _getRequests: [],
  _getKeys: [],
  _immediate: null,

  getItem: function getItem(key, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiGet([key], function (errors, result) {
        var value = result && result[0] && result[0][1] ? result[0][1] : null;
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0], value);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(value);
        }
      });
    });
  },

  setItem: function setItem(key, value, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiSet([[key, value]], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  removeItem: function removeItem(key, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiRemove([key], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  mergeItem: function mergeItem(key, value, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiMerge([[key, value]], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  clear: function clear(callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.clear(function (error) {
        callback && callback(convertError(error));
        if (error && convertError(error)) {
          reject(convertError(error));
        } else {
          resolve(null);
        }
      });
    });
  },

  getAllKeys: function getAllKeys(callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.getAllKeys(function (error, keys) {
        callback && callback(convertError(error), keys);
        if (error) {
          reject(convertError(error));
        } else {
          resolve(keys);
        }
      });
    });
  },

  flushGetRequests: function flushGetRequests() {
    var getRequests = this._getRequests;
    var getKeys = this._getKeys;

    this._getRequests = [];
    this._getKeys = [];

    RCTAsyncStorage.multiGet(getKeys, function (errors, result) {
      var map = {};
      result && result.forEach(function (_ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            key = _ref2[0],
            value = _ref2[1];

        map[key] = value;return value;
      });
      var reqLength = getRequests.length;
      for (var i = 0; i < reqLength; i++) {
        var request = getRequests[i];
        var requestKeys = request.keys;
        var requestResult = requestKeys.map(function (key) {
          return [key, map[key]];
        });
        request.callback && request.callback(null, requestResult);
        request.resolve && request.resolve(requestResult);
      }
    });
  },

  multiGet: function multiGet(keys, callback) {
    var _this = this;

    if (!this._immediate) {
      this._immediate = setImmediate(function () {
        _this._immediate = null;
        _this.flushGetRequests();
      });
    }

    var getRequest = {
      keys: keys,
      callback: callback,

      keyIndex: this._getKeys.length,
      resolve: null,
      reject: null
    };

    var promiseResult = new Promise(function (resolve, reject) {
      getRequest.resolve = resolve;
      getRequest.reject = reject;
    });

    this._getRequests.push(getRequest);

    keys.forEach(function (key) {
      if (_this._getKeys.indexOf(key) === -1) {
        _this._getKeys.push(key);
      }
    });

    return promiseResult;
  },

  multiSet: function multiSet(keyValuePairs, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiSet(keyValuePairs, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  },

  multiRemove: function multiRemove(keys, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiRemove(keys, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  },

  multiMerge: function multiMerge(keyValuePairs, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiMerge(keyValuePairs, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  }
};

if (!RCTAsyncStorage.multiMerge) {
  delete AsyncStorage.mergeItem;
  delete AsyncStorage.multiMerge;
}

function convertErrors(errs) {
  if (!errs) {
    return null;
  }
  return (Array.isArray(errs) ? errs : [errs]).map(function (e) {
    return convertError(e);
  });
}

function convertError(error) {
  if (!error) {
    return null;
  }
  var out = new Error(error.message);
  out.key = error.key;
  return out;
}

module.exports = AsyncStorage;
}, 290, null, "AsyncStorage");
__d(/* BackAndroid */function(global, require, module, exports) {

'use strict';

var BackHandler = require(289          ); // 289 = BackHandler

var warning = require(15                ); // 15 = fbjs/lib/warning

var BackAndroid = {

  exitApp: function exitApp() {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    BackHandler.exitApp();
  },

  addEventListener: function addEventListener(eventName, handler) {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    return BackHandler.addEventListener(eventName, handler);
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    BackHandler.removeEventListener(eventName, handler);
  }

};

module.exports = BackAndroid;
}, 291, null, "BackAndroid");
__d(/* CameraRoll */function(global, require, module, exports) {
'use strict';

var PropTypes = require(19          ); // 19 = prop-types
var checkPropTypes = PropTypes.checkPropTypes;

var RCTCameraRollManager = require(28             ).CameraRollManager; // 28 = NativeModules

var createStrictShapeTypeChecker = require(143                           ); // 143 = createStrictShapeTypeChecker
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var GROUP_TYPES_OPTIONS = {
  Album: 'Album',
  All: 'All',
  Event: 'Event',
  Faces: 'Faces',
  Library: 'Library',
  PhotoStream: 'PhotoStream',
  SavedPhotos: 'SavedPhotos' };

var ASSET_TYPE_OPTIONS = {
  All: 'All',
  Videos: 'Videos',
  Photos: 'Photos'
};

var getPhotosParamChecker = createStrictShapeTypeChecker({
  first: PropTypes.number.isRequired,

  after: PropTypes.string,

  groupTypes: PropTypes.oneOf(Object.keys(GROUP_TYPES_OPTIONS)),

  groupName: PropTypes.string,

  assetType: PropTypes.oneOf(Object.keys(ASSET_TYPE_OPTIONS)),

  mimeTypes: PropTypes.arrayOf(PropTypes.string)
});

var getPhotosReturnChecker = createStrictShapeTypeChecker({
  edges: PropTypes.arrayOf(createStrictShapeTypeChecker({
    node: createStrictShapeTypeChecker({
      type: PropTypes.string.isRequired,
      group_name: PropTypes.string.isRequired,
      image: createStrictShapeTypeChecker({
        uri: PropTypes.string.isRequired,
        height: PropTypes.number.isRequired,
        width: PropTypes.number.isRequired,
        isStored: PropTypes.bool
      }).isRequired,
      timestamp: PropTypes.number.isRequired,
      location: createStrictShapeTypeChecker({
        latitude: PropTypes.number,
        longitude: PropTypes.number,
        altitude: PropTypes.number,
        heading: PropTypes.number,
        speed: PropTypes.number
      })
    }).isRequired
  })).isRequired,
  page_info: createStrictShapeTypeChecker({
    has_next_page: PropTypes.bool.isRequired,
    start_cursor: PropTypes.string,
    end_cursor: PropTypes.string
  }).isRequired
});

var CameraRoll = function () {
  function CameraRoll() {
    babelHelpers.classCallCheck(this, CameraRoll);
  }

  babelHelpers.createClass(CameraRoll, null, [{
    key: 'saveImageWithTag',
    value: function saveImageWithTag(tag) {
      console.warn('`CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.');
      return this.saveToCameraRoll(tag, 'photo');
    }
  }, {
    key: 'saveToCameraRoll',
    value: function saveToCameraRoll(tag, type) {
      invariant(typeof tag === 'string', 'CameraRoll.saveToCameraRoll must be a valid string.');

      invariant(type === 'photo' || type === 'video' || type === undefined, 'The second argument to saveToCameraRoll must be \'photo\' or \'video\'. You passed ' + type);

      var mediaType = 'photo';
      if (type) {
        mediaType = type;
      } else if (['mov', 'mp4'].indexOf(tag.split('.').slice(-1)[0]) >= 0) {
        mediaType = 'video';
      }

      return RCTCameraRollManager.saveToCameraRoll(tag, mediaType);
    }
  }, {
    key: 'getPhotos',
    value: function getPhotos(params) {
      if (__DEV__) {
        checkPropTypes({ params: getPhotosParamChecker }, { params: params }, 'params', 'CameraRoll.getPhotos');
      }
      if (arguments.length > 1) {
        console.warn('CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead');
        var successCallback = arguments[1];
        if (__DEV__) {
          var callback = arguments[1];
          successCallback = function successCallback(response) {
            checkPropTypes({ response: getPhotosReturnChecker }, { response: response }, 'response', 'CameraRoll.getPhotos callback');
            callback(response);
          };
        }
        var errorCallback = arguments[2] || function () {};
        RCTCameraRollManager.getPhotos(params).then(successCallback, errorCallback);
      }

      return RCTCameraRollManager.getPhotos(params);
    }
  }]);
  return CameraRoll;
}();

CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;


module.exports = CameraRoll;
}, 292, null, "CameraRoll");
__d(/* Clipboard */function(global, require, module, exports) {
'use strict';

var Clipboard = require(28             ).Clipboard; // 28 = NativeModules

module.exports = {
  getString: function getString() {
    return Clipboard.getString();
  },
  setString: function setString(content) {
    Clipboard.setString(content);
  }
};
}, 293, null, "Clipboard");
__d(/* DatePickerAndroid */function(global, require, module, exports) {
'use strict';

var regeneratorRuntime = require(67                   ); // 67 = regenerator-runtime

var DatePickerModule = require(28             ).DatePickerAndroid; // 28 = NativeModules

function _toMillis(options, key) {
  var dateVal = options[key];

  if (typeof dateVal === 'object' && typeof dateVal.getMonth === 'function') {
    options[key] = dateVal.getTime();
  }
}

var DatePickerAndroid = function () {
  function DatePickerAndroid() {
    babelHelpers.classCallCheck(this, DatePickerAndroid);
  }

  babelHelpers.createClass(DatePickerAndroid, null, [{
    key: 'open',
    value: function open(options) {
      var optionsMs;
      return regeneratorRuntime.async(function open$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              optionsMs = options;

              if (optionsMs) {
                _toMillis(options, 'date');
                _toMillis(options, 'minDate');
                _toMillis(options, 'maxDate');
              }
              return _context.abrupt('return', DatePickerModule.open(options));

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'dateSetAction',
    get: function get() {
      return 'dateSetAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return DatePickerAndroid;
}();

module.exports = DatePickerAndroid;
}, 294, null, "DatePickerAndroid");
__d(/* ImagePickerIOS */function(global, require, module, exports) {
'use strict';

var RCTImagePicker = require(28             ).ImagePickerIOS; // 28 = NativeModules

var ImagePickerIOS = {
  canRecordVideos: function canRecordVideos(callback) {
    return RCTImagePicker.canRecordVideos(callback);
  },
  canUseCamera: function canUseCamera(callback) {
    return RCTImagePicker.canUseCamera(callback);
  },
  openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
    config = babelHelpers.extends({
      videoMode: false
    }, config);
    return RCTImagePicker.openCameraDialog(config, successCallback, cancelCallback);
  },
  openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
    config = babelHelpers.extends({
      showImages: true,
      showVideos: false
    }, config);
    return RCTImagePicker.openSelectDialog(config, successCallback, cancelCallback);
  }
};

module.exports = ImagePickerIOS;
}, 295, null, "ImagePickerIOS");
__d(/* Linking */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter
var NativeModules = require(28             ); // 28 = NativeModules
var Platform = require(36        ); // 36 = Platform

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var LinkingManager = Platform.OS === 'android' ? NativeModules.IntentAndroid : NativeModules.LinkingManager;

var Linking = function (_NativeEventEmitter) {
  babelHelpers.inherits(Linking, _NativeEventEmitter);

  function Linking() {
    babelHelpers.classCallCheck(this, Linking);
    return babelHelpers.possibleConstructorReturn(this, (Linking.__proto__ || Object.getPrototypeOf(Linking)).call(this, LinkingManager));
  }

  babelHelpers.createClass(Linking, [{
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      this.addListener(type, handler);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      this.removeListener(type, handler);
    }
  }, {
    key: 'openURL',
    value: function openURL(url) {
      this._validateURL(url);
      return LinkingManager.openURL(url);
    }
  }, {
    key: 'canOpenURL',
    value: function canOpenURL(url) {
      this._validateURL(url);
      return LinkingManager.canOpenURL(url);
    }
  }, {
    key: 'getInitialURL',
    value: function getInitialURL() {
      return LinkingManager.getInitialURL();
    }
  }, {
    key: '_validateURL',
    value: function _validateURL(url) {
      invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);
      invariant(url, 'Invalid URL: cannot be empty');
    }
  }]);
  return Linking;
}(NativeEventEmitter);

module.exports = new Linking();
}, 296, null, "Linking");
__d(/* NetInfo */function(global, require, module, exports) {
'use strict';

var Map = require(73   ); // 73 = Map
var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter
var NativeModules = require(28             ); // 28 = NativeModules
var Platform = require(36        ); // 36 = Platform
var RCTNetInfo = NativeModules.NetInfo;

var NetInfoEventEmitter = new NativeEventEmitter(RCTNetInfo);

var DEVICE_CONNECTIVITY_EVENT = 'networkStatusDidChange';

var _subscriptions = new Map();

var _isConnected = void 0;
if (Platform.OS === 'ios') {
  _isConnected = function _isConnected(reachability) {
    return reachability !== 'none' && reachability !== 'unknown';
  };
} else if (Platform.OS === 'android') {
  _isConnected = function _isConnected(connectionType) {
    return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';
  };
}

var _isConnectedSubscriptions = new Map();

var NetInfo = {
  addEventListener: function addEventListener(eventName, handler) {
    var listener = NetInfoEventEmitter.addListener(DEVICE_CONNECTIVITY_EVENT, function (appStateData) {
      handler(appStateData.network_info);
    });
    _subscriptions.set(handler, listener);
    return {
      remove: function remove() {
        return NetInfo.removeEventListener(eventName, handler);
      }
    };
  },
  removeEventListener: function removeEventListener(eventName, handler) {
    var listener = _subscriptions.get(handler);
    if (!listener) {
      return;
    }
    listener.remove();
    _subscriptions.delete(handler);
  },
  fetch: function fetch() {
    return RCTNetInfo.getCurrentConnectivity().then(function (resp) {
      return resp.network_info;
    });
  },

  isConnected: {
    addEventListener: function addEventListener(eventName, handler) {
      var listener = function listener(connection) {
        handler(_isConnected(connection));
      };
      _isConnectedSubscriptions.set(handler, listener);
      NetInfo.addEventListener(eventName, listener);
      return {
        remove: function remove() {
          return NetInfo.isConnected.removeEventListener(eventName, handler);
        }
      };
    },
    removeEventListener: function removeEventListener(eventName, handler) {
      var listener = _isConnectedSubscriptions.get(handler);
      NetInfo.removeEventListener(eventName, listener);
      _isConnectedSubscriptions.delete(handler);
    },
    fetch: function fetch() {
      return NetInfo.fetch().then(function (connection) {
        return _isConnected(connection);
      });
    }
  },

  isConnectionExpensive: function isConnectionExpensive() {
    return Platform.OS === 'android' ? RCTNetInfo.isConnectionMetered() : Promise.reject(new Error('Currently not supported on iOS'));
  }
};

module.exports = NetInfo;
}, 297, null, "NetInfo");
__d(/* PushNotificationIOS */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(50                  ); // 50 = NativeEventEmitter
var RCTPushNotificationManager = require(28             ).PushNotificationManager; // 28 = NativeModules
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var PushNotificationEmitter = new NativeEventEmitter(RCTPushNotificationManager);

var _notifHandlers = new Map();

var DEVICE_NOTIF_EVENT = 'remoteNotificationReceived';
var NOTIF_REGISTER_EVENT = 'remoteNotificationsRegistered';
var NOTIF_REGISTRATION_ERROR_EVENT = 'remoteNotificationRegistrationError';
var DEVICE_LOCAL_NOTIF_EVENT = 'localNotificationReceived';

var PushNotificationIOS = function () {
  babelHelpers.createClass(PushNotificationIOS, null, [{
    key: 'presentLocalNotification',
    value: function presentLocalNotification(details) {
      RCTPushNotificationManager.presentLocalNotification(details);
    }
  }, {
    key: 'scheduleLocalNotification',
    value: function scheduleLocalNotification(details) {
      RCTPushNotificationManager.scheduleLocalNotification(details);
    }
  }, {
    key: 'cancelAllLocalNotifications',
    value: function cancelAllLocalNotifications() {
      RCTPushNotificationManager.cancelAllLocalNotifications();
    }
  }, {
    key: 'removeAllDeliveredNotifications',
    value: function removeAllDeliveredNotifications() {
      RCTPushNotificationManager.removeAllDeliveredNotifications();
    }
  }, {
    key: 'getDeliveredNotifications',
    value: function getDeliveredNotifications(callback) {
      RCTPushNotificationManager.getDeliveredNotifications(callback);
    }
  }, {
    key: 'removeDeliveredNotifications',
    value: function removeDeliveredNotifications(identifiers) {
      RCTPushNotificationManager.removeDeliveredNotifications(identifiers);
    }
  }, {
    key: 'setApplicationIconBadgeNumber',
    value: function setApplicationIconBadgeNumber(number) {
      RCTPushNotificationManager.setApplicationIconBadgeNumber(number);
    }
  }, {
    key: 'getApplicationIconBadgeNumber',
    value: function getApplicationIconBadgeNumber(callback) {
      RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);
    }
  }, {
    key: 'cancelLocalNotifications',
    value: function cancelLocalNotifications(userInfo) {
      RCTPushNotificationManager.cancelLocalNotifications(userInfo);
    }
  }, {
    key: 'getScheduledLocalNotifications',
    value: function getScheduledLocalNotifications(callback) {
      RCTPushNotificationManager.getScheduledLocalNotifications(callback);
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
      var listener;
      if (type === 'notification') {
        listener = PushNotificationEmitter.addListener(DEVICE_NOTIF_EVENT, function (notifData) {
          handler(new PushNotificationIOS(notifData));
        });
      } else if (type === 'localNotification') {
        listener = PushNotificationEmitter.addListener(DEVICE_LOCAL_NOTIF_EVENT, function (notifData) {
          handler(new PushNotificationIOS(notifData));
        });
      } else if (type === 'register') {
        listener = PushNotificationEmitter.addListener(NOTIF_REGISTER_EVENT, function (registrationInfo) {
          handler(registrationInfo.deviceToken);
        });
      } else if (type === 'registrationError') {
        listener = PushNotificationEmitter.addListener(NOTIF_REGISTRATION_ERROR_EVENT, function (errorInfo) {
          handler(errorInfo);
        });
      }
      _notifHandlers.set(type, listener);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
      var listener = _notifHandlers.get(type);
      if (!listener) {
        return;
      }
      listener.remove();
      _notifHandlers.delete(type);
    }
  }, {
    key: 'requestPermissions',
    value: function requestPermissions(permissions) {
      var requestedPermissions = {};
      if (permissions) {
        requestedPermissions = {
          alert: !!permissions.alert,
          badge: !!permissions.badge,
          sound: !!permissions.sound
        };
      } else {
        requestedPermissions = {
          alert: true,
          badge: true,
          sound: true
        };
      }
      return RCTPushNotificationManager.requestPermissions(requestedPermissions);
    }
  }, {
    key: 'abandonPermissions',
    value: function abandonPermissions() {
      RCTPushNotificationManager.abandonPermissions();
    }
  }, {
    key: 'checkPermissions',
    value: function checkPermissions(callback) {
      invariant(typeof callback === 'function', 'Must provide a valid callback');
      RCTPushNotificationManager.checkPermissions(callback);
    }
  }, {
    key: 'getInitialNotification',
    value: function getInitialNotification() {
      return RCTPushNotificationManager.getInitialNotification().then(function (notification) {
        return notification && new PushNotificationIOS(notification);
      });
    }
  }]);

  function PushNotificationIOS(nativeNotif) {
    var _this = this;

    babelHelpers.classCallCheck(this, PushNotificationIOS);

    this._data = {};
    this._remoteNotificationCompleteCalllbackCalled = false;
    this._isRemote = nativeNotif.remote;
    if (this._isRemote) {
      this._notificationId = nativeNotif.notificationId;
    }

    if (nativeNotif.remote) {
      Object.keys(nativeNotif).forEach(function (notifKey) {
        var notifVal = nativeNotif[notifKey];
        if (notifKey === 'aps') {
          _this._alert = notifVal.alert;
          _this._sound = notifVal.sound;
          _this._badgeCount = notifVal.badge;
          _this._category = notifVal.category;
          _this._contentAvailable = notifVal['content-available'];
        } else {
          _this._data[notifKey] = notifVal;
        }
      });
    } else {
      this._badgeCount = nativeNotif.applicationIconBadgeNumber;
      this._sound = nativeNotif.soundName;
      this._alert = nativeNotif.alertBody;
      this._data = nativeNotif.userInfo;
      this._category = nativeNotif.category;
    }
  }

  babelHelpers.createClass(PushNotificationIOS, [{
    key: 'finish',
    value: function finish(fetchResult) {
      if (!this._isRemote || !this._notificationId || this._remoteNotificationCompleteCalllbackCalled) {
        return;
      }
      this._remoteNotificationCompleteCalllbackCalled = true;

      RCTPushNotificationManager.onFinishRemoteNotification(this._notificationId, fetchResult);
    }
  }, {
    key: 'getMessage',
    value: function getMessage() {
      return this._alert;
    }
  }, {
    key: 'getSound',
    value: function getSound() {
      return this._sound;
    }
  }, {
    key: 'getCategory',
    value: function getCategory() {
      return this._category;
    }
  }, {
    key: 'getAlert',
    value: function getAlert() {
      return this._alert;
    }
  }, {
    key: 'getContentAvailable',
    value: function getContentAvailable() {
      return this._contentAvailable;
    }
  }, {
    key: 'getBadgeCount',
    value: function getBadgeCount() {
      return this._badgeCount;
    }
  }, {
    key: 'getData',
    value: function getData() {
      return this._data;
    }
  }]);
  return PushNotificationIOS;
}();

PushNotificationIOS.FetchResult = {
  NewData: 'UIBackgroundFetchResultNewData',
  NoData: 'UIBackgroundFetchResultNoData',
  ResultFailed: 'UIBackgroundFetchResultFailed'
};


module.exports = PushNotificationIOS;
}, 298, null, "PushNotificationIOS");
__d(/* Settings */function(global, require, module, exports) {
'use strict';

var Settings = {
  get: function get(key) {
    console.warn('Settings is not yet supported on Android');
    return null;
  },
  set: function set(settings) {
    console.warn('Settings is not yet supported on Android');
  },
  watchKeys: function watchKeys(keys, callback) {
    console.warn('Settings is not yet supported on Android');
    return -1;
  },
  clearWatch: function clearWatch(watchId) {
    console.warn('Settings is not yet supported on Android');
  }
};

module.exports = Settings;
}, 299, null, "Settings");
__d(/* Share */function(global, require, module, exports) {
'use strict';

var Platform = require(36        ); // 36 = Platform

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var processColor = require(136           ); // 136 = processColor

var _require = require(28             ), // 28 = NativeModules
    ActionSheetManager = _require.ActionSheetManager,
    ShareModule = _require.ShareModule;

var Share = function () {
  function Share() {
    babelHelpers.classCallCheck(this, Share);
  }

  babelHelpers.createClass(Share, null, [{
    key: 'share',
    value: function share(content) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');
      invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');
      invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');

      if (Platform.OS === 'android') {
        invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');
        return ShareModule.share(content, options.dialogTitle);
      } else if (Platform.OS === 'ios') {
        return new Promise(function (resolve, reject) {
          ActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({}, content, options, { tintColor: processColor(options.tintColor) }), function (error) {
            return reject(error);
          }, function (success, activityType) {
            if (success) {
              resolve({
                'action': 'sharedAction',
                'activityType': activityType
              });
            } else {
              resolve({
                'action': 'dismissedAction'
              });
            }
          });
        });
      } else {
        return Promise.reject(new Error('Unsupported platform'));
      }
    }
  }, {
    key: 'sharedAction',
    get: function get() {
      return 'sharedAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return Share;
}();

module.exports = Share;
}, 300, null, "Share");
__d(/* TimePickerAndroid */function(global, require, module, exports) {
'use strict';

var regeneratorRuntime = require(67                   ); // 67 = regenerator-runtime

var TimePickerModule = require(28             ).TimePickerAndroid; // 28 = NativeModules

var TimePickerAndroid = function () {
  function TimePickerAndroid() {
    babelHelpers.classCallCheck(this, TimePickerAndroid);
  }

  babelHelpers.createClass(TimePickerAndroid, null, [{
    key: 'open',
    value: function open(options) {
      return regeneratorRuntime.async(function open$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt('return', TimePickerModule.open(options));

            case 1:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'timeSetAction',
    get: function get() {
      return 'timeSetAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return TimePickerAndroid;
}();

module.exports = TimePickerAndroid;
}, 301, null, "TimePickerAndroid");
__d(/* Vibration */function(global, require, module, exports) {
'use strict';

var RCTVibration = require(28             ).Vibration; // 28 = NativeModules
var Platform = require(36        ); // 36 = Platform

var _vibrating = false;
var _id = 0;

function vibrateByPattern(pattern) {
  var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (_vibrating) {
    return;
  }
  _vibrating = true;
  if (pattern[0] === 0) {
    RCTVibration.vibrate();
    pattern = pattern.slice(1);
  }
  if (pattern.length === 0) {
    _vibrating = false;
    return;
  }
  setTimeout(function () {
    return vibrateScheduler(++_id, pattern, repeat, 1);
  }, pattern[0]);
}

function vibrateScheduler(id, pattern, repeat, nextIndex) {
  if (!_vibrating || id !== _id) {
    return;
  }
  RCTVibration.vibrate();
  if (nextIndex >= pattern.length) {
    if (repeat) {
      nextIndex = 0;
    } else {
      _vibrating = false;
      return;
    }
  }
  setTimeout(function () {
    return vibrateScheduler(id, pattern, repeat, nextIndex + 1);
  }, pattern[nextIndex]);
}

var Vibration = {
  vibrate: function vibrate() {
    var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 400;
    var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (Platform.OS === 'android') {
      if (typeof pattern === 'number') {
        RCTVibration.vibrate(pattern);
      } else if (Array.isArray(pattern)) {
        RCTVibration.vibrateByPattern(pattern, repeat ? 0 : -1);
      } else {
        throw new Error('Vibration pattern should be a number or array');
      }
    } else {
      if (_vibrating) {
        return;
      }
      if (typeof pattern === 'number') {
        RCTVibration.vibrate();
      } else if (Array.isArray(pattern)) {
        vibrateByPattern(pattern, repeat);
      } else {
        throw new Error('Vibration pattern should be a number or array');
      }
    }
  },

  cancel: function cancel() {
    if (Platform.OS === 'ios') {
      _vibrating = false;
    } else {
      RCTVibration.cancel();
    }
  }
};

module.exports = Vibration;
}, 302, null, "Vibration");
__d(/* VibrationIOS */function(global, require, module, exports) {
'use strict';

var warning = require(15                ); // 15 = fbjs/lib/warning

var VibrationIOS = {
  vibrate: function vibrate() {
    warning('VibrationIOS is not supported on this platform!');
  }
};

module.exports = VibrationIOS;
}, 303, null, "VibrationIOS");
__d(/* takeSnapshot */function(global, require, module, exports) {

'use strict';

var _require = require(62           ), // 62 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.takeSnapshot;
}, 304, null, "takeSnapshot");
__d(/* myproject/app/login.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\login.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _reactNativeLinearGradient = require(306                           ); // 306 = react-native-linear-gradient

var _reactNativeLinearGradient2 = babelHelpers.interopRequireDefault(_reactNativeLinearGradient);

var _admin = require(307      ); // 307 = ./admin

var _admin2 = babelHelpers.interopRequireDefault(_admin);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var RNAndroidIMEI = NativeModules.RNAndroidIMEI;

var login = function (_Component) {
    babelHelpers.inherits(login, _Component);

    function login(props) {
        babelHelpers.classCallCheck(this, login);

        var _this = babelHelpers.possibleConstructorReturn(this, (login.__proto__ || Object.getPrototypeOf(login)).call(this, props));

        _this.state = {
            reqCode: "",
            reqDetailCode: "",
            ClientCode: "",
            sDateTime: "",
            Pwd: "",
            Sign: "",
            LinkUrl: "",
            textinput: "",
            show: false,
            ErrorShow: false
        };
        return _this;
    }

    babelHelpers.createClass(login, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.setState({
                focus: true
            });
        }
    }, {
        key: 'pressPush',
        value: function pressPush() {
            var _this2 = this;

            if (this.state.ClientCode == "") {
                _reactNative.ToastAndroid.show('请输入商户号', _reactNative.ToastAndroid.SHORT);
                return;
            }
            if (this.state.Pwd == "") {
                _reactNative.ToastAndroid.show('请输入密码', _reactNative.ToastAndroid.SHORT);
                return;
            }
            this._setModalVisible();
            NativeModules.AndroidDeviceInfo.getIMEI(function (IMEI) {
                var params = {
                    reqCode: "App_PosReq",
                    reqDetailCode: "App_Client_Qry",
                    ClientCode: _this2.state.ClientCode,
                    sDateTime: Date.parse(new Date()),
                    Pwd: _NetUtils2.default.MD5(_this2.state.Pwd) + '',
                    IMEI1: IMEI,
                    IMEI2: "",
                    SignIMEI1: _NetUtils2.default.MD5("1q2w3e4r%" + IMEI) + '',
                    SignIMEI2: _NetUtils2.default.MD5("1q2w3e4r%" + "") + '',
                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_Qry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '' };
                _FetchUtils2.default.post('http://register.smartpos.top:8091/WebService/FTrendWs.asmx/FMJsonInterfaceByDownToPos', JSON.stringify(params)).then(function (data) {
                    if (data.retcode == 1) {
                        DetailInfo = JSON.stringify(data.DetailInfo);
                        var DetailInfo = JSON.stringify(data.DetailInfo);
                        for (var _iterator = data.DetailInfo, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
                            var _ref;

                            if (_isArray) {
                                if (_i >= _iterator.length) break;
                                _ref = _iterator[_i++];
                            } else {
                                _i = _iterator.next();
                                if (_i.done) break;
                                _ref = _i.value;
                            }

                            var value = _ref;

                            LinkUrl = value.LinkUrl;
                            var str = LinkUrl;
                            var Url = LinkUrl;
                            var items = str.replace('?WSDL', "");
                            var Items = Url.replace('/WEBSERVICE/FTRENDWS.ASMX?WSDL', "");
                            var NullItems = Items.replace(/\s/g, "");
                            _Storage2.default.save('Url', NullItems);
                            var data = '/FMJsonInterfaceByDownToPos';
                            var date = items + '/FMJsonInterfaceByDownToPos';
                            var replace = date.replace(/\s/g, "");
                            _Storage2.default.save('LinkUrl', replace);
                        }
                        RNAndroidIMEI.getAndroidIMEI();
                        _Storage2.default.save('ClientCode', _this2.state.ClientCode);
                        _Storage2.default.save('IMEI', IMEI);
                        _Storage2.default.save('FirstTime', '1');
                        _this2.props.navigator.push({
                            component: _admin2.default
                        });
                        _reactNative.ToastAndroid.show('登录成功', _reactNative.ToastAndroid.SHORT);
                        _this2._setModalVisible();
                    } else {
                        _this2._setModalVisible();
                        var msg = data.msg;
                        alert(JSON.stringify(msg));
                    }
                }, function (err) {
                    _this2._setModalVisible();
                    alert("网络请求失败");
                });
            });
        }
    }, {
        key: 'LoginError',
        value: function LoginError() {
            this._ErrorModalVisible();
        }
    }, {
        key: '_setModalVisible',
        value: function _setModalVisible() {
            var isShow = this.state.show;
            this.setState({
                show: !isShow
            });
        }
    }, {
        key: '_ErrorModalVisible',
        value: function _ErrorModalVisible() {
            var isShow = this.state.ErrorShow;
            this.setState({
                ErrorShow: !isShow
            });
        }
    }, {
        key: 'onSubmitEditing',
        value: function onSubmitEditing() {
            this.setState({
                textinput: 1
            });
        }
    }, {
        key: 'onSubmitEditing1',
        value: function onSubmitEditing1() {
            this.setState({
                textinput: ""
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                _reactNative.ScrollView,
                { style: styles.Container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 143
                    }
                },
                _react2.default.createElement(
                    _reactNative.Image,
                    { source: require(427               ), style: styles.container, __source: { // 427 = ../images/bj.png
                            fileName: _jsxFileName,
                            lineNumber: 144
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.ScrollView,
                        { style: styles.ScrollView, scrollEnabled: false, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 145
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Image, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 146
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(428                 ), __source: { // 428 = ../images/logo.png
                                    fileName: _jsxFileName,
                                    lineNumber: 147
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.TextInput, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 149
                                }
                            },
                            this.state.textinput == "1" ? _react2.default.createElement(_reactNative.TextInput, {
                                returnKeyType: 'search',
                                numberoflines: 1,
                                keyboardType: 'numeric',
                                placeholder: '\u8BF7\u8F93\u5165\u5546\u6237\u53F7',
                                textalign: 'center',
                                underlineColorAndroid: 'transparent',
                                placeholderTextColor: '#bcbdc1',
                                style: styles.admin,
                                onChangeText: function onChangeText(value) {
                                    _this3.setState({
                                        ClientCode: value
                                    });
                                },
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 152
                                }
                            }) : _react2.default.createElement(_reactNative.TextInput, {
                                autoFocus: true,
                                returnKeyType: 'search',
                                numberoflines: 1,
                                keyboardType: 'numeric',
                                placeholder: '\u8BF7\u8F93\u5165\u5546\u6237\u53F7',
                                textalign: 'center',
                                underlineColorAndroid: 'transparent',
                                placeholderTextColor: '#bcbdc1',
                                style: styles.admin,
                                onChangeText: function onChangeText(value) {
                                    _this3.setState({
                                        ClientCode: value
                                    });
                                },
                                onSubmitEditing: this.onSubmitEditing.bind(this),
                                onEndEditing: this.onSubmitEditing.bind(this),
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 168
                                }
                            }),
                            _react2.default.createElement(_reactNative.Image, { source: require(430                 ), style: styles.TextImage1, __source: { // 430 = ../images/1_11.png
                                    fileName: _jsxFileName,
                                    lineNumber: 187
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.TextInput, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 189
                                }
                            },
                            this.state.textinput == "1" ? _react2.default.createElement(_reactNative.TextInput, {
                                autoFocus: true,
                                returnKeyType: 'search',
                                secureTextEntry: true,
                                numberoflines: 1,
                                keyboardType: 'numeric',
                                placeholder: '\u8BF7\u8F93\u5165\u5546\u6237\u5BC6\u7801',
                                textalign: 'center',
                                underlineColorAndroid: 'transparent',
                                placeholderTextColor: '#bcbdc1',
                                style: styles.pass,
                                onChangeText: function onChangeText(value) {
                                    _this3.setState({
                                        Pwd: value
                                    });
                                },
                                onSubmitEditing: this.onSubmitEditing1.bind(this),
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 192
                                }
                            }) : _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.onSubmitEditing.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 211
                                    }
                                },
                                _react2.default.createElement(_reactNative.TextInput, {
                                    editable: false,
                                    secureTextEntry: true,
                                    placeholder: '\u8BF7\u8F93\u5165\u5546\u6237\u5BC6\u7801',
                                    textalign: 'center',
                                    underlineColorAndroid: 'transparent',
                                    placeholderTextColor: '#bcbdc1',
                                    style: styles.pass,
                                    value: this.state.Pwd,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 212
                                    }
                                })
                            ),
                            _react2.default.createElement(_reactNative.Image, { source: require(433                 ), style: styles.TextImage1, __source: { // 433 = ../images/1_04.png
                                    fileName: _jsxFileName,
                                    lineNumber: 224
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.pressPush.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 226
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.login, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 227
                                    }
                                },
                                '\u786E\u5B9A'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Modal,
                            {
                                animationType: 'fade',
                                transparent: true,
                                visible: this.state.show,
                                onShow: function onShow() {},
                                onRequestClose: function onRequestClose() {}, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 229
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.LoadCenter, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 235
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.loading, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 236
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#414240', size: 'large', style: styles.activity, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 237
                                        }
                                    }),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.TextLoading, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 238
                                            }
                                        },
                                        '\u767B\u5F55\u4E2D'
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Modal,
                            {
                                animationType: 'fade',
                                transparent: true,
                                visible: this.state.ErrorShow,
                                onShow: function onShow() {},
                                onRequestClose: function onRequestClose() {}, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 242
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Error, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 248
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ErrorCont, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 249
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.LoginError, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 250
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.ErrorText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 251
                                                }
                                            },
                                            '\u767B\u5F55\u5931\u8D25\uFF1A\u5546\u6237\u53F7\u6216\u5BC6\u7801\u9519\u8BEF'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { style: styles.LoginOk, onPress: this.LoginError.bind(this), __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 255
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.ErrorText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 256
                                                }
                                            },
                                            '\u597D\u7684'
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);
    return login;
}(_react.Component);

exports.default = login;

var styles = _reactNative.StyleSheet.create({
    Container: {
        flex: 1,
        backgroundColor: "#ff5263"
    },
    container: {
        flex: 1,
        paddingTop: 20,
        paddingLeft: 30,
        paddingRight: 30,
        width: null,
        height: null
    },
    TextInput: {
        marginTop: 15
    },
    admin: {
        borderRadius: 5,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingTop: 10,
        paddingBottom: 10,
        paddingLeft: 50,
        fontSize: 16
    },
    pass: {
        borderRadius: 5,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingTop: 10,
        paddingBottom: 10,
        paddingLeft: 50,
        fontSize: 16
    },
    Image: {
        marginTop: 15,
        marginLeft: 25,
        justifyContent: 'center',
        alignItems: 'center',
        marginBottom: 10
    },
    login: {
        marginTop: 40,
        paddingTop: 12,
        paddingBottom: 12,
        backgroundColor: "#ff8081",
        color: "#ffffff",
        borderRadius: 3,
        textAlign: "center",
        fontSize: 18
    },
    TextImage1: {
        position: "absolute",
        left: 14,
        top: 15
    },
    LoadCenter: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    loading: {
        paddingLeft: 15,
        paddingRight: 15,
        paddingTop: 15,
        paddingBottom: 15,
        backgroundColor: "#000000",
        opacity: 0.8,
        borderRadius: 5
    },
    TextLoading: {
        fontSize: 17,
        color: "#ffffff"
    },
    activity: {
        marginBottom: 5
    },
    Error: {
        flex: 1,
        backgroundColor: "#000000",
        opacity: 0.9,
        justifyContent: 'center',
        alignItems: 'center'
    },
    ErrorCont: {
        width: 320,
        backgroundColor: "#ffffff",
        borderRadius: 3,
        paddingTop: 15,
        paddingBottom: 15,
        paddingLeft: 8,
        paddingRight: 8
    },
    LoginError: {
        marginTop: 18,
        paddingBottom: 15,
        borderBottomColor: "#cccccc",
        borderBottomWidth: 1
    },
    ErrorText: {
        color: "#323232",
        fontSize: 16,
        textAlign: "center"
    },
    LoginOk: {
        marginTop: 22
    }
});
}, 305, null, "myproject/app/login.js");
__d(/* react-native-linear-gradient/index.android.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'D:\\myproject\\node_modules\\react-native-linear-gradient\\index.android.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(19          ); // 19 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(26            ); // 26 = react-native

var deprecatedPropType = require(133                                                     ); // 133 = react-native/Libraries/Utilities/deprecatedPropType.js

var convertPoint = function convertPoint(name, point) {
  if (Array.isArray(point)) {
    console.warn('LinearGradient \'' + name + '\' property shoule be an object with fields \'x\' and \'y\', ' + 'Array type is deprecated.');
  }
  if (point !== null && typeof point === 'object') {
    return [point.x, point.y];
  }
  return point;
};

var LinearGradient = function (_Component) {
  babelHelpers.inherits(LinearGradient, _Component);

  function LinearGradient() {
    babelHelpers.classCallCheck(this, LinearGradient);
    return babelHelpers.possibleConstructorReturn(this, (LinearGradient.__proto__ || Object.getPrototypeOf(LinearGradient)).apply(this, arguments));
  }

  babelHelpers.createClass(LinearGradient, [{
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      this.gradientRef.setNativeProps(props);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          colors = _props.colors,
          end = _props.end,
          locations = _props.locations,
          start = _props.start,
          style = _props.style,
          otherProps = babelHelpers.objectWithoutProperties(_props, ['children', 'colors', 'end', 'locations', 'start', 'style']);


      if (colors && locations && colors.length !== locations.length) {
        console.warn('LinearGradient colors and locations props should be arrays of the same length');
      }

      var flatStyle = _reactNative.StyleSheet.flatten(style) || {};
      var borderRadius = flatStyle.borderRadius || 0;

      var borderRadiiPerCorner = [flatStyle.borderTopLeftRadius || borderRadius, flatStyle.borderTopLeftRadius || borderRadius, flatStyle.borderTopRightRadius || borderRadius, flatStyle.borderTopRightRadius || borderRadius, flatStyle.borderBottomRightRadius || borderRadius, flatStyle.borderBottomRightRadius || borderRadius, flatStyle.borderBottomLeftRadius || borderRadius, flatStyle.borderBottomLeftRadius || borderRadius];

      return _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({ ref: function ref(component) {
            _this2.gradientRef = component;
          } }, otherProps, { style: style, __source: {
            fileName: _jsxFileName,
            lineNumber: 88
          }
        }),
        _react2.default.createElement(NativeLinearGradient, {
          style: { position: 'absolute', top: 0, left: 0, bottom: 0, right: 0 },
          colors: colors.map(_reactNative.processColor),
          start: convertPoint('start', start),
          end: convertPoint('end', end),
          locations: locations ? locations.slice(0, colors.length) : null,
          borderRadii: borderRadiiPerCorner,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 89
          }
        }),
        children
      );
    }
  }]);
  return LinearGradient;
}(_react.Component);

LinearGradient.propTypes = babelHelpers.extends({
  start: _propTypes2.default.oneOfType([_reactNative.PointPropType, deprecatedPropType(_propTypes2.default.arrayOf(_propTypes2.default.number), 'Use point object with {x, y} instead.')]),
  end: _propTypes2.default.oneOfType([_reactNative.PointPropType, deprecatedPropType(_propTypes2.default.arrayOf(_propTypes2.default.number), 'Use point object with {x, y} instead.')]),
  colors: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,
  locations: _propTypes2.default.arrayOf(_propTypes2.default.number)
}, _reactNative.ViewPropTypes);
exports.default = LinearGradient;


var NativeLinearGradient = (0, _reactNative.requireNativeComponent)('BVLinearGradient', null);
}, 306, null, "react-native-linear-gradient/index.android.js");
__d(/* myproject/app/admin.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\admin.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _PickedDate_list = require(426                ); // 426 = ./PickedDate_list

var _PickedDate_list2 = babelHelpers.interopRequireDefault(_PickedDate_list);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _UpData = require(400              ); // 400 = ../utils/UpData

var _UpData2 = babelHelpers.interopRequireDefault(_UpData);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _DeCodePrePrint = require(387                      ); // 387 = ../utils/DeCodePrePrint

var _DeCodePrePrint2 = babelHelpers.interopRequireDefault(_DeCodePrePrint);

var deCodePrePrint = new _DeCodePrePrint2.default();

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var dbAdapter = new _DBAdapter2.default();
var updata = new _UpData2.default();
var db = void 0;

var admin = function (_Component) {
    babelHelpers.inherits(admin, _Component);

    function admin(props) {
        babelHelpers.classCallCheck(this, admin);

        var _this = babelHelpers.possibleConstructorReturn(this, (admin.__proto__ || Object.getPrototypeOf(admin)).call(this, props));

        _this.state = {
            language: null,
            show: false,
            ErrorShow: false,
            animating: false,
            NewData: false,
            DataComplete: false,
            Edition: false,
            NewEdition: false,
            reqCode: "",
            reqDetailCode: "",
            ClientCode: "",
            sDateTime: "",
            Pwd: "",
            Sign: "",
            Usercode: "",
            UserPwd: "",
            Product: "",
            detailInfo1: "",
            linkurl: "",
            sCode1: "",
            textinput: ""
        };
        _this.pickerData = [];
        return _this;
    }

    babelHelpers.createClass(admin, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            if (!db) {
                db = dbAdapter.open();
            }

            dbAdapter.createTable();
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this.setState({
                focus: true
            });

            _Storage2.default.get('LinkUrl').then(function (tags) {
                console.log('sadf=', tags, '=b');
                _this2.setState({
                    linkurl: tags
                });
            });
            NativeModules.AndroidMYRequest.doPay("", "", "", "", "", "", "", function () {});
            _Storage2.default.get('Url').then(function (tags) {
                _FetchUtils2.default.post(tags + "/Default2.aspx?jsonStr={'TblName':'AndroidYWVersion'}").then(function (data) {
                    NativeModules.AndroidDeviceInfo.getVerCode(function (msg) {
                        if (data > msg) {
                            _this2.Edition();
                        }
                    });
                }, function (err) {
                    alert("网络请求失败");
                });
            });

            _Storage2.default.get('ClientCode').then(function (tags) {
                var params = {
                    'reqCode': "App_PosReq",
                    'reqDetailCode': "App_Client_UseQry",
                    'ClientCode': tags,
                    'sDateTime': Date.parse(new Date()),
                    'Sign': _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_UseQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '' };
                console.log("a=", params);
                _FetchUtils2.default.post(_this2.state.linkurl.trim(), JSON.stringify(params)).then(function (data) {
                    if (data.retcode == 1) {
                        var detailInfo1 = data.DetailInfo1;

                        dbAdapter.insertTShopItemData(detailInfo1);

                        var detailInfo2 = data.DetailInfo2;
                        dbAdapter.insertTUserSetData(detailInfo2);

                        var detailInfo3 = data.DetailInfo3;

                        dbAdapter.insertTUserRrightData(detailInfo3);

                        var detailInfo4 = data.DetailInfo4;
                        console.log(detailInfo4);
                        dbAdapter.insertTUsershopData(detailInfo4);
                    } else {
                        alert(JSON.stringify(data));
                    }
                }, function (err) {
                    alert("网络请求失败");
                });
            });
        }
    }, {
        key: '_setModalVisible',
        value: function _setModalVisible() {
            var isShow = this.state.show;
            this.setState({
                show: !isShow
            });
        }
    }, {
        key: '_ErrorModalVisible',
        value: function _ErrorModalVisible() {
            var isshow = this.state.ErrorShow;
            this.setState({
                ErrorShow: !isshow
            });
        }
    }, {
        key: 'NewData',
        value: function NewData() {
            var isshow = this.state.NewData;
            this.setState({
                NewData: !isshow
            });
        }
    }, {
        key: 'DataComplete',
        value: function DataComplete() {
            var isshow = this.state.DataComplete;
            this.setState({
                DataComplete: !isshow
            });
        }
    }, {
        key: 'Datacomplete',
        value: function Datacomplete() {
            this.DataComplete();
        }
    }, {
        key: 'Edition',
        value: function Edition() {
            var isShow = this.state.Edition;
            this.setState({
                Edition: !isShow
            });
        }
    }, {
        key: 'Datermine',
        value: function Datermine() {
            var _this3 = this;

            _Storage2.default.get('Url').then(function (tags) {
                _this3.Edition();
                _this3.NewEdition();
                NativeModules.UpApk.isUpdata(tags, function (finish) {
                    if (finish) {
                        _this3.NewEdition();
                        NativeModules.UpApk.installAPK();
                    }
                });
            });
        }
    }, {
        key: 'NoDatermine',
        value: function NoDatermine() {
            this.Edition();
        }
    }, {
        key: 'NewEdition',
        value: function NewEdition() {
            var isshow = this.state.NewEdition;
            this.setState({
                NewEdition: !isshow
            });
        }
    }, {
        key: 'pressPush',
        value: function pressPush() {
            var _this4 = this;

            if (this.state.Usercode == "") {
                _reactNative.ToastAndroid.show('请输入用户编码', _reactNative.ToastAndroid.SHORT);
                return;
            }
            if (this.state.UserPwd == "") {
                _reactNative.ToastAndroid.show('请输入密码', _reactNative.ToastAndroid.SHORT);
                return;
            }
            if (this.state.sCode1 == "") {
                _reactNative.ToastAndroid.show('请选择机构222信息', _reactNative.ToastAndroid.SHORT);
                return;
            } else {
                _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 218
                    }
                });
            }
            NativeModules.AndroidDeviceInfo.getIMEI(function (IMEI) {
                _Storage2.default.get('IMEI').then(function (tags) {
                    if (IMEI == tags) {
                        var code = "" + _this4.state.sCode1.replace(/(^\s+)|(\s+$)/g, "");
                        var Usercode = _this4.state.Usercode;
                        var UserPwd = _this4.state.UserPwd;
                        str1 = code.split('_');
                        str2 = str1[1];
                        _this4._setModalVisible();
                        dbAdapter.isLogin(Usercode, _this4.state.UserPwd, str2).then(function (isLogin) {
                            if (isLogin == true) {
                                var strin = _this4.state.sCode1;
                                strjj = "" + strin;
                                code = strjj.substring(strjj.indexOf('_') + 1, strjj.length).replace(/(^\s+)|(\s+$)/g, "");
                                _Storage2.default.save('code', code);
                                _Storage2.default.save('username', Usercode);
                                _Storage2.default.save('Usercode', Usercode);
                                _Storage2.default.save('userpwd', UserPwd);
                                _Storage2.default.save('str2', str2);
                                _Storage2.default.save('FirstTime1', '2');
                                var nextRoute = {
                                    name: "主页",
                                    component: _Index2.default
                                };
                                _this4.props.navigator.push(nextRoute);
                                _this4._setModalVisible();
                                _reactNative.ToastAndroid.show('登录成功', _reactNative.ToastAndroid.SHORT);
                            } else {
                                _this4._setModalVisible();
                                _this4._ErrorModalVisible();
                            }
                        }, function (err) {
                            _this4._setModalVisible();
                            _this4._ErrorModalVisible();
                        });
                    } else {
                        alert("当前商户名不同，该机器无法运行");
                    }
                });
            });
        }
    }, {
        key: 'PickedDate',
        value: function PickedDate() {
            var _this5 = this;

            _Storage2.default.save('Usercode', this.state.Usercode);
            if (this.state.Usercode == "") {
                alert("请输入用户编码");
            } else {
                var nextRoute = {
                    name: "PickedDate_list",
                    component: _PickedDate_list2.default,
                    params: {
                        reloadView: function reloadView(sCode) {
                            return _this5._reloadView(sCode);
                        }
                    }
                };
                this.props.navigator.push(nextRoute);
            }
        }
    }, {
        key: 'inputOnBlur',
        value: function inputOnBlur() {
            this.setState({ focus: false });
            if (this.state.Usercode) {
                this.setState({
                    sCode1: ""
                });
            }
        }
    }, {
        key: '_reloadView',
        value: function _reloadView(sCode) {
            sCode = String(sCode);
            this.setState({
                sCode1: sCode
            });
        }
    }, {
        key: 'LoginError',
        value: function LoginError() {
            this._ErrorModalVisible();
        }
    }, {
        key: 'UpData',
        value: function UpData() {
            var _this6 = this;

            var code = "" + this.state.sCode1;
            _Storage2.default.save('code', code);
            if (this.state.sCode1 == "") {
                alert("请选择机构信息");
            } else {
                this.NewData();
                _Storage2.default.get('code').then(function (tags) {
                    updata.downLoadAllData(_this6.state.linkurl, dbAdapter, tags);
                    _this6.NewData();
                    _this6.DataComplete();
                });
            }
        }
    }, {
        key: 'onSubmitEditing',
        value: function onSubmitEditing() {
            this.setState({
                textinput: 1
            });
        }
    }, {
        key: 'onSubmitEditing1',
        value: function onSubmitEditing1() {
            this.setState({
                textinput: ""
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this7 = this;

            return _react2.default.createElement(
                _reactNative.ScrollView,
                { style: styles.Container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 328
                    }
                },
                _react2.default.createElement(
                    _reactNative.Image,
                    { source: require(427               ), style: styles.container, __source: { // 427 = ../images/bj.png
                            fileName: _jsxFileName,
                            lineNumber: 329
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.ScrollView,
                        { style: styles.ScrollView, scrollEnabled: false, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 330
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Image, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 331
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(428                 ), __source: { // 428 = ../images/logo.png
                                    fileName: _jsxFileName,
                                    lineNumber: 332
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.TextInput, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 334
                                }
                            },
                            this.state.textinput == "1" ? _react2.default.createElement(_reactNative.TextInput, {
                                returnKeyType: 'search',
                                numberoflines: 1,
                                keyboardType: 'numeric',
                                placeholder: '\u8BF7\u8F93\u5165\u7528\u6237\u7F16\u7801',
                                textalign: 'center',
                                underlineColorAndroid: 'transparent',
                                placeholderTextColor: '#bcbdc1',
                                style: styles.admin,
                                onBlur: this.inputOnBlur.bind(this),
                                onChangeText: function onChangeText(value) {
                                    _this7.setState({
                                        Usercode: value
                                    });
                                },
                                onSubmitEditing: this.onSubmitEditing.bind(this),
                                onEndEditing: this.onSubmitEditing.bind(this),
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 337
                                }
                            }) : _react2.default.createElement(_reactNative.TextInput, {
                                autoFocus: true,
                                returnKeyType: 'search',
                                numberoflines: 1,
                                keyboardType: 'numeric',
                                placeholder: '\u8BF7\u8F93\u5165\u7528\u6237\u7F16\u7801',
                                textalign: 'center',
                                underlineColorAndroid: 'transparent',
                                placeholderTextColor: '#bcbdc1',
                                style: styles.admin,
                                onBlur: this.inputOnBlur.bind(this),
                                onChangeText: function onChangeText(value) {
                                    _this7.setState({
                                        Usercode: value
                                    });
                                },
                                onSubmitEditing: this.onSubmitEditing.bind(this),
                                onEndEditing: this.onSubmitEditing.bind(this),
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 356
                                }
                            }),
                            _react2.default.createElement(_reactNative.Image, { source: require(429                 ), style: styles.TextImage1, __source: { // 429 = ../images/1_07.png
                                    fileName: _jsxFileName,
                                    lineNumber: 376
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [styles.TextInput, { marginTop: 15 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 378
                                }
                            },
                            this.state.textinput == "1" ? _react2.default.createElement(_reactNative.TextInput, {
                                autoFocus: true,
                                returnKeyType: 'search',
                                secureTextEntry: true,
                                numberoflines: 1,
                                keyboardType: 'numeric',
                                placeholder: '\u8BF7\u8F93\u5165\u5BC6\u7801',
                                textalign: 'center',
                                underlineColorAndroid: 'transparent',
                                placeholderTextColor: '#bcbdc1',
                                style: styles.pass,
                                onChangeText: function onChangeText(value) {
                                    _this7.setState({
                                        UserPwd: value
                                    });
                                },
                                onSubmitEditing: this.onSubmitEditing1.bind(this),
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 381
                                }
                            }) : _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.onSubmitEditing.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 399
                                    }
                                },
                                _react2.default.createElement(_reactNative.TextInput, {
                                    editable: false,
                                    secureTextEntry: true,
                                    placeholder: '\u8BF7\u8F93\u5165\u5BC6\u7801',
                                    textalign: 'center',
                                    underlineColorAndroid: 'transparent',
                                    placeholderTextColor: '#bcbdc1',
                                    style: styles.pass,
                                    value: this.state.UserPwd,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 400
                                    }
                                })
                            ),
                            _react2.default.createElement(_reactNative.Image, { source: require(430                 ), style: styles.TextImage1, __source: { // 430 = ../images/1_11.png
                                    fileName: _jsxFileName,
                                    lineNumber: 412
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [styles.TextInput, { marginTop: 15 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 414
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.PickedDate.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 415
                                    }
                                },
                                _react2.default.createElement(_reactNative.TextInput, {
                                    editable: false,
                                    defaultValue: this.state.sCode1,
                                    placeholder: '\u8BF7\u9009\u62E9\u673A\u6784\u4FE1\u606F',
                                    textalign: 'center',
                                    underlineColorAndroid: 'transparent',
                                    placeholderTextColor: '#bcbdc1',
                                    style: styles.pass,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 416
                                    }
                                }),
                                _react2.default.createElement(_reactNative.Image, { source: require(431                 ), style: styles.TextImage1, __source: { // 431 = ../images/1_14.png
                                        fileName: _jsxFileName,
                                        lineNumber: 425
                                    }
                                })
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.pressPush.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 428
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.login, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 429
                                    }
                                },
                                '\u767B\u5F55'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Modal,
                            {
                                animationType: 'fade',
                                transparent: true,
                                visible: this.state.show,
                                onShow: function onShow() {},
                                onRequestClose: function onRequestClose() {}, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 431
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.LoadCenter, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 437
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.loading, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 438
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 439
                                        }
                                    }),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.TextLoading, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 440
                                            }
                                        },
                                        '\u767B\u5F55\u4E2D'
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Modal,
                            {
                                animationType: 'fade',
                                transparent: true,
                                visible: this.state.NewData,
                                onShow: function onShow() {},
                                onRequestClose: function onRequestClose() {}, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 444
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.LoadCenter, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 450
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.loading, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 451
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 452
                                        }
                                    }),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.TextLoading, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 453
                                            }
                                        },
                                        '\u66F4\u65B0\u6570\u636E\u4E2D...'
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Modal,
                            {
                                animationType: 'fade',
                                transparent: true,
                                visible: this.state.DataComplete,
                                onShow: function onShow() {},
                                onRequestClose: function onRequestClose() {}, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 457
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.DataComplete, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 463
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ErrorCont, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 464
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.LoginError, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 465
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.ErrorText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 466
                                                }
                                            },
                                            '\u6570\u636E\u66F4\u65B0\u5B8C\u6BD5'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { style: styles.LoginOk1, onPress: this.Datacomplete.bind(this), __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 470
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.ErrorText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 471
                                                }
                                            },
                                            '\u786E\u5B9A'
                                        )
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Modal,
                            {
                                animationType: 'fade',
                                transparent: true,
                                visible: this.state.ErrorShow,
                                onShow: function onShow() {},
                                onRequestClose: function onRequestClose() {}, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 478
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Error, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 484
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ErrorCont, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 485
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.LoginError, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 486
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.ErrorText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 487
                                                }
                                            },
                                            '\u767B\u5F55\u5931\u8D25\uFF1A\u8D26\u53F7\u6216\u5BC6\u7801\u9519\u8BEF'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { style: styles.LoginOk1, onPress: this.LoginError.bind(this), __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 491
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.ErrorText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 492
                                                }
                                            },
                                            '\u597D\u7684'
                                        )
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Modal,
                            {
                                animationType: 'fade',
                                transparent: true,
                                visible: this.state.Edition,
                                onShow: function onShow() {},
                                onRequestClose: function onRequestClose() {}, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 499
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Error, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 505
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ErrorCont, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 506
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.LoginError, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 507
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.ErrorText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 508
                                                }
                                            },
                                            '\u5F53\u524D\u7248\u672C\u4E0D\u662F\u6700\u65B0\u7248\u672C\uFF0C\u662F\u5426\u66F4\u65B0\uFF1F'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.Edition, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 512
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            { style: styles.LoginOk, onPress: this.Datermine.bind(this), __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 513
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.ErrorText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 514
                                                    }
                                                },
                                                '\u786E\u5B9A'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            { style: styles.LoginOk, onPress: this.NoDatermine.bind(this), __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 518
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.ErrorText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 519
                                                    }
                                                },
                                                '\u53D6\u6D88'
                                            )
                                        )
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Modal,
                            {
                                animationType: 'fade',
                                transparent: true,
                                visible: this.state.NewEdition,
                                onShow: function onShow() {},
                                onRequestClose: function onRequestClose() {}, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 527
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.LoadCenter, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 533
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.loading, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 534
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 535
                                        }
                                    }),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.TextLoading, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 536
                                            }
                                        },
                                        '\u6B63\u5728\u4E0B\u8F7D\u6700\u65B0\u7248\u672C...'
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.UpData.bind(this), style: styles.refresh, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 540
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(432                 ), __source: { // 432 = ../images/1_21.png
                                    fileName: _jsxFileName,
                                    lineNumber: 541
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.DataText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 542
                                    }
                                },
                                '\u6570\u636E\u66F4\u65B0'
                            )
                        )
                    )
                )
            );
        }
    }]);
    return admin;
}(_react.Component);

exports.default = admin;


var styles = _reactNative.StyleSheet.create({
    Container: {
        flex: 1,
        backgroundColor: "#ff5263"
    },
    container: {
        flex: 1,
        paddingTop: 20,
        paddingLeft: 30,
        paddingRight: 30,
        paddingBottom: 10,
        width: null,
        height: null
    },
    TextInput: {
        marginTop: 15
    },
    admin: {
        borderRadius: 5,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingTop: 10,
        paddingBottom: 10,
        paddingLeft: 50,
        fontSize: 16
    },
    pass: {
        borderRadius: 5,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingTop: 10,
        paddingBottom: 10,
        paddingLeft: 50,
        fontSize: 16
    },
    Image: {
        marginTop: 15,
        marginLeft: 25,
        justifyContent: 'center',
        alignItems: 'center',
        marginBottom: 10
    },
    login: {
        marginTop: 40,
        paddingTop: 12,
        paddingBottom: 12,
        backgroundColor: "#ff8081",
        color: "#ffffff",
        borderRadius: 3,
        textAlign: "center",
        fontSize: 18
    },
    refresh: {
        justifyContent: 'center',
        alignItems: 'center',
        height: 30,
        marginTop: 25,
        flexDirection: 'row'
    },
    DataText: {
        marginLeft: 10,
        color: "#ffffff",
        fontSize: 16
    },
    TextImage: {
        position: "absolute",
        left: 12,
        top: 8
    },
    TextImage1: {
        position: "absolute",
        left: 14,
        top: 15
    },
    modalStyle: {
        backgroundColor: "#ffffff",
        width: 200,
        height: 100
    },
    centering: {
        marginTop: 20
    },
    LoadCenter: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    loading: {
        paddingLeft: 15,
        paddingRight: 15,
        paddingTop: 15,
        paddingBottom: 15,
        backgroundColor: "#000000",
        opacity: 0.8,
        borderRadius: 5
    },
    TextLoading: {
        fontSize: 17,
        color: "#ffffff"
    },
    activity: {
        marginBottom: 5
    },
    listcont: {
        flex: 7,
        paddingLeft: 5,
        paddingRight: 5,
        borderBottomWidth: 1,
        borderBottomColor: "#474955"
    },
    listContText: {
        color: "#bcbdc1",
        fontSize: 14
    },
    Error: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: "#000000",
        opacity: 0.9
    },
    DataComplete: {
        flex: 1,
        backgroundColor: "#000000",
        opacity: 0.9,
        justifyContent: 'center',
        alignItems: 'center'
    },
    ErrorCont: {
        width: 320,
        backgroundColor: "#ffffff",
        borderRadius: 3,
        paddingTop: 15,
        paddingBottom: 15,
        paddingLeft: 8,
        paddingRight: 8
    },
    LoginError: {
        marginTop: 18,
        paddingBottom: 15,
        borderBottomColor: "#cccccc",
        borderBottomWidth: 1
    },
    ErrorText: {
        color: "#323232",
        fontSize: 16,
        textAlign: "center"
    },
    Edition: {
        flexDirection: "row"
    },
    LoginOk: {
        flex: 1,
        paddingTop: 22
    },
    LoginOk1: {
        paddingTop: 22
    }
});
}, 307, null, "myproject/app/admin.js");
__d(/* myproject/app/Index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\Index.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _HistoricalDocument = require(309                   ); // 309 = ./HistoricalDocument

var _HistoricalDocument2 = babelHelpers.interopRequireDefault(_HistoricalDocument);

var _ShoppingCart = require(349             ); // 349 = ./ShoppingCart

var _ShoppingCart2 = babelHelpers.interopRequireDefault(_ShoppingCart);

var _admin = require(307      ); // 307 = ./admin

var _admin2 = babelHelpers.interopRequireDefault(_admin);

var _OrderDetails2 = require(348             ); // 348 = ./OrderDetails

var _OrderDetails3 = babelHelpers.interopRequireDefault(_OrderDetails2);

var _SunYi2 = require(357      ); // 357 = ./SunYi

var _SunYi3 = babelHelpers.interopRequireDefault(_SunYi2);

var _Search = require(350       ); // 350 = ./Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _Query = require(360      ); // 360 = ./Query

var _Query2 = babelHelpers.interopRequireDefault(_Query);

var _Distrition = require(363           ); // 363 = ./Distrition

var _Distrition2 = babelHelpers.interopRequireDefault(_Distrition);

var _ProductCG = require(364          ); // 364 = ./ProductCG

var _ProductCG2 = babelHelpers.interopRequireDefault(_ProductCG);

var _ProductYS = require(368          ); // 368 = ./ProductYS

var _ProductYS2 = babelHelpers.interopRequireDefault(_ProductYS);

var _ProductXP = require(369          ); // 369 = ./ProductXP

var _ProductXP2 = babelHelpers.interopRequireDefault(_ProductXP);

var _ProductSH = require(371          ); // 371 = ./ProductSH

var _ProductSH2 = babelHelpers.interopRequireDefault(_ProductSH);

var _Sell_Data = require(395                ); // 395 = ../Sell/Sell_Data

var _Sell_Data2 = babelHelpers.interopRequireDefault(_Sell_Data);

var _Sell2 = require(310           ); // 310 = ../Sell/Sell

var _Sell3 = babelHelpers.interopRequireDefault(_Sell2);

var _StockEnquiries2 = require(397                               ); // 397 = ../StockEnquiries/StockEnquiries

var _StockEnquiries3 = babelHelpers.interopRequireDefault(_StockEnquiries2);

var _Shopsearch = require(398                           ); // 398 = ../StockEnquiries/Shopsearch

var _Shopsearch2 = babelHelpers.interopRequireDefault(_Shopsearch);

var _SearchData = require(399                           ); // 399 = ../StockEnquiries/SearchData

var _SearchData2 = babelHelpers.interopRequireDefault(_SearchData);

var _PSDan2 = require(372             ); // 372 = ../PSDan/PSDan

var _PSDan3 = babelHelpers.interopRequireDefault(_PSDan2);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _UpData = require(400              ); // 400 = ../utils/UpData

var _UpData2 = babelHelpers.interopRequireDefault(_UpData);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage2 = require(325               ); // 325 = ../utils/Storage

var _Storage3 = babelHelpers.interopRequireDefault(_Storage2);

var _DeCodePrePrint = require(351                        ); // 351 = ../utils/DeCodePrePrint18

var _DeCodePrePrint2 = babelHelpers.interopRequireDefault(_DeCodePrePrint);

var _DeCodePrePrint3 = require(387                      ); // 387 = ../utils/DeCodePrePrint

var _DeCodePrePrint4 = babelHelpers.interopRequireDefault(_DeCodePrePrint3);

var _reactNativeSideMenu = require(376                     ); // 376 = react-native-side-menu

var _reactNativeSideMenu2 = babelHelpers.interopRequireDefault(_reactNativeSideMenu);

var _BigDecimalUtils = require(314                       ); // 314 = ../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var RNScannerAndroid = NativeModules.RNScannerAndroid;

var dbAdapter = new _DBAdapter2.default();
var updata = new _UpData2.default();
var deCode13 = new _DeCodePrePrint4.default();
var decodepreprint = new _DeCodePrePrint2.default();

var db = void 0;
var page = 1;
var total = 0;
var totalPage = 0;
var lastDepCode = "";
var listener = void 0;

var Index = function (_Component) {
    babelHelpers.inherits(Index, _Component);

    function Index(props) {
        babelHelpers.classCallCheck(this, Index);

        var _this = babelHelpers.possibleConstructorReturn(this, (Index.__proto__ || Object.getPrototypeOf(Index)).call(this, props));

        _this._separator = function () {
            return _react2.default.createElement(_reactNative.View, { style: { height: 1, backgroundColor: '#f5f5f5' }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 835
                }
            });
        };

        _this.state = {
            currentindex: 0,
            isPress: true,
            pickedDate: "",
            pid: "",
            DepCode: "",
            head: "",
            shopcar: "",
            Counmnmber: "",
            Page: "",
            data: "",
            ShopNumber: "",
            ShopNumber1: "",
            ShopCar1: "",
            usercode: "",
            License: "",
            username: "",
            active: "",
            ClientCode: "",
            Usercode: "",
            SuppCode: "",
            ShopCode: "",
            ChildShopCode: "",
            OrgFormno: "",
            FormType: "",
            LinkUrl: "",
            Disting: "",
            ShopNumber: "",
            Modify: "",
            Zero: "",
            OrderDetails: "",
            pressStatus: 0,
            PressStatus: 0,
            nomore: true,
            isloading: true,
            show: false,
            Show: false,
            Promp: false,
            Promp1: false,
            Permissions: false,
            Permissions1: false,
            Permissions2: false,
            statement: false,
            receiving: false,
            emptydata: false,
            NewData: false,
            DataComplete: false,
            depcode: _this.props.DepCode ? _this.props.DepCode : "",
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return true;
                } })
        };
        _this.dataRows = [];
        _this.productData = [];
        var timer1 = null;
        if (!db) {
            db = dbAdapter.open();
        }
        return _this;
    }

    babelHelpers.createClass(Index, [{
        key: 'History',
        value: function History() {
            if (this.state.head == "移动销售" || this.state.head == "标签采集") {
                _reactNative.ToastAndroid.show('暂不支持该业务', _reactNative.ToastAndroid.SHORT);
            } else {
                var nextRoute = {
                    name: "主页",
                    component: _HistoricalDocument2.default
                };
                this.props.navigator.push(nextRoute);
            }
        }
    }, {
        key: 'ShopList',
        value: function ShopList() {
            var _this2 = this;

            _Storage3.default.get('Name').then(function (tags) {
                if (_this2.state.head == "移动销售") {
                    var nextRoute = {
                        name: "Sell",
                        component: _Sell3.default
                    };
                    _reactNative.DeviceEventEmitter.removeAllListeners();
                    _this2.props.navigator.push(nextRoute);
                } else {
                    var nextRoute = {
                        name: "主页",
                        component: _ShoppingCart2.default
                    };
                    _this2.props.navigator.push(nextRoute);
                }
            });
        }
    }, {
        key: '_rightButtonClick',
        value: function _rightButtonClick() {
            this._setModalVisible();
        }
    }, {
        key: 'Code',
        value: function Code() {
            if (this.state.head == null) {
                this._Emptydata();
            } else {
                NativeModules.RNScannerAndroid.openScanner();
            }
        }
    }, {
        key: 'Device',
        value: function Device() {
            var _this3 = this;

            _reactNative.DeviceEventEmitter.addListener("code", function (reminder) {
                var title = _this3.state.head;
                console.log("title=", title);
                decodepreprint.init(reminder, dbAdapter);
                if (title == null) {
                    _this3._Emptydata();
                } else {
                    if (reminder.length == 18 && decodepreprint.deCodePreFlag()) {
                        new Promise.all([decodepreprint.deCodeProdCode(), decodepreprint.deCodeTotal(), decodepreprint.deCodeWeight()]).then(function (results) {
                            if (results.length == 3) {
                                var prodCode = results[0];
                                var _total = results[1];
                                var weight = results[2];
                                if (_this3.state.head == "移动销售") {
                                    dbAdapter.selectProdCode(prodCode, 1).then(function (product) {
                                        if (product.length != 0) {
                                            for (var i = 0; i < product.length; i++) {
                                                var row = product.item(i);
                                                var ShopPrice = row.ShopPrice;
                                                _this3.props.navigator.push({
                                                    component: _OrderDetails3.default,
                                                    params: {
                                                        ProdName: row.ProdName,
                                                        ShopPrice: row.StdPrice,
                                                        Pid: row.Pid,
                                                        countm: weight,
                                                        promemo: row.ShopRemark,
                                                        prototal: _total,
                                                        ProdCode: row.ProdCode,
                                                        DepCode: row.DepCode1,
                                                        SuppCode: row.SuppCode,
                                                        ydcountm: "",
                                                        BarCode: row.BarCode
                                                    }
                                                });
                                            }
                                        } else {
                                            alert("商品不存在!");
                                        }
                                    });
                                } else {
                                    _Storage3.default.get('FormType').then(function (tags) {
                                        _this3.setState({
                                            FormType: tags
                                        });
                                    });

                                    _Storage3.default.get('LinkUrl').then(function (tags) {
                                        _this3.setState({
                                            LinkUrl: tags
                                        });
                                    });

                                    _Storage3.default.get('userName').then(function (tags) {
                                        var params = {
                                            reqCode: "App_PosReq",
                                            reqDetailCode: "App_Client_CurrProdQry",
                                            ClientCode: _this3.state.ClientCode,
                                            sDateTime: Date.parse(new Date()),
                                            Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_CurrProdQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                                            username: tags,
                                            usercode: _this3.state.Usercode,
                                            SuppCode: row.SuppCode,
                                            ShopCode: _this3.state.ShopCode,
                                            ChildShopCode: _this3.state.ChildShopCode,
                                            ProdCode: datas,
                                            OrgFormno: _this3.state.OrgFormno,
                                            FormType: _this3.state.FormType
                                        };
                                        _FetchUtils2.default.post(_this3.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                                            var countm = JSON.stringify(data.countm);
                                            var ShopPrice = JSON.stringify(data.ShopPrice);
                                            if (data.retcode == 1) {
                                                var ShopCar = row.ProdName;
                                                if (_this3.state.head == "商品查询") {
                                                    _this3.props.navigator.push({
                                                        component: _Shopsearch2.default,
                                                        params: {
                                                            ProdCode: row.ProdCode,
                                                            DepCode: row.DepCode1
                                                        }
                                                    });
                                                } else {
                                                    _this3.props.navigator.push({
                                                        component: _OrderDetails3.default,
                                                        params: {
                                                            ProdName: row.ProdName,
                                                            ShopPrice: ShopPrice,
                                                            Pid: row.Pid,
                                                            countm: row.ShopNumber,
                                                            promemo: row.promemo,
                                                            prototal: row.prototal,
                                                            ProdCode: row.ProdCode,
                                                            DepCode: row.DepCode1,
                                                            SuppCode: row.SuppCode,
                                                            ydcountm: countm,
                                                            BarCode: row.BarCode
                                                        }
                                                    });
                                                }
                                            } else {
                                                alert(JSON.stringify(data));
                                            }
                                        }, function (err) {
                                            alert("网络请求失败");
                                        });
                                    });
                                }
                            }
                        });
                    } else if (reminder.length == 13 && deCode13.deCodePreFlag(reminder)) {
                        new Promise.all([deCode13.deCodeProdCode(reminder, dbAdapter), deCode13.deCodeTotile(reminder, dbAdapter)]).then(function (result) {
                            if (result.length == 2) {
                                var prodCode = result[0];
                                var price = result[1];
                                dbAdapter.selectProdCode(prodCode, 1).then(function (prods) {
                                    if (prods.length == 0) {
                                        _reactNative.ToastAndroid.show("商品不存在", _reactNative.ToastAndroid.SHORT);
                                        return;
                                    }
                                    var row = prods.item(0);
                                    if (_this3.state.head == "移动销售") {
                                        var countm = _BigDecimalUtils2.default.divide(price, row.StdPrice, 2);
                                        _this3.props.navigator.push({
                                            component: _OrderDetails3.default,
                                            params: {
                                                ProdName: row.ProdName,
                                                ShopPrice: row.StdPrice,
                                                Pid: row.Pid,
                                                countm: countm,
                                                promemo: row.ShopRemark,
                                                prototal: price,
                                                ProdCode: row.ProdCode,
                                                DepCode: row.DepCode1,
                                                SuppCode: row.SuppCode,
                                                ydcountm: "",
                                                BarCode: row.BarCode
                                            }
                                        });
                                    } else {
                                        _Storage3.default.get('FormType').then(function (tags) {
                                            _this3.setState({
                                                FormType: tags
                                            });
                                        });

                                        _Storage3.default.get('LinkUrl').then(function (tags) {
                                            _this3.setState({
                                                LinkUrl: tags
                                            });
                                        });

                                        _Storage3.default.get('userName').then(function (tags) {
                                            var params = {
                                                reqCode: "App_PosReq",
                                                reqDetailCode: "App_Client_CurrProdQry",
                                                ClientCode: _this3.state.ClientCode,
                                                sDateTime: Date.parse(new Date()),
                                                Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_CurrProdQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                                                username: tags,
                                                usercode: _this3.state.Usercode,
                                                SuppCode: row.SuppCode,
                                                ShopCode: _this3.state.ShopCode,
                                                ChildShopCode: _this3.state.ChildShopCode,
                                                ProdCode: datas,
                                                OrgFormno: _this3.state.OrgFormno,
                                                FormType: _this3.state.FormType
                                            };
                                            _FetchUtils2.default.post(_this3.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                                                var countm = JSON.stringify(data.countm);
                                                var ShopPrice = JSON.stringify(data.ShopPrice);
                                                if (data.retcode == 1) {
                                                    var ShopCar = row.ProdName;
                                                    if (_this3.state.head == "商品查询") {
                                                        _this3.props.navigator.push({
                                                            component: _Shopsearch2.default,
                                                            params: {
                                                                ProdCode: row.ProdCode,
                                                                DepCode: row.DepCode1
                                                            }
                                                        });
                                                    } else {
                                                        _this3.props.navigator.push({
                                                            component: _OrderDetails3.default,
                                                            params: {
                                                                ProdName: row.ProdName,
                                                                ShopPrice: ShopPrice,
                                                                Pid: row.Pid,
                                                                countm: row.ShopNumber,
                                                                promemo: row.promemo,
                                                                prototal: row.prototal,
                                                                ProdCode: row.ProdCode,
                                                                DepCode: row.DepCode1,
                                                                SuppCode: row.SuppCode,
                                                                ydcountm: countm,
                                                                BarCode: row.BarCode
                                                            }
                                                        });
                                                    }
                                                } else {
                                                    alert(JSON.stringify(data));
                                                }
                                            }, function (err) {
                                                alert("网络请求失败");
                                            });
                                        });
                                    }
                                });
                            }
                        });
                    } else {
                        dbAdapter.selectAidCode(reminder, 1).then(function (rows) {
                            if (rows.length == 0) {
                                alert("该商品不存在");
                            } else {
                                if (_this3.state.head == "移动销售") {
                                    var shopnumber = 0;
                                    var shopAmount = 0;
                                    for (var i = 0; i < rows.length; i++) {
                                        var row = rows.item(i);
                                        var ShopPrice = row.ShopPrice;
                                        _this3.props.navigator.push({
                                            component: _OrderDetails3.default,
                                            params: {
                                                ProdName: row.ProdName,
                                                ShopPrice: row.StdPrice,
                                                Pid: row.Pid,
                                                countm: row.ShopNumber,
                                                promemo: row.ShopRemark,
                                                prototal: row.ShopAmount,
                                                ProdCode: row.ProdCode,
                                                DepCode: row.DepCode1,
                                                SuppCode: row.SuppCode,
                                                ydcountm: "",
                                                BarCode: row.BarCode
                                            }
                                        });
                                    }
                                } else {
                                    _Storage3.default.get('FormType').then(function (tags) {
                                        _this3.setState({
                                            FormType: tags
                                        });
                                    });

                                    _Storage3.default.get('LinkUrl').then(function (tags) {
                                        _this3.setState({
                                            LinkUrl: tags
                                        });
                                    });

                                    _Storage3.default.get('userName').then(function (tags) {
                                        var params = {
                                            reqCode: "App_PosReq",
                                            reqDetailCode: "App_Client_CurrProdQry",
                                            ClientCode: _this3.state.ClientCode,
                                            sDateTime: Date.parse(new Date()),
                                            Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_CurrProdQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                                            username: tags,
                                            usercode: _this3.state.Usercode,
                                            SuppCode: rows.item(0).SuppCode,
                                            ShopCode: _this3.state.ShopCode,
                                            ChildShopCode: _this3.state.ChildShopCode,
                                            ProdCode: rows.item(0).ProdCode,
                                            OrgFormno: _this3.state.OrgFormno,
                                            FormType: _this3.state.FormType
                                        };
                                        _FetchUtils2.default.post(_this3.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                                            var countm = JSON.stringify(data.countm);
                                            var ShopPrice = JSON.stringify(data.ShopPrice);
                                            if (data.retcode == 1) {
                                                var ShopCar = rows.item(0).ProdName;
                                                if (_this3.state.head == "商品查询") {
                                                    _this3.props.navigator.push({
                                                        component: _Shopsearch2.default,
                                                        params: {
                                                            ProdCode: rows.item(0).ProdCode,
                                                            DepCode: rows.item(0).DepCode1
                                                        }
                                                    });
                                                } else {
                                                    _this3.props.navigator.push({
                                                        component: _OrderDetails3.default,
                                                        params: {
                                                            ProdName: rows.item(0).ProdName,
                                                            ShopPrice: ShopPrice,
                                                            Pid: rows.item(0).Pid,
                                                            countm: rows.item(0).ShopNumber,
                                                            promemo: rows.item(0).promemo,
                                                            prototal: rows.item(0).prototal,
                                                            ProdCode: rows.item(0).ProdCode,
                                                            DepCode: rows.item(0).DepCode1,
                                                            SuppCode: rows.item(0).SuppCode,
                                                            ydcountm: countm,
                                                            BarCode: rows.item(0).BarCode
                                                        }
                                                    });
                                                    alert(rows.item(0).ShopPrice);
                                                }
                                                _reactNative.DeviceEventEmitter.removeAllListeners();
                                            } else {
                                                alert(JSON.stringify(data));
                                            }
                                        }, function (err) {
                                            alert("网络请求失败");
                                        });
                                    });
                                }
                            }
                        });
                    }
                }
            });
        }
    }, {
        key: 'pressPush',
        value: function pressPush() {
            if (this.state.head == null) {
                this._Emptydata();
            } else {
                if (this.state.head == "商品查询") {
                    var nextRoute = {
                        name: "主页",
                        component: _SearchData2.default
                    };
                    this.props.navigator.push(nextRoute);
                } else {
                    var nextRoute = {
                        name: "主页",
                        component: _Search2.default
                    };
                    this.props.navigator.push(nextRoute);
                }
                _reactNative.DeviceEventEmitter.removeAllListeners();
            }
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this4 = this;

            _Storage3.default.save("num", "1");
            _reactNative.InteractionManager.runAfterInteractions(function () {

                _this4.Storage();
                _this4._fetch();
                _this4.Device();
                if (lastDepCode == 1) {
                    page = 1;
                }
                _Storage3.default.get('Disting').then(function (tags) {
                    _this4.setState({
                        Disting: tags
                    });

                    if (_this4.state.Disting == "0") {
                        _this4.setState({
                            pressStatus: 'pressin',
                            PressStatus: '0'
                        });
                    } else if (_this4.state.Disting == "1") {
                        _this4.setState({
                            PressStatus: 'Pressin',
                            pressStatus: 0
                        });
                    }
                });
            });
        }
    }, {
        key: 'Storage',
        value: function Storage() {
            var _this5 = this;

            _Storage3.default.delete('DataName');
            _Storage3.default.get('Name').then(function (tags) {
                _this5.setState({
                    head: tags
                });
            });

            _Storage3.default.get('username').then(function (tags) {
                _this5.setState({
                    username: tags
                });
            });

            _Storage3.default.get('ClientCode').then(function (tags) {
                _this5.setState({
                    ClientCode: tags
                });
            });

            _Storage3.default.get('Usercode').then(function (tags) {
                _this5.setState({
                    Usercode: tags
                });
            });

            _Storage3.default.get('code').then(function (tags) {
                _this5.setState({
                    ShopCode: tags
                });
            });

            _Storage3.default.get('shildshop').then(function (tags) {
                _this5.setState({
                    ChildShopCode: tags
                });
            });

            _Storage3.default.get('OrgFormno').then(function (tags) {
                _this5.setState({
                    OrgFormno: tags
                });
            });

            _Storage3.default.get('username').then(function (tags) {
                _this5.setState({
                    usercode: tags
                });
            });
        }
    }, {
        key: '_fetch',
        value: function _fetch() {
            var _this6 = this;

            var ShopCar1 = 0;
            dbAdapter.selectTDepSet('1').then(function (rows) {
                for (var i = 0; i < rows.length; i++) {
                    var row = rows.item(i);
                    _this6.dataRows.push(row);
                    var ShopCar = rows.item(0).DepCode;
                    ShopCar1 = _BigDecimalUtils2.default.add(row.ShopNumber, ShopCar1, 2);
                }
                if (_this6.state.depcode == "") {
                    _this6.setState({
                        depcode: ShopCar
                    });
                    lastDepCode = _this6.state.depcode;
                }
                _this6.setState({
                    dataSource: _this6.state.dataSource.cloneWithRows(_this6.dataRows),
                    ShopNumber1: row.ShopNumber,
                    isloading: true,
                    ShopCar1: ShopCar1
                });

                var priductData = [];
                dbAdapter.selectProduct(_this6.state.depcode, page, 1).then(function (rows) {
                    if (lastDepCode !== "") {
                        page = 1;
                    }
                    for (var _i = 0; _i < rows.length; _i++) {
                        var row = rows.item(_i);
                        priductData.push(row);
                    }
                    total = _this6.state.Page;
                    totalPage = total % 15 == 0 ? total / 15 : Math.floor(total / 15) + 1;
                    _this6.productData = priductData;
                    _this6.setState({
                        currentindex: _this6.state.depcode,
                        data: priductData,
                        isloading: false
                    });
                });
            });

            dbAdapter.selectProduct1(1, 1).then(function (rows) {
                for (var i = 0; i < rows.length; i++) {
                    var row = rows.item(i);
                }
                ;
                var priductdata = JSON.stringify(row.countn);
                _this6.setState({
                    Page: priductdata
                });
            });
            this._fetch1();
        }
    }, {
        key: '_fetch1',
        value: function _fetch1() {
            var _this7 = this;

            dbAdapter.selectShopInfo("1").then(function (rows) {
                for (var i = 0; i < rows.length; i++) {
                    var row = rows.item(i);
                }
            });
            dbAdapter.selectShopInfoAllCountm().then(function (rows) {
                var ShopCar = rows.item(0).countm;
                _this7.setState({
                    shopcar: ShopCar
                });
            });
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this8 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                        return _this8._pressRow(rowData);
                    }, key: rowData.DepCode,
                    style: this.state.currentindex == rowData.DepCode ? styles.clickes : styles.click, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 678
                    }
                },
                rowData.ShopNumber == 0 ? null : _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.addnumber, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 683
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.Reduction1, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 684
                            }
                        },
                        rowData.ShopNumber
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.Active, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 688
                        }
                    },
                    rowData.DepName
                )
            );
        }
    }, {
        key: '_pressRow',
        value: function _pressRow(rowData) {
            var _this9 = this;

            if (lastDepCode == "") {
                lastDepCode = rowData.DepCode;
            }
            if (lastDepCode !== '') {
                page = 1;
            }
            dbAdapter.selectProduct1(rowData.DepCode, 1).then(function (rows) {
                for (var i = 0; i < rows.length; i++) {
                    var row = rows.item(i);
                }
                var priductdata = JSON.stringify(row.countn);
                _this9.setState({
                    Page: priductdata
                });
            });
            var priductData = [];
            var DEPCODE = rowData.DepCode;
            this.setState({
                depcode: DEPCODE,
                isloading: true
            });
            dbAdapter.selectProduct(rowData.DepCode, page, 1).then(function (rows) {
                for (var i = 0; i < rows.length; i++) {
                    var row = rows.item(i);
                    priductData.push(row);
                }
                ;
                total = _this9.state.Page;
                totalPage = total % 15 == 0 ? total / 15 : Math.floor(total / 15) + 1;
                _this9.productData = priductData;
                _this9.setState({
                    data: priductData,
                    isloading: false,
                    currentindex: rowData.DepCode
                });
                if (totalPage == 0) {
                    _this9.setState({
                        nomore: false
                    });
                }
                if (totalPage > 0) {
                    _this9.setState({
                        nomore: true
                    });
                }
            });
            this._fetch1();
        }
    }, {
        key: '_renderItem',
        value: function _renderItem(item, index) {
            var _this10 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.Border, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 750
                    }
                },
                this.state.head == "实时盘点" || this.state.head == "商品盘点" ? _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.AddNumber, ref: 'goodsCodeOrName', __source: {
                            fileName: _jsxFileName,
                            lineNumber: 753
                        }
                    },
                    item.item.ShopNumber === "" || this.state.Zero == "0" ? null : _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Subtraction, onPress: function onPress() {
                                return _this10.Countm(item);
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 757
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.Number, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 758
                                }
                            },
                            item.item.ShopNumber
                        ),
                        item.item.ShopNumber == "0" ? null : _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.subtraction, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 762
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Reduction, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 762
                                    }
                                },
                                '-'
                            )
                        )
                    )
                ) : _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.AddNumber, ref: 'goodsCodeOrName', __source: {
                            fileName: _jsxFileName,
                            lineNumber: 768
                        }
                    },
                    item.item.ShopNumber == "" || item.item.ShopNumber == "0" ? null : _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Subtraction, onPress: function onPress() {
                                return _this10.Countm(item);
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 772
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.Number, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 773
                                }
                            },
                            item.item.ShopNumber
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.subtraction, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 774
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Reduction, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 774
                                    }
                                },
                                '-'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { onPress: function onPress() {
                            return _this10.OrderDetails(item);
                        }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 779
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Image, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 780
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(401                  ), __source: { // 401 = ../images/image.png
                                fileName: _jsxFileName,
                                lineNumber: 781
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.Text, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 783
                            }
                        },
                        item.item.ProdName
                    )
                )
            );
        }
    }, {
        key: 'Countm',
        value: function Countm(item) {
            dbAdapter.upDataShopInfoCountmSub(item.item.ProdCode).then(function (rows) {});
            item.item.ShopNumber = _BigDecimalUtils2.default.subtract(item.item.ShopNumber, 1, 2);
            if (item.item.ShopNumber <= 0) {
                item.item.ShopNumber = 0;
            }
            var select = 0;
            for (var i = 0; i < this.dataRows.length; i++) {
                if (item.item.DepCode1 == this.dataRows[i].DepCode) {
                    select = i;
                    var ShopNumber = this.dataRows[i].ShopNumber;
                    this.dataRows[i].ShopNumber = _BigDecimalUtils2.default.subtract(ShopNumber, 1, 2);
                    if (this.dataRows[i].ShopNumber <= 0) {
                        this.dataRows[i].ShopNumber = 0;
                    }
                    this.setState({
                        dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
                    });
                }
            }
            if (item.item.ShopNumber == "0") {
                if (this.state.head !== "实时盘点" || this.state.head !== "商品盘点") {
                    dbAdapter.deteleShopInfo(item.item.ProdCode).then(function (rows) {});
                    this.setState({
                        ShopCar1: 0,
                        ShopNumber: 0,
                        Zero: 0
                    });
                }
            }

            this._fetch1();
        }
    }, {
        key: '_createEmptyView',
        value: function _createEmptyView() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.footerView, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 840
                    }
                },
                this.state.nomore ? [_react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 842
                    }
                }), _react2.default.createElement(
                    _reactNative.Text,
                    { key: '2', style: styles.fontColorGray, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 843
                        }
                    },
                    '\u52A0\u8F7D\u4E2D'
                )] : _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.nomore, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 844
                        }
                    },
                    '\u6CA1\u6709\u66F4\u591A\u4E86'
                )
            );
        }
    }, {
        key: 'OrderDetails',
        value: function OrderDetails(item) {
            var _this11 = this;

            this.setState({
                OrderDetails: 1
            });
            if (this.state.OrderDetails == 1) {
                return;
            } else {
                var title = this.state.head;
                _Storage3.default.get('FormType').then(function (tags) {
                    _this11.setState({
                        FormType: tags
                    });
                });

                _Storage3.default.get('LinkUrl').then(function (tags) {
                    _this11.setState({
                        LinkUrl: tags
                    });
                });

                _Storage3.default.get('Modify').then(function (tags) {
                    _this11.setState({
                        Modify: tags
                    });
                });

                if (title == null) {
                    this._Emptydata();
                } else {
                    if (this.state.head == "移动销售") {
                        dbAdapter.selectAidCode(item.item.ProdCode, 1).then(function (rows) {
                            var shopnumber = 0;
                            var shopAmount = 0;
                            for (var i = 0; i < rows.length; i++) {
                                var row = rows.item(i);

                                _this11.props.navigator.push({
                                    component: _OrderDetails3.default,
                                    params: {
                                        ProdName: item.item.ProdName,
                                        ShopPrice: row.ShopPrice,
                                        Pid: item.item.Pid,
                                        countm: item.item.ShopNumber,
                                        promemo: item.item.ShopRemark,
                                        prototal: item.item.ShopAmount,
                                        ProdCode: item.item.ProdCode,
                                        DepCode: item.item.DepCode1,
                                        SuppCode: item.item.SuppCode,
                                        ydcountm: "",
                                        BarCode: item.item.BarCode
                                    }
                                });
                            }
                            _this11.setState({
                                OrderDetails: ''
                            });
                        });
                    } else {
                        dbAdapter.selectAidCode(item.item.ProdCode, 1).then(function (rows) {
                            _Storage3.default.get('userName').then(function (tags) {
                                var params = {
                                    reqCode: "App_PosReq",
                                    reqDetailCode: "App_Client_CurrProdQry",
                                    ClientCode: _this11.state.ClientCode,
                                    sDateTime: Date.parse(new Date()),
                                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_CurrProdQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                                    username: tags,
                                    usercode: _this11.state.Usercode,
                                    SuppCode: item.item.SuppCode,
                                    ShopCode: _this11.state.ShopCode,
                                    ChildShopCode: _this11.state.ChildShopCode,
                                    ProdCode: item.item.ProdCode,
                                    OrgFormno: _this11.state.OrgFormno,
                                    FormType: _this11.state.FormType
                                };
                                _FetchUtils2.default.post(_this11.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                                    var countm = JSON.stringify(data.countm);
                                    var ShopPrice = JSON.stringify(data.ShopPrice);
                                    if (data.retcode == 1) {
                                        if (_this11.state.head == "商品查询") {
                                            _this11.props.navigator.push({
                                                component: _Shopsearch2.default,
                                                params: {
                                                    ProdCode: item.item.ProdCode,
                                                    DepCode: item.item.DepCode1
                                                }
                                            });
                                            _this11.setState({
                                                OrderDetails: ''
                                            });
                                        } else {
                                            for (var i = 0; i < rows.length; i++) {
                                                var row = rows.item(i);
                                                if (_this11.state.head == "商品采购" || _this11.state.head == "协配采购" || _this11.state.Modify == 1) {
                                                    if (item.item.ShopNumber == '') {
                                                        _this11.props.navigator.push({
                                                            component: _OrderDetails3.default,
                                                            params: {
                                                                ProdName: item.item.ProdName,
                                                                ShopPrice: ShopPrice,
                                                                Pid: item.item.Pid,
                                                                countm: item.item.ShopNumber,
                                                                promemo: item.item.promemo,
                                                                prototal: item.item.prototal,
                                                                ProdCode: item.item.ProdCode,
                                                                DepCode: item.item.DepCode1,
                                                                SuppCode: item.item.SuppCode,
                                                                ydcountm: countm,
                                                                BarCode: item.item.BarCode
                                                            }
                                                        });
                                                    } else {
                                                        _this11.props.navigator.push({
                                                            component: _OrderDetails3.default,
                                                            params: {
                                                                ProdName: item.item.ProdName,
                                                                ShopPrice: row.ShopPrice,
                                                                Pid: item.item.Pid,
                                                                countm: item.item.ShopNumber,
                                                                promemo: item.item.promemo,
                                                                prototal: item.item.prototal,
                                                                ProdCode: item.item.ProdCode,
                                                                DepCode: item.item.DepCode1,
                                                                SuppCode: item.item.SuppCode,
                                                                ydcountm: countm,
                                                                BarCode: item.item.BarCode
                                                            }
                                                        });
                                                    }
                                                } else {
                                                    _this11.props.navigator.push({
                                                        component: _OrderDetails3.default,
                                                        params: {
                                                            ProdName: item.item.ProdName,
                                                            ShopPrice: ShopPrice,
                                                            Pid: item.item.Pid,
                                                            countm: item.item.ShopNumber,
                                                            promemo: item.item.promemo,
                                                            prototal: item.item.prototal,
                                                            ProdCode: item.item.ProdCode,
                                                            DepCode: item.item.DepCode1,
                                                            SuppCode: item.item.SuppCode,
                                                            ydcountm: countm,
                                                            BarCode: item.item.BarCode
                                                        }
                                                    });
                                                }
                                            }
                                            _this11.setState({
                                                OrderDetails: ''
                                            });
                                        }
                                    } else {
                                        alert(JSON.stringify(data));
                                    }
                                }, function (err) {
                                    alert("网络请求失败");
                                });
                            });
                        });
                    }
                }
            }
        }
    }, {
        key: 'ChuMo',
        value: function ChuMo() {
            var _this12 = this;

            _Storage3.default.save("Disting", "0");
            _Storage3.default.get('Disting').then(function (tags) {
                _this12.setState({
                    Disting: tags
                });
            });
            this.setState({
                pressStatus: 'pressin',
                PressStatus: '0'
            });
        }
    }, {
        key: 'SaoMa',
        value: function SaoMa() {
            var _this13 = this;

            _Storage3.default.save("Disting", "1");
            _Storage3.default.get('Disting').then(function (tags) {
                _this13.setState({
                    Disting: tags
                });
            });
            this.setState({
                PressStatus: 'Pressin',
                pressStatus: 0
            });
        }
    }, {
        key: 'YaoHuo',
        value: function YaoHuo() {
            var _this14 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                _Storage3.default.get('code').then(function (tags) {
                    dbAdapter.isYHPSXP(tags).then(function (rows) {
                        if (rows.length >= 1) {
                            dbAdapter.selectUserRight(_this14.state.usercode, "K0801").then(function (rows) {
                                if (rows == true) {
                                    if (_this14.state.Disting == "0") {
                                        var date = new Date();
                                        var data = JSON.stringify(date.getTime());
                                        _Storage3.default.delete('OrgFormno');
                                        _Storage3.default.delete('scode');
                                        _Storage3.default.delete('shildshop');
                                        _Storage3.default.delete('YuanDan');
                                        _Storage3.default.delete('Screen');
                                        _Storage3.default.delete('StateMent');
                                        _Storage3.default.delete('BQNumber');
                                        _Storage3.default.delete('YdCountm');
                                        _Storage3.default.delete('Modify');
                                        _Storage3.default.save('Name', '门店要货');
                                        _Storage3.default.save('Document', "门店要货");
                                        _Storage3.default.save('FormType', 'YWYW');
                                        _Storage3.default.save('ProYH', 'ProYH');
                                        _Storage3.default.save('YdCountm', '1');
                                        _Storage3.default.save('Date', _this14.state.active);

                                        _Storage3.default.save('valueOf', 'App_Client_ProYH');
                                        _Storage3.default.save('history', 'App_Client_ProYHQ');
                                        _Storage3.default.save('historyClass', 'App_Client_ProYHDetailQ');
                                        var invoice = "门店要货";
                                        _this14.setState({
                                            head: invoice,
                                            active: data
                                        });
                                        _this14._setModalVisible();
                                    } else if (_this14.state.Disting == "1") {
                                        var date = new Date();
                                        var data = JSON.stringify(date.getTime());
                                        _Storage3.default.delete('OrgFormno');
                                        _Storage3.default.delete('scode');
                                        _Storage3.default.delete('shildshop');
                                        _Storage3.default.delete('YuanDan');
                                        _Storage3.default.delete('Screen');
                                        _Storage3.default.delete('StateMent');
                                        _Storage3.default.delete('BQNumber');
                                        _Storage3.default.delete('YdCountm');
                                        _Storage3.default.delete('Modify');
                                        _Storage3.default.save('Name', '门店要货');
                                        _Storage3.default.save('Document', "门店要货");
                                        _Storage3.default.save('FormType', 'YWYW');
                                        _Storage3.default.save('ProYH', 'ProYH');
                                        _Storage3.default.save('YdCountm', '1');
                                        _Storage3.default.save('Date', _this14.state.active);

                                        _Storage3.default.save('valueOf', 'App_Client_ProYH');
                                        _Storage3.default.save('history', 'App_Client_ProYHQ');
                                        _Storage3.default.save('historyClass', 'App_Client_ProYHDetailQ');
                                        var invoice = "门店要货";
                                        _this14.setState({
                                            head: invoice,
                                            active: data
                                        });
                                        var nextRoute = {
                                            name: "主页",
                                            component: _Search2.default
                                        };
                                        _this14.props.navigator.push(nextRoute);
                                        _reactNative.DeviceEventEmitter.removeAllListeners();
                                        _this14._setModalVisible();
                                    } else {
                                        _this14.Promp();
                                    }
                                }
                            });
                        } else {
                            _this14.Permissions();
                        }
                    });
                });
            }
        }
    }, {
        key: 'SunYi',
        value: function SunYi() {
            var _this15 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                dbAdapter.selectUserRight(this.state.usercode, "K0604").then(function (rows) {
                    if (rows == true) {
                        if (_this15.state.Disting == "0" || _this15.state.Disting == "1") {
                            var nextRoute = {
                                name: "商品损溢",
                                component: _SunYi3.default
                            };
                            _this15.props.navigator.push(nextRoute);
                            _this15._setModalVisible();
                            if (_this15.state.Disting == "1") {
                                _reactNative.DeviceEventEmitter.removeAllListeners();
                            }
                        } else {
                            _this15.Promp();
                        }
                    } else {
                        _this15.alertContent("没有权限");
                    }
                });
            }
        }
    }, {
        key: 'SSPanDian',
        value: function SSPanDian() {
            var _this16 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                dbAdapter.selectUserRight(this.state.usercode, "K0611").then(function (rows) {
                    if (rows == true) {
                        if (_this16.state.Disting == "0") {
                            var date = new Date();
                            var data = JSON.stringify(date.getTime());
                            var invoice = "实时盘点";
                            _this16.setState({
                                head: invoice,
                                active: data
                            });
                            _this16._setModalVisible();
                            _Storage3.default.delete('OrgFormno');
                            _Storage3.default.delete('shildshop');
                            _Storage3.default.delete('YuanDan');
                            _Storage3.default.delete('StateMent');
                            _Storage3.default.delete('BQNumber');
                            _Storage3.default.delete('YdCountm');
                            _Storage3.default.delete('Modify');
                            _Storage3.default.save('Date', _this16.state.active);
                            _Storage3.default.save('Name', '实时盘点');
                            _Storage3.default.save('Document', "实时盘点");
                            _Storage3.default.save('FormType', 'CUPCYW');
                            _Storage3.default.save('ProYH', 'ProCurrPC');
                            _Storage3.default.save('YdCountm', '1');
                            _Storage3.default.save('Screen', '2');
                            _Storage3.default.save("scode", "1");
                            _Storage3.default.save('valueOf', 'App_Client_ProCurrPC');
                            _Storage3.default.save('history', 'App_Client_ProCurrPCQ');
                            _Storage3.default.save('historyClass', 'App_Client_ProCurrPCDetailQ');
                        } else if (_this16.state.Disting == "1") {
                            var date = new Date();
                            var data = JSON.stringify(date.getTime());
                            var invoice = "实时盘点";
                            _this16.setState({
                                head: invoice,
                                active: data
                            });
                            var nextRoute = {
                                name: "主页",
                                component: _Search2.default
                            };
                            _this16.props.navigator.push(nextRoute);
                            _reactNative.DeviceEventEmitter.removeAllListeners();
                            _this16._setModalVisible();
                            _Storage3.default.delete('OrgFormno');
                            _Storage3.default.delete('shildshop');
                            _Storage3.default.delete('YuanDan');
                            _Storage3.default.delete('StateMent');
                            _Storage3.default.delete('BQNumber');
                            _Storage3.default.delete('YdCountm');
                            _Storage3.default.delete('Modify');
                            _Storage3.default.save('Date', _this16.state.active);
                            _Storage3.default.save('Name', '实时盘点');
                            _Storage3.default.save('Document', "实时盘点");
                            _Storage3.default.save('FormType', 'CUPCYW');
                            _Storage3.default.save('ProYH', 'ProCurrPC');
                            _Storage3.default.save('YdCountm', '1');
                            _Storage3.default.save('Screen', '2');
                            _Storage3.default.save("scode", "1");
                            _Storage3.default.save('valueOf', 'App_Client_ProCurrPC');
                            _Storage3.default.save('history', 'App_Client_ProCurrPCQ');
                            _Storage3.default.save('historyClass', 'App_Client_ProCurrPCDetailQ');
                        } else {
                            _this16.Promp();
                        }
                    } else {
                        _this16.alertContent("没有权限");
                    }
                });
            }
        }
    }, {
        key: 'SPPanDian',
        value: function SPPanDian() {
            var _this17 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                dbAdapter.selectUserRight(this.state.usercode, "K0607").then(function (rows) {
                    if (rows == true) {
                        if (_this17.state.Disting == "0" || _this17.state.Disting == "1") {
                            _Storage3.default.save('invoice', '商品盘点');
                            var nextRoute = {
                                name: "主页",
                                component: _Query2.default
                            };
                            _this17.props.navigator.push(nextRoute);
                            _this17._setModalVisible();
                            if (_this17.state.Disting == "1") {
                                _reactNative.DeviceEventEmitter.removeAllListeners();
                            }
                        } else {
                            _this17.Promp();
                        }
                    } else {
                        _this17.alertContent("没有权限");
                    }
                });
            }
        }
    }, {
        key: 'PSShouHuo',
        value: function PSShouHuo() {
            var _this18 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                _Storage3.default.get('code').then(function (tags) {
                    dbAdapter.isYHPSXP(tags).then(function (rows) {
                        if (rows.length >= 1) {
                            dbAdapter.selectUserRight(_this18.state.usercode, "K0802").then(function (rows) {
                                if (rows == true) {
                                    if (_this18.state.Disting == "0" || _this18.state.Disting == "1") {
                                        _Storage3.default.save("invoice", "配送收货");
                                        var nextRoute = {
                                            name: "主页",
                                            component: _Distrition2.default
                                        };
                                        _this18.props.navigator.push(nextRoute);
                                        _this18._setModalVisible();
                                        if (_this18.state.Disting == "1") {
                                            _reactNative.DeviceEventEmitter.removeAllListeners();
                                        }
                                    } else {
                                        _this18.Promp();
                                    }
                                }
                            });
                        } else {
                            _this18.Permissions();
                        }
                    });
                });
            }
        }
    }, {
        key: 'SPCaiGou',
        value: function SPCaiGou() {
            var _this19 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                _Storage3.default.get('code').then(function (tags) {
                    dbAdapter.isCGYS(tags).then(function (rows) {
                        if (rows.length >= 1) {
                            dbAdapter.selectUserRight(_this19.state.usercode, "K0504").then(function (rows) {
                                if (rows == true) {
                                    if (_this19.state.Disting == "0" || _this19.state.Disting == "1") {
                                        _Storage3.default.save("invoice", "商品采购");
                                        var nextRoute = {
                                            name: "主页",
                                            component: _ProductCG2.default
                                        };
                                        _this19.props.navigator.push(nextRoute);
                                        _this19._setModalVisible();
                                        if (_this19.state.Disting == "1") {
                                            _reactNative.DeviceEventEmitter.removeAllListeners();
                                        }
                                    } else {
                                        _this19.Promp();
                                    }
                                } else {
                                    _this19.alertContent("没有权限");
                                }
                            });
                        } else {
                            _this19.Permissions2();
                        }
                    });
                });
            }
        }
    }, {
        key: 'SPYanShou',
        value: function SPYanShou() {
            var _this20 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                _Storage3.default.get('code').then(function (tags) {
                    dbAdapter.isCGYS(tags).then(function (rows) {
                        if (rows.length >= 1) {
                            dbAdapter.selectUserRight(_this20.state.usercode, "K0505").then(function (rows) {
                                if (rows == true) {
                                    if (_this20.state.Disting == "0" || _this20.state.Disting == "1") {
                                        _Storage3.default.save("invoice", "商品验收");
                                        var nextRoute = {
                                            name: "主页",
                                            component: _ProductYS2.default
                                        };
                                        _this20.props.navigator.push(nextRoute);
                                        _this20._setModalVisible();
                                        if (_this20.state.Disting == "1") {
                                            _reactNative.DeviceEventEmitter.removeAllListeners();
                                        }
                                    } else {
                                        _this20.Promp();
                                    }
                                } else {
                                    _this20.alertContent("没有权限");
                                }
                            });
                        } else {
                            _this20.Permissions2();
                        }
                    });
                });
            }
        }
    }, {
        key: 'alertContent',
        value: function alertContent(content) {
            alert(content);
        }
    }, {
        key: 'XPCaiGou',
        value: function XPCaiGou() {
            var _this21 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                _Storage3.default.get('code').then(function (tags) {
                    dbAdapter.isXPCG(tags).then(function (rows) {
                        if (rows.length >= 1) {
                            dbAdapter.selectUserRight(_this21.state.usercode, "K0707").then(function (rows) {
                                if (rows == true) {
                                    if (_this21.state.Disting == "0" || _this21.state.Disting == "1") {
                                        _Storage3.default.save("invoice", "协配采购");
                                        var nextRoute = {
                                            name: "主页",
                                            component: _ProductXP2.default
                                        };
                                        _this21.props.navigator.push(nextRoute);
                                        _this21._setModalVisible();
                                        if (_this21.state.Disting == "1") {
                                            _reactNative.DeviceEventEmitter.removeAllListeners();
                                        }
                                    } else {
                                        _this21.Promp();
                                    }
                                }
                            });
                        } else {
                            _this21.Permissions1();
                        }
                    });
                });
            }
        }
    }, {
        key: 'XPShouHuo',
        value: function XPShouHuo() {
            var _this22 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                _Storage3.default.get('code').then(function (tags) {
                    dbAdapter.isYHPSXP(tags).then(function (rows) {
                        if (rows.length >= 1) {
                            dbAdapter.selectUserRight(_this22.state.usercode, "K0803").then(function (rows) {
                                if (rows == true) {
                                    if (_this22.state.Disting == "0" || _this22.state.Disting == "1") {
                                        _Storage3.default.save("invoice", "协配收货");
                                        var nextRoute = {
                                            name: "主页",
                                            component: _ProductSH2.default
                                        };
                                        _this22.props.navigator.push(nextRoute);
                                        _this22._setModalVisible();
                                        if (_this22.state.Disting == "1") {
                                            _reactNative.DeviceEventEmitter.removeAllListeners();
                                        }
                                    } else {
                                        _this22.Promp();
                                    }
                                } else {
                                    _this22.alertContent("没有权限");
                                }
                            });
                        } else {
                            _this22.Permissions();
                        }
                    });
                });
            }
        }
    }, {
        key: 'PSDan',
        value: function PSDan() {
            var _this23 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                dbAdapter.selectUserRight(this.state.usercode, "K0706").then(function (rows) {
                    if (rows == true) {
                        if (_this23.state.Disting == "0" || _this23.state.Disting == "1") {
                            _Storage3.default.save("invoice", "商品配送");
                            var nextRoute = {
                                name: "商品配送",
                                component: _PSDan3.default
                            };
                            _this23.props.navigator.push(nextRoute);
                            _this23._setModalVisible();
                            if (_this23.state.Disting == "1") {
                                _reactNative.DeviceEventEmitter.removeAllListeners();
                            }
                        } else {
                            _this23.Promp();
                        }
                    } else {
                        _this23.Permissions1();
                    }
                });
            }
        }
    }, {
        key: 'Sell',
        value: function Sell() {
            var _this24 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                if (this.state.Disting == "0") {
                    NativeModules.AndroidDeviceInfo.getIMEI(function (IMEI) {
                        _Storage3.default.get('Bind').then(function (tags) {
                            if (tags == "bindsucceed") {
                                _Storage3.default.get('ShopCode').then(function (ShopCode) {
                                    _Storage3.default.get('PosCode').then(function (PosCode) {
                                        var params = {
                                            TblName: "ChkPosShopBind",
                                            ShopCode: ShopCode,
                                            PosCode: PosCode,
                                            BindMAC: "",
                                            SysGuid: IMEI
                                        };
                                        _Storage3.default.get('LinkUrl').then(function (linkurl) {
                                            _FetchUtils2.default.post(linkurl, JSON.stringify(params)).then(function (data) {
                                                _Storage3.default.save("invoice", "移动销售");
                                                _Storage3.default.save("Name", "移动销售");
                                                _Storage3.default.save('YdCountm', '4');
                                                if (data.retcode == 1) {
                                                    var invoice = "移动销售";
                                                    _this24.setState({
                                                        head: invoice
                                                    });
                                                    _this24._setModalVisible();
                                                } else {
                                                    var nextRoute = {
                                                        name: "移动销售",
                                                        component: _Sell_Data2.default
                                                    };
                                                    _this24.props.navigator.push(nextRoute);
                                                    _this24._setModalVisible();
                                                }
                                            }, function (err) {
                                                alert("网络请求失败");
                                            });
                                        });
                                    });
                                });
                            } else {
                                _Storage3.default.save("invoice", "移动销售");
                                _Storage3.default.save("Name", "移动销售");
                                _Storage3.default.save('YdCountm', '4');
                                var nextRoute = {
                                    name: "移动销售",
                                    component: _Sell_Data2.default
                                };
                                _this24.props.navigator.push(nextRoute);
                                _this24._setModalVisible();
                            }
                        });
                    });
                } else if (this.state.Disting == "1") {
                    NativeModules.AndroidDeviceInfo.getIMEI(function (IMEI) {
                        _Storage3.default.get('Bind').then(function (tags) {
                            if (tags == "bindsucceed") {
                                _Storage3.default.get('ShopCode').then(function (ShopCode) {
                                    _Storage3.default.get('PosCode').then(function (PosCode) {
                                        var params = {
                                            TblName: "ChkPosShopBind",
                                            ShopCode: ShopCode,
                                            PosCode: PosCode,
                                            BindMAC: "",
                                            SysGuid: IMEI
                                        };
                                        _Storage3.default.get('LinkUrl').then(function (linkurl) {
                                            _FetchUtils2.default.post(linkurl, JSON.stringify(params)).then(function (data) {
                                                _Storage3.default.save("invoice", "移动销售");
                                                _Storage3.default.save("Name", "移动销售");
                                                _Storage3.default.save('YdCountm', '4');
                                                if (data.retcode == 1) {
                                                    var invoice = "移动销售";
                                                    _this24.setState({
                                                        head: invoice
                                                    });
                                                    var nextRoute = {
                                                        name: "移动销售",
                                                        component: _Sell3.default
                                                    };
                                                    _this24.props.navigator.push(nextRoute);
                                                    _this24._setModalVisible();
                                                } else {
                                                    var nextRoute = {
                                                        name: "移动销售",
                                                        component: _Sell_Data2.default
                                                    };
                                                    _this24.props.navigator.push(nextRoute);
                                                    _this24._setModalVisible();
                                                }
                                            }, function (err) {
                                                alert("网络请求失败");
                                            });
                                        });
                                    });
                                });
                            } else {
                                _Storage3.default.save("invoice", "移动销售");
                                _Storage3.default.save("Name", "移动销售");
                                _Storage3.default.save('YdCountm', '4');
                                var nextRoute = {
                                    name: "移动销售",
                                    component: _Sell_Data2.default
                                };
                                _this24.props.navigator.push(nextRoute);
                                _this24._setModalVisible();
                            }
                        });
                    });
                } else {
                    this.Promp();
                }
            }
        }
    }, {
        key: 'BQbutton',
        value: function BQbutton() {
            var _this25 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                dbAdapter.selectUserRight(this.state.usercode, "K0216").then(function (rows) {
                    if (rows == true) {
                        if (_this25.state.Disting == "0") {
                            var date = new Date();
                            var data = JSON.stringify(date.getTime());
                            var invoice = "标签采集";
                            _this25.setState({
                                head: invoice,
                                active: data
                            });
                            _this25._setModalVisible();
                            _Storage3.default.delete('OrgFormno');
                            _Storage3.default.delete('scode');
                            _Storage3.default.delete('shildshop');
                            _Storage3.default.delete('YuanDan');
                            _Storage3.default.delete('Screen');
                            _Storage3.default.delete('StateMent');
                            _Storage3.default.delete('Modify');
                            _Storage3.default.save('Date', _this25.state.active);
                            _Storage3.default.save('YdCountm', '5');
                            _Storage3.default.save('BQNumber', '3');
                            _Storage3.default.save('Document', "标���采集");
                            _Storage3.default.save('Name', '标签采集');
                            _Storage3.default.save('ProYH', 'BJQ');
                            _Storage3.default.save('valueOf', 'App_Client_BJQ');
                        } else if (_this25.state.Disting == "1") {
                            var date = new Date();
                            var data = JSON.stringify(date.getTime());
                            var invoice = "标签采集";
                            _this25.setState({
                                head: invoice,
                                active: data
                            });
                            var nextRoute = {
                                name: "主页",
                                component: _Search2.default
                            };
                            _this25.props.navigator.push(nextRoute);
                            _reactNative.DeviceEventEmitter.removeAllListeners();
                            _this25._setModalVisible();
                            _Storage3.default.delete('OrgFormno');
                            _Storage3.default.delete('scode');
                            _Storage3.default.delete('shildshop');
                            _Storage3.default.delete('YuanDan');
                            _Storage3.default.delete('Screen');
                            _Storage3.default.delete('StateMent');
                            _Storage3.default.delete('Modify');
                            _Storage3.default.save('Date', _this25.state.active);
                            _Storage3.default.save('YdCountm', '5');
                            _Storage3.default.save('BQNumber', '3');
                            _Storage3.default.save('Document', "标签采集");
                            _Storage3.default.save('Name', '标签采集');
                            _Storage3.default.save('ProYH', 'BJQ');
                            _Storage3.default.save('valueOf', 'App_Client_BJQ');
                        } else {
                            _this25.Promp();
                        }
                    } else {
                        _this25.alertContent("没有权限");
                    }
                });
            }
        }
    }, {
        key: 'StockEnquiries',
        value: function StockEnquiries() {
            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                var nextRoute = {
                    name: "库存查询",
                    component: _StockEnquiries3.default
                };
                this.props.navigator.push(nextRoute);
                this._setModalVisible();
            }
        }
    }, {
        key: 'ShopSearch',
        value: function ShopSearch() {
            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                _Storage3.default.delete('OrgFormno');
                _Storage3.default.delete('scode');
                _Storage3.default.delete('shildshop');
                _Storage3.default.delete('YuanDan');
                _Storage3.default.delete('Screen');
                _Storage3.default.delete('StateMent');
                _Storage3.default.delete('BQNumber');
                _Storage3.default.delete('YdCountm');
                _Storage3.default.delete('Modify');
                var invoice = "商品查询";
                this.setState({
                    head: invoice
                });
                this._setModalVisible();
                _Storage3.default.save('Name', '商品查询');
            }
        }
    }, {
        key: 'pullOut',
        value: function pullOut() {
            this._setModalVisible();
            if (this.state.ShopCar1 > 0) {
                alert("商品未提交");
            } else {
                var nextRoute = {
                    name: "主页",
                    component: _admin2.default
                };
                this.props.navigator.push(nextRoute);
                _Storage3.default.delete('Name');
                _Storage3.default.delete('username');
                _Storage3.default.delete('history');
                _Storage3.default.delete('FirstTime1');
                _Storage3.default.delete("Disting");
                _Storage3.default.delete('BQNumber');
                _Storage3.default.delete('YdCountm');
                _Storage3.default.delete('Modify');
            }
        }
    }, {
        key: 'pullOut1',
        value: function pullOut1() {
            this._StateMent();
            if (this.state.ShopCar1 > 0) {
                alert("商品未提交");
            } else {
                var nextRoute = {
                    name: "主页",
                    component: _admin2.default
                };
                this.props.navigator.push(nextRoute);
                _Storage3.default.delete('Name');
                _Storage3.default.delete('username');
                _Storage3.default.delete('history');
                _Storage3.default.delete('FirstTime1');
                _Storage3.default.delete("Disting");
                _Storage3.default.delete('BQNumber');
                _Storage3.default.delete('YdCountm');
                _Storage3.default.delete('Modify');
            }
        }
    }, {
        key: 'UpData',
        value: function UpData() {
            var _this26 = this;

            this.NewData();
            _Storage3.default.get('code').then(function (tags) {
                _Storage3.default.get('LinkUrl').then(function (LinkUrl) {
                    updata.downLoadAllData(LinkUrl, dbAdapter, tags);
                    _this26.NewData();
                    _this26.DataComplete();
                });
            });
        }
    }, {
        key: 'StateMent',
        value: function StateMent() {
            var _this27 = this;

            if (this.state.ShopCar1 > 0) {
                this._setModalVisible();
                alert("商品未提交");
            } else if (this.state.username == null) {
                this._setModalVisible();
            } else {
                _Storage3.default.get('Disting').then(function (tags) {
                    if (tags == 0) {
                        _this27._setModalVisible();
                        _this27._StateMent();
                        _this27.YeWu();
                        _Storage3.default.save("StateMent", "0");
                    } else if (tags == 1) {
                        _this27.Promp1();
                    } else {
                        _this27.Promp();
                    }
                });
            }
        }
    }, {
        key: 'YeWu',
        value: function YeWu() {
            var _this28 = this;

            _Storage3.default.save("Disting", "0");
            _Storage3.default.get('Disting').then(function (tags) {
                _this28.setState({
                    Disting: tags
                });
            });
            this.setState({
                pressStatus: 'pressin',
                PressStatus: '0'
            });
        }
    }, {
        key: 'ShouYin',
        value: function ShouYin() {
            var _this29 = this;

            _Storage3.default.save("Disting", "1");
            _Storage3.default.get('Disting').then(function (tags) {
                _this29.setState({
                    Disting: tags
                });
            });
            this.setState({
                PressStatus: 'Pressin',
                pressStatus: 0
            });
            this._Receiving();
            this._StateMent();
        }
    }, {
        key: 'YeWu1',
        value: function YeWu1() {
            var _this30 = this;

            _Storage3.default.save("Disting", "0");
            _Storage3.default.get('Disting').then(function (tags) {
                _this30.setState({
                    Disting: tags
                });
            });
            this.setState({
                pressStatus: 'pressin',
                PressStatus: '0'
            });
            this._StateMent();
            this._Receiving();
        }
    }, {
        key: 'ShouYin1',
        value: function ShouYin1() {
            var _this31 = this;

            _Storage3.default.save("Disting", "1");
            _Storage3.default.get('Disting').then(function (tags) {
                _this31.setState({
                    Disting: tags
                });
            });
            this.setState({
                PressStatus: 'Pressin',
                pressStatus: 0
            });
        }
    }, {
        key: 'YaoHuo1',
        value: function YaoHuo1() {
            var _this32 = this;

            _Storage3.default.get('code').then(function (tags) {
                dbAdapter.isYHPSXP(tags).then(function (rows) {
                    if (rows.length >= 1) {
                        _this32._StateMent();
                        var nextRoute = {
                            name: "HistoricalDocument",
                            component: _HistoricalDocument2.default
                        };
                        _this32.props.navigator.push(nextRoute);
                        _Storage3.default.delete('Name');
                        _Storage3.default.save('name', '门店要货');
                        _Storage3.default.save('history', 'App_Client_ProYHQ');
                        _Storage3.default.save('historyClass', 'App_Client_ProYHDetailQ');
                    } else {
                        _this32.Permissions();
                    }
                });
            });
        }
    }, {
        key: 'SunYi1',
        value: function SunYi1() {
            this._StateMent();
            var nextRoute = {
                name: "HistoricalDocument",
                component: _HistoricalDocument2.default
            };
            this.props.navigator.push(nextRoute);
            _Storage3.default.delete('Name');
            _Storage3.default.save('name', '商品损溢');
            _Storage3.default.save('history', 'App_Client_ProSYQ');
            _Storage3.default.save('historyClass', 'App_Client_ProSYDetailQ');
        }
    }, {
        key: 'SSPanDian1',
        value: function SSPanDian1() {
            this._StateMent();
            var nextRoute = {
                name: "HistoricalDocument",
                component: _HistoricalDocument2.default
            };
            this.props.navigator.push(nextRoute);
            _Storage3.default.delete('Name');
            _Storage3.default.save('name', '实时盘点');
            _Storage3.default.save('history', 'App_Client_ProCurrPCQ');
            _Storage3.default.save('historyClass', 'App_Client_ProCurrPCDetailQ');
        }
    }, {
        key: 'SPPanDian1',
        value: function SPPanDian1() {
            this._StateMent();
            var nextRoute = {
                name: "HistoricalDocument",
                component: _HistoricalDocument2.default
            };
            this.props.navigator.push(nextRoute);
            _Storage3.default.delete('Name');
            _Storage3.default.save('name', '商品盘点');
            _Storage3.default.save('history', 'App_Client_ProPCQ');
            _Storage3.default.save('historyClass', 'App_Client_ProPCDetailQ');
        }
    }, {
        key: 'PSShouHuo1',
        value: function PSShouHuo1() {
            var _this33 = this;

            _Storage3.default.get('code').then(function (tags) {
                dbAdapter.isYHPSXP(tags).then(function (rows) {
                    if (rows.length >= 1) {
                        _this33._StateMent();
                        var nextRoute = {
                            name: "HistoricalDocument",
                            component: _HistoricalDocument2.default
                        };
                        _this33.props.navigator.push(nextRoute);
                        _Storage3.default.delete('Name');
                        _Storage3.default.save('name', '配送收货');
                        _Storage3.default.save('history', 'App_Client_ProPSSHQ');
                        _Storage3.default.save('historyClass', 'App_Client_ProPSSHDetailQ');
                    } else {
                        _this33.Permissions();
                    }
                });
            });
        }
    }, {
        key: 'SPCaiGou1',
        value: function SPCaiGou1() {
            var _this34 = this;

            _Storage3.default.get('code').then(function (tags) {
                dbAdapter.isCGYS(tags).then(function (rows) {
                    if (rows.length >= 1) {
                        _this34._StateMent();
                        var nextRoute = {
                            name: "HistoricalDocument",
                            component: _HistoricalDocument2.default
                        };
                        _this34.props.navigator.push(nextRoute);
                        _Storage3.default.delete('Name');
                        _Storage3.default.save('name', '商品采购');
                        _Storage3.default.save('history', 'App_Client_ProCGQ');
                        _Storage3.default.save('historyClass', 'App_Client_ProCGDetailQ');
                    } else {
                        _this34.Permissions2();
                    }
                });
            });
        }
    }, {
        key: 'SPYanShou1',
        value: function SPYanShou1() {
            var _this35 = this;

            _Storage3.default.get('code').then(function (tags) {
                dbAdapter.isCGYS(tags).then(function (rows) {
                    if (rows.length >= 1) {
                        _this35._StateMent();
                        var nextRoute = {
                            name: "HistoricalDocument",
                            component: _HistoricalDocument2.default
                        };
                        _this35.props.navigator.push(nextRoute);
                        _Storage3.default.delete('Name');
                        _Storage3.default.save('name', '商品验收');
                        _Storage3.default.save('history', 'App_Client_ProYSQ');
                        _Storage3.default.save('historyClass', 'App_Client_ProYSDetailQ');
                    } else {
                        _this35.Permissions2();
                    }
                });
            });
        }
    }, {
        key: 'XPCaiGou1',
        value: function XPCaiGou1() {
            var _this36 = this;

            _Storage3.default.get('code').then(function (tags) {
                dbAdapter.isXPCG(tags).then(function (rows) {
                    if (rows.length >= 1) {
                        _this36._StateMent();
                        var nextRoute = {
                            name: "HistoricalDocument",
                            component: _HistoricalDocument2.default
                        };
                        _this36.props.navigator.push(nextRoute);
                        _Storage3.default.delete('Name');
                        _Storage3.default.save('name', '协配采购');
                        _Storage3.default.save('history', 'App_Client_ProXPCGQ');
                        _Storage3.default.save('historyClass', 'App_Client_ProXPCGDetailQ');
                    } else {
                        _this36.Permissions1();
                    }
                });
            });
        }
    }, {
        key: 'XPShouHuo1',
        value: function XPShouHuo1() {
            var _this37 = this;

            _Storage3.default.get('code').then(function (tags) {
                dbAdapter.isYHPSXP(tags).then(function (rows) {
                    if (rows.length >= 1) {
                        _this37._StateMent();
                        var nextRoute = {
                            name: "HistoricalDocument",
                            component: _HistoricalDocument2.default
                        };
                        _this37.props.navigator.push(nextRoute);
                        _Storage3.default.delete('Name');
                        _Storage3.default.save('name', '协配收货');
                        _Storage3.default.save('history', 'App_Client_ProXPYSQ');
                        _Storage3.default.save('historyClass', 'App_Client_ProXPYSDetailQ');
                    } else {
                        _this37.Permissions();
                    }
                });
            });
        }
    }, {
        key: 'PSDan1',
        value: function PSDan1() {
            this._StateMent();
            var nextRoute = {
                name: "HistoricalDocument",
                component: _HistoricalDocument2.default
            };
            this.props.navigator.push(nextRoute);
            _Storage3.default.delete('Name');
            _Storage3.default.save('name', '商品配送');
            _Storage3.default.save('history', 'App_Client_ProPSQ');
            _Storage3.default.save('historyClass', 'App_Client_ProPSDetailQ');
        }
    }, {
        key: 'Sell1',
        value: function Sell1() {}
    }, {
        key: 'keyExtractor',
        value: function keyExtractor(item, index) {
            return item.ProdName;
        }
    }, {
        key: '_onload',
        value: function _onload() {
            var _this38 = this;

            if (this.state.isloading) {
                return true;
            }
            page = page + 1;
            this.setState({
                nomore: true,
                isloading: true
            });
            if (this.state.depcode != lastDepCode) {
                page = 1;
            }
            var priductData = [];
            if (totalPage > 1 && page < totalPage) {
                dbAdapter.selectProduct(this.state.depcode, page, 1).then(function (rows) {
                    for (var i = 0; i < rows.length; i++) {
                        var row = rows.item(i);
                        priductData.push(row);
                    }
                    ;
                    if (_this38.state.depcode != lastDepCode) {
                        _this38.productData.splice(0, _this38.productData.length);
                        lastDepCode = _this38.state.depcode;
                    }
                    _this38.productData = _this38.productData.concat(priductData);
                    _this38.setState({
                        data: _this38.productData,
                        isloading: false
                    });
                });
            } else {
                this.setState({
                    nomore: false
                });
            }
        }
    }, {
        key: '_setModalVisible',
        value: function _setModalVisible() {
            var isShow = this.state.show;
            this.setState({
                show: !isShow
            });
        }
    }, {
        key: '_StateMent',
        value: function _StateMent() {
            var isShow = this.state.statement;
            this.setState({
                statement: !isShow
            });
        }
    }, {
        key: '_Receiving',
        value: function _Receiving() {
            var isShow = this.state.receiving;
            this.setState({
                receiving: !isShow
            });
        }
    }, {
        key: '_Emptydata',
        value: function _Emptydata() {
            var isShow = this.state.emptydata;
            this.setState({
                emptydata: !isShow
            });
        }
    }, {
        key: 'Emptydata',
        value: function Emptydata() {
            this._Emptydata();
        }
    }, {
        key: 'Promp',
        value: function Promp() {
            var isShow = this.state.Promp;
            this.setState({
                Promp: !isShow
            });
        }
    }, {
        key: 'Mode',
        value: function Mode() {
            this.Promp();
        }
    }, {
        key: 'Promp1',
        value: function Promp1() {
            var isShow = this.state.Promp1;
            this.setState({
                Promp1: !isShow
            });
        }
    }, {
        key: 'Mode1',
        value: function Mode1() {
            this.Promp1();
        }
    }, {
        key: 'Permissions',
        value: function Permissions() {
            var isShow = this.state.Permissions;
            this.setState({
                Permissions: !isShow
            });
        }
    }, {
        key: 'MoDe',
        value: function MoDe() {
            this.Permissions();
        }
    }, {
        key: 'Permissions1',
        value: function Permissions1() {
            var isShow = this.state.Permissions1;
            this.setState({
                Permissions1: !isShow
            });
        }
    }, {
        key: 'MoDe1',
        value: function MoDe1() {
            this.Permissions1();
        }
    }, {
        key: 'Permissions2',
        value: function Permissions2() {
            var isShow = this.state.Permissions2;
            this.setState({
                Permissions2: !isShow
            });
        }
    }, {
        key: 'MoDe2',
        value: function MoDe2() {
            this.Permissions2();
        }
    }, {
        key: 'NewData',
        value: function NewData() {
            var isshow = this.state.NewData;
            this.setState({
                NewData: !isshow
            });
        }
    }, {
        key: 'DataComplete',
        value: function DataComplete() {
            var isshow = this.state.DataComplete;
            this.setState({
                DataComplete: !isshow
            });
        }
    }, {
        key: 'Datacomplete',
        value: function Datacomplete() {
            this.DataComplete();
            this._setModalVisible();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this39 = this;

            var data = this.state.data;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 2209
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2210
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2211
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this._rightButtonClick.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2212
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(402                 ), style: styles.HeaderImage, __source: { // 402 = ../images/1_12.png
                                    fileName: _jsxFileName,
                                    lineNumber: 2213
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2215
                                }
                            },
                            this.state.head
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Code.bind(this), style: styles.onclick, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2216
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(347                 ), style: styles.HeaderImage, __source: { // 347 = ../images/1_05.png
                                    fileName: _jsxFileName,
                                    lineNumber: 2217
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.pressPush.bind(this), style: styles.onclick, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2219
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(381                 ), style: styles.HeaderImage, __source: { // 381 = ../images/1_08.png
                                    fileName: _jsxFileName,
                                    lineNumber: 2220
                                }
                            })
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2224
                        }
                    },
                    _react2.default.createElement(_reactNative.ListView, {
                        style: styles.scrollview,
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2225
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RightList1, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2231
                            }
                        },
                        _react2.default.createElement(_reactNative.FlatList, {
                            numColumns: 3,
                            key: function key(item) {
                                return item.Pid;
                            },
                            style: styles.ScrollView1,
                            renderItem: this._renderItem.bind(this),
                            ItemSeparatorComponent: this._separator.bind(this),
                            ListFooterComponent: this._createEmptyView(),
                            data: data,
                            keyExtractor: this.keyExtractor,
                            onRefresh: this.refreshing,
                            refreshing: false,
                            onEndReachedThreshold: 0.1,
                            onEndReached: function onEndReached() {
                                _this39._onload();
                            },
                            getItemLayout: function getItemLayout(data, index) {
                                return { length: 120, offset: 120 * index, index: index };
                            },
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2232
                            }
                        })
                    )
                ),
                this.state.head == "商品查询" ? null : _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.footer, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2258
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Home, onPress: this.History.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2259
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(382                  ), __source: { // 382 = ../images/1_300.png
                                fileName: _jsxFileName,
                                lineNumber: 2260
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.home1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2261
                                }
                            },
                            '\u5386\u53F2\u5355\u636E\u67E5\u8BE2'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Home, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2263
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(403                 ), __source: { // 403 = ../images/1_31.png
                                fileName: _jsxFileName,
                                lineNumber: 2264
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.home2, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2265
                                }
                            },
                            '\u5546\u54C1'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Home, onPress: this.ShopList.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2267
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2268
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Image,
                                { source: require(394                  ), __source: { // 394 = ../images/1_322.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2269
                                    }
                                },
                                this.state.shopcar == 0 ? null : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [{ position: "absolute", right: -200 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2273
                                        }
                                    },
                                    this.state.shopcar
                                ),
                                this.state.shopcar > 0 ? _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ShopCar, { paddingTop: 3 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2278
                                        }
                                    },
                                    this.state.shopcar
                                ) : null,
                                this.state.shopcar < 999 ? null : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ShopCar, {
                                            width: 30,
                                            height: 30,
                                            top: 11,
                                            lineHeight: 21
                                        }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2284
                                        }
                                    },
                                    this.state.shopcar
                                ),
                                this.state.shopcar > 999 ? _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2294
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.ShopCar, {
                                                width: 30,
                                                height: 30,
                                                top: 11,
                                                lineHeight: 23
                                            }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2295
                                            }
                                        },
                                        this.state.shopcar
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.Add, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2302
                                            }
                                        },
                                        '+'
                                    )
                                ) : null
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.home1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2309
                                }
                            },
                            '\u6E05\u5355'
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.show,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2314
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.ScrollView,
                        { style: styles.modalStyle, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2322
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalTitle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2323
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { style: styles.ModalLeft, onPress: this.ChuMo.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2324
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2325
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, {
                                        source: this.state.pressStatus == 'pressin' ? require(404                 ) : require(345                 ), __source: { // 345 = ../images/1_43.png // 404 = ../images/1_42.png
                                            fileName: _jsxFileName,
                                            lineNumber: 2326
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2329
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalImage, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2330
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(405                 ), __source: { // 405 = ../images/1_39.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2331
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2333
                                            }
                                        },
                                        '\u89E6\u6478'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLeft1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2338
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(406                 ), __source: { // 406 = ../images/1_47.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2339
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { style: styles.ModalLeft, onPress: this.SaoMa.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2341
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: [{ marginLeft: 14 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2342
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, {
                                        source: this.state.PressStatus == 'Pressin' ? require(404                 ) : require(345                 ), __source: { // 345 = ../images/1_43.png // 404 = ../images/1_42.png
                                            fileName: _jsxFileName,
                                            lineNumber: 2343
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2346
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalImage, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2347
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(407                 ), __source: { // 407 = ../images/1_41.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2348
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2350
                                            }
                                        },
                                        '\u626B\u7801'
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2356
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalHead, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2357
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.YaoHuo.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2358
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2361
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(408                 ), __source: { // 408 = ../images/1_25.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2362
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2364
                                            }
                                        },
                                        '\u95E8\u5E97\u8981\u8D27'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.PSShouHuo.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2368
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2371
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(409                 ), __source: { // 409 = ../images/1_28.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2372
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2374
                                            }
                                        },
                                        '\u914D\u9001\u6536\u8D27'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.ModalHeadImage, onPress: this.SSPanDian.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2378
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2379
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(410                 ), __source: { // 410 = ../images/1_29.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2380
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2382
                                            }
                                        },
                                        '\u5B9E\u65F6\u76D8\u70B9'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLine, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2387
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(411                 ), style: styles.ModalImageLine, __source: { // 411 = ../images/1_48.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2388
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalHead, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2390
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.SPPanDian.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2391
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2394
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(412                 ), __source: { // 412 = ../images/1_36.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2395
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2397
                                            }
                                        },
                                        '\u5546\u54C1\u76D8\u70B9'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.SunYi.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2401
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2404
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(413                 ), __source: { // 413 = ../images/1_38.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2405
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2407
                                            }
                                        },
                                        '\u5546\u54C1\u635F\u6EA2'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.ModalHeadImage, onPress: this.SPCaiGou.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2411
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2412
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(414                 ), __source: { // 414 = ../images/1_40.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2413
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2415
                                            }
                                        },
                                        '\u5546\u54C1\u91C7\u8D2D'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLine, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2420
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(411                 ), style: styles.ModalImageLine, __source: { // 411 = ../images/1_48.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2421
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalHead, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2423
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.SPYanShou.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2424
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2427
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(415                 ), __source: { // 415 = ../images/1_44.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2428
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2430
                                            }
                                        },
                                        '\u5546\u54C1\u9A8C\u6536'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.XPCaiGou.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2434
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2437
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(416                 ), __source: { // 416 = ../images/1_45.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2438
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2440
                                            }
                                        },
                                        '\u534F\u914D\u91C7\u8D2D'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.ModalHeadImage, onPress: this.XPShouHuo.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2444
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2445
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(417                 ), __source: { // 417 = ../images/1_46.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2446
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2448
                                            }
                                        },
                                        '\u534F\u914D\u6536\u8D27'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLine, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2453
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(411                 ), style: styles.ModalImageLine, __source: { // 411 = ../images/1_48.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2454
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: [styles.ModalHead, { marginBottom: 10 }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2456
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.PSDan.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2457
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2460
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(418                 ), __source: { // 418 = ../images/1_62.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2461
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2463
                                            }
                                        },
                                        '\u5546\u54C1\u914D\u9001'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.Sell.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2467
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2470
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(419                 ), __source: { // 419 = ../images/1_57.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2471
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2473
                                            }
                                        },
                                        '\u79FB\u52A8\u9500\u552E'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: styles.ModalHeadImage,
                                        onPress: this.StockEnquiries.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2477
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2480
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(420                 ), __source: { // 420 = ../images/1_61.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2481
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2483
                                            }
                                        },
                                        '\u5E93\u5B58\u67E5\u8BE2'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLine, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2488
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(411                 ), style: styles.ModalImageLine, __source: { // 411 = ../images/1_48.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2489
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: [styles.ModalHead, { marginBottom: 10 }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2491
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }], onPress: this.ShopSearch.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2492
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2493
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(421                 ), __source: { // 421 = ../images/1_58.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2494
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2496
                                            }
                                        },
                                        '\u5546\u54C1\u67E5\u8BE2'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.BQbutton.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2500
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2503
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(422                 ), __source: { // 422 = ../images/1_60.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2504
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2506
                                            }
                                        },
                                        '\u6807\u7B7E\u91C7\u96C6'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: styles.ModalHeadImage,
                                        onPress: this.StateMent.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2510
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2513
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(423                 ), __source: { // 423 = ../images/1-60.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2514
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2516
                                            }
                                        },
                                        '\u5355\u636E\u62A5\u8868'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLine, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2521
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(411                 ), style: styles.ModalImageLine, __source: { // 411 = ../images/1_48.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2522
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: [styles.ModalHead, { marginBottom: 10 }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2524
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.pullOut.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2525
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2528
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(424                 ), __source: { // 424 = ../images/1_56.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2529
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2531
                                            }
                                        },
                                        '\u9000\u51FA\u8D26\u53F7'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        onPress: this.UpData.bind(this),
                                        style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2535
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2538
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(425                 ), __source: { // 425 = ../images/1_59.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2539
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2541
                                            }
                                        },
                                        '\u6570\u636E\u66F4\u65B0'
                                    )
                                ),
                                _react2.default.createElement(_reactNative.TouchableOpacity, { style: styles.ModalHeadImage, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2545
                                    }
                                })
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.statement,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2550
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.ScrollView,
                        { style: styles.modalStyle, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2558
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalTitle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2559
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { style: styles.ModalLeft, onPress: this.YeWu.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2560
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2562
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: this.state.pressStatus == 'pressin' ? require(404                 ) : require(345                 ), __source: { // 345 = ../images/1_43.png // 404 = ../images/1_42.png
                                            fileName: _jsxFileName,
                                            lineNumber: 2563
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2566
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalImage, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2567
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(405                 ), __source: { // 405 = ../images/1_39.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2568
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2570
                                            }
                                        },
                                        '\u4E1A\u52A1'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLeft1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2575
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(406                 ), __source: { // 406 = ../images/1_47.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2576
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { style: styles.ModalLeft, onPress: this.ShouYin.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2578
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: [{ marginLeft: 14 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2580
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: this.state.PressStatus == 'Pressin' ? require(404                 ) : require(345                 ), __source: { // 345 = ../images/1_43.png // 404 = ../images/1_42.png
                                            fileName: _jsxFileName,
                                            lineNumber: 2581
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2584
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalImage, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2585
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(407                 ), __source: { // 407 = ../images/1_41.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2586
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2588
                                            }
                                        },
                                        '\u6536\u94F6'
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2594
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalHead, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2595
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.YaoHuo1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2596
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2599
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(408                 ), __source: { // 408 = ../images/1_25.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2600
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2602
                                            }
                                        },
                                        '\u95E8\u5E97\u8981\u8D27'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.PSShouHuo1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2606
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2609
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(409                 ), __source: { // 409 = ../images/1_28.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2610
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2612
                                            }
                                        },
                                        '\u914D\u9001\u6536\u8D27'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.ModalHeadImage, onPress: this.SSPanDian1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2616
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2618
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(410                 ), __source: { // 410 = ../images/1_29.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2619
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2621
                                            }
                                        },
                                        '\u5B9E\u65F6\u76D8\u70B9'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLine, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2626
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(411                 ), style: styles.ModalImageLine, __source: { // 411 = ../images/1_48.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2627
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalHead, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2630
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.SPPanDian1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2631
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2634
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(412                 ), __source: { // 412 = ../images/1_36.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2635
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2637
                                            }
                                        },
                                        '\u5546\u54C1\u76D8\u70B9'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.SunYi1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2641
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2644
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(413                 ), __source: { // 413 = ../images/1_38.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2645
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2647
                                            }
                                        },
                                        '\u5546\u54C1\u635F\u6EA2'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.ModalHeadImage, onPress: this.SPCaiGou1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2651
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2653
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(414                 ), __source: { // 414 = ../images/1_40.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2654
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2656
                                            }
                                        },
                                        '\u5546\u54C1\u91C7\u8D2D'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLine, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2661
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(411                 ), style: styles.ModalImageLine, __source: { // 411 = ../images/1_48.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2662
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalHead, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2665
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.SPYanShou1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2666
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2669
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(415                 ), __source: { // 415 = ../images/1_44.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2670
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2672
                                            }
                                        },
                                        '\u5546\u54C1\u9A8C\u6536'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.XPCaiGou1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2676
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2679
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(416                 ), __source: { // 416 = ../images/1_45.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2680
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2682
                                            }
                                        },
                                        '\u534F\u914D\u91C7\u8D2D'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.ModalHeadImage, onPress: this.XPShouHuo1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2686
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2688
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(417                 ), __source: { // 417 = ../images/1_46.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2689
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2691
                                            }
                                        },
                                        '\u534F\u914D\u6536\u8D27'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLine, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2696
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(411                 ), style: styles.ModalImageLine, __source: { // 411 = ../images/1_48.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2697
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: [styles.ModalHead, { marginBottom: 10 }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2700
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.PSDan1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2701
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2704
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(416                 ), __source: { // 416 = ../images/1_45.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2705
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2707
                                            }
                                        },
                                        '\u5546\u54C1\u914D\u9001'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: [styles.ModalHeadImage, { borderRightWidth: 1, borderRightColor: "#f2f2f2" }],
                                        onPress: this.pullOut1.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2711
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadImage1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2714
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(424                 ), __source: { // 424 = ../images/1_56.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2715
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalHeadText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2717
                                            }
                                        },
                                        '\u9000\u51FA\u8D26\u53F7'
                                    )
                                ),
                                _react2.default.createElement(_reactNative.TouchableOpacity, { style: styles.ModalHeadImage, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2721
                                    }
                                })
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.receiving,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2726
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.ScrollView,
                        { style: styles.modalStyle, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2734
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalTitle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2735
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { style: styles.ModalLeft, onPress: this.YeWu1.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2736
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2737
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: this.state.pressStatus == 'pressin' ? require(404                 ) : require(345                 ), __source: { // 345 = ../images/1_43.png // 404 = ../images/1_42.png
                                            fileName: _jsxFileName,
                                            lineNumber: 2738
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2740
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalImage, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2741
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(405                 ), __source: { // 405 = ../images/1_39.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2742
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2744
                                            }
                                        },
                                        '\u4E1A\u52A1'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalLeft1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2749
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(406                 ), __source: { // 406 = ../images/1_47.png
                                        fileName: _jsxFileName,
                                        lineNumber: 2750
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { style: styles.ModalLeft, onPress: this.ShouYin1.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2752
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: [{ marginLeft: 14 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2754
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: this.state.PressStatus == 'Pressin' ? require(404                 ) : require(345                 ), __source: { // 345 = ../images/1_43.png // 404 = ../images/1_42.png
                                            fileName: _jsxFileName,
                                            lineNumber: 2755
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2758
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalImage, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2759
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(407                 ), __source: { // 407 = ../images/1_41.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2760
                                            }
                                        })
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2762
                                            }
                                        },
                                        '\u6536\u94F6'
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2768
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalHead, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2769
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2770
                                        }
                                    },
                                    '\u656C\u8BF7\u671F\u5F85~~~'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        transparent: true,
                        visible: this.state.emptydata,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2778
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Image,
                        { source: require(346                       ), // 346 = ../images/background.png
                            style: [styles.ModalStyle, { justifyContent: 'center', alignItems: 'center' }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2785
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalStyleCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2787
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalStyleTitle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2788
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ModalTitleText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2789
                                        }
                                    },
                                    '\u8BF7\u9009\u62E9\u5355\u636E'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.Emptydata.bind(this), style: styles.Button, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2793
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ModalTitleText, { color: "#ffffff" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2794
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        transparent: true,
                        visible: this.state.Promp,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2801
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Image,
                        { source: require(346                       ), style: [styles.ModalStyle, { justifyContent: 'center', alignItems: 'center' }], __source: { // 346 = ../images/background.png
                                fileName: _jsxFileName,
                                lineNumber: 2808
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalStyleCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2809
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalStyleTitle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2810
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ModalTitleText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2811
                                        }
                                    },
                                    '\u8BF7\u9009\u62E9\u7528\u6237\u6A21\u5F0F'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.Mode.bind(this), style: styles.Button, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2815
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ModalTitleText, { color: "#ffffff" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2816
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        transparent: true,
                        visible: this.state.Promp1,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2823
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Image,
                        { source: require(346                       ), style: [styles.ModalStyle, { justifyContent: 'center', alignItems: 'center' }], __source: { // 346 = ../images/background.png
                                fileName: _jsxFileName,
                                lineNumber: 2830
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalStyleCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2832
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalStyleTitle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2833
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ModalTitleText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2834
                                        }
                                    },
                                    '\u8BF7\u5C06\u6A21\u5F0F\u6539\u4E3A\u89E6\u6478'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.Mode1.bind(this), style: styles.Button, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2838
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ModalTitleText, { color: "#ffffff" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2840
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        transparent: true,
                        visible: this.state.Permissions,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2847
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Image,
                        { source: require(346                       ), style: [styles.ModalStyle, { justifyContent: 'center', alignItems: 'center' }], __source: { // 346 = ../images/background.png
                                fileName: _jsxFileName,
                                lineNumber: 2852
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalStyleCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2853
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalStyleTitle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2854
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ModalTitleText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2855
                                        }
                                    },
                                    '\u6CA1\u6709\u914D\u9001\u673A\u6784,\u4E0D\u80FD\u8FDB\u884C\u8BE5\u4E1A\u52A1'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.MoDe.bind(this), style: styles.Button, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2859
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ModalTitleText, { color: "#ffffff" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2860
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        transparent: true,
                        visible: this.state.Permissions1,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2867
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Image,
                        { source: require(346                       ), style: [styles.ModalStyle, { justifyContent: 'center', alignItems: 'center' }], __source: { // 346 = ../images/background.png
                                fileName: _jsxFileName,
                                lineNumber: 2874
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalStyleCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2876
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalStyleTitle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2877
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ModalTitleText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2878
                                        }
                                    },
                                    '\u8BE5\u5E97\u4E0D\u662F\u914D\u9001\u4E2D\u5FC3,\u4E0D\u80FD\u8FDB\u884C\u8BE5\u4E1A\u52A1'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.MoDe1.bind(this), style: styles.Button, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2882
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ModalTitleText, { color: "#ffffff" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2884
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        transparent: true,
                        visible: this.state.Permissions2,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2891
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Image,
                        { source: require(346                       ), style: [styles.ModalStyle, { justifyContent: 'center', alignItems: 'center' }], __source: { // 346 = ../images/background.png
                                fileName: _jsxFileName,
                                lineNumber: 2898
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalStyleCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2900
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalStyleTitle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2901
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ModalTitleText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2902
                                        }
                                    },
                                    '\u8BE5\u673A\u6784\u6CA1\u6709\u91C7\u8D2D\u6743'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.MoDe2.bind(this), style: styles.Button, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2906
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ModalTitleText, { color: "#ffffff" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2907
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.NewData,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2914
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LoadCenter, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2922
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.loading, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2923
                                }
                            },
                            _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2924
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TextLoading, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2925
                                    }
                                },
                                '\u66F4\u65B0\u6570\u636E\u4E2D...'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        transparent: true,
                        visible: this.state.DataComplete,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 2929
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Image,
                        { source: require(346                       ), style: [styles.ModalStyle, { justifyContent: 'center', alignItems: 'center' }], __source: { // 346 = ../images/background.png
                                fileName: _jsxFileName,
                                lineNumber: 2936
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalStyleCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2937
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalStyleTitle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2938
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ModalTitleText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2939
                                        }
                                    },
                                    '\u6570\u636E\u66F4\u65B0\u5B8C\u6BD5'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.Datacomplete.bind(this), style: styles.Button, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2943
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ModalTitleText, { color: "#ffffff" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2944
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);
    return Index;
}(_react.Component);

exports.default = Index;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: "#f2f2f2"
    },
    login: {
        marginLeft: 60,
        marginRight: 60,
        marginTop: 40,
        paddingTop: 12,
        paddingBottom: 12,
        backgroundColor: "#f47882",
        color: "#ffffff",
        borderRadius: 3,
        textAlign: "center",
        fontSize: 20
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    onclick: {
        marginLeft: 18
    },
    HeaderImage1: {
        marginRight: 25,
        marginTop: 5
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    scrollview: {
        width: 130,
        backgroundColor: "#ffffff",
        flex: 2
    },
    Active: {
        color: "#333333",
        textAlign: "center",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    click: {
        borderTopWidth: 1,
        borderTopColor: "#f2f2f2",
        borderRightColor: "#f2f2f2",
        borderRightWidth: 1,
        paddingTop: 20,
        paddingBottom: 20
    },
    clickes: {
        borderTopWidth: 1,
        borderTopColor: "#f2f2f2",
        borderRightColor: "#f2f2f2",
        borderRightWidth: 1,
        paddingTop: 20,
        paddingBottom: 20,
        backgroundColor: "#f2f2f2"
    },
    RightList: {
        paddingLeft: 15,
        paddingRight: 15,
        flex: 4,
        backgroundColor: "#ffffff"
    },
    RightList1: {
        flex: 4
    },
    ScrollView1: {
        flex: 1,
        backgroundColor: "#ffffff",
        marginLeft: 5
    },
    ContList: {
        flex: 22,
        flexDirection: "row"
    },
    Image: {
        justifyContent: 'center',
        alignItems: 'center'
    },
    Text: {
        textAlign: "center",
        marginTop: 10,
        height: 20,
        fontSize: 14,
        color: "#333333"
    },
    AddNumber: {
        height: 30
    },
    addnumber: {
        height: 20,
        position: 'absolute',
        right: 5,
        top: 3
    },
    Reduction1: {
        color: "red",
        position: 'absolute',
        right: 4,
        top: 4,
        fontSize: 14
    },
    subtraction: {
        marginRight: 10,
        marginTop: 2
    },
    Subtraction: {
        position: 'absolute',
        right: 5,
        top: 12,
        flexDirection: "row"
    },
    Reduction: {
        borderRadius: 50,
        backgroundColor: "red",
        color: "#ffffff",
        textAlign: "center",
        width: 15,
        height: 15,
        lineHeight: 12,
        fontSize: 18
    },
    Number: {
        color: "red",
        marginRight: 6
    },
    Border: {
        borderRightWidth: 1,
        borderRightColor: "#f2f2f2",
        flex: 3,
        paddingBottom: 30
    },
    fontColorGray: {
        textAlign: "center"
    },
    nomore: {
        textAlign: "center",
        marginTop: 20,
        marginBottom: 10
    },
    License: {
        flex: 1,
        backgroundColor: "#333333",
        opacity: 0.8,
        justifyContent: 'center',
        alignItems: 'center'
    },
    LicenseConter: {
        width: 280,
        backgroundColor: "#ffffff",
        borderRadius: 5,
        paddingHorizontal: 50,
        paddingVertical: 20
    },
    LicenseText: {
        fontSize: 16,
        color: "#323232",
        marginLeft: 40
    },
    LicenseTextInput: {
        width: 178,
        paddingTop: 5,
        paddingBottom: 5,
        marginTop: 16,
        marginBottom: 16,
        borderTopWidth: 1,
        borderBottomWidth: 1,
        borderRightWidth: 1,
        borderLeftWidth: 1,
        borderTopColor: "#cccccc",
        borderBottomColor: "#cccccc",
        borderLeftColor: "#cccccc",
        borderRightColor: "#cccccc"
    },
    Determine: {
        width: 80,
        paddingTop: 5,
        paddingBottom: 5,
        backgroundColor: "#f47882",
        borderRadius: 3,
        marginLeft: 48
    },
    DetermineText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    },
    close: {
        width: 40,
        height: 40,
        position: "absolute",
        right: 0,
        top: 5
    },
    CloseText: {
        color: "#323232",
        fontSize: 22
    },
    footer: {
        height: 80,
        flexDirection: "row",
        borderTopWidth: 1,
        borderTopColor: "#f2f2f2"
    },
    source: {
        flexDirection: "row",
        flex: 1
    },
    Home: {
        flex: 1,
        alignItems: 'center',
        paddingTop: 10,
        backgroundColor: "#ffffff"
    },
    home1: {
        color: '#999999',
        fontSize: 16,
        marginTop: 5,
        flex: 1
    },
    home2: {
        color: '#ff4e4e',
        fontSize: 16,
        marginTop: 5,
        flex: 1
    },
    ShopCar: {
        width: 25,
        height: 25,
        backgroundColor: "#ffba00",
        color: "#ffffff",
        textAlign: "center",
        borderRadius: 50,
        position: "absolute",
        top: 10,
        right: -42
    },
    Add: {
        position: "absolute",
        right: -50,
        top: 5,
        color: "#ff4e4e",
        fontWeight: "bold"
    },
    modalStyle: {
        flex: 1,
        backgroundColor: "#ffffff"
    },
    ModalTitle: {
        paddingTop: 14,
        paddingBottom: 14,
        paddingLeft: 14,
        paddingRight: 14,
        flexDirection: "row",
        backgroundColor: "#ff4e4f"
    },
    ModalLeft: {
        flex: 1
    },
    ModalLeft1: {
        width: 2,
        marginTop: 14
    },
    ModalImage: {
        textAlign: "center"
    },
    ModalText: {
        marginTop: 16,
        fontSize: 20,
        color: "#ffffff",
        textAlign: "center"
    },
    ModalCont: {
        paddingTop: 14,
        paddingBottom: 14,
        paddingLeft: 14,
        paddingRight: 14
    },
    ModalHead: {
        flexDirection: "row"
    },
    ModalHeadImage: {
        flex: 1,
        paddingBottom: 10
    },
    ModalHeadImage1: {
        textAlign: "center",
        marginTop: 10
    },
    ModalHeadText: {
        textAlign: "center",
        fontSize: 18,
        color: "#666666",
        marginTop: 5
    },
    ModalLine: {
        height: 2
    },
    ModalImageLine: {
        width: null
    },
    ModalStyle: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        width: null,
        height: null
    },
    ModalStyleCont: {
        height: 165,
        paddingTop: 25,
        paddingLeft: 10,
        paddingRight: 10,
        borderRadius: 5,
        backgroundColor: "#ffffff"
    },
    ModalStyleTitle: {
        paddingLeft: 88,
        paddingRight: 88,
        paddingBottom: 15,
        borderBottomWidth: 1,
        borderBottomColor: "#f5f5f5"
    },
    ModalTitleText: {
        fontSize: 16,
        color: "#ff4e4e",
        textAlign: "center"
    },
    Button: {
        paddingTop: 12,
        paddingBottom: 12,
        borderRadius: 5,
        marginTop: 20,
        marginBottom: 20,
        backgroundColor: "#ff4e4e"
    },
    LoadCenter: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    loading: {
        paddingLeft: 15,
        paddingRight: 15,
        paddingTop: 15,
        paddingBottom: 15,
        backgroundColor: "#000000",
        opacity: 0.8,
        borderRadius: 5
    },
    TextLoading: {
        fontSize: 17,
        color: "#ffffff"
    },
    activity: {
        marginBottom: 5
    }
});
}, 308, null, "myproject/app/Index.js");
__d(/* myproject/app/HistoricalDocument.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\HistoricalDocument.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Sell = require(310           ); // 310 = ../Sell/Sell

var _Sell2 = babelHelpers.interopRequireDefault(_Sell);

var _ShoppingCart = require(349             ); // 349 = ./ShoppingCart

var _ShoppingCart2 = babelHelpers.interopRequireDefault(_ShoppingCart);

var _GoodsDetails2 = require(388             ); // 388 = ./GoodsDetails

var _GoodsDetails3 = babelHelpers.interopRequireDefault(_GoodsDetails2);

var _Enquiries = require(389          ); // 389 = ./Enquiries

var _Enquiries2 = babelHelpers.interopRequireDefault(_Enquiries);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var dbAdapter = new _DBAdapter2.default();
var db = void 0;

var HistoricalDocument = function (_Component) {
    babelHelpers.inherits(HistoricalDocument, _Component);

    function HistoricalDocument(props) {
        babelHelpers.classCallCheck(this, HistoricalDocument);

        var _this = babelHelpers.possibleConstructorReturn(this, (HistoricalDocument.__proto__ || Object.getPrototypeOf(HistoricalDocument)).call(this, props));

        _this.state = {
            shopcod: "",
            reqDetailCode: "",
            name: "",
            endDate: "",
            startDate: "",
            formno: "",
            prodcode: "",
            kaishi1: "",
            jieshu1: "",
            danzi1: "",
            codesw1: "",
            shopcar: "",
            scode: "",
            show: false,
            animating: true,
            nomore: false,
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return row1 !== row2;
                } })
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(HistoricalDocument, [{
        key: 'Shop',
        value: function Shop() {
            var nextRoute = {
                name: "主页",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'ShopList',
        value: function ShopList() {
            var nextRoute = {
                name: "主页",
                component: _ShoppingCart2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'pressPush',
        value: function pressPush() {
            var _this2 = this;

            var nextRoute = {
                name: "主页",
                component: _Enquiries2.default,
                params: {
                    reloadView: function reloadView(startDate, endDate, formno, prodcode) {
                        return _this2._reloadView(startDate, endDate, formno, prodcode);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_reloadView',
        value: function _reloadView(startDate, endDate, formno, prodcode) {
            this._setModalVisible();
            kaishi = String(startDate);
            jieshu = String(endDate);
            danzi = String(formno);
            codesw = String(prodcode);
            this.setState({
                kaishi1: kaishi,
                jieshu1: jieshu,
                danzi1: danzi,
                codesw1: codesw
            });
            this.dataRows = [];
            this._dpSearch();
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this3 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _this3._setModalVisible();
                _this3._get();
                _this3._dpSearch();
                _this3._fetch();
            });
        }
    }, {
        key: '_setModalVisible',
        value: function _setModalVisible() {
            var isShow = this.state.show;
            this.setState({
                show: !isShow
            });
        }
    }, {
        key: '_get',
        value: function _get() {
            var _this4 = this;

            _Storage2.default.get('StateMent').then(function (tags) {
                if (tags == 0) {
                    _Storage2.default.get('name').then(function (tags) {
                        _this4.setState({
                            name: tags
                        });
                    });
                } else {
                    _Storage2.default.get('Name').then(function (tags) {
                        _this4.setState({
                            name: tags
                        });
                    });
                }
            });

            _Storage2.default.get('username').then(function (tags) {
                _this4.setState({
                    Username: tags
                });
            });

            _Storage2.default.get('userpwd').then(function (tags) {
                _this4.setState({
                    Userpwd: tags
                });
            });

            _Storage2.default.get('ClientCode').then(function (tags) {
                _this4.setState({
                    ClientCode: tags
                });
            });
        }
    }, {
        key: '_dpSearch',
        value: function _dpSearch() {
            var _this5 = this;

            _Storage2.default.get('LinkUrl').then(function (tags) {
                _this5.setState({
                    linkurl: tags
                });
            });

            _Storage2.default.get('history').then(function (tags) {
                _this5.setState({
                    reqDetailCode: tags
                });
            });

            _Storage2.default.get('code').then(function (tags) {
                _Storage2.default.get("usercode", "").then(function (usercode) {
                    _Storage2.default.get("username", "").then(function (username) {
                        var params = {
                            ClientCode: _this5.state.ClientCode,
                            username: _this5.state.Username,
                            usercode: _this5.state.Userpwd
                        };
                    });
                });

                var params = {
                    reqCode: "App_PosReq",
                    reqDetailCode: _this5.state.reqDetailCode,
                    ClientCode: _this5.state.ClientCode,
                    sDateTime: Date.parse(new Date()),
                    username: _this5.state.Username,
                    usercode: _this5.state.Userpwd,
                    BeginDate: _this5.state.kaishi1,
                    EndDate: _this5.state.jieshu1,
                    shopcode: tags,
                    childshopcode: "",
                    formno: _this5.state.danzi1,
                    prodcode: _this5.state.codesw1,
                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + _this5.state.reqDetailCode + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + ''
                };
                _FetchUtils2.default.post(_this5.state.linkurl, JSON.stringify(params)).then(function (data) {
                    var DetailInfo1 = JSON.stringify(data.DetailInfo1);
                    if (Detailnfo1 = null) {
                        _this5._setModalVisible();
                    }
                    _this5._setModalVisible();
                    if (data.retcode == 1) {
                        var DetailInfo1 = data.DetailInfo1;
                        _this5.dataRows = _this5.dataRows.concat(DetailInfo1);
                        if (_this5.dataRows == 0) {
                            return;
                        } else {
                            _this5.setState({
                                dataSource: _this5.state.dataSource.cloneWithRows(_this5.dataRows)
                            });
                        }
                    } else if (_this5.state.name == null) {
                        return;
                    } else {
                        alert(JSON.stringify(data));
                    }
                }, function (err) {
                    alert("网络请求失败");
                });
            });
        }
    }, {
        key: '_fetch',
        value: function _fetch() {
            var _this6 = this;

            dbAdapter.selectShopInfoAllCountm().then(function (rows) {
                var ShopCar = rows.item(0).countm;
                _this6.setState({
                    shopcar: ShopCar
                });
            });
        }
    }, {
        key: 'GoodsDetails',
        value: function GoodsDetails(rowData) {
            this.props.navigator.push({
                component: _GoodsDetails3.default,
                params: {
                    Formno: rowData.Formno,
                    FormDate: rowData.FormDate,
                    promemo: rowData.promemo
                }
            });
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this7 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.Cont, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 241
                    }
                },
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { onPress: function onPress() {
                            return _this7.GoodsDetails(rowData);
                        }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 242
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.ContList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 243
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 244
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 245
                                    }
                                },
                                '\u5355\u53F7\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListRight, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 246
                                    }
                                },
                                rowData.Formno
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 248
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 249
                                    }
                                },
                                '\u5355\u636E\u72B6\u6001\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [styles.ListRight, { color: "#ff4e4e" }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 250
                                    }
                                },
                                rowData.checktype
                            )
                        ),
                        this.state.name == "商品采购" || this.state.name == "商品验收" || this.state.name == "协配采购" || this.state.name == "协配收货" ? _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 254
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 255
                                    }
                                },
                                '\u4F9B\u5E94\u5546\u7801\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListRight, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 256
                                    }
                                },
                                rowData.storecode
                            )
                        ) : null,
                        this.state.name == "协配采购" || this.state.name == "协配收货" ? _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 261
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 262
                                    }
                                },
                                '\u673A\u6784\u4FE1\u606F\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListRight, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 263
                                    }
                                },
                                rowData.childshop
                            )
                        ) : null,
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 266
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 267
                                    }
                                },
                                '\u5236\u5355\u65E5\u671F\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListRight, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 268
                                    }
                                },
                                rowData.FormDate
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 270
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 271
                                    }
                                },
                                '\u5355\u636E\u6570\u91CF\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListRight, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 272
                                    }
                                },
                                rowData.countm
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 274
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 275
                                    }
                                },
                                '\u5355\u636E\u91D1\u989D\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListRight, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 276
                                    }
                                },
                                rowData.prototal
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 278
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 279
                                    }
                                },
                                '\u5355\u636E\u5907\u6CE8\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListRight, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 280
                                    }
                                },
                                rowData.promemo
                            )
                        )
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 290
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 291
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 292
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 293
                                }
                            },
                            this.state.name
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.pressPush.bind(this), style: styles.onclick, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 294
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(381                 ), style: styles.HeaderImage, __source: { // 381 = ../images/1_08.png
                                    fileName: _jsxFileName,
                                    lineNumber: 295
                                }
                            })
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Rolling, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 299
                        }
                    },
                    _react2.default.createElement(_reactNative.ListView, {
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 300
                        }
                    })
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.footer, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 306
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Home, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 307
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(393                 ), __source: { // 393 = ../images/1_30.png
                                fileName: _jsxFileName,
                                lineNumber: 307
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.home2, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 307
                                }
                            },
                            '\u5386\u53F2\u5355\u636E\u67E5\u8BE2'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Home, onPress: this.Shop.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 308
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(383                  ), __source: { // 383 = ../images/1_311.png
                                fileName: _jsxFileName,
                                lineNumber: 308
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.home1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 308
                                }
                            },
                            '\u5546\u54C1'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Home, onPress: this.ShopList.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 309
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 310
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Image,
                                { source: require(394                  ), __source: { // 394 = ../images/1_322.png
                                        fileName: _jsxFileName,
                                        lineNumber: 311
                                    }
                                },
                                this.state.shopcar == 0 ? null : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [{ position: "absolute", right: -200 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 315
                                        }
                                    },
                                    this.state.shopcar
                                ),
                                this.state.shopcar > 0 ? _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ShopCar, { paddingTop: 3 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 319
                                        }
                                    },
                                    this.state.shopcar
                                ) : null,
                                this.state.shopcar < 999 ? null : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ShopCar, { width: 30, height: 30, top: 11, lineHeight: 21 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 324
                                        }
                                    },
                                    this.state.shopcar
                                ),
                                this.state.shopcar > 999 ? _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 328
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.ShopCar, { width: 30, height: 30, top: 11, lineHeight: 23 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 329
                                            }
                                        },
                                        this.state.shopcar
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.Add, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 330
                                            }
                                        },
                                        '+'
                                    )
                                ) : null
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.home1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 337
                                }
                            },
                            '\u6E05\u5355'
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.show,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 340
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LoadCenter, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 346
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.loading, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 347
                                }
                            },
                            _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 348
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TextLoading, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 349
                                    }
                                },
                                '\u52A0\u8F7D\u4E2D'
                            )
                        )
                    )
                )
            );
        }
    }]);
    return HistoricalDocument;
}(_react.Component);

exports.default = HistoricalDocument;

var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: "#f2f2f2"
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderImage1: {
        marginRight: 25,
        marginTop: 5
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    Cont: {
        marginBottom: 10,
        marginLeft: 10,
        marginRight: 10,
        backgroundColor: "#ffffff",
        paddingLeft: 20,
        paddingRight: 20,
        paddingTop: 12,
        paddingBottom: 12,
        borderRadius: 5
    },
    List: {
        flexDirection: "row",
        fontSize: 16
    },
    ListLeft: {
        fontSize: 16,
        color: "#666666"
    },
    ListRight: {
        fontSize: 14,
        color: "#333333",
        lineHeight: 28
    },
    Rolling: {
        flex: 15,
        paddingTop: 10
    },
    centering: {
        position: "absolute",
        top: 50
    },
    fontColorGray: {
        textAlign: "center"
    },
    footer: {
        height: 80,
        flexDirection: "row",
        borderTopWidth: 1,
        borderTopColor: "#f2f2f2"
    },
    source: {
        flexDirection: "row",
        flex: 1
    },
    Home: {
        flex: 1,
        alignItems: 'center',
        paddingTop: 10,
        backgroundColor: "#ffffff"
    },
    home1: {
        color: '#999999',
        fontSize: 16,
        marginTop: 5,
        flex: 1
    },
    home2: {
        color: '#ff4e4e',
        fontSize: 16,
        marginTop: 5,
        flex: 1
    },
    ShopCar: {
        width: 25,
        height: 25,
        backgroundColor: "#ffba00",
        color: "#ffffff",
        textAlign: "center",
        borderRadius: 50,
        position: "absolute",
        top: 10,
        right: -42
    },
    Add: {
        position: "absolute",
        right: -50,
        top: 5,
        color: "#ff4e4e",
        fontWeight: "bold"
    },
    LoadCenter: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    loading: {
        paddingLeft: 15,
        paddingRight: 15,
        paddingTop: 15,
        paddingBottom: 15,
        backgroundColor: "#000000",
        opacity: 0.8,
        borderRadius: 5
    },
    TextLoading: {
        fontSize: 17,
        color: "#ffffff"
    },
    activity: {
        marginBottom: 5
    }
});
}, 309, null, "myproject/app/HistoricalDocument.js");
__d(/* myproject/Sell/Sell.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\Sell\\Sell.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308           ); // 308 = ../app/Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Pay = require(311          ); // 311 = ../Sell/Pay

var _Pay2 = babelHelpers.interopRequireDefault(_Pay);

var _OrderDetails = require(348                  ); // 348 = ../app/OrderDetails

var _OrderDetails2 = babelHelpers.interopRequireDefault(_OrderDetails);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _reactNativeSwiper = require(331                  ); // 331 = react-native-swiper

var _reactNativeSwiper2 = babelHelpers.interopRequireDefault(_reactNativeSwiper);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _DeCodePrePrint = require(351                        ); // 351 = ../utils/DeCodePrePrint18

var _DeCodePrePrint2 = babelHelpers.interopRequireDefault(_DeCodePrePrint);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _VipPrice = require(330                ); // 330 = ../utils/VipPrice

var _VipPrice2 = babelHelpers.interopRequireDefault(_VipPrice);

var _NumFormatUtils = require(328                      ); // 328 = ../utils/NumFormatUtils

var _NumFormatUtils2 = babelHelpers.interopRequireDefault(_NumFormatUtils);

var _reactNativeSwipeListView = require(378                           ); // 378 = react-native-swipe-list-view

var _DeCodePrePrint3 = require(387                      ); // 387 = ../utils/DeCodePrePrint

var _DeCodePrePrint4 = babelHelpers.interopRequireDefault(_DeCodePrePrint3);

var _BigDecimalUtils = require(314                       ); // 314 = ../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var decodepreprint = new _DeCodePrePrint2.default();
var dbAdapter = new _DBAdapter2.default();

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var RNScannerAndroid = NativeModules.RNScannerAndroid;
var TblRow1;
var deCode13 = new _DeCodePrePrint4.default();

var Sell = function (_Component) {
    babelHelpers.inherits(Sell, _Component);

    function Sell(props) {
        babelHelpers.classCallCheck(this, Sell);

        var _this = babelHelpers.possibleConstructorReturn(this, (Sell.__proto__ || Object.getPrototypeOf(Sell)).call(this, props));

        _this.state = {
            name: "",
            VipCardNo: "",
            vipPrice: "",
            ShopAmount: "",
            ShopNumber: "",
            BalanceTotal: "",
            JfBal: "",
            CardTypeCode: "",
            numform: "",
            MemberTextInput: "",
            promemo: "",
            Countm: 1,
            Show: false,
            Member: false,

            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
                    return true;
                } })
        };
        _this.dataRow = [];
        _this.TblRow = [];
        return _this;
    }

    babelHelpers.createClass(Sell, [{
        key: 'modal',
        value: function modal() {
            var isShow = this.state.Show;
            this.setState({
                Show: !isShow
            });
        }
    }, {
        key: 'Member',
        value: function Member() {
            var isShow = this.state.Member;
            this.setState({
                Member: !isShow
            });
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _Storage2.default.get("LsNo").then(function (data) {
                    _this2.setState({
                        numform: data
                    });
                });
                _Storage2.default.get('Name').then(function (tags) {
                    _this2.setState({
                        name: tags
                    });
                });

                _this2._dbSearch();
                _this2.Device();
            });
        }
    }, {
        key: '_dbSearch',
        value: function _dbSearch() {
            var _this3 = this;

            this.modal();
            dbAdapter.selectShopInfo().then(function (rows) {
                var shopnumber = 0;
                var shopAmount = 0;
                var ShopPrice = 0;
                var vipPrice = 0;
                for (var i = 0; i < rows.length; i++) {
                    var row = rows.item(i);
                    ShopPrice = _BigDecimalUtils2.default.multiply(row.ShopNumber, row.ShopPrice, 2);
                    shopAmount = _BigDecimalUtils2.default.add(shopAmount, ShopPrice, 2);

                    var number = row.ShopNumber;
                    shopnumber = _BigDecimalUtils2.default.add(shopnumber, row.ShopNumber);
                    if (number !== 0) {
                        _this3.dataRow.push(row);
                        _this3.TblRow.push(row);
                    }
                }
                if (_this3.dataRow == 0) {
                    _this3.modal();
                    return;
                } else {

                    _Storage2.default.get("VipInfo").then(function (data) {
                        var VIPprice = shopAmount;
                        if (data != null && data != "undefined") {
                            var row = JSON.parse(data);
                            TblRow1 = row;
                            VipCardNo = row.CardFaceNo;
                            BalanceTotal = row.BalanceTotal;
                            JfBal = row.JfBal;
                            CardTypeCode = row.CardTypeCode;

                            var _vipPrice = _VipPrice2.default.vipPrice(row, _this3.TblRow);
                            VIPprice = _BigDecimalUtils2.default.subtract(shopAmount, _vipPrice, 2);
                            _this3.setState({
                                VipCardNo: VipCardNo,
                                BalanceTotal: BalanceTotal,
                                JfBal: JfBal,
                                ShopAmount: VIPprice,
                                vipPrice: _vipPrice,
                                CardTypeCode: CardTypeCode
                            });
                        }


                        _this3.setState({
                            ShopNumber: shopnumber,
                            ShopAmount: VIPprice,
                            dataSource: _this3.state.dataSource.cloneWithRows(_this3.dataRow)
                        });
                    });

                    _this3.modal();
                }
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'Device',
        value: function Device() {
            var _this4 = this;

            _reactNative.DeviceEventEmitter.addListener("code", function (reminder) {
                decodepreprint.init(reminder, dbAdapter);
                if (reminder.length == 18 && decodepreprint.deCodePreFlag()) {
                    new Promise.all([decodepreprint.deCodeProdCode(), decodepreprint.deCodeTotal(), decodepreprint.deCodeWeight()]).then(function (results) {
                        if (results.length == 3) {
                            var prodCode = results[0];
                            var total = results[1];
                            var weight = results[2];
                            dbAdapter.selectProdCode(prodCode, 1).then(function (product) {
                                if (product.length != 0) {
                                    var row = product.item(0);

                                    var DataRows = {
                                        'ProdCode': row.ProdCode,
                                        'ProdName': row.ProdName,
                                        'ShopPrice': row.StdPrice,
                                        'ShopNumber': weight,
                                        'ShopAmount': total,
                                        'Pid': row.Pid
                                    };
                                    _this4.dataRow.push(DataRows);
                                    _this4.setState({
                                        MnCode: "",
                                        ShopNumber: _BigDecimalUtils2.default.add(_this4.state.ShopNumber, weight, 2),
                                        ShopAmount: _BigDecimalUtils2.default.add(_this4.state.ShopAmount, total, 2),
                                        dataSource: _this4.state.dataSource.cloneWithRows(_this4.dataRow)
                                    });
                                    var shopInfoData = [];
                                    var shopInfo = {};
                                    shopInfo.Pid = row.Pid;
                                    shopInfo.ProdCode = row.ProdCode;
                                    shopInfo.prodname = row.ProdName;
                                    shopInfo.countm = weight;
                                    shopInfo.ShopPrice = row.StdPrice;
                                    shopInfo.prototal = total;
                                    shopInfo.promemo = "";
                                    shopInfo.DepCode = row.DepCode;
                                    shopInfo.ydcountm = "";
                                    shopInfo.SuppCode = row.SuppCode;
                                    shopInfo.BarCode = row.BarCode;
                                    shopInfoData.push(shopInfo);

                                    dbAdapter.insertShopInfo(shopInfoData, "1");
                                }
                            });
                        }
                    });
                } else {
                    dbAdapter.selectAidCode(reminder, 1).then(function (rows) {
                        var shopnumber = 0;
                        var shopAmount = 0;
                        var vipPrice = 0;
                        for (var i = 0; i < rows.length; i++) {
                            var row = rows.item(i);
                            _this4.TblRow.push(row);
                            if (_this4.state.VipCardNo !== "") {
                                vipPrice = _VipPrice2.default.vipPrice(TblRow1[0], _this4.TblRow);
                            }
                            var VIPprice = _BigDecimalUtils2.default.subtract(_this4.state.ShopAmount, vipPrice, 2);
                            var ShopPrice = row.StdPrice;
                            var prototal = _this4.state.Countm * row.StdPrice;
                            var number = row.ShopNumber;
                            shopnumber = _this4.state.Countm + _this4.state.ShopNumber;
                            var DataRows = {
                                'ProdCode': row.ProdCode,
                                'ProdName': row.ProdName,
                                'ShopPrice': row.StdPrice,
                                'ShopNumber': _this4.state.Countm,
                                'ShopAmount': prototal,
                                'pid': row.Pid
                            };
                            _this4.dataRow.push(DataRows);
                        };
                        shopAmount = ShopPrice + VIPprice;
                        _this4.setState({
                            vipPrice: vipPrice,
                            ShopNumber: shopnumber,
                            ShopAmount: shopAmount,
                            dataSource: _this4.state.dataSource.cloneWithRows(_this4.dataRow)
                        });

                        var shopInfoData = [];
                        var shopInfo = {};
                        shopInfo.Pid = row.Pid;
                        shopInfo.ProdCode = row.ProdCode;
                        shopInfo.prodname = row.ProdName;
                        shopInfo.countm = _this4.state.Countm;
                        shopInfo.ShopPrice = row.StdPrice;
                        shopInfo.prototal = _this4.state.Countm * row.StdPrice;
                        shopInfo.promemo = _this4.state.promemo;
                        shopInfo.DepCode = row.DepCode;
                        shopInfo.ydcountm = "";
                        shopInfo.SuppCode = row.SuppCode;
                        shopInfo.BarCode = row.BarCode;
                        shopInfoData.push(shopInfo);

                        dbAdapter.insertShopInfo(shopInfoData);
                    });
                }
            });
        }
    }, {
        key: 'Code',
        value: function Code() {
            RNScannerAndroid.openScanner();
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                        return _this5.ListButton(rowData);
                    }, style: styles.ShopList1, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 358
                    }
                },
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.Name, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 359
                        }
                    },
                    rowData.ProdCode
                ),
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.Name, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 360
                        }
                    },
                    rowData.ProdName
                ),
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.Number, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 361
                        }
                    },
                    rowData.ShopPrice
                ),
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.Number, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 362
                        }
                    },
                    rowData.ShopNumber
                ),
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.Number, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 363
                        }
                    },
                    rowData.ShopAmount
                )
            );
        }
    }, {
        key: 'renderHiddenRow',
        value: function renderHiddenRow(rowData, sectionID, rowID) {
            var _this6 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                        return _this6.deteleShopInfo(rowData);
                    }, style: styles.rowBack, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 370
                    }
                },
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.rowBackText, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 371
                        }
                    },
                    '\u5220\u9664'
                )
            );
        }
    }, {
        key: 'deteleShopInfo',
        value: function deteleShopInfo(rowData, sectionID, rowID) {
            var _this7 = this;

            dbAdapter.deteleShopInfo(rowData.ProdCode).then(function (rows) {
                if (rows == true) {
                    dbAdapter.selectShopInfo().then(function (rows) {
                        var shopnumber = 0;
                        var shopAmount = 0;
                        var vipPrice = 0;
                        _this7.dataRow = [];
                        _this7.VipTblRow = [];
                        for (var i = 0; i < rows.length; i++) {
                            var row = rows.item(i);
                            _this7.VipTblRow.push(row);
                            var number = row.ShopNumber;
                            shopAmount = _BigDecimalUtils2.default.add(row.ShopAmount, shopAmount, 2);
                            shopnumber = _BigDecimalUtils2.default.add(shopnumber, row.ShopNumber, 2);
                            if (number !== 0) {
                                _this7.dataRow.push(row);
                            }
                        }
                        if (_this7.state.VipCardNo !== "") {
                            vipPrice = _VipPrice2.default.vipPrice(TblRow1[0], _this7.VipTblRow);
                        }
                        var VIPprice = shopAmount - vipPrice;
                        _this7.setState({
                            vipPrice: vipPrice,
                            number1: number,
                            ShopNumber: shopnumber,
                            ShopAmount: VIPprice,
                            dataSource: _this7.state.dataSource.cloneWithRows(_this7.dataRow)
                        });
                    });
                    dbAdapter.selectShopInfoAllCountm().then(function (rows) {
                        var ShopCar = rows.item(0).countm;
                        _this7.setState({
                            shopcar: ShopCar
                        });
                    });
                }
            });
        }
    }, {
        key: 'ListButton',
        value: function ListButton(rowData) {
            _Storage2.default.save("DataName", "移动销售");
            this.props.navigator.push({
                component: _OrderDetails2.default,
                params: {
                    ProdCode: rowData.ProdCode,
                    ProdName: rowData.ProdName,
                    Pid: rowData.Pid,
                    ShopPrice: rowData.ShopPrice,
                    Remark: this.state.promemo,
                    prototal: this.state.Countm * rowData.ShopPrice,
                    countm: rowData.ShopNumber,
                    DepCode: rowData.DepCode,
                    ydcountm: "",
                    promemo: "",
                    SuppCode: rowData.SuppCode,
                    BarCode: rowData.BarCode
                }
            });
        }
    }, {
        key: 'MemberButton',
        value: function MemberButton() {
            this.Member();
        }
    }, {
        key: 'CloseButton',
        value: function CloseButton() {
            this.Member();
        }
    }, {
        key: 'Button',
        value: function Button() {
            var _this8 = this;

            if (this.state.VipCardNo !== "") {
                _Storage2.default.get('vipPrice').then(function (vipPrice) {
                    _this8.setState({
                        ShopAmount: vipPrice
                    });
                });
            }
            this.modal();
            _Storage2.default.get('ShopCode').then(function (ShopCode) {
                _Storage2.default.get('PosCode').then(function (PosCode) {
                    var params = {
                        TblName: "ReadVipInfo",
                        CardFaceNo: _this8.state.CardNumber,
                        Mobile: "",
                        ShopCode: ShopCode,
                        PosCode: PosCode,
                        IsChuZhi: ""
                    };
                    _Storage2.default.get('LinkUrl').then(function (tags) {
                        _FetchUtils2.default.post(tags, JSON.stringify(params)).then(function (data) {
                            if (data.retcode == 1) {
                                var TblRow = data.TblRow;
                                var VipCardNo;
                                var BalanceTotal;
                                var JfBal;
                                var CardFaceNo;
                                var CardTypeCode;
                                for (var i = 0; i < TblRow.length; i++) {
                                    var row = TblRow[i];
                                    _Storage2.default.save("VipInfo", JSON.stringify(row));
                                    VipCardNo = row.CardFaceNo;
                                    BalanceTotal = JSON.stringify(row.BalanceTotal);
                                    JfBal = JSON.stringify(row.JfBal);
                                    CardTypeCode = JSON.stringify(row.CardTypeCode);
                                };
                                var vipPrice = _VipPrice2.default.vipPrice(TblRow[0], _this8.TblRow);
                                var VIPprice = _BigDecimalUtils2.default.subtract(_this8.state.ShopAmount, vipPrice, 2);
                                TblRow1 = data.TblRow;
                                _this8.setState({
                                    VipCardNo: VipCardNo,
                                    BalanceTotal: BalanceTotal,
                                    JfBal: JfBal,
                                    ShopAmount: VIPprice,
                                    vipPrice: vipPrice,
                                    CardTypeCode: CardTypeCode
                                });
                                _this8.modal();
                                _this8.Member();
                            } else {
                                _this8.modal();
                                alert(JSON.stringify(data));
                            }
                        }, function (err) {
                            alert("网络请求失败");
                        });
                    });
                });
            });
        }
    }, {
        key: 'PayButton',
        value: function PayButton() {

            if (this.dataRow == "") {
                alert("请添加商品");
            } else {
                if (this.state.name == "退货") {
                    var dataRows = this.dataRow;
                    var nextRoute = {
                        name: "Pay",
                        component: _Pay2.default,
                        params: {
                            VipCardNo: this.state.VipCardNo,
                            JfBal: this.state.JfBal,
                            BalanceTotal: this.state.BalanceTotal,
                            CardTypeCode: this.state.CardTypeCode,
                            shopamount: this.state.ShopAmount,
                            numform: this.state.numform,
                            vipData: JSON.stringify(this.state.vipPrice),
                            Seles: "R",
                            dataRows: dataRows
                        }
                    };
                    this.props.navigator.push(nextRoute);
                } else if (this.state.name == "移动销售") {
                    var dataRows = this.dataRow;
                    var nextRoute = {
                        name: "Pay",
                        component: _Pay2.default,
                        params: {
                            VipCardNo: this.state.VipCardNo,
                            JfBal: this.state.JfBal,
                            BalanceTotal: this.state.BalanceTotal,
                            CardTypeCode: this.state.CardTypeCode,
                            shopamount: this.state.ShopAmount,
                            numform: this.state.numform,
                            vipData: JSON.stringify(this.state.vipPrice),
                            Seles: "T",
                            dataRows: dataRows
                        }
                    };
                    this.props.navigator.push(nextRoute);
                };
            }
        }
    }, {
        key: 'ReturnGoods',
        value: function ReturnGoods() {
            this.setState({
                name: "退货"
            });
        }
    }, {
        key: 'DeleteShop',
        value: function DeleteShop() {
            if (this.dataRow == "") {
                alert("请添加商品");
            } else {
                dbAdapter.deleteData("shopInfo");
                this.dataRow = [];
                this.setState({
                    dataSource: this.state.dataSource.cloneWithRows(this.dataRow),
                    ShopNumber: "",
                    ShopAmount: ""
                });
            }
        }
    }, {
        key: 'inputOnBlur',
        value: function inputOnBlur() {
            var _this9 = this;

            var reminder = this.state.MnCode;
            if (reminder == undefined || reminder.length == 0) {
                return;
            }
            decodepreprint.init(reminder, dbAdapter);
            if (reminder.length == 13 && deCode13.deCodePreFlag(reminder)) {
                new Promise.all([deCode13.deCodeProdCode(reminder, dbAdapter), deCode13.deCodeTotile(reminder, dbAdapter)]).then(function (result) {
                    if (result.length == 2) {
                        var prodCode = result[0];
                        var price = result[1];
                        dbAdapter.selectProdCode(prodCode, 1).then(function (prods) {
                            if (prods.length == 0) {
                                ToastAndroid.show("商品不存在", ToastAndroid.SHORT);
                                return;
                            }
                            var row = prods.item(0);
                            var newShopNumber = _BigDecimalUtils2.default.divide(price, row.StdPrice, 2);

                            var DataRows = {
                                'ProdCode': row.ProdCode,
                                'ProdName': row.ProdName,
                                'ShopPrice': row.StdPrice,
                                'ShopNumber': newShopNumber,
                                'ShopAmount': price,
                                'Pid': row.Pid
                            };
                            _this9.dataRow.push(DataRows);
                            _this9.setState({
                                MnCode: "",
                                ShopNumber: _BigDecimalUtils2.default.add(_this9.state.ShopNumber, newShopNumber, 2),
                                ShopAmount: _BigDecimalUtils2.default.add(_this9.state.ShopAmount, price, 2),
                                dataSource: _this9.state.dataSource.cloneWithRows(_this9.dataRow)
                            });
                            var shopInfoData = [];
                            var shopInfo = {};
                            shopInfo.Pid = row.Pid;
                            shopInfo.ProdCode = row.ProdCode;
                            shopInfo.prodname = row.ProdName;
                            shopInfo.countm = newShopNumber;
                            shopInfo.ShopPrice = row.StdPrice;
                            shopInfo.prototal = price;
                            shopInfo.promemo = "";
                            shopInfo.DepCode = row.DepCode;
                            shopInfo.ydcountm = "";
                            shopInfo.SuppCode = row.SuppCode;
                            shopInfo.BarCode = row.BarCode;
                            shopInfoData.push(shopInfo);

                            dbAdapter.insertShopInfo(shopInfoData, "1");
                        });
                    }
                });
            } else if (reminder.length == 18 && decodepreprint.deCodePreFlag()) {
                new Promise.all([decodepreprint.deCodeProdCode(), decodepreprint.deCodeTotal(), decodepreprint.deCodeWeight()]).then(function (results) {
                    if (results.length == 3) {
                        var prodCode = results[0];
                        var total = results[1];
                        var weight = results[2];
                        dbAdapter.selectProdCode(prodCode, 1).then(function (product) {
                            if (product.length != 0) {
                                var row = product.item(0);

                                var DataRows = {
                                    'ProdCode': row.ProdCode,
                                    'ProdName': row.ProdName,
                                    'ShopPrice': row.StdPrice,
                                    'ShopNumber': weight,
                                    'ShopAmount': total,
                                    'Pid': row.Pid
                                };
                                _this9.dataRow.push(DataRows);
                                _this9.setState({
                                    MnCode: "",
                                    ShopNumber: _BigDecimalUtils2.default.add(_this9.state.ShopNumber, weight, 2),
                                    ShopAmount: _BigDecimalUtils2.default.add(_this9.state.ShopAmount, total, 2),
                                    dataSource: _this9.state.dataSource.cloneWithRows(_this9.dataRow)
                                });

                                var shopInfoData = [];
                                var shopInfo = {};
                                shopInfo.Pid = row.Pid;
                                shopInfo.ProdCode = row.ProdCode;
                                shopInfo.prodname = row.ProdName;
                                shopInfo.countm = weight;
                                shopInfo.ShopPrice = row.StdPrice;
                                shopInfo.prototal = total;
                                shopInfo.promemo = "";
                                shopInfo.DepCode = row.DepCode;
                                shopInfo.ydcountm = "";
                                shopInfo.SuppCode = row.SuppCode;
                                shopInfo.BarCode = row.BarCode;
                                shopInfoData.push(shopInfo);

                                dbAdapter.insertShopInfo(shopInfoData, "1");
                            }
                        });
                    }
                });
            } else {
                dbAdapter.selectAidCode(this.state.MnCode, 1).then(function (rows) {
                    var length = rows.length;
                    if (length == 0) {
                        alert("助记码不存在");
                    } else {
                        var shopnumber = 0;
                        var shopAmount = 0;
                        for (var i = 0; i < length; i++) {
                            var row = rows.item(i);
                            var ShopPrice = row.ShopPrice;
                            var prototal = _BigDecimalUtils2.default.multiply(_this9.state.Countm, row.ShopPrice, 2);
                            var number = row.ShopNumber;
                            shopnumber = _BigDecimalUtils2.default.add(_this9.state.Countm, _this9.state.ShopNumber, 2);
                            _this9.TblRow.push(row);

                            row.ShopNumber = _this9.state.Countm;
                            row.ShopAmount = prototal;

                            _this9.dataRow.push(row);
                        };
                        shopAmount = _BigDecimalUtils2.default.add(ShopPrice, _this9.state.ShopAmount, 2);

                        _this9.setState({
                            MnCode: "",
                            ShopNumber: shopnumber,
                            ShopAmount: shopAmount,
                            dataSource: _this9.state.dataSource.cloneWithRows(_this9.dataRow)
                        });
                        if (length == 1) {
                            var shopInfoData = [];
                            var shopInfo = {};
                            shopInfo.Pid = row.Pid;
                            shopInfo.ProdCode = row.ProdCode;
                            shopInfo.prodname = row.ProdName;
                            shopInfo.countm = _this9.state.Countm;
                            shopInfo.ShopPrice = row.ShopPrice;
                            shopInfo.prototal = _this9.state.Countm * row.ShopPrice;
                            shopInfo.promemo = _this9.state.promemo;
                            shopInfo.DepCode = row.DepCode;
                            shopInfo.ydcountm = "";
                            shopInfo.SuppCode = row.SuppCode;
                            shopInfo.BarCode = row.BarCode;
                            shopInfoData.push(shopInfo);

                            dbAdapter.insertShopInfo(shopInfoData, "1");

                            var vipPrice = _VipPrice2.default.vipPrice(TblRow1[0], _this9.TblRow);
                            console.log("huiyuan==", TblRow1[0]);
                            console.log("vipPrice==", vipPrice);
                            console.log("vipPrice2==", shopAmount, vipPrice);
                            var newPrice = _BigDecimalUtils2.default.subtract(shopAmount, vipPrice, 2);
                            var allPrice = 0;

                            for (var _i = 0; _i < _this9.dataRow.length; _i++) {
                                allPrice = _BigDecimalUtils2.default.add(allPrice, _this9.dataRow[_i].ShopAmount, 2);
                            }

                            _this9.setState({
                                ShopAmount: allPrice
                            });
                        }
                    }
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this10 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 802
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Top, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 803
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.header, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 804
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), style: styles.return, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 805
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 806
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 808
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.HeaderText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 808
                                    }
                                },
                                this.state.name
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Code.bind(this), style: styles.SearchImage, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 809
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(347                 ), __source: { // 347 = ../images/1_05.png
                                    fileName: _jsxFileName,
                                    lineNumber: 810
                                }
                            })
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.TitleCont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 813
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.FristList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 814
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: [styles.List, { flex: 2 }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 815
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ListView1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 816
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.ListText, { textAlign: "center" }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 817
                                            }
                                        },
                                        '\u6D41\u6C34\u53F7\uFF1A'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ListView, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 819
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ListText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 820
                                            }
                                        },
                                        this.state.numform
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.ReturnGoods.bind(this), style: styles.refund, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 823
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.Goods, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 824
                                        }
                                    },
                                    '\u9000\u8D27'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Center, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 829
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.ShopCont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 830
                            }
                        },
                        _react2.default.createElement(_reactNative.View, { style: [{
                                backgroundColor: "#ff4e4e",
                                width: 10,
                                height: 60,
                                position: "absolute",
                                left: 0
                            }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 831
                            }
                        }),
                        _react2.default.createElement(_reactNative.View, { style: [{
                                backgroundColor: "#ff4e4e",
                                width: 10,
                                height: 60,
                                position: "absolute",
                                right: 0
                            }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 838
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.ScrollView,
                            { style: styles.ShopList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 845
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListTitle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 846
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ListClass, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 847
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ListClassText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 848
                                            }
                                        },
                                        '\u5546\u54C1\u7F16\u7801'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ListClass, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 850
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ListClassText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 851
                                            }
                                        },
                                        '\u5546\u54C1\u540D\u79F0'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ListClass1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 853
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ListClassText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 854
                                            }
                                        },
                                        '\u96F6\u552E\u4EF7'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ListClass1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 856
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ListClassText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 857
                                            }
                                        },
                                        '\u6570\u91CF'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ListClass1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 859
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ListClassText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 860
                                            }
                                        },
                                        '\u5C0F\u8BA1'
                                    )
                                )
                            ),
                            _react2.default.createElement(_reactNativeSwipeListView.SwipeListView, {
                                style: styles.SwipeList,
                                dataSource: this.state.dataSource,
                                renderRow: this._renderRow.bind(this),
                                renderHiddenRow: this.renderHiddenRow.bind(this),
                                rightOpenValue: -100,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 863
                                }
                            })
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Bottom, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 873
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.ShopCont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 874
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Prece, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 875
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.InputingLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 876
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.InpuTingText, { width: 60, marginTop: 10 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 877
                                        }
                                    },
                                    '\u8BF7\u8F93\u5165:'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.InputingRight, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 879
                                    }
                                },
                                _react2.default.createElement(_reactNative.TextInput, {
                                    autofocus: true,
                                    numberoflines: 1,
                                    keyboardType: 'numeric',
                                    textalign: 'center',
                                    value: this.state.MnCode,
                                    underlineColorAndroid: 'transparent',
                                    style: styles.TextInput,
                                    onChangeText: function onChangeText(value) {
                                        _this10.setState({
                                            MnCode: value
                                        });
                                    },
                                    onSubmitEditing: this.inputOnBlur.bind(this),
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 880
                                    }
                                })
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [styles.Prece, { height: 28, marginTop: 16, backgroundColor: "#f2f2f2" }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 897
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Inputing, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 898
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.Inputingleft, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 899
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.InputingText, { fontWeight: "bold" }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 900
                                            }
                                        },
                                        '\u91D1\u989D:'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.Inputingright, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 902
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.InputingText, { fontWeight: "bold", fontSize: 20, color: "red" }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 903
                                            }
                                        },
                                        this.state.ShopAmount
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Inputing1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 906
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.Inputingleft, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 907
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.InputingText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 908
                                            }
                                        },
                                        '\u5361\u53F7:'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.Inputingright, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 910
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.InputingText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 911
                                            }
                                        },
                                        this.state.VipCardNo
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [styles.Prece, { height: 28, marginTop: 16, backgroundColor: "#f2f2f2" }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 915
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Inputing, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 916
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.Inputingleft, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 917
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.InputingText, { fontWeight: "bold" }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 918
                                            }
                                        },
                                        '\u6570\u91CF:'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.Inputingright, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 920
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.InputingText, { fontWeight: "bold", fontSize: 20, color: "red" }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 921
                                            }
                                        },
                                        this.state.ShopNumber
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Inputing1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 924
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: [styles.Inputingright, styles.Inputing1Left], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 925
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.Inputingleft, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 926
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.InputingText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 927
                                                }
                                            },
                                            '\u79EF\u5206:'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.Inputingright, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 929
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.InputingText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 930
                                                }
                                            },
                                            this.state.JfBal
                                        )
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: [styles.Inputingright, styles.Inputing1Left], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 933
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.Inputingleft, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 934
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.InputingText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 935
                                                }
                                            },
                                            '\u4F59\u989D:'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.Inputingright, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 937
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.InputingText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 938
                                                }
                                            },
                                            this.state.BalanceTotal
                                        )
                                    )
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Swiper, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 944
                            }
                        },
                        _react2.default.createElement(
                            _reactNativeSwiper2.default,
                            {
                                style: styles.swiper,
                                height: 200,
                                loop: true,
                                autoplayTimeout: 4,
                                horizontal: true,
                                paginationStyle: { bottom: 10 },
                                showsButtons: false,
                                showsPagination: false,
                                dot: _react2.default.createElement(_reactNative.View, { style: {
                                        backgroundColor: 'rgba(0,0,0,.2)',
                                        width: 18,
                                        height: 18,
                                        borderRadius: 4,
                                        marginTop: 9,
                                        marginBottom: 9
                                    }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 954
                                    }
                                }),
                                activeDot: _react2.default.createElement(_reactNative.View, { style: {
                                        backgroundColor: '#007aff',
                                        width: 18,
                                        height: 18,
                                        borderRadius: 4,
                                        marginTop: 9,
                                        marginBottom: 9
                                    }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 962
                                    }
                                }),
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 945
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.FristPage, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 971
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.PageRow, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 972
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.MemberButton.bind(this),
                                            style: [styles.PageRowButton, { marginRight: 5 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 973
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.PageRowText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 975
                                                }
                                            },
                                            '\u4F1A\u5458'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.PayButton.bind(this),
                                            style: [styles.PageRowButton, { marginRight: 5 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 979
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.PageRowText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 981
                                                }
                                            },
                                            '\u4ED8\u6B3E'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { style: [styles.PageRowButton, { marginRight: 5 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 985
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.PageRowText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 986
                                                }
                                            },
                                            '\u9500\u552E'
                                        )
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.FristPage, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 992
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.PageRow, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 993
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.DeleteShop.bind(this),
                                            style: [styles.PageRowButton, { marginRight: 5 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 994
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.PageRowText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 996
                                                }
                                            },
                                            '\u6E05\u7A7A\u5546\u54C1'
                                        )
                                    )
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.Show,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1005
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LoadCenter, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1013
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.loading, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1014
                                }
                            },
                            _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large',
                                style: styles.activity, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1015
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TextLoading, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1017
                                    }
                                },
                                '\u52A0\u8F7D\u4E2D'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        transparent: true,
                        visible: this.state.Member,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1021
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.MemberBounces, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1028
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Cont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1029
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.BouncesTitle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1030
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.TitleText, { fontSize: 18 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1031
                                        }
                                    },
                                    '\u4F1A\u5458'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.MemberCont, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1033
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.MemberView, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1034
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.Card, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1035
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.CardText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 1036
                                                }
                                            },
                                            '\u5361\u53F7\uFF1A'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.CardNumber, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1038
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.TextInput, {
                                            returnKeyType: 'search',
                                            keyboardType: 'numeric',
                                            textalign: 'center',
                                            underlineColorAndroid: 'transparent',
                                            placeholderTextColor: '#bcbdc1',
                                            style: styles.CardTextInput,
                                            onChangeText: function onChangeText(value) {
                                                _this10.setState({
                                                    CardNumber: value
                                                });
                                            },
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1039
                                            }
                                        })
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.MemberButton, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1054
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.CloseButton.bind(this),
                                            style: [styles.MemberClose, { marginRight: 15 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1055
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.TitleText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 1057
                                                }
                                            },
                                            '\u53D6\u6D88'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.Button.bind(this), style: styles.MemberClose, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1059
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.TitleText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 1060
                                                }
                                            },
                                            '\u786E\u5B9A'
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);
    return Sell;
}(_react.Component);

exports.default = Sell;


var styles = _reactNative.StyleSheet.create({
    Top: {
        height: 100,
        backgroundColor: "#ccc"
    },
    Center: {
        flex: 1
    },
    Bottom: {
        height: 220
    },
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10,
        paddingLeft: 16,
        paddingRight: 16,
        flexDirection: "row"
    },
    return: {
        width: 60
    },
    HeaderList: {
        flex: 1,
        paddingRight: 56,
        marginTop: 3
    },
    HeaderText: {
        textAlign: "center",
        color: "#ffffff",
        fontSize: 22
    },
    SearchImage: {
        width: 60,
        paddingLeft: 20
    },
    TitleCont: {
        height: 40,
        backgroundColor: "#ff4e4e",
        paddingLeft: 20,
        paddingRight: 20
    },
    FristList: {
        height: 38,
        paddingBottom: 6,
        flexDirection: "row"
    },
    FristList1: {
        height: 38,
        paddingTop: 12,
        flexDirection: "row"
    },
    List: {
        flex: 1,
        flexDirection: "row",
        marginTop: 5
    },
    refund: {
        paddingTop: 5,
        paddingBottom: 5,
        paddingLeft: 15,
        paddingRight: 15,
        backgroundColor: "#ffba00",
        borderRadius: 5
    },
    Goods: {
        fontSize: 16,
        color: "#ffffff",
        textAlign: "center"
    },
    ListView1: {
        width: 70
    },
    ListView: {
        flex: 1,
        height: 20,
        overflow: "hidden",
        backgroundColor: "#ff4e4e"
    },
    ListText: {
        color: "#ffffff",
        fontSize: 16
    },
    ShopCont: {
        backgroundColor: "#f2f2f2",
        paddingLeft: 10,
        paddingRight: 10
    },
    ShopList: {
        minHeight: 100,
        borderRadius: 5,
        backgroundColor: "#ffffff"
    },
    ListTitle: {
        height: 54,
        paddingTop: 16,
        flexDirection: "row",
        backgroundColor: "#f2f2f2",
        borderTopLeftRadius: 5,
        borderTopRightRadius: 5
    },
    ListClass: {
        flex: 3
    },
    ListClass1: {
        flex: 2
    },
    ListClassText: {
        color: "#666666",
        fontSize: 16,
        textAlign: "center"
    },
    Prece: {
        height: 45,
        marginTop: 10,
        flexDirection: "row"
    },
    InpuTingText: {
        color: "#333333",
        fontSize: 16
    },
    InputingRight: {
        flex: 1,
        height: 45,
        backgroundColor: "#ffffff",
        borderRadius: 5
    },
    Inputing: {
        flex: 2,
        flexDirection: "row"
    },
    Inputing1: {
        flex: 3,
        flexDirection: "row"
    },
    Inputingleft: {
        width: 50,
        height: 20
    },
    Inputingright: {
        flex: 1,
        height: 20,
        overflow: "hidden"
    },
    InputingText: {
        fontSize: 18,
        color: "#333333"
    },
    Inputing1Left: {
        flexDirection: "row"
    },
    Swiper: {
        height: 50,
        marginTop: 16
    },
    FristPage: {
        marginLeft: 10,
        marginRight: 10
    },
    PageRow: {
        height: 50,
        flexDirection: "row"
    },
    PageRowButton: {
        flex: 1,
        backgroundColor: "#ff4e4e",
        borderRadius: 5,
        paddingTop: 14
    },
    PageRowText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    },
    ShopList1: {
        paddingLeft: 5,
        paddingRight: 5,
        paddingTop: 10,
        paddingBottom: 10,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2",
        flexDirection: "row"
    },
    Name: {
        flex: 3,
        textAlign: "center",
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    Number: {
        flex: 2,
        textAlign: "center",
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    LoadCenter: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    loading: {
        paddingLeft: 15,
        paddingRight: 15,
        paddingTop: 15,
        paddingBottom: 15,
        backgroundColor: "#000000",
        opacity: 0.8,
        borderRadius: 5
    },
    TextLoading: {
        fontSize: 17,
        color: "#ffffff"
    },
    MemberBounces: {
        backgroundColor: "#3e3d3d",
        opacity: 0.9,
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    Cont: {
        width: 280,
        borderRadius: 5,
        paddingBottom: 20,
        backgroundColor: "#f2f2f2"
    },
    BouncesTitle: {
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ff4e4e",
        borderTopLeftRadius: 5,
        borderTopRightRadius: 5,
        flexDirection: 'row'
    },
    TitleText: {
        flex: 1,
        textAlign: "center",
        color: "#ffffff",
        fontSize: 16
    },
    MemberCont: {
        height: 150,
        paddingLeft: 15,
        paddingRight: 15
    },
    MemberView: {
        flexDirection: "row",
        marginTop: 20
    },
    Card: {
        width: 50,
        marginTop: 11
    },
    CardText: {
        fontSize: 16,
        color: "#333333"
    },
    CardNumber: {
        flex: 1
    },
    CardTextInput: {
        borderRadius: 5,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingTop: 10,
        paddingBottom: 10,
        paddingLeft: 5,
        fontSize: 16
    },
    MemberButton: {
        marginTop: 20,
        flexDirection: "row"
    },
    MemberClose: {
        flex: 1,
        backgroundColor: "#ff4e4e",
        height: 34,
        paddingTop: 6,
        paddingBottom: 6,
        borderRadius: 5
    },
    rowBack: {
        backgroundColor: "#ff4e4e",
        paddingTop: 10,
        paddingBottom: 10,
        paddingRight: 35
    },
    rowBackText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "right"
    }
});
}, 310, null, "myproject/Sell/Sell.js");
__d(/* myproject/Sell/Pay.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\Sell\\Pay.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308           ); // 308 = ../app/Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Sell = require(310           ); // 310 = ../Sell/Sell

var _Sell2 = babelHelpers.interopRequireDefault(_Sell);

var _DPPromotionManager = require(312                                   ); // 312 = ../Sell/promotion/DPPromotionManager

var _DPPromotionManager2 = babelHelpers.interopRequireDefault(_DPPromotionManager);

var _BGPromotionManager = require(315                                   ); // 315 = ../Sell/promotion/BGPromotionManager

var _BGPromotionManager2 = babelHelpers.interopRequireDefault(_BGPromotionManager);

var _MJPromotionManger = require(317                                  ); // 317 = ../Sell/promotion/MJPromotionManger

var _MJPromotionManger2 = babelHelpers.interopRequireDefault(_MJPromotionManger);

var _MZPromotionManger = require(318                                  ); // 318 = ../Sell/promotion/MZPromotionManger

var _MZPromotionManger2 = babelHelpers.interopRequireDefault(_MZPromotionManger);

var _BPPromotionsManger = require(319                                   ); // 319 = ../Sell/promotion/BPPromotionsManger

var _BPPromotionsManger2 = babelHelpers.interopRequireDefault(_BPPromotionsManger);

var _GSPromotionsManger = require(320                                   ); // 320 = ../Sell/promotion/GSPromotionsManger

var _GSPromotionsManger2 = babelHelpers.interopRequireDefault(_GSPromotionsManger);

var _EOPromotionsManger = require(321                                   ); // 321 = ../Sell/promotion/EOPromotionsManger

var _EOPromotionsManger2 = babelHelpers.interopRequireDefault(_EOPromotionsManger);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _NumberUtils = require(326                   ); // 326 = ../utils/NumberUtils

var _NumberUtils2 = babelHelpers.interopRequireDefault(_NumberUtils);

var _NumFormatUtils = require(328                      ); // 328 = ../utils/NumFormatUtils

var _NumFormatUtils2 = babelHelpers.interopRequireDefault(_NumFormatUtils);

var _FormatPrice = require(329                   ); // 329 = ../utils/FormatPrice

var _FormatPrice2 = babelHelpers.interopRequireDefault(_FormatPrice);

var _BigDecimalUtils = require(314                       ); // 314 = ../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var _VipPrice = require(330                ); // 330 = ../utils/VipPrice

var _VipPrice2 = babelHelpers.interopRequireDefault(_VipPrice);

var _reactNativeSwiper = require(331                  ); // 331 = react-native-swiper

var _reactNativeSwiper2 = babelHelpers.interopRequireDefault(_reactNativeSwiper);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var dbAdapter = new _DBAdapter2.default();

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var RNScannerAndroid = NativeModules.RNScannerAndroid;

var Pay = function (_Component) {
    babelHelpers.inherits(Pay, _Component);

    function Pay(props) {
        babelHelpers.classCallCheck(this, Pay);

        var _this = babelHelpers.possibleConstructorReturn(this, (Pay.__proto__ || Object.getPrototypeOf(Pay)).call(this, props));

        _this.state = {
            myText: "",
            total: false,
            RefundTotal: false,
            LayerShow: false,
            ModalShow: false,
            NewAllPrice: false,
            MZPrice: false,
            Barcode: false,
            WaitLoading: false,
            CardFaceNo: "",
            CardPwd: "",
            name: "",
            amount: "",
            AMount: 0,
            payments: 0,
            pressStatus: 0,
            PressStatus: 0,
            Total: "",
            data: "",
            cardfaceno: "",
            DataTime: "",
            RetSerinalNo: "",
            subtract: "",
            VipPrice: "",
            ShopNewAmount: "",
            NewPrice: "",
            discount: "",
            ShopPrice: "",
            barcode: "",
            MiYaMerchID: "",
            MiYaKeyCode: "",
            MiYaIP: "",
            points: "",
            Pid: "",
            PayCode: "",
            ShopAmount: "",
            PriceAmount: "",
            Cash: "",
            evenNumber: 1,
            VipCardNo: _this.props.VipCardNo ? _this.props.VipCardNo : "",
            JfBal: _this.props.JfBal ? _this.props.JfBal : "",
            BalanceTotal: _this.props.BalanceTotal ? _this.props.BalanceTotal : "",
            CardTypeCode: _this.props.CardTypeCode ? _this.props.CardTypeCode : "",
            shopamount: _this.props.shopamount ? _this.props.shopamount : "",
            numform: _this.props.numform ? _this.props.numform : "",
            Seles: _this.props.Seles ? _this.props.Seles : "",
            vipData: _this.props.vipData ? _this.props.vipData : "",
            dataRows: _this.props.dataRows ? _this.props.dataRows : "",
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
                    return true;
                } }),
            DataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return row1 !== row2;
                } })
        };
        _this.dataRows = [];
        _this.productData = [];
        _this.DisCount = [];
        _this.DisTotil = 0;
        return _this;
    }

    babelHelpers.createClass(Pay, [{
        key: 'Total',
        value: function Total() {
            var isShow = this.state.total;
            this.setState({
                total: !isShow
            });
        }
    }, {
        key: 'RefundTotal',
        value: function RefundTotal() {
            var isShow = this.state.RefundTotal;
            this.setState({
                RefundTotal: !isShow
            });
        }
    }, {
        key: 'LayerShow',
        value: function LayerShow() {
            var isShow = this.state.LayerShow;
            this.setState({
                LayerShow: !isShow
            });
        }
    }, {
        key: 'ModeButton',
        value: function ModeButton() {
            this.LayerShow();
        }
    }, {
        key: 'ModalShow',
        value: function ModalShow() {
            var isShow = this.state.ModalShow;
            this.setState({
                ModalShow: !isShow
            });
        }
    }, {
        key: 'ModalButton',
        value: function ModalButton() {
            this.ModalShow();
        }
    }, {
        key: 'MZPrice',
        value: function MZPrice() {
            var isShow = this.state.MZPrice;
            this.setState({
                MZPrice: !isShow
            });
        }
    }, {
        key: 'Barcode',
        value: function Barcode() {
            var isShow = this.state.Barcode;
            this.setState({
                Barcode: !isShow
            });
        }
    }, {
        key: 'WaitLoading',
        value: function WaitLoading() {
            var isShow = this.state.WaitLoading;
            this.setState({
                WaitLoading: !isShow
            });
        }
    }, {
        key: 'NewAllPrice',
        value: function NewAllPrice() {
            var isShow = this.state.NewAllPrice;
            this.setState({
                NewAllPrice: !isShow
            });
        }
    }, {
        key: 'NewPriceButton',
        value: function NewPriceButton() {
            this.NewAllPrice();
        }
    }, {
        key: 'PriceButton',
        value: function PriceButton() {
            var _this2 = this;

            if (this.state.discount == "") {
                alert("请选择优惠方式");
            } else {
                _Storage2.default.get('usercode').then(function (tags) {
                    dbAdapter.selectKgtuser(tags).then(function (rows) {
                        var newAllPrice;
                        var disCount;
                        var disPrice;
                        var disNewPrice;
                        var shopAmount = 0;
                        var ShopPrice = 0;
                        var row = rows.HDscRate;
                        if (_this2.state.NewPrice == "") {
                            alert("请输入金额");
                        } else if (_this2.state.NewPrice > row) {
                            alert("没有此优惠权限");
                        } else if (_this2.state.NewPrice <= row) {
                            if (_this2.state.discount == "1") {
                                newAllPrice = _BigDecimalUtils2.default.subtract(_this2.state.ShopAmount, _this2.state.NewPrice);
                                disPrice = _VipPrice2.default.disCount(_this2.state.dataRows, _this2.state.ShopAmount, _this2.state.NewPrice);
                                _this2.setState({
                                    ShopAmount: newAllPrice,
                                    amount: newAllPrice,
                                    PriceAmount: newAllPrice
                                });
                                _this2.DisCount;
                                _this2.DisTotil = _this2.state.NewPrice;
                                _this2.NewPriceButton();
                            } else if (_this2.state.discount == "2") {
                                disCount = _BigDecimalUtils2.default.multiply(_this2.state.ShopAmount, _BigDecimalUtils2.default.subtract(1, _BigDecimalUtils2.default.divide(_this2.state.NewPrice, 100)));

                                disNewPrice = _BigDecimalUtils2.default.subtract(_this2.state.ShopAmount, disCount);

                                disPrice = _VipPrice2.default.disCount(_this2.state.dataRows, _this2.state.ShopAmount, disNewPrice);
                                _this2.DisTotil = disNewPrice;
                                _this2.setState({
                                    ShopAmount: disCount,
                                    amount: disCount,
                                    PriceAmount: disCount
                                });
                                _this2.NewPriceButton();
                            }
                        }
                    });
                });
            }
        }
    }, {
        key: 'PriceClose',
        value: function PriceClose() {
            this.NewPriceButton();
        }
    }, {
        key: 'NewPriceLeft',
        value: function NewPriceLeft() {
            this.setState({
                pressStatus: 'pressin',
                PressStatus: '0',
                discount: 1
            });
        }
    }, {
        key: 'NewPriceRight',
        value: function NewPriceRight() {
            this.setState({
                PressStatus: 'Pressin',
                pressStatus: 0,
                discount: 2
            });
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this3 = this;

            _Storage2.default.get('Name').then(function (tags) {
                _this3.setState({
                    name: tags
                });
            });
            _Storage2.default.get('EvenNumber').then(function (evenNumber) {
                if (evenNumber == null) {
                    _this3.setState({
                        evenNumber: 1
                    });
                } else {
                    _this3.setState({
                        evenNumber: Number(evenNumber) + 1
                    });
                }
            });
            this.dbadapter();
        }
    }, {
        key: 'dbadapter',
        value: function dbadapter() {
            var _this4 = this;

            var rows = this.state.dataRows;
            var shopAmount = 0;
            var ShopPrice = 0;
            var promises = [];
            var BGPromotion = [];
            var MJPromotion = [];
            var bpPromotons = [];
            for (var i = 0; i < rows.length; i++) {
                var row = rows[i];
                if (this.state.VipCardNo !== "") {
                    promises.push(_DPPromotionManager2.default.dp(this.state.CardTypeCode, row, dbAdapter));
                } else if (this.state.VipCardNo == "") {
                    promises.push(_DPPromotionManager2.default.dp("*", row, dbAdapter));
                }
            }

            new Promise.all(promises).then(function (rows) {
                for (var _i = 0; _i < rows.length; _i++) {
                    var row = rows[0];
                    if (row == true) {
                        Datafasle = true;
                    } else if (row == false) {
                        Datafasle = false;
                    }
                }

                for (var _i2 = 0; _i2 < _this4.state.dataRows.length; _i2++) {
                    var Rows = _this4.state.dataRows[_i2];
                    _this4.DisCount.push(Rows);
                    ShopPrice = Rows.ShopAmount;
                    shopAmount = _BigDecimalUtils2.default.add(ShopPrice, shopAmount, 2);
                }
                _this4.setState({
                    ShopAmount: shopAmount,
                    amount: shopAmount,
                    PriceAmount: shopAmount
                });
            });

            dbAdapter.selectPosOpt('CUTLEVEL').then(function (rows) {
                for (var _i3 = 0; _i3 < rows.length; _i3++) {
                    var row = rows.item(_i3);
                    var CUTLEVEL = row.OptValue;
                }
                if (_this4.state.ShopAmount > CUTLEVEL) {
                    dbAdapter.selectPosOpt('AUTOCUT').then(function (rows) {
                        for (var _i4 = 0; _i4 < rows.length; _i4++) {
                            var row = rows.item(_i4);
                            var AUTOCUT = row.OptValue;
                        }
                        if (AUTOCUT == '1') {
                            dbAdapter.selectPosOpt('CUTDEGREE').then(function (rows) {
                                var round;
                                var RoundPrice;
                                var subtract;
                                var vipData;
                                for (var _i5 = 0; _i5 < rows.length; _i5++) {
                                    var row = rows.item(_i5);
                                    var CUTDEGREE = row.OptValue;
                                }
                                round = _FormatPrice2.default.round(CUTDEGREE, _this4.state.ShopAmount, _this4.state.dataRows);
                                subtract = _BigDecimalUtils2.default.subtract(_this4.state.ShopAmount, round, 2);
                                vipData = _BigDecimalUtils2.default.add(_this4.state.vipData, subtract, 2);
                                _this4.setState({
                                    ShopAmount: round,
                                    subtract: subtract,
                                    VipPrice: vipData
                                });
                            });
                        } else {
                            var vipData;
                            vipData = _BigDecimalUtils2.default.add(_this4.state.vipData, 0, 2);
                            _this4.setState({
                                subtract: 0,
                                ShopAmount: _this4.state.ShopAmount,
                                amount: _this4.state.ShopAmount,
                                PriceAmount: _this4.state.ShopAmount,
                                VipPrice: vipData
                            });
                        }
                    });
                } else {
                    var vipData;
                    vipData = _BigDecimalUtils2.default.add(_this4.state.vipData, 0, 2);
                    _this4.setState({
                        subtract: 0,
                        ShopAmount: _this4.state.ShopAmount,
                        amount: _this4.state.ShopAmount,
                        PriceAmount: _this4.state.ShopAmount,
                        VipPrice: vipData
                    });
                }
            });

            _Storage2.default.get('ShopCode').then(function (ShopCode) {
                _Storage2.default.get('PosCode').then(function (PosCode) {
                    dbAdapter.SelectPosOpt(ShopCode, PosCode, 'PosPaySet').then(function (rows) {
                        var priductData = [];
                        for (var _i6 = 0; _i6 < rows.length; _i6++) {
                            var row = rows.item(_i6);
                        }
                        var OptValue = row.OptValue;
                        var len = OptValue.length;
                        var lastOptValue = OptValue.substring(0, len - 1);
                        var result = lastOptValue.split(",");
                        for (var i = 0; i < result.length; i++) {
                            dbAdapter.selectPayInfo(result[i]).then(function (rows) {
                                for (var i = 0; i < rows.length; i++) {
                                    var row = rows.item(i);
                                    priductData.push(row);
                                }
                                _this4.productData = priductData;
                                _this4.setState({
                                    data: priductData
                                });
                            });
                        }
                    });
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            if (this.state.CardFaceNo == "") {
                var nextRoute = {
                    name: "Sell",
                    component: _Sell2.default
                };
                this.props.navigator.push(nextRoute);
            } else {
                _reactNative.ToastAndroid.show('订单未完成', _reactNative.ToastAndroid.SHORT);
            }
        }
    }, {
        key: 'discount',
        value: function discount() {
            this.NewPriceButton();
        }
    }, {
        key: 'JiaoYi',
        value: function JiaoYi() {
            if (this.dataRows == '') {
                var nextRoute = {
                    name: "Sell",
                    component: _Sell2.default
                };
                this.props.navigator.push(nextRoute);
            } else {
                _reactNative.ToastAndroid.show('订单未完成', _reactNative.ToastAndroid.SHORT);
            }
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.ShopList1, onPress: function onPress() {
                        return _this5.OrderDetails(rowData);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 609
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Row, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 610
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.Name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 610
                            }
                        },
                        rowData.payName
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Row, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 611
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.Name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 611
                            }
                        },
                        rowData.CardFaceNo
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Row, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 612
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.Name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 612
                            }
                        },
                        rowData.Total
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Row, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 613
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.Name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 613
                            }
                        },
                        rowData.retZjf
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Row, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 614
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.Name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 614
                            }
                        },
                        rowData.ReferenceNo
                    )
                )
            );
        }
    }, {
        key: 'ShopPrice',
        value: function ShopPrice(rowData, sectionID, rowID) {
            var _this6 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { style: styles.ShopPRice, onPress: function onPress() {
                        return _this6.ShopAmount(rowData);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 621
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Row, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 622
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.Name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 622
                            }
                        },
                        rowData.ProdName
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Row, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 623
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.Name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 623
                            }
                        },
                        rowData.StdPrice
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Row, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 624
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.Name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 624
                            }
                        },
                        rowData.FormNo
                    )
                )
            );
        }
    }, {
        key: 'ShopAmount',
        value: function ShopAmount(rowData) {
            var shopInfoData = [];
            var shopInfo = {};
            shopInfo.Pid = "";
            shopInfo.ProdCode = rowData.ProdCode;
            shopInfo.prodname = rowData.ProdName;
            shopInfo.countm = "";
            shopInfo.ShopPrice = rowData.StdPrice;
            shopInfo.prototal = "";
            shopInfo.promemo = "";
            shopInfo.DepCode = "";
            shopInfo.ydcountm = "";
            shopInfo.SuppCode = "";
            shopInfo.BarCode = "";
            shopInfoData.push(shopInfo);

            dbAdapter.insertShopInfo(shopInfoData);
            this.MZPrice();
            var AllShop = this.state.ShopAmount + this.state.ShopPrice;

            this.setState({
                ShopAmount: AllShop,
                amount: AllShop,
                PriceAmount: AllShop
            });
        }
    }, {
        key: 'ShopClose',
        value: function ShopClose() {
            this.MZPrice();
        }
    }, {
        key: 'HorButton',
        value: function HorButton(item) {
            var _this7 = this;

            if (this.state.amount == "") {
                return;
            } else {
                if (this.state.PriceAmount == "") {
                    this.LayerShow();
                } else {
                    if (item.item.PayCode == "01") {
                        if (this.state.Seles == "R") {
                            if (this.state.amount > Number(this.state.Total) && this.state.Total < 0) {
                                this.ModalShow();
                            } else {
                                this.RefundTotal();
                            }
                        } else if (this.state.Seles == "T") {
                            if (this.state.amount > Number(this.state.Total) && this.state.Total > 0) {
                                this.ModalShow();
                            } else {
                                this.Total();
                            }
                        }
                    } else if (item.item.PayCode == "00") {
                        if (this.state.Seles == "R") {
                            var payTotal = Number(this.state.amount) + Number(this.state.payments);
                            this.state.payments += -Number(this.state.amount);
                            var payamount = Number(this.state.AMount) - Number(this.state.amount);
                            var Total = _BigDecimalUtils2.default.add(this.state.ShopAmount, this.state.payments, 2);
                            var aptotal = _BigDecimalUtils2.default.subtract(payamount, Total, 2);
                            if (this.state.ShopAmount < payTotal) {
                                var Amount = {
                                    'payName': '现金',
                                    'CardFaceNo': '',
                                    'Total': payamount,
                                    'total': aptotal,
                                    'payRT': '',
                                    'PayCode': item.item.PayCode,
                                    'pid': item.item.Pid
                                };
                            } else {
                                var Amount = {
                                    'payName': '现金',
                                    'CardFaceNo': '',
                                    'Total': payamount,
                                    'total': payamount,
                                    'payRT': '',
                                    'PayCode': item.item.PayCode,
                                    'pid': item.item.Pid
                                };
                            }
                            if (this.dataRows.length == 0) {
                                this.dataRows.push(Amount);
                                this.setState({
                                    AMount: payamount,
                                    payments: this.state.payments,
                                    payname: "现金",
                                    Total: Total,
                                    amount: Total,
                                    PriceAmount: Total + "",
                                    Cash: payamount,
                                    cardfaceno: "",
                                    dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
                                });
                            } else {
                                for (var i = 0; i < this.dataRows.length; i++) {
                                    var RowsList = this.dataRows[i];
                                    if (RowsList.payName == "现金") {
                                        RowsList.Total = payamount;
                                        RowsList.total = aptotal;
                                        this.setState({
                                            AMount: payamount,
                                            payments: this.state.payments,
                                            Total: Total,
                                            amount: Total,
                                            PriceAmount: Total + "",
                                            Cash: payamount,
                                            cardfaceno: "",
                                            dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
                                        });
                                        break;
                                    } else if (i == this.dataRows.length - 1) {
                                        this.dataRows.push(Amount);
                                        this.setState({
                                            AMount: payamount,
                                            payments: this.state.payments,
                                            Total: Total,
                                            amount: Total,
                                            PriceAmount: Total + "",
                                            Cash: payamount,
                                            cardfaceno: "",
                                            dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
                                        });
                                    }
                                }
                            }
                            this.restorage1();
                        } else if (this.state.Seles == "T") {
                            var payTotal = Number(this.state.amount) + Number(this.state.payments);
                            this.state.payments += Number(this.state.amount);
                            var Total = _BigDecimalUtils2.default.subtract(this.state.ShopAmount, this.state.payments, 2);
                            var payamount = Number(this.state.AMount) + Number(this.state.amount);
                            var aptotal = _BigDecimalUtils2.default.subtract(payamount, Total, 2);
                            if (payTotal >= this.state.ShopAmount) {
                                var Amount = {
                                    'payName': '现金',
                                    'CardFaceNo': '',
                                    'Total': payamount,
                                    'total': aptotal,
                                    'payRT': '',
                                    'PayCode': item.item.PayCode,
                                    'pid': item.item.Pid
                                };
                            } else {
                                var Amount = {
                                    'payName': '现金',
                                    'CardFaceNo': '',
                                    'Total': payamount,
                                    'total': payamount,
                                    'payRT': '',
                                    'PayCode': item.item.PayCode,
                                    'pid': item.item.Pid
                                };
                            }
                            if (this.dataRows.length == 0) {
                                this.dataRows.push(Amount);
                                this.setState({
                                    AMount: payamount,
                                    payments: this.state.payments,
                                    Total: Total,
                                    amount: Total,
                                    PriceAmount: Total + "",
                                    Cash: payamount,
                                    cardfaceno: "",
                                    dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
                                });
                            } else {
                                for (var _i7 = 0; _i7 < this.dataRows.length; _i7++) {
                                    var _RowsList = this.dataRows[_i7];
                                    _RowsList.Total = payamount;
                                    if (_RowsList.payName == "现金") {
                                        _RowsList.total = aptotal;
                                        this.setState({
                                            AMount: payamount,
                                            payments: this.state.payments,
                                            Total: Total,
                                            amount: Total,
                                            PriceAmount: Total + "",
                                            Cash: payamount,
                                            cardfaceno: "",
                                            dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
                                        });
                                        break;
                                    } else if (_i7 == this.dataRows.length - 1) {
                                        this.dataRows.push(Amount);
                                        this.setState({
                                            AMount: payamount,
                                            payments: this.state.payments,
                                            payname: "现金",
                                            Total: Total,
                                            amount: Total,
                                            PriceAmount: Total + "",
                                            Cash: payamount,
                                            cardfaceno: "",
                                            dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
                                        });
                                    }
                                }
                            }
                            this.restorage();
                        }
                    } else if (item.item.PayCode == "0Q") {
                        if (this.state.Seles == "R") {
                            if (this.state.amount > Number(this.state.Total) && this.state.Total < 0) {
                                this.ModalShow();
                            } else {
                                dbAdapter.selectPosOpt('MiYaMerchID').then(function (rows) {
                                    for (var _i8 = 0; _i8 < rows.length; _i8++) {
                                        var row = rows.item(_i8);
                                        var MiYaMerchID = row.OptValue;
                                    }
                                    _this7.setState({
                                        MiYaMerchID: MiYaMerchID
                                    });
                                });

                                dbAdapter.selectPosOpt('MiYaKeyCode').then(function (rows) {
                                    for (var _i9 = 0; _i9 < rows.length; _i9++) {
                                        var row = rows.item(_i9);
                                        var MiYaKeyCode = row.OptValue;
                                    }
                                    _this7.setState({
                                        MiYaKeyCode: MiYaKeyCode
                                    });
                                });

                                dbAdapter.selectPosOpt('MiYaIP').then(function (data) {
                                    for (var _i10 = 0; _i10 < data.length; _i10++) {
                                        var datas = data.item(_i10);
                                        var MiYaIP = datas.OptValue;
                                    }
                                    _this7.setState({
                                        MiYaIP: MiYaIP
                                    });
                                });

                                var points = this.state.amount * 100;
                                this.setState({
                                    points: points
                                });

                                this.Barcode();
                            }
                        } else if (this.state.Seles == "T") {
                            if (this.state.amount > Number(this.state.Total) && this.state.Total < 0) {
                                this.ModalShow();
                            } else {
                                dbAdapter.selectPosOpt('MiYaMerchID').then(function (rows) {
                                    for (var _i11 = 0; _i11 < rows.length; _i11++) {
                                        var row = rows.item(_i11);
                                        var MiYaMerchID = row.OptValue;
                                    }
                                    _this7.setState({
                                        MiYaMerchID: MiYaMerchID
                                    });
                                });

                                dbAdapter.selectPosOpt('MiYaKeyCode').then(function (rows) {
                                    for (var _i12 = 0; _i12 < rows.length; _i12++) {
                                        var row = rows.item(_i12);
                                        var MiYaKeyCode = row.OptValue;
                                    }
                                    _this7.setState({
                                        MiYaKeyCode: MiYaKeyCode
                                    });
                                });

                                dbAdapter.selectPosOpt('MiYaIP').then(function (data) {
                                    for (var _i13 = 0; _i13 < data.length; _i13++) {
                                        var datas = data.item(_i13);
                                        var MiYaIP = datas.OptValue;
                                    }
                                    _this7.setState({
                                        MiYaIP: MiYaIP
                                    });
                                });

                                var points = this.state.amount * 100;
                                this.setState({
                                    points: points
                                });

                                this.Barcode();
                            }
                        }
                    } else if (item.item.PayCode == "11") {
                        if (this.state.Seles == "R") {
                            if (this.state.payments == "0") {
                                var payments = -(Number(this.state.amount) + Number(this.state.payments));
                            } else {
                                var data = -(Number(this.state.amount) - Number(this.state.payments));
                                var payments = _NumberUtils2.default.numberFormat2(data);
                            }

                            var Total = -Number(this.state.ShopAmount) - Number(payments);
                            var ToTal = -(-Number(this.state.ShopAmount) - Number(payments));
                            var Amount = {
                                'payName': '其他支付方式',
                                'CardFaceNo': '',
                                'Total': -this.state.amount,
                                'total': this.state.amount,
                                'payRT': '',
                                'PayCode': item.item.PayCode,
                                'pid': item.item.Pid
                            };
                            this.dataRows.push(Amount);
                            this.setState({
                                payments: payments,
                                payname: "其他支付方式",
                                Total: Total,
                                amount: ToTal,
                                PriceAmount: ToTal + "",
                                dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
                            });
                            this.restorage1();
                        } else if (this.state.Seles == "T") {
                            var payments = Number(this.state.amount) + Number(this.state.payments);
                            var Total = _BigDecimalUtils2.default.subtract(this.state.ShopAmount, payments, 2);
                            var Amount = {
                                'payName': '其他支付方式',
                                'CardFaceNo': '',
                                'Total': this.state.amount,
                                'total': this.state.amount,
                                'payRT': '',
                                'PayCode': item.item.PayCode,
                                'pid': item.item.Pid
                            };
                            this.dataRows.push(Amount);
                            this.setState({
                                payments: payments,
                                payname: "其他支付方式",
                                Total: Total,
                                amount: Total,
                                PriceAmount: Total + "",
                                dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
                            });
                            this.restorage();
                        }
                    } else {
                        alert("该支付方式还未启动，敬请期待！");
                    }
                }
            }
        }
    }, {
        key: 'BarcodeButton',
        value: function BarcodeButton() {
            var _this8 = this;

            if (this.state.barcode == "") {
                alert("请输入付款吗");
            } else {
                var space = "";
                var EvenNumber = this.state.evenNumber;
                var dates = new Date();
                var years = dates.getFullYear();
                var months = dates.getMonth() + 1;
                var days = dates.getDate();
                if (months < 10) {
                    months = "0" + months;
                }
                if (days < 10) {
                    days = "0" + days;
                }
                _Storage2.default.save('EvenNumber', JSON.stringify(EvenNumber));
                if (EvenNumber < 10) {
                    EvenNumber = "0" + EvenNumber;
                } else if (EvenNumber > 99) {
                    _Storage2.default.delete('EvenNumber');
                    EvenNumber = "0" + 1;
                }
                var time = years + space + months + space + days + this.state.numform + EvenNumber;

                this.WaitLoading();
                NativeModules.AndroidMYRequest.doPay(this.state.MiYaMerchID, time, this.state.points + "", this.state.barcode, this.state.MiYaKeyCode, this.state.MiYaIP, "9191", function (data) {
                    _this8.WaitLoading();
                    if (data == "1-支付成功") {
                        _reactNative.ToastAndroid.show('微信支付成功', _reactNative.ToastAndroid.SHORT);
                    } else if (data == "3-支付成功") {
                        _reactNative.ToastAndroid.show('支付宝支付成功', _reactNative.ToastAndroid.SHORT);
                    } else {
                        alert(data);
                        return;
                    }
                    var Points = _this8.state.points / 100;

                    _this8.state.payments += Number(Points);
                    var Total = _BigDecimalUtils2.default.subtract(_this8.state.ShopAmount, _this8.state.payments, 2);

                    var payments = Number(Points) + Number(_this8.state.payments);
                    var Amount = {
                        'payName': '米雅支付',
                        'CardFaceNo': '',
                        'Total': Points,
                        'total': Points,
                        'payRT': '',
                        'PayCode': _this8.state.PayCode,
                        'pid': _this8.state.Pid
                    };
                    _this8.dataRows.push(Amount);
                    _this8.setState({
                        payments: payments,
                        payname: "米雅支付",
                        Total: Total,
                        amount: Total,
                        PriceAmount: Total + "",
                        dataSource: _this8.state.dataSource.cloneWithRows(_this8.dataRows)
                    });
                    _this8.restorage();
                    _this8.Barcode();
                });
                if (this.state.Seles == "R") {
                    console.log(this.state.MiYaMerchID, this.state.barcode, this.state.points + "", time, this.state.MiYaKeyCode, this.state.MiYaIP, "9191");
                    NativeModules.AndroidMYRequest.doRetPay(this.state.MiYaMerchID, this.state.barcode, this.state.points + "", time, this.state.MiYaKeyCode, this.state.MiYaIP, "9191", function (data) {
                        console.log(data);

                        _this8.Barcode();
                    });
                } else if (this.state.Seles == "T") {
                    NativeModules.AndroidMYRequest.doPay(this.state.MiYaMerchID, time, this.state.points + "", this.state.barcode, this.state.MiYaKeyCode, this.state.MiYaIP, "9191", function (data) {
                        if (data == "1-支付成功") {
                            _reactNative.ToastAndroid.show('微信支付成功', _reactNative.ToastAndroid.SHORT);
                        } else if (data == "3-支付成功") {
                            _reactNative.ToastAndroid.show('支付宝支付成功', _reactNative.ToastAndroid.SHORT);
                        } else {
                            alert(data);
                            return;
                        }
                        var Points = _this8.state.points / 100;

                        _this8.state.payments += Number(Points);
                        var Total = _BigDecimalUtils2.default.subtract(_this8.state.ShopAmount, _this8.state.payments, 2);

                        var payments = Number(Points) + Number(_this8.state.payments);
                        var Amount = {
                            'payName': '米雅支付',
                            'CardFaceNo': '',
                            'Total': Points,
                            'total': Points,
                            'payRT': '',
                            'PayCode': _this8.state.PayCode,
                            'pid': _this8.state.Pid
                        };
                        _this8.dataRows.push(Amount);
                        _this8.setState({
                            payments: payments,
                            payname: "米雅支付",
                            Total: Total,
                            amount: Total,
                            PriceAmount: Total + "",
                            dataSource: _this8.state.dataSource.cloneWithRows(_this8.dataRows)
                        });
                        _this8.restorage();
                        _this8.Barcode();
                    });
                    this.restorage();
                    this.Barcode();
                }
            }
        }
    }, {
        key: 'CloseBarcode',
        value: function CloseBarcode() {
            this.Barcode();
        }
    }, {
        key: 'restorage',
        value: function restorage() {
            var _this9 = this;

            _Storage2.default.delete("VipInfo");
            _Storage2.default.get('ShopName').then(function (ShopName) {
                _Storage2.default.get('Pid').then(function (Pid) {
                    _Storage2.default.get('usercode').then(function (usercode) {
                        _Storage2.default.get('userName').then(function (userName) {
                            if (_this9.state.ShopAmount == _this9.state.payments || _this9.state.ShopAmount < _this9.state.payments) {
                                var now = new Date();
                                var year = now.getFullYear();
                                var month = now.getMonth() + 1;
                                var day = now.getDate();
                                var hh = now.getHours();
                                var mm = now.getMinutes();
                                var ss = now.getSeconds();
                                if (month >= 1 && month <= 9) {
                                    month = "0" + month;
                                }
                                if (day >= 1 && day <= 9) {
                                    day = "0" + day;
                                }
                                if (hh >= 1 && hh <= 9) {
                                    hh = "0" + hh;
                                }
                                if (mm >= 1 && mm <= 9) {
                                    mm = "0" + mm;
                                }
                                if (ss >= 1 && ss <= 9) {
                                    ss = "0" + ss;
                                } else if (ss = 0) {
                                    ss = "00" + ss;
                                }
                                var InnerNo = _NumFormatUtils2.default.CreateInnerNo();
                                var allDisPrice = 0;
                                for (var i = 0; i < _this9.state.dataRows.length; i++) {
                                    var DataRows = _this9.state.dataRows[i];
                                    var OrderNo = 0;
                                    OrderNo = i + 1;
                                    var BarCode;
                                    var pid;
                                    var ProdCode;
                                    var ProdName;
                                    var DepCode;
                                    var Count;
                                    var ShopPrice;
                                    var prototal;
                                    BarCode = DataRows.BarCode;
                                    pid = DataRows.Pid;
                                    ProdCode = DataRows.ProdCode;
                                    ProdName = DataRows.ProdName;
                                    DepCode = DataRows.DepCode;
                                    Count = DataRows.ShopNumber;
                                    ShopPrice = DataRows.ShopPrice;
                                    prototal = DataRows.ShopAmount;
                                    var SumData = year + "-" + month + "-" + day + " " + hh + ":" + mm + ":" + ss;
                                    var detailDatas = [];
                                    var detail = {};
                                    detail.LsNo = _this9.state.numform;
                                    detail.sDateTime = SumData;
                                    detail.TradeFlag = _this9.state.Seles;
                                    detail.CashierId = Pid;
                                    detail.CashierCode = usercode;
                                    detail.CashierName = userName;
                                    detail.ClerkId = -999;
                                    detail.ClerkCode = "";
                                    detail.Pid = pid;
                                    detail.BarCode = BarCode;
                                    detail.ClerkName = "";
                                    detail.ProdCode = ProdCode;
                                    detail.ProdName = ProdName;
                                    detail.DepCode = DepCode;
                                    detail.Price = ShopPrice;
                                    detail.Amount = Count;
                                    if (i == 0) {
                                        detail.AutoDscTotal = _this9.state.subtract;
                                    } else {
                                        detail.AutoDscTotal = 0;
                                    }
                                    detail.Total = _NumberUtils2.default.numberFormat2(prototal);
                                    detail.DscTotal = _BigDecimalUtils2.default.subtract(_BigDecimalUtils2.default.multiply(ShopPrice, Count, 2), _NumberUtils2.default.numberFormat2(prototal), 2);
                                    detail.DscTotal = _BigDecimalUtils2.default.subtract(detail.DscTotal, detail.AutoDscTotal, 2);
                                    allDisPrice = _BigDecimalUtils2.default.add(allDisPrice, detail.DscTotal, 2);
                                    detail.HandDsc = 0;

                                    detail.AutoDscTotal = 0;
                                    detail.InnerNo = InnerNo;
                                    detail.OrderNo = OrderNo + "";
                                    detailDatas.push(detail);
                                    dbAdapter.insertDetail(detailDatas);
                                };
                                for (var _i14 = 0; _i14 < _this9.dataRows.length; _i14++) {
                                    var dataRows = _this9.dataRows[_i14];
                                    var ino;
                                    ino = _i14 + 1;
                                    var SumData = year + "-" + month + "-" + day + " " + hh + ":" + mm + ":" + ss;

                                    var sumDatas = [];
                                    var sum = {};
                                    sum.LsNo = _this9.state.numform;
                                    sum.sDateTime = SumData;
                                    sum.CashierId = Pid;
                                    sum.CashierCode = usercode;
                                    sum.CashierName = userName;
                                    sum.ino = ino;
                                    sum.Total = _this9.state.ShopAmount;
                                    sum.TotalPay = _this9.state.payments;
                                    sum.Change = _this9.state.Total;
                                    sum.TradeFlag = _this9.state.Seles;
                                    var cardFaceNo = dataRows.CardFaceNo;
                                    if (cardFaceNo == "") {
                                        sum.DscTotal = allDisPrice;
                                        sum.CustType = '0';
                                        sum.CustCode = "";
                                    } else {
                                        sum.DscTotal = allDisPrice;
                                        sum.CustType = '2';
                                        sum.CustCode = cardFaceNo;
                                    }

                                    sum.PayId = dataRows.pid;
                                    sum.PayCode = dataRows.PayCode;
                                    sum.Amount = dataRows.total;
                                    sum.OldAmount = dataRows.total;
                                    sum.TendPayCode = cardFaceNo;
                                    sum.InnerNo = InnerNo;
                                    sumDatas.push(sum);
                                    dbAdapter.insertSum(sumDatas);
                                };
                                dbAdapter.selectSum().then(function (rows) {
                                    var sums = [];
                                    var details = [];
                                    var index = 0;

                                    var _loop = function _loop(_i15) {
                                        dbAdapter.selectSumAllData(rows.item(_i15).LsNo, rows.item(_i15).InnerNo, rows.item(_i15).sDateTime).then(function (sum) {
                                            for (var j = 0; j < sum.length; j++) {
                                                sums.push(sum.item(j));
                                            }
                                        });
                                        dbAdapter.selectDetailAllData(rows.item(_i15).LsNo, rows.item(_i15).sDateTime).then(function (detail) {
                                            for (var j = 0; j < detail.length; j++) {
                                                details.push(detail.item(j));
                                            }
                                            index++;
                                            if (index == rows.length) {
                                                _Storage2.default.get('LinkUrl').then(function (tags) {
                                                    _Storage2.default.get('ShopCode').then(function (ShopCode) {
                                                        _Storage2.default.get('PosCode').then(function (PosCode) {
                                                            var requestBody = JSON.stringify({
                                                                'TblName': 'upsum',
                                                                'ShopCode': ShopCode,
                                                                'PosCode': PosCode,
                                                                'detail': details,
                                                                'sum': sums
                                                            });
                                                            _FetchUtils2.default.post(tags, requestBody).then(function (success) {
                                                                if (success.retcode == 1) {
                                                                    dbAdapter.upDateSum(rows.item(_i15).LsNo, rows.item(_i15).sDateTime).then(function (upDateSum) {});
                                                                    dbAdapter.upDateDetail(rows.item(_i15).LsNo, rows.item(_i15).sDateTime).then(function (upDateDetail) {});
                                                                } else {
                                                                    alert(JSON.stringify(success));
                                                                }
                                                            }, function (error) {});
                                                        });
                                                    });
                                                });
                                            }
                                        });
                                    };

                                    for (var _i15 = 0; _i15 < rows.length; _i15++) {
                                        _loop(_i15);
                                    }
                                });

                                _NumFormatUtils2.default.createLsNo().then(function (data) {
                                    _Storage2.default.save("LsNo", data);
                                });

                                NativeModules.AndroidPrintInterface.initPrint();
                                NativeModules.AndroidPrintInterface.setFontSize(30, 26, 0x26);
                                NativeModules.AndroidPrintInterface.print(" " + " " + " " + " " + " " + " " + " " + " " + "惠商+测试\n");
                                NativeModules.AndroidPrintInterface.setFontSize(20, 20, 0x22);
                                NativeModules.AndroidPrintInterface.print(" " + " " + " " + " " + " " + " " + " " + " " + " " + ShopName + "万泰花园店" + "\n");
                                NativeModules.AndroidPrintInterface.print("\n");
                                NativeModules.AndroidPrintInterface.print("服务员：" + userName + "\n");
                                NativeModules.AndroidPrintInterface.print(year + "年" + month + "月" + day + "日" + " " + "下午" + hh + ":" + mm + ":" + ss + "\n");
                                NativeModules.AndroidPrintInterface.print("编号：" + usercode + "," + "流水号：" + _this9.state.numform + "\n");
                                NativeModules.AndroidPrintInterface.print("------------------------------------------------------------" + "\n");
                                NativeModules.AndroidPrintInterface.print("名称" + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + "数量" + " " + " " + "原价" + " " + " " + "总计" + "\n");
                                for (var _i16 = 0; _i16 < _this9.state.dataRows.length; _i16++) {
                                    var DataRows = _this9.state.dataRows[_i16];
                                    NativeModules.AndroidPrintInterface.print(DataRows.ProdName + "\n");
                                    NativeModules.AndroidPrintInterface.print(DataRows.ProdCode + " " + " " + " " + " " + " " + " " + " " + " " + " " + DataRows.ShopNumber + ".00" + " " + " " + DataRows.ShopPrice + " " + " " + DataRows.ShopAmount + "\n");
                                }
                                NativeModules.AndroidPrintInterface.print("\n");
                                var YHui = Number(_this9.state.shopamount) - Number(_this9.state.ShopAmount);
                                NativeModules.AndroidPrintInterface.print("总计：" + _this9.state.ShopAmount + " " + "优惠：" + YHui + " " + "赠送：" + "0.00");
                                NativeModules.AndroidPrintInterface.print("实收：" + _this9.state.ShopAmount + " " + "找零：" + _this9.state.Total);
                                NativeModules.AndroidPrintInterface.print("现金：" + _this9.state.Cash);
                                NativeModules.AndroidPrintInterface.print("\n");
                                NativeModules.AndroidPrintInterface.print("\n");
                                NativeModules.AndroidPrintInterface.print("\n");
                                NativeModules.AndroidPrintInterface.startPrint();
                                var nextRoute = {
                                    name: "Index",
                                    component: _Index2.default
                                };
                                _this9.props.navigator.push(nextRoute);
                                dbAdapter.deleteData("shopInfo");
                                _Storage2.default.delete("VipPrice");
                            }
                        });
                    });
                });
            });
        }
    }, {
        key: 'restorage1',
        value: function restorage1() {
            var _this10 = this;

            _Storage2.default.get('Pid').then(function (Pid) {
                _Storage2.default.get('ShopName').then(function (ShopName) {
                    _Storage2.default.get('usercode').then(function (usercode) {
                        _Storage2.default.get('userName').then(function (userName) {
                            if (-_this10.state.ShopAmount == _this10.state.payments || -_this10.state.ShopAmount > _this10.state.payments) {
                                var now = new Date();
                                var year = now.getFullYear();
                                var month = now.getMonth() + 1;
                                var day = now.getDate();
                                var hh = now.getHours();
                                var mm = now.getMinutes();
                                var ss = now.getSeconds();
                                if (month >= 1 && month <= 9) {
                                    month = "0" + month;
                                }
                                if (day >= 1 && day <= 9) {
                                    day = "0" + day;
                                }
                                if (hh >= 1 && hh <= 9) {
                                    hh = "0" + hh;
                                }
                                if (mm >= 1 && mm <= 9) {
                                    mm = "0" + mm;
                                }
                                if (ss >= 1 && ss <= 9) {
                                    ss = "0" + ss;
                                } else if (ss = 0) {
                                    ss = "00" + ss;
                                }
                                var InnerNo = _NumFormatUtils2.default.CreateInnerNo();
                                for (var i = 0; i < _this10.dataRows.length; i++) {
                                    var dataRows = _this10.dataRows[i];
                                    var ino;
                                    ino = i + 1;
                                    var SumData = year + "-" + month + "-" + day + " " + hh + ":" + mm + ":" + ss;

                                    var sumDatas = [];
                                    var sum = {};
                                    sum.LsNo = _this10.state.numform;
                                    sum.sDateTime = SumData;
                                    sum.CashierId = Pid;
                                    sum.CashierCode = usercode;
                                    sum.CashierName = userName;
                                    sum.ino = ino;
                                    sum.Total = -_this10.state.ShopAmount;
                                    sum.TotalPay = _this10.state.payments;
                                    sum.Change = 0;
                                    sum.TradeFlag = _this10.state.Seles;
                                    if (_this10.state.VipCardNo == "") {
                                        sum.DscTotal = 0;
                                        sum.CustType = '0';
                                        sum.CustCode = "";
                                    } else {
                                        sum.DscTotal = _this10.state.VipPrice;
                                        sum.CustType = '2';
                                        sum.CustCode = _this10.state.VipCardNo;
                                    }
                                    sum.PayId = dataRows.pid;
                                    sum.PayCode = dataRows.PayCode;
                                    sum.Amount = dataRows.total;
                                    sum.OldAmount = dataRows.total;
                                    sum.TendPayCode = _this10.state.VipCardNo;
                                    sum.InnerNo = InnerNo;
                                    sumDatas.push(sum);
                                    dbAdapter.insertSum(sumDatas);
                                };
                                for (var _i17 = 0; _i17 < _this10.state.dataRows.length; _i17++) {
                                    var DataRows = _this10.state.dataRows[_i17];
                                    var OrderNo = 0;
                                    OrderNo = _i17 + 1;
                                    var BarCode;
                                    var pid;
                                    var ProdCode;
                                    var ProdName;
                                    var DepCode;
                                    var Count;
                                    var ShopPrice;
                                    var prototal;
                                    BarCode = DataRows.BarCode;
                                    pid = DataRows.Pid;
                                    ProdCode = DataRows.ProdCode;
                                    ProdName = DataRows.ProdName;
                                    DepCode = DataRows.DepCode;
                                    Count = DataRows.ShopNumber;
                                    ShopPrice = DataRows.ShopPrice;
                                    prototal = DataRows.ShopAmount;
                                    var SumData = year + "-" + month + "-" + day + " " + hh + ":" + mm + ":" + ss;
                                    var detailDatas = [];
                                    var detail = {};
                                    detail.LsNo = _this10.state.numform;
                                    detail.sDateTime = SumData;
                                    detail.TradeFlag = _this10.state.Seles;
                                    detail.CashierId = Pid;
                                    detail.CashierCode = usercode;
                                    detail.CashierName = userName;
                                    detail.ClerkId = -999;
                                    detail.ClerkCode = "";
                                    detail.Pid = pid;
                                    detail.BarCode = BarCode;
                                    detail.ClerkName = "";
                                    detail.ProdCode = ProdCode;
                                    detail.ProdName = ProdName;
                                    detail.DepCode = DepCode;
                                    detail.Price = -ShopPrice;
                                    detail.Amount = Count;
                                    detail.DscTotal = 0;
                                    detail.Total = -_NumberUtils2.default.numberFormat2(prototal);
                                    if (_i17 == 0) {
                                        detail.AutoDscTotal = _this10.state.subtract;
                                    } else {
                                        detail.AutoDscTotal = 0;
                                    }
                                    detail.HandDsc = 0;
                                    detail.InnerNo = InnerNo;
                                    detail.OrderNo = OrderNo + "";
                                    detailDatas.push(detail);
                                    dbAdapter.insertDetail(detailDatas);
                                };
                                dbAdapter.selectSum().then(function (rows) {
                                    var sums = [];
                                    var details = [];
                                    var index = 0;

                                    var _loop2 = function _loop2(_i18) {
                                        dbAdapter.selectSumAllData(rows.item(_i18).LsNo, rows.item(_i18).InnerNo, rows.item(_i18).sDateTime).then(function (sum) {
                                            for (var j = 0; j < sum.length; j++) {
                                                sums.push(sum.item(j));
                                            }
                                        });
                                        dbAdapter.selectDetailAllData(rows.item(_i18).LsNo, rows.item(_i18).sDateTime).then(function (detail) {
                                            for (var j = 0; j < detail.length; j++) {
                                                details.push(detail.item(j));
                                            }
                                            index++;
                                            if (index == rows.length) {
                                                _Storage2.default.get('LinkUrl').then(function (tags) {
                                                    _Storage2.default.get('ShopCode').then(function (ShopCode) {
                                                        _Storage2.default.get('PosCode').then(function (PosCode) {
                                                            var requestBody = JSON.stringify({
                                                                'TblName': 'upsum',
                                                                'ShopCode': ShopCode,
                                                                'PosCode': PosCode,
                                                                'detail': details,
                                                                'sum': sums
                                                            });
                                                            _FetchUtils2.default.post(tags, requestBody).then(function (success) {
                                                                if (success.retcode == 1) {
                                                                    dbAdapter.upDateSum(rows.item(_i18).LsNo, rows.item(_i18).sDateTime).then(function (upDateSum) {});
                                                                    dbAdapter.upDateDetail(rows.item(_i18).LsNo, rows.item(_i18).sDateTime).then(function (upDateDetail) {});
                                                                } else {
                                                                    alert(JSON.stringify(success));
                                                                }
                                                            }, function (error) {
                                                                alert('网络请求失败');
                                                            });
                                                        });
                                                    });
                                                });
                                            }
                                        });
                                    };

                                    for (var _i18 = 0; _i18 < rows.length; _i18++) {
                                        _loop2(_i18);
                                    }
                                });

                                _NumFormatUtils2.default.createLsNo().then(function (data) {
                                    _Storage2.default.save("LsNo", data);
                                });

                                NativeModules.AndroidPrintInterface.initPrint();
                                NativeModules.AndroidPrintInterface.setFontSize(30, 26, 0x26);
                                NativeModules.AndroidPrintInterface.print(" " + " " + " " + " " + " " + " " + " " + " " + "惠商+测试\n");
                                NativeModules.AndroidPrintInterface.setFontSize(20, 20, 0x22);
                                NativeModules.AndroidPrintInterface.print(" " + " " + " " + " " + " " + " " + " " + " " + " " + ShopName + "万泰花园店" + "\n");
                                NativeModules.AndroidPrintInterface.print("\n");
                                NativeModules.AndroidPrintInterface.print("服务员：" + userName + "\n");
                                NativeModules.AndroidPrintInterface.print(year + "年" + month + "月" + day + "日" + " " + "下午" + hh + ":" + mm + ":" + ss + "\n");
                                NativeModules.AndroidPrintInterface.print("编号：" + usercode + "," + "流水号：" + _this10.state.numform + "\n");
                                NativeModules.AndroidPrintInterface.print("------------------------------------------------------------" + "\n");
                                NativeModules.AndroidPrintInterface.print("名称" + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + "数量" + " " + " " + "原价" + " " + " " + "总计" + "\n");
                                for (var _i19 = 0; _i19 < _this10.state.dataRows.length; _i19++) {
                                    var DataRows = _this10.state.dataRows[_i19];
                                    NativeModules.AndroidPrintInterface.print(DataRows.ProdName + "\n");
                                    NativeModules.AndroidPrintInterface.print(DataRows.ProdCode + " " + " " + " " + " " + " " + " " + " " + " " + " " + -DataRows.ShopNumber + ".00" + " " + " " + DataRows.ShopPrice + " " + " " + -DataRows.ShopAmount + "\n");
                                }
                                NativeModules.AndroidPrintInterface.print("\n");
                                var YHui = Number(_this10.state.shopamount) - Number(_this10.state.ShopAmount);
                                NativeModules.AndroidPrintInterface.print("总计：" + _this10.state.ShopAmount + " " + "优惠：" + YHui + " " + "赠送：" + "0.00");
                                NativeModules.AndroidPrintInterface.print("实收：" + -_this10.state.ShopAmount + " " + "找零：" + _this10.state.Total);
                                NativeModules.AndroidPrintInterface.print("现金：" + _this10.state.Cash);
                                NativeModules.AndroidPrintInterface.print("\n");
                                NativeModules.AndroidPrintInterface.print("\n");
                                NativeModules.AndroidPrintInterface.print("\n");
                                NativeModules.AndroidPrintInterface.startPrint();
                                var nextRoute = {
                                    name: "Index",
                                    component: _Index2.default
                                };
                                _this10.props.navigator.push(nextRoute);
                                dbAdapter.deleteData("shopInfo");
                                _Storage2.default.delete("VipPrice");
                            };
                        });
                    });
                });
            });
        }
    }, {
        key: '_renderItem',
        value: function _renderItem(item, index) {
            var _this11 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                        return _this11.HorButton(item);
                    }, style: [styles.PageRowButton, { marginRight: 5 }], __source: {
                        fileName: _jsxFileName,
                        lineNumber: 1574
                    }
                },
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.PageRowText, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1575
                        }
                    },
                    item.item.payName
                )
            );
        }
    }, {
        key: 'keyExtractor',
        value: function keyExtractor(item, index) {
            return item.payName;
        }
    }, {
        key: 'Button',
        value: function Button() {
            var _this12 = this;

            var now = new Date();
            var year = now.getFullYear();
            var month = now.getMonth() + 1;
            var day = now.getDate();
            var hh = now.getHours();
            var mm = now.getMinutes();
            var ss = now.getSeconds();
            if (month >= 1 && month <= 9) {
                month = "0" + month;
            }
            if (day >= 1 && day <= 9) {
                day = "0" + day;
            }
            if (hh >= 1 && hh <= 9) {
                hh = "0" + hh;
            }
            if (mm >= 1 && mm <= 9) {
                mm = "0" + mm;
            }
            if (ss >= 1 && ss <= 9) {
                ss = "0" + ss;
            }
            var sum = year + "-" + month + "-" + day + " " + hh + ":" + mm + ":" + ss;
            return new Promise(function (resolve, reject) {
                _Storage2.default.get('ShopCode').then(function (ShopCode) {
                    _Storage2.default.get('PosCode').then(function (PosCode) {
                        var params = {
                            TblName: "VipCardPay",
                            PayOrderNo: _this12.state.numform,
                            CardPwd: _NetUtils2.default.MD5(_this12.state.CardPwd) + '',
                            shopcode: ShopCode,
                            poscode: PosCode,
                            CardFaceNo: _this12.state.CardFaceNo,
                            OrderTotal: _this12.state.amount,
                            SaleTotal: _this12.state.ShopAmount,
                            JfValue: 0,
                            TransFlag: sum
                        };
                        _Storage2.default.get('LinkUrl').then(function (tags) {
                            _FetchUtils2.default.post(tags, JSON.stringify(params)).then(function (data) {
                                if (data.retcode == 1) {
                                    var TblRow = data.TblRow;
                                    var retcurrJF;
                                    var retZjf;
                                    var ReferenceNo;
                                    var retTxt;
                                    var PayretcurrJF;

                                    for (var i = 0; i < TblRow.length; i++) {
                                        var row = TblRow[i];
                                        retcurrJF = row.retcurrJF;
                                        retZjf = row.retZjf;
                                        ReferenceNo = row.ReferenceNo;
                                        retTxt = row.retTxt;
                                    };

                                    for (var _i20 = 0; _i20 < _this12.productData.length; _i20++) {
                                        var Pid;
                                        var PayCode;
                                        var productData = _this12.productData[_i20];
                                        if (productData.payName == "储值卡") {
                                            Pid = productData.Pid;
                                            PayCode = productData.PayCode;
                                        }
                                    };
                                    var TblRowconcat = {
                                        'payName': '储值卡',
                                        'CardFaceNo': _this12.state.CardFaceNo,
                                        'Total': retcurrJF,
                                        'total': retcurrJF,
                                        'retZjf': retZjf,
                                        'ReferenceNo': ReferenceNo,
                                        'PayretcurrJF': PayretcurrJF,
                                        'pid': Pid,
                                        'PayCode': PayCode
                                    };
                                    _this12.dataRows.push(TblRowconcat);
                                    _this12.state.payments += retcurrJF;
                                    var Total = _BigDecimalUtils2.default.subtract(_this12.state.ShopAmount, _this12.state.payments, 2);
                                    _this12.setState({
                                        payments: _this12.state.payments,
                                        Amount: retcurrJF,
                                        Total: Total,
                                        amount: Total + "",
                                        PriceAmount: Total + "",
                                        dataSource: _this12.state.dataSource.cloneWithRows(_this12.dataRows)
                                    });
                                    _this12.restorage();
                                    _this12.Total();
                                } else {
                                    alert(JSON.stringify(data));
                                }
                                ;
                            }, function (err) {
                                alert("网络请求失败");
                            });
                        });
                    });
                });
            });
        }
    }, {
        key: 'CloseButton',
        value: function CloseButton() {
            this.Total();
        }
    }, {
        key: 'RetButton',
        value: function RetButton() {
            var _this13 = this;

            var now = new Date();
            var year = now.getFullYear();
            var month = now.getMonth() + 1;
            var day = now.getDate();
            var hh = now.getHours();
            var mm = now.getMinutes();
            var ss = now.getSeconds();
            if (month >= 1 && month <= 9) {
                month = "0" + month;
            }
            if (day >= 1 && day <= 9) {
                day = "0" + day;
            }
            if (hh >= 1 && hh <= 9) {
                hh = "0" + hh;
            }
            if (mm >= 1 && mm <= 9) {
                mm = "0" + mm;
            }
            if (ss >= 1 && ss <= 9) {
                ss = "0" + ss;
            }
            var sum = year + "-" + month + "-" + day + " " + hh + ":" + mm + ":" + ss;
            var Datatime = this.state.DataTime;
            if (this.state.DataTime.length == 8) {
                var reg = /(.{4})(.*)/;
                Datatime = Datatime.replace(reg, "$1-$2");
                var Reg = /(.{7})(.*)/;
                Datatime = Datatime.replace(Reg, "$1-$2");
                return new Promise(function (resolve, reject) {
                    _Storage2.default.get('ShopCode').then(function (ShopCode) {
                        _Storage2.default.get('PosCode').then(function (PosCode) {
                            var params = {
                                TblName: "VipCardPay_Ret",
                                PayOrderNo: _this13.state.numform,
                                CardPwd: _this13.state.CardPwd,
                                shopcode: ShopCode,
                                poscode: PosCode,
                                CardFaceNo: _this13.state.CardFaceNo,
                                OrderTotal: _this13.state.amount,
                                SaleTotal: _this13.state.ShopAmount,
                                JfValue: 0,
                                TransFlag: sum,
                                OldSaleDate: Datatime,
                                RetSerinalNo: _this13.state.RetSerinalNo

                            };
                            _Storage2.default.get('LinkUrl').then(function (tags) {
                                _FetchUtils2.default.post(tags, JSON.stringify(params)).then(function (data) {
                                    if (data.retcode == 1) {
                                        var TblRow = data.TblRow;
                                        var retcurrJF;
                                        var retZjf;
                                        var ReferenceNo;
                                        var retTxt;
                                        var PayretcurrJF;

                                        for (var i = 0; i < TblRow.length; i++) {
                                            var row = TblRow[i];
                                            retcurrJF = row.retcurrJF;
                                            retZjf = row.retZjf;
                                            ReferenceNo = row.ReferenceNo;
                                            retTxt = row.retTxt;
                                        }
                                        ;

                                        for (var _i21 = 0; _i21 < _this13.productData.length; _i21++) {
                                            var Pid;
                                            var PayCode;
                                            var productData = _this13.productData[_i21];
                                            if (productData.payName == "储值卡") {
                                                Pid = productData.Pid;
                                                PayCode = productData.PayCode;
                                            }
                                        }
                                        ;
                                        var TblRowconcat = {
                                            'payName': '储值卡',
                                            'CardFaceNo': _this13.state.CardFaceNo,
                                            'total': -retcurrJF,
                                            'retZjf': retZjf,
                                            'ReferenceNo': ReferenceNo,
                                            'PayretcurrJF': PayretcurrJF,
                                            'pid': Pid,
                                            'PayCode': PayCode
                                        };
                                        _this13.dataRows.push(TblRowconcat);
                                        _this13.state.payments -= retcurrJF;
                                        var Total = _BigDecimalUtils2.default.add(_this13.state.ShopAmount, _this13.state.payments, 2);
                                        _this13.setState({
                                            payments: _this13.state.payments,
                                            Amount: retcurrJF,
                                            retZjf: retZjf,
                                            ReferenceNo: ReferenceNo,
                                            retTxt: retTxt,
                                            CardFaceNo: _this13.state.CardFaceNo,
                                            Total: Total,
                                            PriceAmount: Total + "",
                                            payname: "储值卡",
                                            dataSource: _this13.state.dataSource.cloneWithRows(_this13.dataRows)
                                        });
                                        _this13.restorage1();
                                        _this13.RefundTotal();
                                    } else {
                                        alert(JSON.stringify(data));
                                    }
                                    ;
                                }, function (err) {
                                    alert("网络请求失败");
                                });
                            });
                        });
                    });
                });
            } else {
                alert("请输入正确的时间");
            }
        }
    }, {
        key: 'CloseRetButton',
        value: function CloseRetButton() {
            this.RefundTotal();
        }
    }, {
        key: 'ScannCode',
        value: function ScannCode() {
            var _this14 = this;

            NativeModules.RNScannerAndroid.openScanner();
            _reactNative.DeviceEventEmitter.addListener("code", function (code) {
                _this14.setState({
                    myText: code
                });
                _reactNative.DeviceEventEmitter.removeAllListeners();
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this15 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 1832
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1833
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1834
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1835
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 1836
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1838
                                }
                            },
                            '\u4ED8\u6B3E'
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.TitleCont, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1841
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.FristList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1842
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1843
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListView1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1844
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ListText, { textAlign: "center" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1845
                                        }
                                    },
                                    '\u5E94\u4ED8\u91D1\u989D'
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1848
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListView1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1849
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ListText, { textAlign: "center" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1850
                                        }
                                    },
                                    '\u652F\u4ED8\u91D1\u989D'
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1853
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListView1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1854
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ListText, { textAlign: "center" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1855
                                        }
                                    },
                                    '\u5269\u4F59\u91D1\u989D'
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.FristList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1859
                            }
                        },
                        this.state.Seles == "T" ? _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1862
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListView1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1863
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: [styles.ListText, { textAlign: "center" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1864
                                        }
                                    },
                                    this.state.ShopAmount
                                )
                            )
                        ) : _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1868
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListView1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1869
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ListText, { textAlign: "center" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1870
                                        }
                                    },
                                    '-',
                                    this.state.ShopAmount
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1874
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListView1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1875
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ListText, { textAlign: "center" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1876
                                        }
                                    },
                                    this.state.payments
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1879
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListView1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1880
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ListText, { textAlign: "center" }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1881
                                        }
                                    },
                                    this.state.Total
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ShopCont, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1886
                        }
                    },
                    _react2.default.createElement(_reactNative.View, { style: [{ backgroundColor: "#ff4e4e", width: 10, height: 60, position: "absolute", left: 0 }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1887
                        }
                    }),
                    _react2.default.createElement(_reactNative.View, { style: [{ backgroundColor: "#ff4e4e", width: 10, height: 60, position: "absolute", right: 0 }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1888
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.ShopList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1889
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ListTitle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1890
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListClass, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1891
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ListClassText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1892
                                        }
                                    },
                                    '\u4ED8\u6B3E\u65B9\u5F0F'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListClass, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1894
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ListClassText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1895
                                        }
                                    },
                                    '\u5361\u53F7'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListClass, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1897
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ListClassText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1898
                                        }
                                    },
                                    '\u91D1\u989D'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListClass, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1900
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ListClassText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1901
                                        }
                                    },
                                    '\u4F59\u989D'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ListClass, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1903
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ListClassText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1904
                                        }
                                    },
                                    '\u51ED\u8BC1'
                                )
                            )
                        ),
                        _react2.default.createElement(_reactNative.ListView, {
                            style: styles.scrollview,
                            dataSource: this.state.dataSource,
                            showsVerticalScrollIndicator: true,
                            renderRow: this._renderRow.bind(this),
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1907
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.ScrollView,
                    { style: styles.ScrollView, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1915
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.MemberMent, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1916
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Member, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1917
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.MemberLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1918
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.MemberText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1919
                                        }
                                    },
                                    '\u79EF\u5206\uFF1A'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.MemberRight, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1921
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.MemberText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1922
                                        }
                                    },
                                    this.state.JfBal
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Member, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1925
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.MemberLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1926
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.MemberText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1927
                                        }
                                    },
                                    '\u4F59\u989D\uFF1A'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.MemberRight, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1929
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.MemberText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1930
                                        }
                                    },
                                    this.state.BalanceTotal
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.PayMent, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1934
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.FirstMent, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1935
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.paymentleft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1936
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.InpuTingText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1937
                                        }
                                    },
                                    '\u4ED8\u6B3E\u989D\uFF1A'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.paymentright, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1939
                                    }
                                },
                                _react2.default.createElement(_reactNative.TextInput, {
                                    numberoflines: 1,
                                    keyboardType: 'numeric',
                                    textalign: 'center',
                                    underlineColorAndroid: 'transparent',
                                    style: styles.paymentinput,
                                    defaultValue: this.state.PriceAmount,
                                    onChangeText: function onChangeText(value) {
                                        _this15.setState({
                                            amount: value
                                        });
                                    },
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1940
                                    }
                                })
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.discount.bind(this), style: styles.FirstMent1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1955
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.FirstMentText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1956
                                    }
                                },
                                '\u6574\u5355\u4F18\u60E0'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.JiaoYi.bind(this), style: styles.FirstMent1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1958
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.FirstMentText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1959
                                    }
                                },
                                '\u7EE7\u7EED\u4EA4\u6613'
                            )
                        )
                    ),
                    _react2.default.createElement(_reactNative.FlatList, {
                        horizontal: true,
                        key: function key(item) {
                            return item.Pid;
                        },
                        style: styles.horizontal,
                        renderItem: this._renderItem.bind(this),
                        data: this.state.data,
                        keyExtractor: this.keyExtractor,
                        getItemLayout: function getItemLayout(data, index) {
                            return { length: 50, offset: 50 * index, index: index };
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1962
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.Modal,
                        {
                            transparent: true,
                            visible: this.state.total,
                            onShow: function onShow() {},
                            onRequestClose: function onRequestClose() {}, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1973
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.MemberBounces, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1980
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Cont, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1981
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.BouncesTitle, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1982
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.TitleText, { fontSize: 18 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1983
                                            }
                                        },
                                        '\u50A8\u503C\u5361'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.MemberCont, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1985
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberView, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1986
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Card, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 1987
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.CardText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 1988
                                                    }
                                                },
                                                '\u5361\u53F7\uFF1A'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.CardNumber, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 1990
                                                }
                                            },
                                            _react2.default.createElement(_reactNative.TextInput, {
                                                returnKeyType: 'search',
                                                keyboardType: 'numeric',
                                                textalign: 'center',
                                                underlineColorAndroid: 'transparent',
                                                placeholderTextColor: '#bcbdc1',
                                                style: styles.CardTextInput,
                                                onChangeText: function onChangeText(value) {
                                                    _this15.setState({
                                                        CardFaceNo: value
                                                    });
                                                },
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 1991
                                                }
                                            })
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberView, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2006
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Card, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2007
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.CardText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2008
                                                    }
                                                },
                                                '\u5BC6\u7801\uFF1A'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.CardNumber, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2010
                                                }
                                            },
                                            _react2.default.createElement(_reactNative.TextInput, {
                                                returnKeyType: 'search',
                                                keyboardType: 'numeric',
                                                textalign: 'center',
                                                underlineColorAndroid: 'transparent',
                                                placeholderTextColor: '#bcbdc1',
                                                style: styles.CardTextInput,
                                                onChangeText: function onChangeText(value) {
                                                    _this15.setState({
                                                        CardPwd: value
                                                    });
                                                },
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2011
                                                }
                                            })
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberButton, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2026
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            { onPress: this.CloseButton.bind(this),
                                                style: [styles.MemberClose, { marginRight: 15 }], __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2027
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.TitleText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2029
                                                    }
                                                },
                                                '\u53D6\u6D88'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            { onPress: this.Button.bind(this), style: styles.MemberClose, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2031
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.TitleText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2032
                                                    }
                                                },
                                                '\u786E\u5B9A'
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.Modal,
                        {
                            transparent: true,
                            visible: this.state.NewAllPrice,
                            onShow: function onShow() {},
                            onRequestClose: function onRequestClose() {}, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2039
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.MemberBounces, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2046
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Cont, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2047
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.BouncesTitle, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2048
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.TitleText, { fontSize: 18 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2049
                                            }
                                        },
                                        '\u6574\u5355\u4F18\u60E0'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.NewPriceList, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2051
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.NewPriceLeft.bind(this), style: styles.NewPriceleft, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2052
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Priceleft, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2053
                                                }
                                            },
                                            _react2.default.createElement(_reactNative.Image, { source: this.state.pressStatus == 'pressin' ? require(344                  ) : require(345                 ), __source: { // 345 = ../images/1_43.png // 344 = ../images/1_431.png
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2054
                                                }
                                            })
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Priceright, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2056
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.PricerightText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2057
                                                    }
                                                },
                                                '\u4F18\u60E0\u4EF7'
                                            )
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.NewPriceRight.bind(this), style: styles.NewPriceright, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2060
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Priceleft, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2061
                                                }
                                            },
                                            _react2.default.createElement(_reactNative.Image, { source: this.state.PressStatus == 'Pressin' ? require(344                  ) : require(345                 ), __source: { // 345 = ../images/1_43.png // 344 = ../images/1_431.png
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2062
                                                }
                                            })
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Priceright, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2064
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.PricerightText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2065
                                                    }
                                                },
                                                '\u6298\u6263\u4EF7'
                                            )
                                        )
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: [styles.MemberCont, { height: 150 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2069
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: [styles.MemberView, { marginTop: 0 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2070
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Card, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2071
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.CardText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2072
                                                    }
                                                },
                                                '\u91D1\u989D(\u6298\u6263\u7387)\uFF1A'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.CardNumber, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2074
                                                }
                                            },
                                            _react2.default.createElement(_reactNative.TextInput, {
                                                returnKeyType: 'search',
                                                keyboardType: 'numeric',
                                                textalign: 'center',
                                                underlineColorAndroid: 'transparent',
                                                placeholderTextColor: '#bcbdc1',
                                                style: styles.CardTextInput,
                                                onChangeText: function onChangeText(value) {
                                                    _this15.setState({
                                                        NewPrice: value
                                                    });
                                                },
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2075
                                                }
                                            })
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberButton, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2090
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            { onPress: this.PriceClose.bind(this),
                                                style: [styles.MemberClose, { marginRight: 15 }], __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2091
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.TitleText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2093
                                                    }
                                                },
                                                '\u53D6\u6D88'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            { onPress: this.PriceButton.bind(this), style: styles.MemberClose, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2095
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.TitleText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2096
                                                    }
                                                },
                                                '\u786E\u5B9A'
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.Modal,
                        {
                            transparent: true,
                            visible: this.state.RefundTotal,
                            onShow: function onShow() {},
                            onRequestClose: function onRequestClose() {}, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2103
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.MemberBounces, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2110
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Cont, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2111
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.BouncesTitle, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2112
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.TitleText, { fontSize: 18 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2113
                                            }
                                        },
                                        '\u50A8\u503C\u5361'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.MemberCont1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2115
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberView, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2116
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Card, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2117
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.CardText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2118
                                                    }
                                                },
                                                '\u5361\u53F7\uFF1A'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.CardNumber, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2120
                                                }
                                            },
                                            _react2.default.createElement(_reactNative.TextInput, {
                                                returnKeyType: 'search',
                                                keyboardType: 'numeric',
                                                textalign: 'center',
                                                underlineColorAndroid: 'transparent',
                                                placeholderTextColor: '#bcbdc1',
                                                style: styles.CardTextInput,
                                                onChangeText: function onChangeText(value) {
                                                    _this15.setState({
                                                        CardFaceNo: value
                                                    });
                                                },
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2121
                                                }
                                            })
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberView, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2136
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Card, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2137
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.CardText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2138
                                                    }
                                                },
                                                '\u5BC6\u7801\uFF1A'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.CardNumber, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2140
                                                }
                                            },
                                            _react2.default.createElement(_reactNative.TextInput, {
                                                returnKeyType: 'search',
                                                keyboardType: 'numeric',
                                                textalign: 'center',
                                                underlineColorAndroid: 'transparent',
                                                placeholderTextColor: '#bcbdc1',
                                                style: styles.CardTextInput,
                                                onChangeText: function onChangeText(value) {
                                                    _this15.setState({
                                                        CardPwd: value
                                                    });
                                                },
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2141
                                                }
                                            })
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberView, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2156
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Card, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2157
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.CardText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2158
                                                    }
                                                },
                                                '\u65F6\u95F4\uFF1A'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.CardNumber, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2160
                                                }
                                            },
                                            _react2.default.createElement(_reactNative.TextInput, {
                                                returnKeyType: 'search',
                                                keyboardType: 'numeric',
                                                textalign: 'center',
                                                underlineColorAndroid: 'transparent',
                                                placeholderTextColor: '#bcbdc1',
                                                style: styles.CardTextInput,
                                                onChangeText: function onChangeText(value) {
                                                    _this15.setState({
                                                        DataTime: value
                                                    });
                                                },
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2161
                                                }
                                            })
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberView, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2176
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.Card, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2177
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.CardText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2178
                                                    }
                                                },
                                                '\u9000\u8D27\u51ED\u8BC1\uFF1A'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.CardNumber, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2180
                                                }
                                            },
                                            _react2.default.createElement(_reactNative.TextInput, {
                                                returnKeyType: 'search',
                                                keyboardType: 'numeric',
                                                textalign: 'center',
                                                underlineColorAndroid: 'transparent',
                                                placeholderTextColor: '#bcbdc1',
                                                style: styles.CardTextInput,
                                                onChangeText: function onChangeText(value) {
                                                    _this15.setState({
                                                        RetSerinalNo: value
                                                    });
                                                },
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2181
                                                }
                                            })
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberButton, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2196
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            { onPress: this.CloseRetButton.bind(this),
                                                style: [styles.MemberClose, { marginRight: 15 }], __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2197
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.TitleText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2199
                                                    }
                                                },
                                                '\u53D6\u6D88'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            { onPress: this.RetButton.bind(this),
                                                style: styles.MemberClose, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2201
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.TitleText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2203
                                                    }
                                                },
                                                '\u786E\u5B9A'
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.Modal,
                        {
                            transparent: true,
                            visible: this.state.LayerShow,
                            onShow: function onShow() {},
                            onRequestClose: function onRequestClose() {}, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2210
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Image,
                            { source: require(346                       ), style: styles.ModalStyle, __source: { // 346 = ../images/background.png
                                    fileName: _jsxFileName,
                                    lineNumber: 2217
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalStyleCont, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2218
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ModalStyleTitle, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2219
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalTitleText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2220
                                            }
                                        },
                                        '\u8BF7\u8F93\u5165\u4ED8\u6B3E\u989D'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { onPress: this.ModeButton.bind(this), style: styles.Button, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2224
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalTitleText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2225
                                            }
                                        },
                                        '\u597D\u7684'
                                    )
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.Modal,
                        {
                            transparent: true,
                            visible: this.state.ModalShow,
                            onShow: function onShow() {},
                            onRequestClose: function onRequestClose() {}, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2232
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Image,
                            { source: require(346                       ), style: styles.ModalStyle, __source: { // 346 = ../images/background.png
                                    fileName: _jsxFileName,
                                    lineNumber: 2239
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalStyleCont, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2240
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ModalStyleTitle, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2241
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalTitleText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2242
                                            }
                                        },
                                        '\u4ED8\u6B3E\u989D\u4E0D\u80FD\u5927\u4E8E\u5269\u4F59\u91D1\u989D'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { onPress: this.ModalButton.bind(this), style: styles.Button, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2246
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalTitleText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2247
                                            }
                                        },
                                        '\u597D\u7684'
                                    )
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.Modal,
                        {
                            transparent: true,
                            visible: this.state.MZPrice,
                            onShow: function onShow() {},
                            onRequestClose: function onRequestClose() {}, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2254
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.MemberBounces, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2261
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Cont, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2262
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.BouncesTitle, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2263
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.TitleText, { fontSize: 18 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2264
                                            }
                                        },
                                        '\u6DFB\u52A0',
                                        this.state.ShopPrice,
                                        '\u5143 \u8D60\u9001\u4EE5\u4E0B\u5546\u54C1'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.ShopAmount, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2266
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.ShopName, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2267
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.ShopText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2268
                                                }
                                            },
                                            '\u5546\u54C1\u540D'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.ShopName, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2270
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.ShopText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2271
                                                }
                                            },
                                            '\u6570\u91CF'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.ShopName, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2273
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.ShopText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2274
                                                }
                                            },
                                            '\u7EC4\u53F7'
                                        )
                                    )
                                ),
                                _react2.default.createElement(_reactNative.ListView, {
                                    style: styles.ShopData,
                                    dataSource: this.state.DataSource,
                                    showsVerticalScrollIndicator: true,
                                    renderRow: this.ShopPrice.bind(this),
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2277
                                    }
                                }),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.ShopDataClose, onPress: this.ShopClose.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2283
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.PageRowText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2284
                                            }
                                        },
                                        '\u53D6\u6D88'
                                    )
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.Modal,
                        {
                            transparent: true,
                            visible: this.state.Barcode,
                            onShow: function onShow() {},
                            onRequestClose: function onRequestClose() {}, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2290
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.MemberBounces, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2295
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Cont, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2296
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.miyaStyle, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2297
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.View, { style: { width: 30, height: 30 }, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2298
                                        }
                                    }),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.miyaTitlStyle, { fontSize: 18, color: "#ffffff" }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2299
                                            }
                                        },
                                        '\u7C73\u96C5\u652F\u4ED8'
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.ScannCode.bind(this), __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2300
                                            }
                                        },
                                        _react2.default.createElement(_reactNative.Image, { source: require(347                 ), style: styles.scanImageStyle, __source: { // 347 = ../images/1_05.png
                                                fileName: _jsxFileName,
                                                lineNumber: 2301
                                            }
                                        })
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: [styles.MemberCont, { height: 120 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2304
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberView, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2305
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: [styles.Card, { width: 70 }], __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2306
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.CardText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2307
                                                    }
                                                },
                                                '\u652F\u4ED8\u6761\u7801\uFF1A'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.View,
                                            { style: styles.CardNumber, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2309
                                                }
                                            },
                                            _react2.default.createElement(_reactNative.TextInput, {
                                                returnKeyType: 'search',
                                                keyboardType: 'numeric',
                                                textalign: 'center',
                                                underlineColorAndroid: 'transparent',
                                                placeholderTextColor: '#bcbdc1',
                                                style: styles.CardTextInput,
                                                defaultValue: this.state.myText,
                                                onChangeText: function onChangeText(value) {
                                                    _this15.setState({
                                                        barcode: value
                                                    });
                                                },
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2310
                                                }
                                            })
                                        )
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.View,
                                        { style: styles.MemberButton, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 2326
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            { onPress: this.CloseBarcode.bind(this), style: [styles.MemberClose, { marginRight: 15 }], __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2327
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.TitleText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2328
                                                    }
                                                },
                                                '\u53D6\u6D88'
                                            )
                                        ),
                                        _react2.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            { onPress: this.BarcodeButton.bind(this), style: styles.MemberClose, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 2330
                                                }
                                            },
                                            _react2.default.createElement(
                                                _reactNative.Text,
                                                { style: styles.TitleText, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 2331
                                                    }
                                                },
                                                '\u786E\u5B9A'
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.Modal,
                        {
                            animationType: 'fade',
                            transparent: true,
                            visible: this.state.WaitLoading,
                            onShow: function onShow() {},
                            onRequestClose: function onRequestClose() {}, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 2338
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LoadCenter, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 2344
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.loading, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2345
                                    }
                                },
                                _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 2346
                                    }
                                }),
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.TextLoading, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 2347
                                        }
                                    },
                                    '\u52A0\u8F7D\u4E2D'
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);
    return Pay;
}(_react.Component);

exports.default = Pay;


var styles = _reactNative.StyleSheet.create({
    miyaStyle: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        backgroundColor: "#ff4e4e",
        borderTopLeftRadius: 5,
        borderTopRightRadius: 5
    },
    miyaTitlStyle: {
        alignItems: "center"
    },
    scanImageStyle: {
        alignItems: "right",
        alignItems: "center"
    },
    ShopDataClose: {
        marginLeft: 30,
        marginRight: 30,
        paddingTop: 10,
        paddingBottom: 10,
        backgroundColor: "#ff4e4e",
        borderRadius: 5
    },
    ShopAmount: {
        paddingTop: 10,
        paddingBottom: 10,
        flexDirection: "row"
    },
    ShopName: {
        flex: 1
    },
    ShopText: {
        color: "#666666",
        fontSize: 16,
        textAlign: "center"
    },
    ShopPRice: {
        paddingTop: 5,
        paddingBottom: 5,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2",
        flexDirection: "row"
    },
    ShopData: {
        height: 180
    },
    NewPriceList: {
        flexDirection: "row",
        paddingLeft: 20,
        paddingRight: 20,
        paddingTop: 10,
        paddingBottom: 15
    },
    NewPriceleft: {
        flex: 1,
        flexDirection: "row"
    },
    NewPriceright: {
        flex: 1,
        flexDirection: "row"
    },
    Priceleft: {
        width: 26
    },
    Priceright: {
        marginLeft: 7,
        flex: 1
    },
    PricerightText: {
        fontSize: 16,
        color: "#333333"
    },

    container: {
        flex: 1,
        backgroundColor: '#f2f2f2',
        paddingBottom: 10
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 56,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    TitleCont: {
        height: 74,
        backgroundColor: "#ff4e4e",
        paddingLeft: 10,
        paddingRight: 10
    },
    FristList: {
        height: 30,
        paddingTop: 5,
        flexDirection: "row"
    },
    List: {
        flex: 1,
        flexDirection: "row"
    },
    ListView: {
        flex: 1,
        height: 20,
        overflow: "hidden",
        backgroundColor: "#ff4e4e"
    },
    ListView1: {
        flex: 1
    },
    ListText: {
        color: "#ffffff",
        fontSize: 16
    },
    ShopCont: {
        paddingLeft: 10,
        paddingRight: 10
    },
    ShopList: {
        height: 180,
        borderRadius: 5,
        backgroundColor: "#ffffff"
    },
    ListTitle: {
        height: 54,
        paddingTop: 16,
        flexDirection: "row",
        backgroundColor: "#f2f2f2",
        borderTopLeftRadius: 5,
        borderTopRightRadius: 5
    },
    ListClass: {
        flex: 1
    },
    ListClassText: {
        color: "#666666",
        fontSize: 16,
        textAlign: "center"
    },
    Prece: {
        height: 54,
        marginTop: 10,
        marginLeft: 20,
        marginRight: 20,
        flexDirection: "row"
    },
    InputingLeft: {
        width: 80,
        marginTop: 15
    },
    InpuTingText: {
        color: "#333333",
        fontSize: 16
    },
    InputingRight: {
        flex: 1,
        height: 54,
        paddingTop: 6,
        backgroundColor: "#ffffff",
        borderRadius: 5
    },
    Inputing: {
        flex: 2,
        flexDirection: "row"
    },
    Inputing1: {
        flex: 3,
        flexDirection: "row"
    },
    Inputingleft: {
        width: 65,
        height: 20
    },
    Inputingright: {
        flex: 1,
        height: 20,
        overflow: "hidden"
    },
    InputingText: {
        fontSize: 18,
        color: "#333333"
    },
    Inputing1Left: {
        flexDirection: "row"
    },
    horizontal: {
        marginLeft: 10,
        marginRight: 10,
        marginTop: 20,
        paddingBottom: 15
    },
    PageRowButton: {
        backgroundColor: "#ff4e4e",
        borderRadius: 5,
        paddingLeft: 10,
        paddingRight: 10,
        paddingTop: 10,
        paddingBottom: 10,
        height: 46
    },
    PageRowText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    },
    MemberMent: {
        height: 35,
        marginTop: 10,
        marginLeft: 10,
        marginRight: 10,
        flexDirection: "row"
    },
    MemberText: {
        color: "#333333",
        fontSize: 16
    },
    Member: {
        flex: 1,
        flexDirection: "row"
    },
    MemberLeft: {
        width: 50
    },
    MemberRight: {
        flex: 1
    },
    PayMent: {
        height: 45,
        marginTop: 10,
        marginLeft: 10,
        marginRight: 10,
        flexDirection: "row"
    },
    FirstMent: {
        flex: 1,
        flexDirection: "row"
    },
    FirstMent1: {
        width: 70,
        marginLeft: 3,
        marginRight: 3,
        backgroundColor: "#ff4e4e",
        borderRadius: 5,
        paddingTop: 6,
        height: 35
    },
    FirstMentText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    },
    paymentleft: {
        width: 65,
        paddingTop: 7
    },
    paymentright: {
        flex: 1,
        height: 35,
        backgroundColor: "#ffffff",
        borderRadius: 5
    },
    paymentinput: {
        flex: 1
    },
    ShopList1: {
        paddingTop: 10,
        paddingBottom: 10,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2",
        flexDirection: "row"
    },
    Row: {
        flex: 1
    },
    Name: {
        fontSize: 16,
        color: "#333333",
        overflow: "hidden",
        textAlign: "center"
    },
    MemberBounces: {
        backgroundColor: "#3e3d3d",
        opacity: 0.9,
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    Cont: {
        width: 280,
        borderRadius: 5,
        paddingBottom: 20,
        backgroundColor: "#f2f2f2"
    },
    BouncesTitle: {
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ff4e4e",
        borderTopLeftRadius: 5,
        borderTopRightRadius: 5,
        flexDirection: 'row'
    },
    TitleText: {
        flex: 1,
        textAlign: "center",
        color: "#ffffff",
        fontSize: 16
    },
    MemberCont: {
        height: 200,
        paddingLeft: 15,
        paddingRight: 15
    },
    MemberCont1: {
        height: 350,
        paddingLeft: 15,
        paddingRight: 15
    },
    MemberView: {
        flexDirection: "row",
        marginTop: 20
    },
    Card: {
        width: 50,
        marginTop: 11
    },
    CardText: {
        fontSize: 14,
        color: "#333333"
    },
    CardNumber: {
        flex: 1
    },
    CardTextInput: {
        borderRadius: 5,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingTop: 10,
        paddingBottom: 10,
        paddingLeft: 5,
        fontSize: 16
    },
    MemberButton: {
        marginTop: 20,
        flexDirection: "row"
    },
    MemberClose: {
        flex: 1,
        backgroundColor: "#ff4e4e",
        height: 34,
        paddingTop: 6,
        paddingBottom: 6,
        borderRadius: 5
    },
    ModalStyle: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        width: null,
        height: null
    },
    ModalStyleCont: {
        height: 130,
        paddingTop: 30,
        paddingLeft: 10,
        paddingRight: 10,
        borderRadius: 5,
        backgroundColor: "#ffffff"
    },
    ModalStyleTitle: {
        height: 40,
        paddingLeft: 50,
        paddingRight: 50,
        borderBottomWidth: 1,
        borderBottomColor: "#f5f5f5"
    },
    ModalTitleText: {
        fontSize: 16,
        color: "#333333",
        textAlign: "center"
    },
    Button: {
        paddingTop: 20
    },
    LoadCenter: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    loading: {
        paddingLeft: 15,
        paddingRight: 15,
        paddingTop: 15,
        paddingBottom: 15,
        backgroundColor: "#000000",
        opacity: 0.8,
        borderRadius: 5
    },
    TextLoading: {
        fontSize: 17,
        color: "#ffffff"
    },
    activity: {
        marginBottom: 5
    }
});
}, 311, null, "myproject/Sell/Pay.js");
__d(/* myproject/Sell/promotion/DPPromotionManager.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _DateUtils = require(313                    ); // 313 = ../../utils/DateUtils

var _DateUtils2 = babelHelpers.interopRequireDefault(_DateUtils);

var _BigDecimalUtils = require(314                          ); // 314 = ../../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var DPPromotionManager = function DPPromotionManager() {
  babelHelpers.classCallCheck(this, DPPromotionManager);
};

DPPromotionManager.dp = function (cardTypeCode, productBean, dbAdapter) {
  return new Promise(function (resolve, reject) {
    var disPrice = 0;
    var shopNewTotal = 0;
    var prodCode = productBean.ProdCode;
    var shopNum = productBean.ShopNumber;
    var saleType = productBean.SaleType;
    var barCode = productBean.BarCode;
    var dscPrice = 0;
    dbAdapter.selectTdscHead("DP").then(function (formTypes) {
      if (formTypes.length == 0) {
        resolve(false);
        return;
      }
      for (var i = 0; i < formTypes.length; i++) {
        var item = formTypes.item(i);
        var formNo = item.FormNo;
        DPPromotionManager.isContainCustType(cardTypeCode, dbAdapter, prodCode, formNo).then(function (result) {
          if (result) {
            dbAdapter.selectTDscProd(prodCode).then(function (tDscProdBeans) {
              if (tDscProdBeans != null) {
                var tDscProdBean = tDscProdBeans.item(0);
                var curr1 = tDscProdBean.Curr1;
                var str1 = tDscProdBean.Str1;
                dscPrice = tDscProdBean.DscPrice;
                if (0 == str1) {
                  shopNewTotal = _BigDecimalUtils2.default.multiply(shopNum, dscPrice, 2);
                } else if (1 == str1) {
                  if (shopNum <= curr1) {
                    shopNewTotal = _BigDecimalUtils2.default.multiply(shopNum, dscPrice, 2);
                  } else {
                    shopNewTotal = _BigDecimalUtils2.default.multiply(curr1, dscPrice, 2);
                    shopNewTotal = _BigDecimalUtils2.default.add(_BigDecimalUtils2.default.multiply(shopNum - curr1, productBean.StdPrice, 2), shopNewTotal, 2);
                  }
                } else if (2 == str1) {
                  if (shopNum > curr1) {
                    shopNewTotal = _BigDecimalUtils2.default.multiply(curr1, productBean.StdPrice, 2);
                    shopNewTotal = _BigDecimalUtils2.default.add(_BigDecimalUtils2.default.multiply(shopNum - curr1, dscPrice, 2), shopNewTotal, 2);
                  } else if (shopNum < curr1) {
                    shopNewTotal = _BigDecimalUtils2.default.multiply(shopNum, productBean.StdPrice, 2);
                  }
                } else if (3 == str1) {
                  if (shopNum > curr1) {
                    shopNewTotal = _BigDecimalUtils2.default.multiply(shopNum, dscPrice, 2);
                  }
                }
                var shopAmount = Number(shopNewTotal);
                if (shopAmount != 0) {
                  productBean.ShopAmount = shopAmount;
                }
                dbAdapter.updateShopInfoFormType(productBean.pid);
                resolve(productBean);
              } else {
                resolve(false);
              }
            });
          } else {
            resolve(false);
          }
        });
      }
    });
  });
};

DPPromotionManager.isContainCustType = function (cardTypeCode, dbAdapter, prodCode, formNo) {
  return new Promise(function (resolve, reject) {
    var promises = [];
    dbAdapter.selectTDscCust(cardTypeCode, formNo).then(function (tDscCustBeans) {
      if (tDscCustBeans != null && tDscCustBeans.length != 0) {
        for (var i = 0; i < tDscCustBeans.length; i++) {
          promises.push(dbAdapter.selectTDscPlan(tDscCustBeans.item(i).FormNo));
        }
        new Promise.all(promises).then(function (promiseResults) {
          var _loop = function _loop(_i) {
            var _loop2 = function _loop2(j) {
              var tDscPlanBean = promiseResults[_i].item(j);
              var beginDate = tDscPlanBean.BeginDate;
              var beginTime = tDscPlanBean.BeginTime;
              var endDate = tDscPlanBean.EndDate;
              var endTime = tDscPlanBean.EndTime;
              var vldWeek = tDscPlanBean.VldWeek.split("");
              var week = _DateUtils2.default.getWeek();
              var c = void 0;
              if (week != 0) {
                c = vldWeek[week - 1];
              } else {
                c = -1;
              }
              console.log(!_DateUtils2.default.compare2HMS(_DateUtils2.default.getHSM(), endTime) && _DateUtils2.default.compare2HMS(_DateUtils2.default.getHSM(), beginTime));
              if (_DateUtils2.default.compareDate(endDate, _DateUtils2.default.getDate()) && _DateUtils2.default.compareDate(_DateUtils2.default.getDate(), beginDate) && c == 1) {
                if (!_DateUtils2.default.compare2HMS(_DateUtils2.default.getHSM(), endTime) && _DateUtils2.default.compare2HMS(_DateUtils2.default.getHSM(), beginTime)) {
                  dbAdapter.selectTDscProd(prodCode).then(function (tDscProdBeans) {
                    if (tDscProdBeans != null && tDscProdBeans.length != 0) {
                      resolve(true);
                      return;
                    } else if (tDscProdBeans.length == 0) {
                      resolve(false);
                      return;
                    } else if (_i == tDscCustBeans.length - 1 && j == promiseResults[_i].length - 1) {
                      resolve(false);
                      return;
                    }
                  });
                } else {
                  resolve(false);
                  return {
                    v: {
                      v: void 0
                    }
                  };
                }
              } else {
                resolve(false);
                return {
                  v: {
                    v: void 0
                  }
                };
              }
            };

            for (var j = 0; j < promiseResults[_i].length; j++) {
              var _ret2 = _loop2(j);

              if (typeof _ret2 === "object") return _ret2.v;
            }
          };

          for (var _i = 0; _i < promiseResults.length; _i++) {
            var _ret = _loop(_i);

            if (typeof _ret === "object") return _ret.v;
          }
        });
      } else {
        resolve(false);
        return;
      }
    });
  });
};

exports.default = DPPromotionManager;
}, 312, null, "myproject/Sell/promotion/DPPromotionManager.js");
__d(/* myproject/utils/DateUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var DateUtils = function DateUtils() {
  babelHelpers.classCallCheck(this, DateUtils);
};

DateUtils.getCurrentDate = function (date) {
  var y = date.getFullYear();
  var m = date.getMonth() + 1;
  m = m < 10 ? '0' + m : m;
  var d = date.getDate();
  d = d < 10 ? '0' + d : d;
  var h = date.getHours();
  h = h < 10 ? '0' + h : h;
  var minute = date.getMinutes();
  minute = minute < 10 ? '0' + minute : minute;
  var second = date.getSeconds();
  second = second < 10 ? '0' + second : second;
  return y + '-' + m + '-' + d + ' ' + h + ':' + minute + ':' + second;
};

DateUtils.getDate = function () {
  var date = new Date();
  var y = date.getFullYear();
  var m = date.getMonth() + 1;
  m = m < 10 ? '0' + m : m;
  var d = date.getDate();
  d = d < 10 ? '0' + d : d;
  return y + '-' + m + '-' + d;
};

DateUtils.getHSM = function () {
  var date = new Date();
  var h = date.getHours();
  h = h < 10 ? '0' + h : h;
  var minute = date.getMinutes();
  minute = minute < 10 ? '0' + minute : minute;
  var second = date.getSeconds();
  second = second < 10 ? '0' + second : second;
  return h + ':' + minute + ':' + second;
};

DateUtils.compareDate = function (d1, d2) {
  try {
    if (d1 == d2) {
      return true;
    }
    var b = new Date(d1.replace(/-/g, "\/")) > new Date(d2.replace(/-/g, "\/"));
    return b;
  } catch (err) {
    return false;
  }
};

DateUtils.getWeek = function () {
  var day = new Date().getDay();
  if (day == "" || day == undefined) {
    day = 0;
  }
  return day;
};

DateUtils.compare2HMS = function (t1, t2) {
  var date = new Date();
  var a = t1.split(":");
  var b = t2.split(":");
  return date.setHours(a[0], a[1]) > date.setHours(b[0], b[1]);
};

exports.default = DateUtils;
}, 313, null, "myproject/utils/DateUtils.js");
__d(/* myproject/utils/BigDecimalUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var BigDecimalUtils = function BigDecimalUtils() {
  babelHelpers.classCallCheck(this, BigDecimalUtils);
};

BigDecimalUtils.divide = function (a, b, degree) {
  if (a == "" || a == undefined || a == NaN) {
    a = "0";
  }
  if (b == "" || b == undefined || b == NaN) {
    b = "0";
  }

  return (Number(a) / Number(b)).toFixed(degree);
};

BigDecimalUtils.multiply = function (a, b, degree) {
  if (a == "" || a == undefined || a == NaN) {
    a = "0";
  }
  if (b == "" || b == undefined || b == NaN) {
    b = "0";
  }
  degree = BigDecimalUtils.isZero(degree);
  return (Number(a) * Number(b)).toFixed(degree);
};

BigDecimalUtils.add = function (a, b, degree) {

  if (a == "" || a == 'undefined' || a == 'NaN') {
    a = "0";
  }
  if (b == "" || b == 'undefined' || b == 'NaN') {
    b = "0";
  }
  console.log(a);
  console.log(b);
  degree = BigDecimalUtils.isZero(degree);
  return (Number(a) + Number(b)).toFixed(degree);
};

BigDecimalUtils.subtract = function (a, b, degree) {
  if (a == "" || a == 'undefined' || a == 'NaN') {
    a = "0";
  }
  if (b == "" || b == 'undefined' || b == 'NaN') {
    b = "0";
  }
  degree = BigDecimalUtils.isZero(degree);
  return (Number(a) - Number(b)).toFixed(degree);
};

BigDecimalUtils.isZero = function (degree) {

  if (degree == "" || degree == null || degree == 0) {
    return degree = 2;
  } else {
    return degree;
  }
};

exports.default = BigDecimalUtils;
}, 314, null, "myproject/utils/BigDecimalUtils.js");
__d(/* myproject/Sell/promotion/BGPromotionManager.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _BigDecimalUtils = require(314                          ); // 314 = ../../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var _PromotionUtils = require(316                         ); // 316 = ../../utils/PromotionUtils

var _PromotionUtils2 = babelHelpers.interopRequireDefault(_PromotionUtils);

var BGPromotionManager = function () {
  function BGPromotionManager() {
    babelHelpers.classCallCheck(this, BGPromotionManager);
  }

  babelHelpers.createClass(BGPromotionManager, null, [{
    key: 'BGPromotion',
    value: function BGPromotion(custTypeCode, productBean, dbAdapter) {
      return new Promise(function (resolve, reject) {
        var prodCode = productBean.ProdCode;
        dbAdapter.selectTdscHead("BG").then(function (tdscheadBeans) {
          if (tdscheadBeans.length == 0) {
            resolve(false);
            return;
          }
          var promises = [];
          if (tdscheadBeans.length != 0) {
            var _loop = function _loop(i) {
              var tdscheadBean = tdscheadBeans.item(i);
              var formNo = tdscheadBean.FormNo;
              var dtDep = tdscheadBean.dtDep;
              var dtSupp = tdscheadBean.dtSupp;
              var dtBrand = tdscheadBean.dtBrand;
              new Promise.all([_PromotionUtils2.default.isTDscExceptShop(prodCode, dbAdapter), _PromotionUtils2.default.custAndDate(custTypeCode, dbAdapter, formNo)]).then(function (results) {
                if (results.length != 0 && !results[0] == true && results[1].length != 0) {
                  if ("1" == tdscheadBean.dtAll) {
                    var dscValue = tdscheadBean.DscValue;
                    var priceMode = tdscheadBean.PriceMode;
                    var dscType = tdscheadBean.DscType;

                    BGPromotionManager.b(productBean, dscValue, dscType, priceMode);
                    if (i == tdscheadBeans.length - 1) {
                      resolve(productBean);
                    }
                  } else if ("0" == tdscheadBean.dtAll) {
                    if ("1" == dtDep) {
                      promises.push(dbAdapter.selectTDscDep(productBean.DepCode));
                    } else if ("1" == dtSupp) {
                      promises.push(dbAdapter.selectTDscSupp(productBean.SuppCode));
                    } else if ("1" == dtBrand) {
                      promises.push(dbAdapter.selectTDscBrand(productBean.BrandCode));
                    } else {
                      resolve(false);
                    }
                  }
                } else {
                  resolve(false);
                }
                new Promise.all(promises).then(function (results2) {
                  console.log("BGresults2", results2);
                  if (results2.length != 0) {
                    for (var _i = 0; _i < results2.length; _i++) {
                      if (results2[_i].length != 0) {
                        for (var j = 0; j < results2[_i].length; j++) {
                          var object = results2[_i].item(j);

                          var _dscValue = object.DscValue;
                          console.log('dscValue=', _dscValue);
                          var _priceMode = object.PriceMode;
                          var _dscType = object.DscType;
                          BGPromotionManager.b(productBean, _dscValue, _dscType, _priceMode);
                          resolve(productBean);
                          console.log('productBean', productBean);
                        }
                      } else {
                        resolve(false);
                      }
                    }
                  } else {
                    resolve(false);
                  }
                });
              });
            };

            for (var i = 0; i < tdscheadBeans.length; i++) {
              _loop(i);
            }
          } else {
            resolve(false);
          }
        });
      });
    }
  }, {
    key: 'b',
    value: function b(productBean, dscValue, dscType, priceMode) {
      var stdOPrice = productBean.StdOPrice;
      var stdPrice = productBean.StdPrice;
      var vipPrice1 = productBean.VipPrice1;
      var vipPrice2 = productBean.VipPrice2;
      var vipPrice3 = productBean.VipPrice3;
      var wPrice = productBean.WPrice;

      if ("0" == priceMode) {
        BGPromotionManager.setShopTotal(productBean, dscValue, stdOPrice, dscType);
      } else if ("1" == priceMode) {
        BGPromotionManager.setShopTotal(productBean, dscValue, stdPrice, dscType);
      } else if ("2" == priceMode) {
        BGPromotionManager.setShopTotal(productBean, dscValue, vipPrice1, dscType);
      } else if ("3" == priceMode) {
        BGPromotionManager.setShopTotal(productBean, dscValue, vipPrice2, dscType);
      } else if ("4" == priceMode) {
        BGPromotionManager.setShopTotal(productBean, dscValue, vipPrice3, dscType);
      } else if ("5" == priceMode) {
        BGPromotionManager.setShopTotal(productBean, dscValue, wPrice, dscType);
      }
    }
  }, {
    key: 'setShopTotal',
    value: function setShopTotal(productBean, dscValue, basePrice, dscType) {
      var shopPrice = 0;
      if ("Z" == dscType) {
        var discountRate = _BigDecimalUtils2.default.multiply(basePrice, _BigDecimalUtils2.default.subtract(1, _BigDecimalUtils2.default.divide(dscValue, 100)));
        shopPrice = discountRate;
        var s = _BigDecimalUtils2.default.multiply(productBean.ShopNumber, discountRate);

        productBean.ShopAmount = Number(s);
      } else if ("S" == dscType) {
        var newPrice = _BigDecimalUtils2.default.add(basePrice, _BigDecimalUtils2.default.multiply(basePrice, _BigDecimalUtils2.default.divide(dscValue, 100)));
        var multiply = _BigDecimalUtils2.default.multiply(productBean.ShopNumber, newPrice);
        shopPrice = newPrice;
        if (multiply < productBean.StdPrice) {
          productBean.ShopAmount = Number(multiply);
        }
      }
    }
  }]);
  return BGPromotionManager;
}();

exports.default = BGPromotionManager;
}, 315, null, "myproject/Sell/promotion/BGPromotionManager.js");
__d(/* myproject/utils/PromotionUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _DateUtils = require(313                 ); // 313 = ../utils/DateUtils

var _DateUtils2 = babelHelpers.interopRequireDefault(_DateUtils);

var PromotionUtils = function () {
  function PromotionUtils() {
    babelHelpers.classCallCheck(this, PromotionUtils);
  }

  babelHelpers.createClass(PromotionUtils, null, [{
    key: "custAndDate",
    value: function custAndDate(cardTypeCode, dbAdapter, FormNo) {
      return new Promise(function (resolve, reject) {
        var promises = [];
        var plans = [];
        dbAdapter.selectTDscCust(cardTypeCode, FormNo).then(function (tDscCustBeans) {
          if (tDscCustBeans != null && tDscCustBeans.length != 0) {
            for (var i = 0; i < tDscCustBeans.length; i++) {
              promises.push(dbAdapter.selectTDscPlan(tDscCustBeans.item(i).FormNo));
            }
            new Promise.all(promises).then(function (promiseResults) {

              for (var _i = 0; _i < promiseResults.length; _i++) {

                for (var j = 0; j < promiseResults[_i].length; j++) {
                  var tDscPlanBean = promiseResults[_i].item(j);
                  var beginDate = tDscPlanBean.BeginDate;
                  var beginTime = tDscPlanBean.BeginTime;
                  var endDate = tDscPlanBean.EndDate;
                  var endTime = tDscPlanBean.EndTime;
                  var vldWeek = tDscPlanBean.VldWeek.split("");
                  var week = _DateUtils2.default.getWeek();
                  var c = void 0;
                  if (week != 0) {
                    c = vldWeek[week - 1];
                  } else {
                    c = -1;
                  }

                  if (_DateUtils2.default.compareDate(endDate, _DateUtils2.default.getDate()) && _DateUtils2.default.compareDate(_DateUtils2.default.getDate(), beginDate) && c == 1) {
                    if (!_DateUtils2.default.compare2HMS(_DateUtils2.default.getHSM(), endTime) && _DateUtils2.default.compare2HMS(_DateUtils2.default.getHSM(), beginTime)) {
                      plans.push(tDscPlanBean);
                      resolve(plans);

                      return;
                    } else {
                      resolve(plans);

                      return;
                    }
                  } else {
                    resolve(plans);

                    return;
                  }
                }
              }
            });
          }
        });
      });
    }
  }, {
    key: "isTDscExceptShop",
    value: function isTDscExceptShop(prodCode, dbAdapter) {
      return new Promise(function (resolve, reject) {
        dbAdapter.selectTDscExcept(prodCode).then(function (results) {
          if (results.length != 0) {
            resolve(true);
          } else {
            resolve(false);
          }
        });
      });
    }
  }]);
  return PromotionUtils;
}();

exports.default = PromotionUtils;
}, 316, null, "myproject/utils/PromotionUtils.js");
__d(/* myproject/Sell/promotion/MJPromotionManger.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _BigDecimalUtils = require(314                          ); // 314 = ../../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var _PromotionUtils = require(316                         ); // 316 = ../../utils/PromotionUtils

var _PromotionUtils2 = babelHelpers.interopRequireDefault(_PromotionUtils);

var conditionType = void 0;
var dscType = void 0;
var str1 = void 0;
var dscValue = void 0;
var formNo = void 0;
var shopTotal = 0;
var shopNum = 0;
var list = [];
var isReturnPrice = false;

var planList = [];
var dbAdapter = void 0;

var MJPromotionManger = function () {
  function MJPromotionManger() {
    babelHelpers.classCallCheck(this, MJPromotionManger);
  }

  babelHelpers.createClass(MJPromotionManger, null, [{
    key: 'MJPromotion',
    value: function MJPromotion(productBeans, custTypeCode, dbAdapte) {
      dbAdapter = dbAdapte;
      list = productBeans;
      var promises = [];
      var initProducts = [];
      var TDscExceptShops = [];
      var tdschead = void 0;
      return new Promise(function (resolve, reject) {
        dbAdapter.selectTdscHead("MJ").then(function (tdscheadBeans) {
          if (tdscheadBeans.length == 0) {
            resolve(false);
            return;
          }
          for (var i = 0; i < productBeans.length; i++) {
            var productBean = productBeans[i];
            TDscExceptShops.push(_PromotionUtils2.default.isTDscExceptShop(productBean.ProdCode, dbAdapter));
          }
          new Promise.all(TDscExceptShops).then(function (TDscExceptShop) {
            var _loop = function _loop(_i) {
              var productBean = productBeans[_i];
              var tDscExceptShop = TDscExceptShop[_i];
              if (!tDscExceptShop) {
                if (tdscheadBeans.length != 0) {
                  for (var indext = 0; indext < tdscheadBeans.length; indext++) {
                    tdschead = tdscheadBeans.item(indext);

                    _PromotionUtils2.default.custAndDate(custTypeCode, dbAdapter, tdschead.FormNo).then(function (plans) {
                      planList = plans;
                      for (var planIndex = 0; planIndex < planList.length; planIndex++) {
                        var dtAll = tdschead.dtAll;
                        if ("1" == dtAll) {} else if ("0" == dtAll) {
                          var dtDep = tdschead.dtDep;
                          var dtSupp = tdschead.dtSupp;
                          var dtBrand = tdschead.dtBrand;
                          var dtProd = tdschead.dtProd;

                          if ('1' == dtDep) {
                            console.log("dtDep");
                            promises.push(dbAdapter.selectTDscDep(productBean.DepCode));
                          } else if ('1' == dtSupp) {
                            promises.push(dbAdapter.selectTDscSupp(productBean.SuppCode));
                          } else if ('1' == dtBrand) {
                            promises.push(dbAdapter.selectTDscBrand(productBean.BrandCode));
                          } else if ('1' == dtProd) {
                            promises.push(dbAdapter.selectTDscProd(productBean.ProdCode));
                          } else {}
                        } else {}
                      }
                      new Promise.all(promises).then(function (results) {
                        if (results.length != 0) {
                          var _loop2 = function _loop2(_i2) {
                            if (results[_i2].length != 0) {
                              MJPromotionManger.initData(productBeans[_i2], tdschead).then(function (result) {
                                shopNum = 0;
                                shopTotal = 0;
                                if (_i2 == results.length - 1) {
                                  resolve(result);
                                }
                              });
                            } else {
                              resolve(false);
                            }
                          };

                          for (var _i2 = 0; _i2 < results.length; _i2++) {
                            _loop2(_i2);
                          }
                        } else {
                          resolve(false);
                        }
                      });
                    });
                  }
                }
              } else {
                resolve(false);
              }
            };

            for (var _i = 0; _i < TDscExceptShop.length; _i++) {
              _loop(_i);
            }
          });
        });
      });
    }
  }, {
    key: 'initData',
    value: function initData(productBean, tdschead) {
      return new Promise(function (resolve, reject) {
        shopNum += productBean.ShopNumber;
        shopTotal += productBean.ShopAmount;
        conditionType = tdschead.ConditionType;
        str1 = tdschead.str1;
        dscType = tdschead.DscType;
        dscValue = tdschead.DscValue;
        formNo = tdschead.FormNo;
        console.log("mj2=", shopNum, formNo);
        MJPromotionManger.countMJPrice(shopNum, formNo, productBean).then(function (result) {
          resolve(true);
        });
      });
    }
  }, {
    key: 'countMJPrice',
    value: function countMJPrice(shopNum, formNo, productBean) {
      return new Promise(function (resolve, reject) {
        var discountPrice = 0;
        dbAdapter.selectTDscCondition(formNo).then(function (select) {
          if ("0" == conditionType) {
            if ("0" == dscType) {
              isReturnPrice = true;
              if ("0" == str1) {
                for (var i = select.length - 1; i >= 0; i--) {
                  var con1 = select.item(i).Con1;
                  if (con1 <= shopTotal) {
                    discountPrice = select.item(select.length - 1).Con2;
                    break;
                  }
                }
              } else if ("1" == str1) {
                var lastCon1 = 0;
                for (var _i3 = select.length - 1; _i3 >= 0; _i3--) {
                  var _con = select.item(_i3).Con1;
                  if (_con <= shopTotal - lastCon1) {
                    discountPrice += select.item(_i3).Con2;
                    lastCon1 += _con;
                  }
                }
              }
            } else if ("1" == dscType) {
              isReturnPrice = false;
              for (var _i4 = select.length - 1; _i4 >= 0; _i4--) {
                var _con2 = select.item(_i4).Con1;
                if (_con2 <= shopTotal) {
                  var con2 = select.item(select.length - 1).Con2;
                  discountPrice = _BigDecimalUtils2.default.multiply(shopTotal, _BigDecimalUtils2.default.divide(con2, 100));
                  break;
                }
              }
            }
          } else if ("1" == conditionType) {
            if ("0" == dscType) {
              isReturnPrice = true;
              if ("0" == str1) {
                for (var _i5 = select.length - 1; _i5 >= 0; _i5--) {
                  var _con3 = select.item(_i5).Con1;
                  if (_con3 <= shopNum) {
                    discountPrice = select.item(select.length - 1).Con2;
                    break;
                  }
                }
              } else if ("1" == str1) {
                var _lastCon = 0;
                for (var _i6 = select.length - 1; _i6 >= 0; _i6--) {
                  var _con4 = select.item(_i6).Con1;
                  if (_con4 <= shopNum - _lastCon) {
                    discountPrice += select.item(_i6).Con2;
                    _lastCon += _con4;
                  }
                }
              }
            } else if ("1" == dscType) {
              isReturnPrice = false;
              for (var _i7 = select.length - 1; _i7 >= 0; _i7++) {
                var _con5 = select.item(_i7).Con1;
                if (_con5 <= shopNum) {
                  var _con6 = select.item(select.length - 1).Con2;
                  discountPrice = _BigDecimalUtils2.default.multiply(shopTotal, _BigDecimalUtils2.default.divide(_con6, 100));
                }
              }
            }
          } else if ("2" == conditionType) {
            if ("0" == dscType) {
              isReturnPrice = true;
              if ("0" == str1) {
                var _con7 = select.item(select.length - 1).Con1;
                if (_con7 <= list.length) {
                  discountPrice = select.item(select.length - 1).Con2;
                }
              } else if ("1" == str1) {
                var _lastCon2 = 0;
                for (var _i8 = select.length - 1; _i8 >= 0; _i8--) {
                  var _con8 = select.item(_i8).Con1;
                  if (_con8 <= list.length - _lastCon2) {
                    discountPrice += select.item(_i8).Con2;
                    _lastCon2 += _con8;
                  }
                }
              }
            } else if ("1" == dscType) {
              isReturnPrice = false;
              var _con9 = select.item(select.length - 1).Con1;
              if (_con9 <= list.length) {
                var _con10 = select.item(select.length - 1).Con2;
                discountPrice = _BigDecimalUtils2.default.multiply(shopTotal, _BigDecimalUtils2.default.divide(_con10, 100));
              }
            }
          }
          if (discountPrice > dscValue && dscValue != 0) {
            discountPrice = dscValue;
          }
          productBean.ShopAmount = Number(_BigDecimalUtils2.default.subtract(productBean.ShopAmount, discountPrice, 2));
          console.log("sadf=", productBean.ShopAmount, "---", productBean.ProdName);
          resolve(true);
        });
      });
    }
  }]);
  return MJPromotionManger;
}();

exports.default = MJPromotionManger;
}, 317, null, "myproject/Sell/promotion/MJPromotionManger.js");
__d(/* myproject/Sell/promotion/MZPromotionManger.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _PromotionUtils = require(316                         ); // 316 = ../../utils/PromotionUtils

var _PromotionUtils2 = babelHelpers.interopRequireDefault(_PromotionUtils);

var formNo = void 0;
var currentDiscountPrice = void 0;
var conditionType = void 0;

var list = [];
var planList = [];

var MZPromotionManger = function () {
  function MZPromotionManger() {
    babelHelpers.classCallCheck(this, MZPromotionManger);
  }

  babelHelpers.createClass(MZPromotionManger, null, [{
    key: "mzPromotion",
    value: function mzPromotion(custTypeCode, productBeans, dbAdapter) {
      MZPromotionManger.shopNum = 0;
      MZPromotionManger.shopTotal = 0;
      return new Promise(function (resolve, reject) {
        list = productBeans;
        var promises = [];
        var TDscExceptShops = [];
        var tdschead = void 0;
        dbAdapter.selectTdscHead("MZ").then(function (tdscheadBeans) {
          if (tdscheadBeans.length != 0) {
            for (var i = 0; i < productBeans.length; i++) {
              var productBean = productBeans[i];
              TDscExceptShops.push(_PromotionUtils2.default.isTDscExceptShop(productBean.ProdCode, dbAdapter));
            }
            new Promise.all(TDscExceptShops).then(function (TDscExceptShop) {
              var _loop = function _loop(_i) {
                var tDscExceptShop = TDscExceptShop[_i];
                var productBean = productBeans[_i];
                if (!tDscExceptShop) {
                  for (var indext = 0; indext < tdscheadBeans.length; indext++) {
                    tdschead = tdscheadBeans.item(indext);
                    _PromotionUtils2.default.custAndDate(custTypeCode, dbAdapter, tdschead.FormNo).then(function (plans) {
                      if (plans.length != 0) {
                        planList = plans;
                      }
                      for (var planIndex = 0; planIndex < planList.length; planIndex++) {
                        console.log("mz2=", tdschead);
                        var dtAll = tdschead.dtAll;
                        if ("1" == dtAll) {
                          MZPromotionManger.initData(productBeans[_i], tdschead).then(function (result) {
                            if (_i == results.length - 1) {
                              MZPromotionManger.shopNum = 0;
                              MZPromotionManger.shopTotal = 0;
                              resolve(result);
                            }
                          });
                        } else if ("0" == dtAll) {
                          var dtDep = tdschead.dtDep;
                          var dtSupp = tdschead.dtSupp;
                          var dtBrand = tdschead.dtBrand;
                          var dtProd = tdschead.dtProd;
                          if ("1" == dtDep) {
                            promises.push(dbAdapter.selectTDscDep(productBean.DepCode));
                            console.log("aaa=");
                          } else if ("1" == dtSupp) {
                            promises.push(dbAdapter.selectTDscSupp(productBean.SuppCode));
                            console.log("bbb=");
                          } else if ("1" == dtBrand) {
                            promises.push(dbAdapter.selectTDscBrand(productBean.BrandCode));
                            console.log("ccc=");
                          } else if ("1" == dtProd) {
                            promises.push(dbAdapter.selectTDscProd(productBean.ProdCode));
                            console.log("ddd=");
                          }
                        }
                      }
                      new Promise.all(promises).then(function (results) {
                        if (results.length != 0) {
                          var _loop2 = function _loop2(_i2) {
                            if (results[_i2].length != 0) {
                              MZPromotionManger.initData(productBeans[_i2], tdschead).then(function (result) {
                                if (_i2 == results.length - 1) {
                                  MZPromotionManger.shopNum = 0;
                                  MZPromotionManger.shopTotal = 0;
                                  resolve(result);
                                }
                              });
                            }
                          };

                          for (var _i2 = 0; _i2 < results.length; _i2++) {
                            _loop2(_i2);
                          }
                        }
                      });
                    });
                  }
                } else {
                  console.log("abc=");
                }
              };

              for (var _i = 0; _i < TDscExceptShop.length; _i++) {
                _loop(_i);
              }
            });
          } else {
            return -1;
          }
        });
      });
    }
  }, {
    key: "initData",
    value: function initData(productBean, tdschead) {
      var results = [];
      return new Promise(function (resolve, reject) {
        MZPromotionManger.shopNum += productBean.ShopNumber;
        MZPromotionManger.shopTotal += productBean.ShopAmount;
        formNo = tdschead.FormNo;
        conditionType = tdschead.ConditionType;

        var countMZPrice = MZPromotionManger.countMZPrice(tdschead);
        results.push(countMZPrice);
        results.push(formNo);
        resolve(results);
      });
    }
  }, {
    key: "countMZPrice",
    value: function countMZPrice(tdscheadBean) {
      var con1 = tdscheadBean.Con1;
      if (0 == conditionType) {
        if (con1 < MZPromotionManger.shopTotal) {
          return tdscheadBean.Con2;
        }
      } else if (1 == conditionType) {
        if (con1 < MZPromotionManger.shopNum) {
          return tdscheadBean.Con2;
        }
      } else if (2 == conditionType) {
        if (con1 < list.length) {
          return tdscheadBean.Con2;
        }
      } else {
        return -1;
      }
    }
  }]);
  return MZPromotionManger;
}();

MZPromotionManger.shopTotal = 0;
MZPromotionManger.shopNum = 0;
exports.default = MZPromotionManger;
}, 318, null, "myproject/Sell/promotion/MZPromotionManger.js");
__d(/* myproject/Sell/promotion/BPPromotionsManger.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _PromotionUtils = require(316                         ); // 316 = ../../utils/PromotionUtils

var _PromotionUtils2 = babelHelpers.interopRequireDefault(_PromotionUtils);

var planList = [];

var BPPromotionsManger = function () {
  function BPPromotionsManger() {
    babelHelpers.classCallCheck(this, BPPromotionsManger);
  }

  babelHelpers.createClass(BPPromotionsManger, null, [{
    key: "bpPromotons",
    value: function bpPromotons(productBean, custTypeCode, dbAdapter) {
      return new Promise(function (resolve, reject) {
        dbAdapter.selectTdscHead("BP").then(function (tdscheadBeans) {
          if (tdscheadBeans.length == 0) {
            resolve("");
            return;
          }
          for (var i = 0; i < tdscheadBeans.length; i++) {
            var tdschead = tdscheadBeans.item(i);
            var dtCust = tdschead.dtCust;
            var FromNo = tdschead.FormNo;

            if (1 == dtCust) {
              _PromotionUtils2.default.custAndDate(custTypeCode, dbAdapter, FromNo).then(function (plans) {
                planList = plans;
              });
            } else {
              _PromotionUtils2.default.custAndDate(custTypeCode, dbAdapter, FromNo).then(function (plans) {
                planList = plans;
                console.log('plans=', plans.length);
                BPPromotionsManger.isHasGiveShop(productBean, dbAdapter).then(function (giveFormNo) {
                  resolve(giveFormNo);
                  console.log('giveFormNo=', giveFormNo.length);
                });
              });
            }
          }
        });
      });
    }
  }, {
    key: "isHasGiveShop",
    value: function isHasGiveShop(productBean, dbAdapter) {
      return new Promise(function (resolve, reject) {
        var _loop = function _loop(i) {
          dbAdapter.selectTDscProd2(productBean.ProdCode, planList[i].FormNo).then(function (tDscProdBean) {
            if (tDscProdBean.length >= 1) {
              for (var j = 0; j < tDscProdBean.length; j++) {
                var item = tDscProdBean.item(i);
                var curr1 = item.Curr1;
                if (curr1 <= productBean.ShopNumber) {
                  resolve(item.FormNo);
                  console.log("FormNo", item.FormNo);
                } else {
                  resolve("");
                  console.log("YYY=", resolve);
                }
              }
            } else {
              resolve("");
              console.log("yyy=", resolve);
            }
          });
        };

        for (var i = 0; i < planList.length; i++) {
          _loop(i);
        }
      });
    }
  }]);
  return BPPromotionsManger;
}();

exports.default = BPPromotionsManger;
}, 319, null, "myproject/Sell/promotion/BPPromotionsManger.js");
__d(/* myproject/Sell/promotion/GSPromotionsManger.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _BigDecimalUtils = require(314                          ); // 314 = ../../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var _PromotionUtils = require(316                         ); // 316 = ../../utils/PromotionUtils

var _PromotionUtils2 = babelHelpers.interopRequireDefault(_PromotionUtils);

var planList = [];
var shopList = [];
var autoMulti = void 0;

var GSPromotionsManger = function () {
  function GSPromotionsManger() {
    babelHelpers.classCallCheck(this, GSPromotionsManger);
  }

  babelHelpers.createClass(GSPromotionsManger, null, [{
    key: 'gsPromotionsManger',
    value: function gsPromotionsManger(productBeans, custTypeCode, dbAdapter) {
      var promises = [];
      return new Promise(function (resolve, reject) {
        dbAdapter.selectTdscHead("GS").then(function (tdscheadBeans) {
          if (tdscheadBeans.length == 0) {
            resolve(false);
            return;
          }
          if (tdscheadBeans.length != 0) {
            var _loop = function _loop(i) {
              var tdschead = tdscheadBeans.item(i);
              var dtCust = tdschead.dtCust;
              var dtAll = tdschead.dtAll;
              var FormNo = tdschead.FormNo;
              _PromotionUtils2.default.custAndDate(custTypeCode, dbAdapter, FormNo).then(function (plans) {
                planList = plans;
                if ("1" == dtCust) {

                  if (!tDscExceptShop) {
                    var _tdschead = tdscheadBeans.item(i);

                    var _dtAll = _tdschead.dtAll;
                    if ("1" == _dtAll) {
                      GSPromotionsManger.initData(autoMulti, formNo, dbAdapter).then(function (result) {
                        resolve(true);
                      });
                    } else if ("0" == _dtAll) {
                      var dtDep = _tdschead.dtDep;
                      var dtSupp = _tdschead.dtSupp;
                      var dtBrand = _tdschead.dtBrand;
                      var dtProd = _tdschead.dtProd;
                      autoMulti = _tdschead.AutoMulti;
                      if ("1" == dtDep) {
                        promises.push(dbAdapter.selectTDscDepAll(FormNo));
                      } else if ("1" == dtSupp) {
                        promises.push(dbAdapter.selectTDscSuppAll(FormNo));
                      } else if ("1" == dtBrand) {
                        promises.push(dbAdapter.selectTDscBrandAll(FormNo));
                      } else if ("1" == dtProd) {
                        promises.push(dbAdapter.selectTDscProdAll(FormNo));
                      }
                    }
                  }
                  new Promise.all(promises).then(function (results) {
                    for (var _i = 0; _i < results.length; _i++) {
                      if (results[_i].length != 0) {
                        GSPromotionsManger.initData(autoMulti, formNo, dbAdapter).then(function (result) {
                          resolve(true);
                        });
                      }
                    }
                  });
                } else {
                  var _loop2 = function _loop2(planIndex) {
                    var formNo = planList[i].FormNo;
                    var tdschead = tdscheadBeans.item(i);

                    var dtAll = tdschead.dtAll;
                    if ("1" == dtAll) {
                      GSPromotionsManger.initData(autoMulti, formNo, dbAdapter).then(function (result) {
                        resolve(true);
                      });
                    } else if ("0" == dtAll) {
                      var _dtDep = tdschead.dtDep;
                      var _dtSupp = tdschead.dtSupp;
                      var _dtBrand = tdschead.dtBrand;
                      var _dtProd = tdschead.dtProd;
                      autoMulti = tdschead.AutoMulti;
                      if ("1" == _dtDep) {
                        promises.push(dbAdapter.selectTDscDepAll(formNo));
                      } else if ("1" == _dtSupp) {
                        promises.push(dbAdapter.selectTDscSuppAll(formNo));
                      } else if ("1" == _dtBrand) {
                        promises.push(dbAdapter.selectTDscBrandAll(formNo));
                      } else if ("1" == _dtProd) {
                        promises.push(dbAdapter.selectTDscProdAll(formNo));
                      }
                    }
                    if (tdscheadBeans != null) {
                      new Promise.all(promises).then(function (results) {
                        for (var _i2 = 0; _i2 < results.length; _i2++) {
                          for (var j = 0; j < results[_i2].length; j++) {
                            shopList.push(results[_i2].item(j));
                            GSPromotionsManger.number = _BigDecimalUtils2.default.add(results[_i2].item(j).countm, GSPromotionsManger.number, 2);
                          }
                          if (results[_i2].length != 0) {
                            GSPromotionsManger.initData(autoMulti, formNo, dbAdapter, productBeans).then(function (result) {
                              resolve(true);
                            });
                          }
                        }
                      });
                    }
                  };

                  for (var planIndex = 0; planIndex < planList.length; planIndex++) {
                    _loop2(planIndex);
                  }
                }
              });
            };

            for (var i = 0; i < tdscheadBeans.length; i++) {
              _loop(i);
            }
          }
        });
      });
    }
  }, {
    key: 'initData',
    value: function initData(autoMulti, formNo, dbAdapter, productBeans) {
      return new Promise(function (resolve, reject) {
        dbAdapter.selectTDscGroupPrice(formNo).then(function (tDscGroupPrices) {
          if (tDscGroupPrices.length == 0) {
            resolve(false);
          }

          if ("1" == autoMulti) {
            var count = 0;

            for (var i = tDscGroupPrices.length - 1; i >= 0; i--) {
              var tDscGroupPriceBean = tDscGroupPrices.item(i);
              var groupCountN = tDscGroupPriceBean.GroupCountN;
              var groupTotal = tDscGroupPriceBean.GroupTotal;
              count++;

              for (var j = 0; j < shopList.length; j++) {
                var shopListPro = shopList[j];
                if (shopListPro.countm >= groupCountN) {
                  var remainder = shopListPro.countm % groupCountN;
                  if (remainder == 0) {
                    shopListPro.prototal = _BigDecimalUtils2.default.multiply(_BigDecimalUtils2.default.divide(shopListPro.countm, groupCountN, 2), groupTotal, 2);
                  } else {
                    shopListPro.prototal = _BigDecimalUtils2.default.add(_BigDecimalUtils2.default.multiply(parseInt(shopListPro.countm / groupCountN), groupTotal, 2), _BigDecimalUtils2.default.multiply(remainder, shopListPro.ShopPrice, 2), 2);
                  }
                  console.log(shopListPro.prototal);
                  for (var _i3 = 0; _i3 < productBeans.length; _i3++) {
                    if (productBeans[_i3].Pid == shopListPro.pid) {
                      productBeans[_i3].ShopAmount = shopListPro.prototal;
                    }
                  }
                }
              }
              resolve(true);
            }
          } else if ("0" == autoMulti) {

            for (var _i4 = tDscGroupPrices.length - 1; _i4 >= 0; _i4--) {
              var _tDscGroupPriceBean = tDscGroupPrices.item(_i4);
              var _groupCountN = _tDscGroupPriceBean.GroupCountN;
              var _groupTotal = _tDscGroupPriceBean.GroupTotal;
              console.log("wtfuck2=", GSPromotionsManger.number, _groupCountN, _groupTotal);
              if (shopList.length >= _groupCountN) {
                for (var _j = 0; _j <= _groupCountN; _j++) {
                  shopList[_j].prototal = _BigDecimalUtils2.default.divide(_groupTotal, _groupCountN, 2);
                  resolve(true);
                  break;
                }
              }
            }
          }
        });
      });
    }
  }]);
  return GSPromotionsManger;
}();

GSPromotionsManger.number = 0;
exports.default = GSPromotionsManger;
}, 320, null, "myproject/Sell/promotion/GSPromotionsManger.js");
__d(/* myproject/Sell/promotion/EOPromotionsManger.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _BigDecimalUtils = require(314                          ); // 314 = ../../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var _PromotionUtils = require(316                         ); // 316 = ../../utils/PromotionUtils

var _PromotionUtils2 = babelHelpers.interopRequireDefault(_PromotionUtils);

var planList = [];
var shopList = [];

var EOPromotionsManger = function () {
  function EOPromotionsManger() {
    babelHelpers.classCallCheck(this, EOPromotionsManger);
  }

  babelHelpers.createClass(EOPromotionsManger, null, [{
    key: 'eoPromotionsManger',
    value: function eoPromotionsManger(productBeans, custTypeCode, dbAdapter) {
      return new Promise(function (resolve, reject) {
        var promises = [];

        dbAdapter.selectTdscHead("EO").then(function (tdscheadBeans) {
          if (tdscheadBeans == 0) {
            resolve(false);
            return;
          }

          var _loop = function _loop(i) {
            var tdschead = tdscheadBeans.item(i);
            var dtCust = tdschead.dtCust;
            var formNo = tdschead.FormNo;
            var dtAll = tdschead.dtAll;

            _PromotionUtils2.default.custAndDate(custTypeCode, dbAdapter, formNo).then(function (plans) {
              planList = plans;
              if ("1" == dtCust) {} else {
                if ("1" == dtAll) {} else if ("0" == dtAll) {
                  var dtDep = tdschead.dtDep;
                  var dtSupp = tdschead.dtSupp;
                  var dtBrand = tdschead.dtBrand;
                  var dtProd = tdschead.dtProd;
                  var autoMulti = tdschead.AutoMulti;
                  if ("1" == dtDep) {
                    promises.push(dbAdapter.selectTDscDepAll(formNo));
                  } else if ("1" == dtSupp) {
                    promises.push(dbAdapter.selectTDscSuppAll(formNo));
                  } else if ("1" == dtBrand) {
                    promises.push(dbAdapter.selectTDscBrandAll(formNo));
                  } else if ("1" == dtProd) {
                    promises.push(dbAdapter.selectTDscProdAll(formNo));
                  }
                }
              }
              new Promise.all(promises).then(function (results) {
                for (var _i = 0; _i < results.length; _i++) {
                  for (var j = 0; j < results[_i].length; j++) {
                    shopList.push(results[_i].item(j));
                  }
                  EOPromotionsManger.initData(formNo, dbAdapter, productBeans).then(function (result) {
                    resolve(true);
                  });
                }
              });
            });
          };

          for (var i = 0; i < tdscheadBeans.length; i++) {
            _loop(i);
          }
        });
      });
    }
  }, {
    key: 'initData',
    value: function initData(formNo, dbAdapter, productBeans) {
      var price = 0;
      return new Promise(function (resolve, reject) {
        dbAdapter.selectTDscCondition(formNo).then(function (tDscConditions) {
          for (var i = 0; i < tDscConditions.length; i++) {
            var tDscCondition = tDscConditions.item(i);
            var con1 = tDscCondition.Con1;
            var con2 = tDscCondition.Con2;
            var cxConType = tDscCondition.cxConType;
            if ("0" == cxConType) {
              for (var j = 0; j < shopList.length; j++) {
                for (var k = 1; k <= shopList[j].countm; k++) {
                  if (k == con1) {
                    price = _BigDecimalUtils2.default.add(_BigDecimalUtils2.default.multiply(_BigDecimalUtils2.default.subtract(1, _BigDecimalUtils2.default.divide(con2, 100, 2), 2), shopList[j].ShopPrice, 2), price, 2);
                  }
                }
                shopList[j].prototal = price;

                for (var m = 0; m < productBeans.length; m++) {
                  if (productBeans[m].Pid == shopList[j].pid) {
                    productBeans[m].ShopAmount = Number(shopList[j].prototal);
                  }
                }
              }
            } else if ("1" == cxConType) {} else if ("2" == cxConType) {}
          }
          resolve(true);
        });
      });
    }
  }]);
  return EOPromotionsManger;
}();

exports.default = EOPromotionsManger;
}, 321, null, "myproject/Sell/promotion/EOPromotionsManger.js");
__d(/* myproject/utils/NetUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNativeMd = require(323               ); // 323 = react-native-md5

var _reactNativeMd2 = babelHelpers.interopRequireDefault(_reactNativeMd);

var _reactNative = require(26            ); // 26 = react-native

var NetUtils = function (_Component) {
    babelHelpers.inherits(NetUtils, _Component);

    function NetUtils(props) {
        babelHelpers.classCallCheck(this, NetUtils);
        return babelHelpers.possibleConstructorReturn(this, (NetUtils.__proto__ || Object.getPrototypeOf(NetUtils)).call(this, props));
    }

    babelHelpers.createClass(NetUtils, null, [{
        key: 'get',
        value: function get(url, params, callback) {
            fetch(url, {
                method: 'GET',
                body: params
            }).then(function (response) {
                if (response.ok) {
                    return response.json();
                }
            }).then(function (json) {
                if (json.resultCode === "SUCCESS") {
                    callback(json);
                } else {
                    _reactNative.ToastAndroid.show(json.resultDesc, _reactNative.ToastAndroid.SHORT);
                }
            }).catch(function (error) {
                _reactNative.ToastAndroid.show("netword error", _reactNative.ToastAndroid.SHORT);
            });
        }
    }, {
        key: 'post',
        value: function post(url, service, params, callback) {
            var newParams = this.getNewParams(service, params);

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },
                body: newParams
            }).then(function (response) {
                if (response.ok) {
                    return response.json();
                }
            }).then(function (json) {
                if (json.resultCode === "SUCCESS") {
                    callback(json);
                } else {
                    _reactNative.ToastAndroid.show(json.resultDesc, _reactNative.ToastAndroid.SHORT);
                }
            }).catch(function (error) {
                alert(error);
            });
        }
    }, {
        key: 'postJson',
        value: function postJson(url, service, jsonObj, callback) {
            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=UTF-8'
                },
                body: JSON.stringify(jsonObj) }).then(function (response) {
                if (response.ok) {
                    return response.json();
                }
            }).then(function (json) {
                if (json.resultCode === "SUCCESS") {
                    callback(json);
                } else {
                    _reactNative.ToastAndroid.show(json.resultDesc, _reactNative.ToastAndroid.SHORT);
                }
            }).catch(function (error) {
                _reactNative.ToastAndroid.show("netword error", _reactNative.ToastAndroid.SHORT);
            });
        }
    }, {
        key: 'getCurrentDate',
        value: function getCurrentDate() {
            var space = "";
            var dates = new Date();
            var years = dates.getFullYear();
            var months = dates.getMonth() + 1;
            if (months < 10) {
                months = "0" + months;
            }

            var days = dates.getDate();
            if (days < 10) {
                days = "0" + days;
            }

            var hours = dates.getHours();
            if (hours < 10) {
                hours = "0" + hours;
            }

            var mins = dates.getMinutes();
            if (mins < 10) {
                mins = "0" + mins;
            }

            var secs = dates.getSeconds();
            if (secs < 10) {
                secs = "0" + secs;
            }
            var time = years + space + months + space + days + space + hours + space + mins + space + secs;
            return time;
        }
    }, {
        key: 'getNewParams',
        value: function getNewParams(service, oldParams) {
            var newParams = "";
            var currentDate = this.getCurrentDate();
            var MD5KEY = "XXXXXX";
            var digestStr = MD5KEY + service + currentDate + MD5KEY;
            newParams = oldParams + "&timestamp=" + currentDate + "&digest=" + this.MD5(digestStr);
            return newParams;
        }
    }, {
        key: 'MD5',
        value: function MD5(str) {
            return _reactNativeMd2.default.hex_md5(str);
        }
    }, {
        key: 'getCurrentDateFormat',
        value: function getCurrentDateFormat() {
            var space = "";
            var dates = new Date();
            var years = dates.getFullYear();
            var months = dates.getMonth() + 1;
            if (months < 10) {
                months = "0" + months;
            }

            var days = dates.getDate();
            if (days < 10) {
                days = "0" + days;
            }
            var time = years + space + months + space + days;
            return time;
        }
    }]);
    return NetUtils;
}(_react.Component);

exports.default = NetUtils;
}, 322, null, "myproject/utils/NetUtils.js");
__d(/* react-native-md5/index.js */function(global, require, module, exports) {
var hexcase = 0;
var b64pad = "";
var chrsz = 8;
module.exports.hex_md5 = function (s) {
    return binl2hex(core_md5(str2binl(s), s.length * chrsz));
};
module.exports.b64_md5 = function (s) {
    return binl2b64(core_md5(str2binl(s), s.length * chrsz));
};
module.exports.str_md5 = function (s) {
    return binl2str(core_md5(str2binl(s), s.length * chrsz));
};
module.exports.hex_hmac_md5 = function (key, data) {
    return binl2hex(core_hmac_md5(key, data));
};
module.exports.b64_hmac_md5 = function (key, data) {
    return binl2b64(core_hmac_md5(key, data));
};
module.exports.str_hmac_md5 = function (key, data) {
    return binl2str(core_hmac_md5(key, data));
};

function md5_vm_test() {
    return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";
}

function core_md5(x, len) {
    x[len >> 5] |= 0x80 << len % 32;
    x[(len + 64 >>> 9 << 4) + 14] = len;

    var a = 1732584193;
    var b = -271733879;
    var c = -1732584194;
    var d = 271733878;

    for (var i = 0; i < x.length; i += 16) {
        var olda = a;
        var oldb = b;
        var oldc = c;
        var oldd = d;

        a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
        d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
        c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
        b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
        a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
        d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
        c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
        b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
        a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
        d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
        c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
        b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
        a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
        d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
        c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
        b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);

        a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
        d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
        c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
        b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
        a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
        d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
        c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
        b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
        a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
        d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
        c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
        b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
        a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
        d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
        c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
        b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);

        a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
        d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
        c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
        b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
        a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
        d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
        c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
        b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
        a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
        d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
        c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
        b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
        a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
        d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
        c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
        b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);

        a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
        d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
        c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
        b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
        a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
        d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
        c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
        b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
        a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
        d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
        c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
        b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
        a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
        d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
        c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
        b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);

        a = safe_add(a, olda);
        b = safe_add(b, oldb);
        c = safe_add(c, oldc);
        d = safe_add(d, oldd);
    }
    return Array(a, b, c, d);
}

function md5_cmn(q, a, b, x, s, t) {
    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
}
function md5_ff(a, b, c, d, x, s, t) {
    return md5_cmn(b & c | ~b & d, a, b, x, s, t);
}
function md5_gg(a, b, c, d, x, s, t) {
    return md5_cmn(b & d | c & ~d, a, b, x, s, t);
}
function md5_hh(a, b, c, d, x, s, t) {
    return md5_cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5_ii(a, b, c, d, x, s, t) {
    return md5_cmn(c ^ (b | ~d), a, b, x, s, t);
}

function core_hmac_md5(key, data) {
    var bkey = str2binl(key);
    if (bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);

    var ipad = Array(16),
        opad = Array(16);
    for (var i = 0; i < 16; i++) {
        ipad[i] = bkey[i] ^ 0x36363636;
        opad[i] = bkey[i] ^ 0x5C5C5C5C;
    }

    var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
    return core_md5(opad.concat(hash), 512 + 128);
}

function safe_add(x, y) {
    var lsw = (x & 0xFFFF) + (y & 0xFFFF);
    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
    return msw << 16 | lsw & 0xFFFF;
}

function bit_rol(num, cnt) {
    return num << cnt | num >>> 32 - cnt;
}

function str2binl(str) {
    var bin = Array();
    var mask = (1 << chrsz) - 1;
    for (var i = 0; i < str.length * chrsz; i += chrsz) {
        bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << i % 32;
    }return bin;
}

function binl2str(bin) {
    var str = "";
    var mask = (1 << chrsz) - 1;
    for (var i = 0; i < bin.length * 32; i += chrsz) {
        str += String.fromCharCode(bin[i >> 5] >>> i % 32 & mask);
    }return str;
}

function binl2hex(binarray) {
    var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
    var str = "";
    for (var i = 0; i < binarray.length * 4; i++) {
        str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);
    }
    return str;
}

function binl2b64(binarray) {
    var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    var str = "";
    for (var i = 0; i < binarray.length * 4; i += 3) {
        var triplet = (binarray[i >> 2] >> 8 * (i % 4) & 0xFF) << 16 | (binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4) & 0xFF) << 8 | binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4) & 0xFF;
        for (var j = 0; j < 4; j++) {
            if (i * 8 + j * 6 > binarray.length * 32) str += b64pad;else str += tab.charAt(triplet >> 6 * (3 - j) & 0x3F);
        }
    }
    return str;
}
}, 323, null, "react-native-md5/index.js");
__d(/* myproject/utils/FetchUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var FetchUtils = function FetchUtils() {
  babelHelpers.classCallCheck(this, FetchUtils);
};

FetchUtils.get = function (common_url, params, headers) {
  if (params) {
    var paramsArray = [];

    Object.keys(params).forEach(function (key) {
      return paramsArray.push(key + '=' + params[key]);
    });
    if (url.search(/\?/) === -1) {
      url += '?' + paramsArray.join('&');
    } else {
      url += '&' + paramsArray.join('&');
    }
  }
  return new Promise(function (resolve, reject) {
    fetch(url, {
      method: 'GET',
      headers: headers
    }).then(function (response) {
      if (response.ok) {
        return response.json();
      } else {
        reject({ status: response.status });
      }
    }).then(function (response) {
      resolve(response);
    }).catch(function (err) {
      reject({ status: -1 });
    });
  });
};

FetchUtils.post = function (common_url, requstBody) {
  return new Promise(function (resolve, reject) {
    fetch(common_url, {
      method: 'POST',

      headers: {
        "Content-Type": "application/x-www-form-urlencoded;charset=UTF-8"
      },
      body: 'jsonStr=' + requstBody
    }).then(function (response) {
      return response.text();
    }).then(function (responseText) {
      var jsonResult = JSON.parse(responseText);
      console.log(jsonResult);
      resolve(jsonResult);
    }).catch(function (err) {
      reject(err);
    });
  });
};

exports.default = FetchUtils;
}, 324, null, "myproject/utils/FetchUtils.js");
__d(/* myproject/utils/Storage.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactNative = require(26            ); // 26 = react-native

var _reactNative2 = babelHelpers.interopRequireDefault(_reactNative);

var Storage = function () {
    function Storage() {
        babelHelpers.classCallCheck(this, Storage);
    }

    babelHelpers.createClass(Storage, null, [{
        key: 'get',
        value: function get(key) {
            return _reactNative.AsyncStorage.getItem(key).then(function (value) {
                return value;
            });
        }
    }, {
        key: 'save',
        value: function save(key, value) {
            try {

                JSON.stringify(value);
                return _reactNative.AsyncStorage.setItem(key, value, function (error, result) {});
            } catch (err) {
                console.log("wtf=", err);
            }
        }
    }, {
        key: 'update',
        value: function update(key, value) {
            return DeviceStorage.get(key).then(function (item) {
                value = typeof value === 'string' ? value : babelHelpers.extends({}, item, value);
                return _reactNative.AsyncStorage.setItem(key, JSON.stringify(value));
            });
        }
    }, {
        key: 'delete',
        value: function _delete(key) {
            return _reactNative.AsyncStorage.removeItem(key);
        }
    }]);
    return Storage;
}();

exports.default = Storage;
}, 325, null, "myproject/utils/Storage.js");
__d(/* myproject/utils/NumberUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _MatchUtils = require(327                  ); // 327 = ../utils/MatchUtils

var _MatchUtils2 = babelHelpers.interopRequireDefault(_MatchUtils);

var NumberUtils = function NumberUtils() {
  babelHelpers.classCallCheck(this, NumberUtils);
};

NumberUtils.numberFormat2 = function (numberFormat) {
  if (_MatchUtils2.default.isNumber(numberFormat)) {
    return parseFloat(numberFormat).toFixed(2);
  } else {
    if (numberFormat == "" || numberFormat == null || numberFormat == undefined) {
      numberFormat = "0";
    }
    return parseFloat(Number(numberFormat)).toFixed(2);
  }
};

exports.default = NumberUtils;
}, 326, null, "myproject/utils/NumberUtils.js");
__d(/* myproject/utils/MatchUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var MatchUtils = function () {
  function MatchUtils() {
    babelHelpers.classCallCheck(this, MatchUtils);
  }

  babelHelpers.createClass(MatchUtils, null, [{
    key: "isNumber",
    value: function isNumber(number) {
      var re = /^[0-9]+.?[0-9]*$/;
      return re.test(number);
    }
  }]);
  return MatchUtils;
}();

exports.default = MatchUtils;
}, 327, null, "myproject/utils/MatchUtils.js");
__d(/* myproject/utils/NumFormatUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var NumFormatUtils = function () {
    function NumFormatUtils() {
        babelHelpers.classCallCheck(this, NumFormatUtils);
    }

    babelHelpers.createClass(NumFormatUtils, null, [{
        key: 'createLsNo',
        value: function createLsNo() {
            var _this = this;

            return new Promise(function (resolve, reject) {
                try {
                    _Storage2.default.get('PosCode').then(function (posCode) {
                        _Storage2.default.get('Num').then(function (num) {
                            var LsNo = void 0;
                            num = parseInt(num);
                            var strNum = _this.PrefixInteger(num);
                            if (num > 99999999) {
                                num = 1;
                            } else {
                                num = JSON.stringify(num + 1);
                                _Storage2.default.save("Num", num);
                            }
                            LsNo = posCode + strNum;

                            resolve(LsNo);
                        });
                    });
                } catch (err) {
                    reject(err);
                }
            });
        }
    }, {
        key: 'PrefixInteger',
        value: function PrefixInteger(num) {
            return (Array(8).join('0') + num).slice(-8);
        }
    }]);
    return NumFormatUtils;
}();

NumFormatUtils.inoNum = 1;

NumFormatUtils.createInnerNo = function (inner) {
    var now = new Date();
    var year = now.getFullYear();
    var month = now.getMonth() + 1;
    var day = now.getDate();
    var hh = now.getHours();
    var mm = now.getMinutes();
    var ss = now.getSeconds();
    if (month >= 1 && month <= 9) {
        month = "0" + month;
    }
    if (day >= 1 && day <= 9) {
        day = "0" + day;
    }
    if (hh >= 1 && hh <= 9) {
        hh = "0" + hh;
    }
    if (mm >= 1 && mm <= 9) {
        mm = "0" + mm;
    }
    if (ss >= 1 && ss <= 9) {
        ss = "0" + ss;
    }

    var sum = year + "" + month + day + hh + mm + ss + NumFormatUtils.inoNum;
    NumFormatUtils.inoNum = NumFormatUtils.inoNum + 1;
    if (NumFormatUtils.inoNum == 9) {
        NumFormatUtils.inoNum = 1;
    }
    return sum;
};

NumFormatUtils.InoNum = 1;

NumFormatUtils.CreateInnerNo = function (inner) {
    var now = new Date();
    var year = now.getFullYear();
    var month = now.getMonth() + 1;
    var day = now.getDate();
    var hh = now.getHours();
    var mm = now.getMinutes();
    var ss = now.getSeconds();
    if (month >= 1 && month <= 9) {
        month = "0" + month;
    }
    if (day >= 1 && day <= 9) {
        day = "0" + day;
    }
    if (hh >= 1 && hh <= 9) {
        hh = "0" + hh;
    }
    if (mm >= 1 && mm <= 9) {
        mm = "0" + mm;
    }
    if (ss >= 1 && ss <= 9) {
        ss = "0" + ss;
    }

    var sum = year + "" + month + day + hh + mm + ss;
    var str = sum.substring(2);
    return str;
};

exports.default = NumFormatUtils;
}, 328, null, "myproject/utils/NumFormatUtils.js");
__d(/* myproject/utils/FormatPrice.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _BigDecimalUtils = require(314                       ); // 314 = ../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var FormatPrice = function FormatPrice() {
    babelHelpers.classCallCheck(this, FormatPrice);
};

FormatPrice.round = function (degree, price, products) {
    var beforPrice = price;
    var formatPrice = 0;
    var rounding = 0;
    var disAllPrice = 0;
    var currentDisPrice = 0;
    if (degree == "0") {
        formatPrice = FormatPrice.round2(price);
    } else if (degree == "1") {
        formatPrice = FormatPrice.round1(price);
    } else if (degree == "2") {
        formatPrice = FormatPrice.round0(price);
    }

    var subtract = _BigDecimalUtils2.default.subtract(formatPrice, price, 3);
    if (subtract > 0) {
        for (var i = 0; i < products.length; i++) {
            var product = products[i];
            var itemTotal = product.prototal;
            var rate = _BigDecimalUtils2.default.divide(itemTotal, beforPrice, 3);
            var multiply = _BigDecimalUtils2.default.multiply(rate, subtract, 3);
            product.prototal = _BigDecimalUtils2.default.add(itemTotal, multiply, 2);
            rounding = -subtract;
            disAllPrice = _BigDecimalUtils2.default.add(disAllPrice, multiply, 3);
            if (currentDisPrice != disAllPrice && i == products.length - 1 && products.length != 1) {
                var v = _BigDecimalUtils2.default.subtract(disAllPrice, currentDisPrice, 3);
                if (v >= 0) {
                    var beforeItemTotal = product.prototal;
                    var disItemTotal = _BigDecimalUtils2.default.subtract(beforeItemTotal, v, 3);
                    product.prototal = disItemTotal;
                } else {
                    var _beforeItemTotal = product.prototal;
                    var _disItemTotal = _BigDecimalUtils2.default.add(_beforeItemTotal, v, 2);
                    product.prototal = _disItemTotal;
                }
            }
        }
    } else if (subtract < 0) {
        currentDisPrice = _BigDecimalUtils2.default.subtract(beforPrice, price, 3);
        subtract = Math.abs(subtract);
        rounding = subtract;
        for (var _i = 0; _i < products.length; _i++) {
            var _product = products[_i];
            var _itemTotal = _product.prototal;
            var _multiply = _BigDecimalUtils2.default.multiply(_BigDecimalUtils2.default.divide(_itemTotal, beforPrice, 3), subtract, 3);
            _product.prototal = _BigDecimalUtils2.default.subtract(_itemTotal, _multiply, 3);
            disAllPrice = _BigDecimalUtils2.default.add(disAllPrice, _multiply, 3);
            if (currentDisPrice != disAllPrice && _i == products.length - 1 && products.length != 1) {
                var _v = _BigDecimalUtils2.default.subtract(disAllPrice, currentDisPrice, 3);
                if (_v >= 0) {
                    var _beforeItemTotal2 = _product.prototal;
                    var _disItemTotal2 = _BigDecimalUtils2.default.add(_beforeItemTotal2, _v, 2);
                    _product.prototal = _disItemTotal2;
                } else if (_v < 0) {
                    var _beforeItemTotal3 = _product.prototal;
                    var _disItemTotal3 = _BigDecimalUtils2.default.subtract(_beforeItemTotal3, -_v, 3);
                    _product.prototal = _disItemTotal3;
                }
            }
        }
    }
    return formatPrice;
};

FormatPrice.round0 = function (price) {
    return Number(price).toFixed(0);
};

FormatPrice.round1 = function (price) {
    return Number(price).toFixed(1);
};

FormatPrice.round2 = function (price) {
    return Number(price).toFixed(2);
};

FormatPrice.round3 = function () {};

exports.default = FormatPrice;
}, 329, null, "myproject/utils/FormatPrice.js");
__d(/* myproject/utils/VipPrice.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _BigDecimalUtils = require(314                       ); // 314 = ../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var _DateUtils = require(313                 ); // 313 = ../utils/DateUtils

var _DateUtils2 = babelHelpers.interopRequireDefault(_DateUtils);

var VipPrice = function VipPrice() {
    babelHelpers.classCallCheck(this, VipPrice);
};

VipPrice.vipPrice = function (memberInfo, products) {
    var vipDisPrice = 0;
    if (memberInfo == null || memberInfo == undefined) {
        return;
    }
    console.log("products=", products);

    var isDsc = memberInfo.IsDsc;
    var basePrice = memberInfo.BasePrice;
    var validDate = memberInfo.ValidDate;
    var date = _DateUtils2.default.getDate();
    var dscRate = memberInfo.DscRate;
    if (_DateUtils2.default.compareDate(date, validDate)) {
        alert("会员卡已过期");
        return;
    }

    for (var i = 0; i < products.length; i++) {
        var memberTotalPrice = 0;
        var productBean = products[i];
        var size = productBean.ShopNumber;
        console.log("size222=", productBean.ShopNumber);
        console.log("size222=", size);
        if ("0" == isDsc && "1" == memberInfo.IsJf) {
            var gatherType = productBean.GatherType;
            var gatherRate = productBean.GatherRate;
            if ("0" == gatherType) {} else if ("1" == gatherType) {}
        } else if ("1" == isDsc) {
            if ("0" == basePrice) {} else if ("1" == basePrice) {
                var vipPrice = productBean.VipPrice1;
                if (vipPrice != 0) {
                    if (productBean.StdPrice >= vipPrice) {
                        memberTotalPrice = _BigDecimalUtils2.default.multiply(vipPrice, size, 2);
                    }
                }
            } else if ("2" == basePrice) {
                var _vipPrice = productBean.VipPrice2;
                if (_vipPrice != 0) {
                    if (productBean.StdPrice >= _vipPrice) {
                        memberTotalPrice = _BigDecimalUtils2.default.multiply(_vipPrice, size, 2);
                    }
                }
            } else if ("3" == basePrice) {
                var _vipPrice2 = productBean.VipPrice3;
                if (_vipPrice2 != 0) {
                    if (productBean.StdPrice >= _vipPrice2) {
                        memberTotalPrice = _BigDecimalUtils2.default.multiply(_vipPrice2, size, 2);
                    }
                }
            }
        } else if ("2" == isDsc) {
            if ("0" == basePrice) {
                memberTotalPrice = _BigDecimalUtils2.default.multiply(_BigDecimalUtils2.default.multiply(productBean.StdPrice, _BigDecimalUtils2.default.subtract(1, _BigDecimalUtils2.default.divide(dscRate, 100, 2), 2), 2), size, 2);
            } else if ("1" == basePrice) {
                var vipPrice1 = productBean.VipPrice1;
                if (vipPrice1 != 0) {
                    memberTotalPrice = _BigDecimalUtils2.default.multiply(size, _BigDecimalUtils2.default.multiply(vipPrice1, _BigDecimalUtils2.default.subtract(1, _BigDecimalUtils2.default.divide(dscRate, 100, 2), 2), 2), 2);
                }
            } else if ("2" == basePrice) {
                var vipPrice2 = productBean.VipPrice2;
                if (vipPrice2 != 0) {
                    memberTotalPrice = _BigDecimalUtils2.default.multiply(size, _BigDecimalUtils2.default.multiply(vipPrice2, _BigDecimalUtils2.default.subtract(1, _BigDecimalUtils2.default.divide(dscRate, 100, 2), 2), 2), 2);
                }
            } else if ("3" == basePrice) {
                var vipPrice3 = productBean.VipPrice3;
                if (vipPrice3 != 0) {
                    memberTotalPrice = _BigDecimalUtils2.default.multiply(size, _BigDecimalUtils2.default.multiply(vipPrice3, _BigDecimalUtils2.default.subtract(1, _BigDecimalUtils2.default.divide(dscRate, 100, 2), 2), 2), 2);
                }
            }
        }
        if (memberTotalPrice == 0) {}
        if (memberTotalPrice != 0) {
            productBean.ShopAmount = memberTotalPrice;

            var vipNum = productBean.ShopNumber;

            var oldPrices = _BigDecimalUtils2.default.multiply(productBean.StdPrice, vipNum, 2);
            var vipDis = _BigDecimalUtils2.default.subtract(oldPrices, memberTotalPrice, 2);
            vipDisPrice = _BigDecimalUtils2.default.add(vipDisPrice, vipDis, 2);
        }
    }
    return vipDisPrice;
};

VipPrice.dp = function (cardTypeCode, productBean) {
    var prodCode = productBean.ProdCode;
    var shopNum = productBean.countm;
    var saleType = productBean.SaleType;
    var barCode = productBean.BarCode;

    var isContainCustTypeCode = void 0;
    dbAdapter.selectTDscCust(custTypeCode).then(function (tDscCustBeans) {
        if (tDscCustBeans != null && tDscCustBeans.length != 0) {
            for (var i = 0; i < tDscCustBeans.length; i++) {
                dbAdapter.selectTDscPlan(tDscCustBeans[i].FormNo).then(function (tDscPlanBeans) {
                    if (tDscPlanBeans != null && tDscPlanBeans.length != 0) {
                        for (var index = 0; index < tDscPlanBeans.length; index++) {
                            var tDscPlanBean = tDscPlanBeans[index];
                            var beginDate = tDscPlanBean.BeginDate;
                            var beginTime = tDscPlanBean.BeginTime;
                            var endDate = tDscPlanBean.EndDate;
                            var endTime = tDscPlanBean.EndTime;
                            var vldWeek = tDscPlanBean.VldWeek.toCharArray();
                            var week = _DateUtils2.default.getWeek();
                            var c = void 0;
                            if (week != 0) {
                                c = vldWeek[week - 1];
                            } else {
                                c = vldWeek[vldWeek.length - 1];
                            }
                            if (_DateUtils2.default.before(endDate) && _DateUtils2.default.after(beginDate) && c == '1') {
                                if (_DateUtils2.default.compare2HMSBefore(endTime) && _DateUtils2.default.compare2HMSAfter(beginTime)) {
                                    dbAdapter.selectTDscProd(barCode).then(function (tDscProdBeans) {
                                        if (tDscProdBeans != null && tDscProdBeans.length != 0) {
                                            return true;
                                        } else {
                                            return false;
                                        }
                                    });
                                }
                            }
                        }
                    }
                });
            }
        }
    });

    if (isContainCustTypeCode) {
        if ("1" == saleType) {
            shopNum = productBean.countm;
        }
        dbAdapter.selectTDscProd(prodCode).then(function (tDscProdBean) {
            if (tDscProdBean != null) {
                var curr1 = tDscProdBean.Curr1;
                var str1 = tDscProdBean.Str1;
                var dscPrice = tDscProdBean.DscPrice;
                if ("0" == str1) {
                    shopNewTotal = _BigDecimalUtils2.default.multiply(shopNum, dscPrice, 2);
                } else if ("1" == str1) {
                    if (shopNum <= curr1) {
                        shopNewTotal = _BigDecimalUtils2.default.multiply(shopNum, dscPrice, 2);
                    } else {
                        shopNewTotal = _BigDecimalUtils2.default.multiply(curr1, dscPrice, 2);
                        shopNewTotal += _BigDecimalUtils2.default.multiply(shopNum - curr1, productBean.StdPrice, 2);
                    }
                } else if ("2" == str1) {
                    if (shopNum > curr1) {
                        shopNewTotal = _BigDecimalUtils2.default.multiply(curr1, productBean.StdPrice, 2);
                        shopNewTotal += _BigDecimalUtils2.default.multiply(shopNum - curr1, dscPrice, 2);
                    } else if (shopNum < curr1) {
                        shopNewTotal = _BigDecimalUtils2.default.multiply(shopNum, productBean.StdPrice, 2);
                    }
                } else if ("3" == str1) {
                    if (shopNum > curr1) {
                        shopNewTotal = _BigDecimalUtils2.default.multiply(shopNum, dscPrice, 2);
                    }
                }
            }
        });
    }

    return shopNewTotal;
};

VipPrice.disCount = function (products, allPrice, disPrice) {
    for (var i = 0; i < products.length; i++) {
        var product = products[i];
        var multiply = _BigDecimalUtils2.default.multiply(_BigDecimalUtils2.default.divide(product.ShopAmount, allPrice, 2), disPrice, 2);
        var itemTotal = product.ShopAmount;
        product.ShopAmount = _BigDecimalUtils2.default.subtract(itemTotal, multiply, 2);
        console.log(product.ProdName);
        console.log(product.ShopAmount);
    }
};

exports.default = VipPrice;
}, 330, null, "myproject/utils/VipPrice.js");
__d(/* react-native-swiper/index.js */function(global, require, module, exports) {var _src = require(332     ); // 332 = ./src/

var _src2 = babelHelpers.interopRequireDefault(_src);

module.exports = _src2.default;
}, 331, null, "react-native-swiper/index.js");
__d(/* react-native-swiper/src/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'D:\\myproject\\node_modules\\react-native-swiper\\src\\index.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(19          ); // 19 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(26            ); // 26 = react-native

var styles = {
  container: {
    backgroundColor: 'transparent',
    position: 'relative',
    flex: 1
  },

  wrapperIOS: {
    backgroundColor: 'transparent'
  },

  wrapperAndroid: {
    backgroundColor: 'transparent',
    flex: 1
  },

  slide: {
    backgroundColor: 'transparent'
  },

  pagination_x: {
    position: 'absolute',
    bottom: 25,
    left: 0,
    right: 0,
    flexDirection: 'row',
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'transparent'
  },

  pagination_y: {
    position: 'absolute',
    right: 15,
    top: 0,
    bottom: 0,
    flexDirection: 'column',
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'transparent'
  },

  title: {
    height: 30,
    justifyContent: 'center',
    position: 'absolute',
    paddingLeft: 10,
    bottom: -30,
    left: 0,
    flexWrap: 'nowrap',
    width: 250,
    backgroundColor: 'transparent'
  },

  buttonWrapper: {
    backgroundColor: 'transparent',
    flexDirection: 'row',
    position: 'absolute',
    top: 0,
    left: 0,
    flex: 1,
    paddingHorizontal: 10,
    paddingVertical: 10,
    justifyContent: 'space-between',
    alignItems: 'center'
  },

  buttonText: {
    fontSize: 40,
    color: '#ff4e4e',
    fontFamily: 'Arial',
    textAlign: "center"
  }
};

var _class = function (_Component) {
  babelHelpers.inherits(_class, _Component);

  function _class() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, _class);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this.state = _this.initState(_this.props), _this.initialRender = true, _this.autoplayTimer = null, _this.loopJumpTimer = null, _this.onLayout = function (event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;

      var offset = _this.internals.offset = {};
      var state = { width: width, height: height };

      if (_this.state.total > 1) {
        var setup = _this.state.index;
        if (_this.props.loop) {
          setup++;
        }
        offset[_this.state.dir] = _this.state.dir === 'y' ? height * setup : width * setup;
      }

      if (!_this.state.offset || width !== _this.state.width || height !== _this.state.height) {
        state.offset = offset;
      }

      if (_reactNative.Platform.OS === 'ios') {
        if (_this.initialRender && _this.state.total > 1) {
          _this.scrollView.scrollTo(babelHelpers.extends({}, offset, { animated: false }));
          _this.initialRender = false;
        }
      }

      _this.setState(state);
    }, _this.loopJump = function () {
      if (!_this.state.loopJump) return;
      var i = _this.state.index + (_this.props.loop ? 1 : 0);
      var scrollView = _this.scrollView;
      _this.loopJumpTimer = setTimeout(function () {
        return scrollView.setPageWithoutAnimation && scrollView.setPageWithoutAnimation(i);
      }, 50);
    }, _this.autoplay = function () {
      if (!Array.isArray(_this.props.children) || !_this.props.autoplay || _this.internals.isScrolling || _this.state.autoplayEnd) return;

      _this.autoplayTimer && clearTimeout(_this.autoplayTimer);
      _this.autoplayTimer = setTimeout(function () {
        if (!_this.props.loop && (_this.props.autoplayDirection ? _this.state.index === _this.state.total - 1 : _this.state.index === 0)) return _this.setState({ autoplayEnd: true });

        _this.scrollBy(_this.props.autoplayDirection ? 1 : -1);
      }, _this.props.autoplayTimeout * 1000);
    }, _this.onScrollBegin = function (e) {
      _this.internals.isScrolling = true;
      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e, _this.fullState(), _this);
    }, _this.onScrollEnd = function (e) {
      _this.internals.isScrolling = false;

      if (!e.nativeEvent.contentOffset) {
        if (_this.state.dir === 'x') {
          e.nativeEvent.contentOffset = { x: e.nativeEvent.position * _this.state.width };
        } else {
          e.nativeEvent.contentOffset = { y: e.nativeEvent.position * _this.state.height };
        }
      }

      _this.updateIndex(e.nativeEvent.contentOffset, _this.state.dir, function () {
        _this.autoplay();
        _this.loopJump();

        _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e, _this.fullState(), _this);
      });
    }, _this.onScrollEndDrag = function (e) {
      var contentOffset = e.nativeEvent.contentOffset;
      var _this$props = _this.props,
          horizontal = _this$props.horizontal,
          children = _this$props.children;
      var index = _this.state.index;
      var offset = _this.internals.offset;

      var previousOffset = horizontal ? offset.x : offset.y;
      var newOffset = horizontal ? contentOffset.x : contentOffset.y;

      if (previousOffset === newOffset && (index === 0 || index === children.length - 1)) {
        _this.internals.isScrolling = false;
      }
    }, _this.updateIndex = function (offset, dir, cb) {
      var state = _this.state;
      var index = state.index;
      var diff = offset[dir] - _this.internals.offset[dir];
      var step = dir === 'x' ? state.width : state.height;
      var loopJump = false;

      if (!diff) return;

      index = parseInt(index + Math.round(diff / step));

      if (_this.props.loop) {
        if (index <= -1) {
          index = state.total - 1;
          offset[dir] = step * state.total;
          loopJump = true;
        } else if (index >= state.total) {
          index = 0;
          offset[dir] = step;
          loopJump = true;
        }
      }

      var newState = {};
      newState.index = index;
      newState.loopJump = loopJump;

      _this.internals.offset = offset;

      if (loopJump) {
        if (offset[dir] === _this.internals.offset[dir]) {
          newState.offset = { x: 0, y: 0 };
          newState.offset[dir] = offset[dir] + 1;
          _this.setState(newState, function () {
            _this.setState({ offset: offset }, cb);
          });
        } else {
          newState.offset = offset;
          _this.setState(newState, cb);
        }
      } else {
        _this.setState(newState, cb);
      }
    }, _this.scrollBy = function (index) {
      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      if (_this.internals.isScrolling || _this.state.total < 2) return;
      var state = _this.state;
      var diff = (_this.props.loop ? 1 : 0) + index + _this.state.index;
      var x = 0;
      var y = 0;
      if (state.dir === 'x') x = diff * state.width;
      if (state.dir === 'y') y = diff * state.height;

      if (_reactNative.Platform.OS !== 'ios') {
        _this.scrollView && _this.scrollView[animated ? 'setPage' : 'setPageWithoutAnimation'](diff);
      } else {
        _this.scrollView && _this.scrollView.scrollTo({ x: x, y: y, animated: animated });
      }

      _this.internals.isScrolling = true;
      _this.setState({
        autoplayEnd: false
      });

      if (!animated || _reactNative.Platform.OS !== 'ios') {
        setImmediate(function () {
          _this.onScrollEnd({
            nativeEvent: {
              position: diff
            }
          });
        });
      }
    }, _this.scrollViewPropOverrides = function () {
      var props = _this.props;
      var overrides = {};

      for (var prop in props) {
        if (typeof props[prop] === 'function' && prop !== 'onMomentumScrollEnd' && prop !== 'renderPagination' && prop !== 'onScrollBeginDrag') {
          (function () {
            var originResponder = props[prop];
            overrides[prop] = function (e) {
              return originResponder(e, _this.fullState(), _this);
            };
          })();
        }
      }

      return overrides;
    }, _this.renderPagination = function () {
      if (_this.state.total <= 1) return null;

      var dots = [];
      var ActiveDot = _this.props.activeDot || _react2.default.createElement(_reactNative.View, { style: [{
          backgroundColor: _this.props.activeDotColor || '#007aff',
          width: 8,
          height: 8,
          borderRadius: 4,
          marginLeft: 3,
          marginRight: 3,
          marginTop: 3,
          marginBottom: 3
        }, _this.props.activeDotStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 534
        }
      });
      var Dot = _this.props.dot || _react2.default.createElement(_reactNative.View, { style: [{
          backgroundColor: _this.props.dotColor || 'rgba(0,0,0,.2)',
          width: 8,
          height: 8,
          borderRadius: 4,
          marginLeft: 3,
          marginRight: 3,
          marginTop: 3,
          marginBottom: 3
        }, _this.props.dotStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 544
        }
      });
      for (var i = 0; i < _this.state.total; i++) {
        dots.push(i === _this.state.index ? _react2.default.cloneElement(ActiveDot, { key: i }) : _react2.default.cloneElement(Dot, { key: i }));
      }

      return _react2.default.createElement(
        _reactNative.View,
        { pointerEvents: 'none', style: [styles['pagination_' + _this.state.dir], _this.props.paginationStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 562
          }
        },
        dots
      );
    }, _this.renderTitle = function () {
      var child = _this.props.children[_this.state.index];
      var title = child && child.props && child.props.title;
      return title ? _react2.default.createElement(
        _reactNative.View,
        { style: styles.title, __source: {
            fileName: _jsxFileName,
            lineNumber: 572
          }
        },
        _this.props.children[_this.state.index].props.title
      ) : null;
    }, _this.renderNextButton = function () {
      var button = null;

      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        {
          onPress: function onPress() {
            return button !== null && _this.scrollBy(1);
          },
          disabled: _this.props.disableNextButton,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 587
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 591
            }
          },
          button
        )
      );
    }, _this.renderPrevButton = function () {
      var button = null;

      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        { onPress: function onPress() {
            return button !== null && _this.scrollBy(-1);
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 606
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 607
            }
          },
          button
        )
      );
    }, _this.renderButtons = function () {
      return _react2.default.createElement(
        _reactNative.View,
        { pointerEvents: 'box-none', style: [styles.buttonWrapper, {
            width: _this.state.width,
            height: _this.state.height
          }, _this.props.buttonWrapperStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 616
          }
        },
        _this.renderPrevButton(),
        _this.renderNextButton()
      );
    }, _this.refScrollView = function (view) {
      _this.scrollView = view;
    }, _this.renderScrollView = function (pages) {
      if (_reactNative.Platform.OS === 'ios') {
        return _react2.default.createElement(
          _reactNative.ScrollView,
          babelHelpers.extends({ ref: _this.refScrollView
          }, _this.props, _this.scrollViewPropOverrides(), {
            contentContainerStyle: [styles.wrapperIOS, _this.props.style],
            contentOffset: _this.state.offset,
            onScrollBeginDrag: _this.onScrollBegin,
            onMomentumScrollEnd: _this.onScrollEnd,
            onScrollEndDrag: _this.onScrollEndDrag,
            style: _this.props.scrollViewStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 633
            }
          }),
          pages
        );
      }
      return _react2.default.createElement(
        _reactNative.ViewPagerAndroid,
        babelHelpers.extends({ ref: _this.refScrollView
        }, _this.props, {
          initialPage: _this.props.loop ? _this.state.index + 1 : _this.state.index,
          onPageSelected: _this.onScrollEnd,
          key: pages.length,
          style: [styles.wrapperAndroid, _this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 647
          }
        }),
        pages
      );
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(_class, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (!nextProps.autoplay && this.autoplayTimer) clearTimeout(this.autoplayTimer);
      this.setState(this.initState(nextProps, this.props.index !== nextProps.index));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.autoplay();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.autoplayTimer && clearTimeout(this.autoplayTimer);
      this.loopJumpTimer && clearTimeout(this.loopJumpTimer);
    }
  }, {
    key: 'componentWillUpdate',
    value: function componentWillUpdate(nextProps, nextState) {
      if (this.state.index !== nextState.index) this.props.onIndexChanged(nextState.index);
    }
  }, {
    key: 'initState',
    value: function initState(props) {
      var updateIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var state = this.state || { width: 0, height: 0, offset: { x: 0, y: 0 } };

      var initState = {
        autoplayEnd: false,
        loopJump: false,
        offset: {}
      };

      initState.total = props.children ? props.children.length || 1 : 0;

      if (state.total === initState.total && !updateIndex) {
        initState.index = state.index;
      } else {
        initState.index = initState.total > 1 ? Math.min(props.index, initState.total - 1) : 0;
      }

      var _Dimensions$get = _reactNative.Dimensions.get('window'),
          width = _Dimensions$get.width,
          height = _Dimensions$get.height;

      initState.dir = props.horizontal === false ? 'y' : 'x';

      if (props.width) {
        initState.width = props.width;
      } else if (this.state && this.state.width) {
        initState.width = this.state.width;
      } else {
        initState.width = width;
      }

      if (props.height) {
        initState.height = props.height;
      } else if (this.state && this.state.height) {
        initState.height = this.state.height;
      } else {
        initState.height = height;
      }

      initState.offset[initState.dir] = initState.dir === 'y' ? height * props.index : width * props.index;

      this.internals = babelHelpers.extends({}, this.internals, {
        isScrolling: false
      });
      return initState;
    }
  }, {
    key: 'fullState',
    value: function fullState() {
      return babelHelpers.extends({}, this.state, this.internals);
    }
  }, {
    key: 'render',
    value: function render() {
      var state = this.state;
      var props = this.props;
      var _state = this.state,
          index = _state.index,
          total = _state.total,
          width = _state.width,
          height = _state.height;
      var _props = this.props,
          children = _props.children,
          containerStyle = _props.containerStyle,
          loop = _props.loop,
          loadMinimal = _props.loadMinimal,
          loadMinimalSize = _props.loadMinimalSize,
          loadMinimalLoader = _props.loadMinimalLoader,
          renderPagination = _props.renderPagination,
          showsButtons = _props.showsButtons,
          showsPagination = _props.showsPagination;

      var loopVal = loop ? 1 : 0;
      var pages = [];

      var pageStyle = [{ width: width, height: height }, styles.slide];
      var pageStyleLoading = {
        width: width,
        height: height,
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
      };

      if (total > 1) {
        pages = Object.keys(children);
        if (loop) {
          pages.unshift(total - 1 + '');
          pages.push('0');
        }

        pages = pages.map(function (page, i) {
          if (loadMinimal) {
            if (i >= index + loopVal - loadMinimalSize && i <= index + loopVal + loadMinimalSize) {
              return _react2.default.createElement(
                _reactNative.View,
                { style: pageStyle, key: i, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 709
                  }
                },
                children[page]
              );
            } else {
              return _react2.default.createElement(
                _reactNative.View,
                { style: pageStyleLoading, key: i, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 712
                  }
                },
                loadMinimalLoader ? loadMinimalLoader : _react2.default.createElement(_reactNative.ActivityIndicator, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 713
                  }
                })
              );
            }
          } else {
            return _react2.default.createElement(
              _reactNative.View,
              { style: pageStyle, key: i, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 718
                }
              },
              children[page]
            );
          }
        });
      } else {
        pages = _react2.default.createElement(
          _reactNative.View,
          { style: pageStyle, key: 0, __source: {
              fileName: _jsxFileName,
              lineNumber: 722
            }
          },
          children
        );
      }

      return _react2.default.createElement(
        _reactNative.View,
        { style: [styles.container, containerStyle], onLayout: this.onLayout, __source: {
            fileName: _jsxFileName,
            lineNumber: 726
          }
        },
        this.renderScrollView(pages),
        showsPagination && (renderPagination ? renderPagination(index, total, this) : this.renderPagination()),
        this.renderTitle(),
        showsButtons && this.renderButtons()
      );
    }
  }]);
  return _class;
}(_react.Component);

_class.propTypes = {
  horizontal: _propTypes2.default.bool,
  children: _propTypes2.default.node.isRequired,
  containerStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  scrollViewStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  pagingEnabled: _propTypes2.default.bool,
  showsHorizontalScrollIndicator: _propTypes2.default.bool,
  showsVerticalScrollIndicator: _propTypes2.default.bool,
  bounces: _propTypes2.default.bool,
  scrollsToTop: _propTypes2.default.bool,
  removeClippedSubviews: _propTypes2.default.bool,
  automaticallyAdjustContentInsets: _propTypes2.default.bool,
  showsPagination: _propTypes2.default.bool,
  showsButtons: _propTypes2.default.bool,
  disableNextButton: _propTypes2.default.bool,
  loadMinimal: _propTypes2.default.bool,
  loadMinimalSize: _propTypes2.default.number,
  loadMinimalLoader: _propTypes2.default.element,
  loop: _propTypes2.default.bool,
  autoplay: _propTypes2.default.bool,
  autoplayTimeout: _propTypes2.default.number,
  autoplayDirection: _propTypes2.default.bool,
  index: _propTypes2.default.number,
  renderPagination: _propTypes2.default.func,
  dotStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  activeDotStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  dotColor: _propTypes2.default.string,
  activeDotColor: _propTypes2.default.string,

  onIndexChanged: _propTypes2.default.func
};
_class.defaultProps = {
  horizontal: true,
  pagingEnabled: true,
  showsHorizontalScrollIndicator: false,
  showsVerticalScrollIndicator: false,
  bounces: false,
  scrollsToTop: false,
  removeClippedSubviews: true,
  automaticallyAdjustContentInsets: false,
  showsPagination: true,
  showsButtons: false,
  disableNextButton: false,
  loop: true,
  loadMinimal: false,
  loadMinimalSize: 1,
  autoplay: false,
  autoplayTimeout: 2.5,
  autoplayDirection: true,
  index: 0,
  onIndexChanged: function onIndexChanged() {
    return null;
  }
};
exports.default = _class;
}, 332, null, "react-native-swiper/src/index.js");
__d(/* myproject/adapter/DBAdapter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _SQLiteOpenHelper2 = require(334                                   ); // 334 = ../sqLiteOpenHelper/SQLiteOpenHelper

var _SQLiteOpenHelper3 = babelHelpers.interopRequireDefault(_SQLiteOpenHelper2);

var _MD5Utils = require(337                ); // 337 = ../utils/MD5Utils

var _MD5Utils2 = babelHelpers.interopRequireDefault(_MD5Utils);

var _DataUtils = require(340                 ); // 340 = ../utils/DataUtils

var _DataUtils2 = babelHelpers.interopRequireDefault(_DataUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _DownLoadBasicData = require(341                         ); // 341 = ../utils/DownLoadBasicData

var _DownLoadBasicData2 = babelHelpers.interopRequireDefault(_DownLoadBasicData);

var _RequestBodyUtils = require(342                        ); // 342 = ../utils/RequestBodyUtils

var _RequestBodyUtils2 = babelHelpers.interopRequireDefault(_RequestBodyUtils);

var db = void 0;
var sqLiteOpenHelper = void 0;

var DBAdapter = function (_SQLiteOpenHelper) {
    babelHelpers.inherits(DBAdapter, _SQLiteOpenHelper);

    function DBAdapter() {
        babelHelpers.classCallCheck(this, DBAdapter);

        if (sqLiteOpenHelper === undefined) {
            sqLiteOpenHelper = new _SQLiteOpenHelper3.default();
        }

        var _this = babelHelpers.possibleConstructorReturn(this, (DBAdapter.__proto__ || Object.getPrototypeOf(DBAdapter)).call(this));

        _this.selectShopInfoSub = function () {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select b.ProdCode,b.countm,b.promemo,b.ydcountm,ifNull(b.countm,0) as ShopNumber,ifNull(b.ShopPrice,a.StdPrice) as ProPrice,ifNull(b.ShopPrice,a.StdPrice) as ShopPrice ,ifNull(b.prototal,0) as ShopAmount   " + ",ifNull(b.promemo,'') as ShopRemark,b.depcode as  DepCode1 " + " from product a join shopInfo b on a.Pid=b.Pid";
                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this._errorCB('transaction', error);
                });
            });
        };

        _this.selectShopInfoData = function (pid) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql("select * from shopInfo where pid='" + pid + "'", [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this._errorCB('transaction', error);
                });
            });
        };

        _this.SelectPosOpt = function (shopCode, posCode, optName) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql("select * from posopt where shopcode='" + shopCode + "' and poscode='" + posCode + "' and optname='" + optName + "'", [], function (tx, results) {
                        try {
                            resolve(results.rows);
                        } catch (err) {
                            reject(0);
                        }
                    });
                }, function (error) {
                    _this._errorCB('transaction', error);
                });
            });
        };

        _this.insertSuppeset = function (datas) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    for (var i = 0; i < datas.length; i++) {
                        var data = datas[i];
                        var pid = data.pid;
                        var sCode = data.sCode;
                        var sname = data.sname;
                        var levelno = data.levelno;
                        var aidcode = data.aidcode;
                        var subcode = data.subcode;
                        var suppType = data.SuppType;
                        var sql = " replace INTO tsuppset(pid,sCode,sname,levelno,aidcode,subcode,SuppType)" + "values(?,?,?,?,?,?,?)";
                        tx.executeSql(sql, [pid, sCode, sname, levelno, aidcode, subcode, suppType], function () {}, function (err) {
                            console.log("err===", err);
                        });
                    }
                }, function (error) {
                    reject(false);
                    _this._errorCB('transaction', error);
                }, function () {
                    resolve(true);
                });
            });
        };

        _this.selectAllData = function (dbName) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from " + dbName;
                    if (dbName == "tsuppset") {
                        sql = sql + " where supptype<>'1'";
                    }

                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectPayInfo = function (payCode) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql("select * from payInfo where PayCode='" + payCode + "'", [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectXPShopCode = function (shopCode) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from tshopitem where isdel='0' and PSShop='" + shopCode + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.insertPayInfo = function (infos) {
            _this.deleteData('payInfo');
            db.transaction(function (tx) {
                for (var i = 0; i < infos.length; i++) {
                    var info = infos[i];
                    var pid = info.pid;
                    var payCode = info.PayCode;
                    var payName = info.PayName;
                    var exchgRate = info.ExchgRate;
                    var isChange = info.IsChange;
                    var isGetCode = info.IsGetCode;
                    var changeCode = info.ChangeCode;
                    var gatherRate = info.GatherRate;
                    var isSystem = info.IsSystem;
                    var shortCut = info.ShortCut;
                    var payMemo = info.PayMemo;
                    var isDel = info.IsDel;
                    var noDsc = info.NoDsc;
                    var sql = "insert into payInfo(Pid,PayCode,payName,ExchgRate,IsChange,IsGetCode,ChangeCode,GatherRate,IsSystem,ShortCut,PayMemo,IsDel,NoDsc) values(" + "?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    tx.executeSql(sql, [pid, payCode, payName, exchgRate, isChange, isGetCode, changeCode, gatherRate, isSystem, shortCut, payMemo, isDel, noDsc], function (tx, results) {}, function (err) {
                        console.log("payinfo=", err);
                    });
                }
            });
        };

        _this.insertTDscCust = function (datas) {
            _this.deleteData('TDscCust');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var formNo = data.FormNo;
                    var custTypeCode = data.CustTypeCode;
                    var custTypeName = data.CustTypeName;
                    var sql = "insert into TDscCust(FormNo,CustTypeCode,CustTypeName) values(?,?,?)";
                    tx.executeSql(sql, [formNo, custTypeCode, custTypeName], function (tx, results) {}, function (error) {
                        console.log("TDscCust=", error);
                    });
                }
            });
        };

        _this.insertTDscPlan = function (datas) {
            _this.deleteData('TDscPlan');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var formNo = data.FormNo;
                    var beginDate = data.BeginDate;
                    var endDate = data.EndDate;
                    var beginTime = data.BeginTime;
                    var endTime = data.EndTime;
                    var vldWeek = data.VldWeek;
                    var sql = "insert into TDscPlan(FormNo,BeginDate,EndDate,BeginTime,EndTime,VldWeek) values(?,?,?,?,?,?)";
                    tx.executeSql(sql, [formNo, beginDate, endDate, beginTime, endTime, vldWeek], function (tx, results) {}, function (error) {
                        console.log("TDscPlan=", error);
                    });
                }
            });
        };

        _this.insertTDscProd = function (datas) {
            _this.deleteData('TDscProd');
            try {
                db.transaction(function (tx) {
                    for (var i = 0; i < datas.length; i++) {
                        var data = datas[i];
                        var formNo = data.FormNo;
                        var pid = data.Pid;
                        var prodCode = data.ProdCode;
                        var prodName = data.ProdName;
                        var barCode = data.BarCode;
                        var prodType = data.ProdType;
                        var dscType = data.DscType;
                        var dscValue = data.DscValue;
                        var oTax = data.OTax;
                        var sTax = data.STax;
                        var dscPrice = data.DscPrice;
                        var dscOPrice = data.DscOPrice;
                        var dscOutOPrice = data.DscOutOPrice;
                        var stdPrice = data.StdPrice;
                        var spec = data.Spec;
                        var prodAdr = data.ProdAdr;
                        var depCode = data.DepCode;
                        var depName = data.DepName;
                        var suppCode = data.SuppCode;
                        var suppName = data.SuppName;
                        var brandCode = data.BrandCode;
                        var brandName = data.BrandName;
                        var remark = data.Remark;
                        var timeMark = data.TimeMark;
                        var str1 = data.Str1;
                        var str2 = data.Str2;
                        var str3 = data.Str3;
                        var curr1 = data.Curr1;
                        var curr2 = data.Curr2;
                        var curr3 = data.Curr3;
                        var tag = data.Tag;
                        var sql = "insert into TDscProd(FormNo,Pid, ProdCode, ProdName, BarCode, ProdType, DscType, DscValue, OTax, STax, " + "DscPrice, DscOPrice, DscOutOPrice, StdPrice, Spec, ProdAdr, DepCode, DepName, SuppCode, SuppName, BrandCode, " + "BrandName, Remark, TimeMark, Str1, Str2, Str3, Curr1, Curr2, Curr3, Tag) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        tx.executeSql(sql, [formNo, pid, prodCode, prodName, barCode, prodType, dscType, dscValue, oTax, sTax, dscPrice, dscOPrice, dscOutOPrice, stdPrice, spec, prodAdr, depCode, depName, suppCode, suppName, brandCode, brandName, remark, timeMark, str1, str2, str3, curr1, curr2, curr3, tag], function (tx, results) {}, function (error) {
                            console.log("TDscProd=", error);
                        });
                    }
                });
            } catch (error) {
                console.log("sadf=", error);
            }
        };

        _this.insertTDscExcept = function (datas) {
            _this.deleteData('TDscExcept');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var formNo = data.FormNo;
                    var ProdCode = data.ProdCode;
                    var ProdName = data.ProdName;
                    var StdPrice = data.StdPrice;
                    var Remark = data.Remark;
                    var sql = "insert into TDscExcept(FormNo,ProdCode,ProdName,StdPrice,Remark) values(?,?,?,?,?)";
                    tx.executeSql(sql, [formNo, ProdCode, ProdName, StdPrice, Remark], function (tx, results) {}, function (error) {
                        console.log("TDscExcept=", error);
                    });
                }
            });
        };

        _this.insertTdschead = function (datas) {
            _this.deleteData('Tdschead');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var formNo = data.FormNo;
                    var formName = data.FormName;
                    var formType = data.FormType;
                    var dtDep = data.dtDep;
                    var dtSupp = data.dtSupp;
                    var dtBrand = data.dtBrand;
                    var dtProd = data.dtProd;
                    var dtAll = data.dtAll;
                    var dtCust = data.dtCust;
                    var formMaker = data.FormMaker;
                    var formDate = data.FormDate;
                    var checkCode = data.CheckCode;
                    var checkName = data.CheckName;
                    var writeDate = data.WriteDate;
                    var userCode = data.UserCode;
                    var userName = data.UserName;
                    var sDateTime = data.sDateTime;
                    var checkType = data.CheckType;
                    var tag = data.Tag;
                    var prnTimes = data.PrnTimes;
                    var remark = data.Remark;
                    var makeShop = data.MakeShop;
                    var makeShopTblCode = data.MakeShopTblCode;
                    var ywRange = data.ywRange;
                    var allPF = data.allPF;
                    var autoMulti = data.AutoMulti;
                    var conditionType = data.ConditionType;
                    var con1 = data.Con1;
                    var con2 = data.Con2;
                    var stopCode = data.StopCode;
                    var stopDate = data.StopDate;
                    var dscType = data.DscType;
                    var dscValue = data.DscValue;
                    var str1 = data.str1;
                    var str2 = data.str2;
                    var str3 = data.str3;
                    var str4 = data.str4;
                    var str5 = data.str5;
                    var pricMode = data.PricMode;
                    var sql = "insert into Tdschead(FormNo,FormName, FormType, dtDep, dtSupp, dtBrand, dtProd, dtAll, dtCust, FormMaker," + " FormDate, CheckCode, CheckName, WriteDate, UserCode, UserName, sDateTime, CheckType, Tag, PrnTimes, Remark, " + "MakeShop, MakeShopTblCode, ywRange, allPF, AutoMulti, ConditionType, Con1, Con2, StopCode, StopDate, DscType," + " DscValue, str1, str2, str3, str4, str5,PricMode)values(?,?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?)";
                    tx.executeSql(sql, [formNo, formName, formType, dtDep, dtSupp, dtBrand, dtProd, dtAll, dtCust, formMaker, formDate, checkCode, checkName, writeDate, userCode, userName, sDateTime, checkType, tag, prnTimes, remark, makeShop, makeShopTblCode, ywRange, allPF, autoMulti, conditionType, con1, con2, stopCode, stopDate, dscType, dscValue, str1, str2, str3, str4, str5, pricMode], function (tx, results) {}, function (error) {
                        console.log("Tdschead=", error);
                    });
                }
            });
        };

        _this.insertTDscDep = function (datas) {
            _this.deleteData('TDscDep');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var formNo = data.FormNo;
                    var depCode = data.DepCode;
                    var depName = data.DepName;
                    var dscType = data.DscType;
                    var dscValue = data.DscValue;
                    var remark = data.Remark;
                    var priceMode = data.PriceMode;
                    var sql = "insert into TDscDep(FormNo,DepCode,DepName, DscType, DscValue, Remark,PriceMode) values(?,?,?,?,?,?,?)";
                    tx.executeSql(sql, [formNo, depCode, depName, dscType, dscValue, remark, priceMode], function (tx, results) {}, function (error) {
                        console.log("TDscDep=", error);
                    });
                }
            });
        };

        _this.insertTDscSupp = function (datas) {
            _this.deleteData('TDscSupp');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var formNo = datas.FormNo;
                    var suppCode = datas.SuppCode;
                    var suppName = datas.SuppName;
                    var dscType = datas.DscType;
                    var dscValue = datas.DscValue;
                    var remark = datas.Remark;
                    var priceMode = data.PriceMode;
                    var sql = "insert into TDscSupp(FormNo,SuppCode,SuppName, DscType, DscValue, Remark,PriceMode) values(?,?,?,?,?,?,?)";
                    tx.executeSql(sql, [formNo, suppCode, suppName, dscType, dscValue, remark, priceMode], function (tx, results) {}, function (error) {
                        console.log("TDscSupp=", error);
                    });
                }
            });
        };

        _this.insertTDscBrand = function () {
            _this.deleteData('TDscBrand');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var formNo = data.FormNo;
                    var brandCode = data.BrandCode;
                    var brandName = data.BrandName;
                    var dscType = data.DscType;
                    var dscValue = data.DscValue;
                    var remark = data.Remark;
                    var priceMode = data.PriceMode;
                    var sql = "insert into TDscBrand(FormNo,BrandCode,BrandName, DscType, DscValue, Remark,PriceMode) values(?,?,?,?,?,?,?)";
                    tx.executeSql(sql, [formNo, brandCode, brandName, dscType, dscValue, remark, priceMode], function (tx, results) {}, function (error) {
                        console.log("TDscBrand=", error);
                    });
                }
            });
        };

        _this.insertTDscCondition = function (datas) {
            _this.deleteData('TDscCondition');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var formNo = data.FormNo;
                    var ConType = data.ConType;
                    var con1 = data.Con1;
                    var con2 = data.Con2;
                    var Remark = data.Remark;
                    var cxConType = data.cxConType;

                    var sql = "insert into TDscCondition(FormNo,ConType,Con1,Con2,Remark,cxConType) values(?,?,?,?,?,?)";
                    tx.executeSql(sql, [formNo, ConType, con1, con2, Remark, cxConType], function (tx, results) {}, function (error) {
                        console.log("TDscCondition=", error);
                    });
                }
            });
        };

        _this.inserttDscPresent = function (datas) {
            _this.deleteData('tDscPresent');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var formNo = data.FormNo;
                    var prodCode = data.ProdCode;
                    var prodName = data.ProdName;
                    var planNo = data.PlanNo;
                    var groupNo = data.GroupNo;
                    var countN = data.CountN;
                    var stdPrice = data.StdPrice;
                    var remark = data.Remark;
                    var sql = "insert into tDscPresent(FormNo,ProdCode,ProdName,PlanNo,GroupNo,CountN,StdPrice,Remark) values(?,?,?,?,?,?,?,?)";
                    tx.executeSql(sql, [formNo, prodCode, prodName, planNo, groupNo, countN, stdPrice, remark], function (tx, results) {}, function (error) {
                        console.log("tDscPresent=", error);
                    });
                }
            });
        };

        _this.inserttDscGroupPrice = function (datas) {
            _this.deleteData('tDscGroupPrice');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var formNo = data.FormNo;
                    var groupNo = data.GroupNo;
                    var groupCountN = data.GroupCountN;
                    var groupTotal = data.GroupTotal;
                    var sql = "insert into tDscGroupPrice(FormNo,GroupNo,GroupCountN,GroupTotal) values(?,?,?,?)";
                    tx.executeSql(sql, [formNo, groupNo, groupCountN, groupTotal], function (tx, results) {}, function (error) {
                        console.log("tDscPresent=", error);
                    });
                }
            });
        };

        _this.selectTDscGroupPrice = function (FormNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from tDscGroupPrice where FormNo='" + FormNo + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTdscPresent = function (FormNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from tDscPresent where FormNo='" + FormNo + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscCondition = function (FormNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from TDscCondition where FormNo='" + FormNo + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscSupp = function (SuppCode) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from TDscSupp where SuppCode='" + SuppCode + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscDep = function (DepCode) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from TDscDep where DepCode='" + DepCode + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.updateShopInfoFormType = function (pid) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "update shopinfo set FormType='DP' where pid='" + pid + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscDepAll = function (FormNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from shopinfo  a join product c on a.pid=c.pid join tdscdep b on c.depcode=b.depcode where " + "b.FormNo='" + FormNo + "' and (FormType<>'DP' or FormType is null) and a.prodcode not in (select prodcode from tdscExcept where FormNo='" + FormNo + "') order by prototal DESC";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscSuppAll = function (FormNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from shopinfo  a join product c on a.pid=c.pid join TDscSupp b on c.SuppCode=b.SuppCode " + "where b.formno='" + FormNo + "' and (FormType<>'DP' or FormType is null) and a.prodcode not in (select prodcode from tdscExcept where FormNo='" + FormNo + "')";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscBrandAll = function (FormNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from shopinfo  a join product c on a.pid=c.pid join TDscBrand b on c.BrandCode=b.BrandCode " + "where b.formno='" + FormNo + "' and (FormType<>'DP' or FormType is null) and a.prodcode not in (select prodcode from tdscExcept where FormNo='" + FormNo + "')";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscProdAll = function (FormNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from shopinfo  a join product c on a.pid=c.pid join TDscProd b on c.ProdCode=b.ProdCode " + "where b.formno='" + FormNo + "' and (FormType<>'DP' or FormType is null) and a.prodcode not in (select prodcode from tdscExcept where FormNo='" + FormNo + "')";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscBrand = function (BrandCode) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from TDscBrand where BrandCode='" + BrandCode + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTdscHead = function (FormType) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from Tdschead where FormType='" + FormType + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscExcept = function (ProdCode) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from TDscExcept where ProdCode='" + ProdCode + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscCust = function (custTypeCode, FormNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from TDscCust where  CustTypeCode='" + custTypeCode + "' and FormNo='" + FormNo + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscProd = function (prodCode) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from TDscProd where  ProdCode='" + prodCode + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscProd2 = function (prodCode, formNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from TDscProd where  ProdCode='" + prodCode + "' and FormNo='" + formNo + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.selectTDscPlan = function (formNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from TDscPlan where  FormNo='" + formNo + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        console.log("err===", error);
                    });
                });
            });
        };

        _this.upDateSum = function (TransDateTime, lsNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "update Sum set TransFlag='1' ,TransDateTime='" + TransDateTime + "' where lsno='" + lsNo + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(true);
                    }, function (error) {
                        reject(false);
                    });
                });
            });
        };

        _this.upDateDetail = function (TransDateTime, lsNo) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "update Detail set TransFlag='1' ,TransDateTime='" + TransDateTime + "' where lsno='" + lsNo + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(true);
                    }, function (error) {
                        reject(false);
                    });
                });
            });
        };

        _this.insertKgtuser = function (datas) {
            _this.deleteData('KGtuser');
            db.transaction(function (tx) {
                for (var i = 0; i < datas.length; i++) {
                    var data = datas[i];
                    var pid = data.pid;
                    var userCode = data.UserCode;
                    var barCode = data.BarCode;
                    var userName = data.UserName;
                    var userPwd = data.UserPwd;
                    var editDateTime = data.EditDateTime;
                    var hDscRate = data.HDscRate;
                    var isCashier = data.IsCashier;
                    var isClerk = data.IsClerk;
                    var statues = data.Statues;
                    var isStationCtrl = data.IsStationCtrl;
                    var userMemo = data.UserMemo;
                    var oPriceRight = data.OPriceRight;
                    var priceRight = data.PriceRight;
                    var vPriceRight = data.VPriceRight;
                    var psPriceRight = data.PSPriceRight;
                    var isDel = data.IsDel;
                    var sql = "insert into KGtuser(Pid,UserCode,BarCode,UserName,UserPwd,EditDateTime,HDscRate,IsCashier,IsClerk," + "Statues,IsStationCtrl, UserMemo, OPriceRight,PriceRight,VPriceRight,PSPriceRight,IsDel) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    tx.executeSql(sql, [pid, userCode, barCode, userName, userPwd, editDateTime, hDscRate, isCashier, isClerk, statues, isStationCtrl, userMemo, oPriceRight, priceRight, vPriceRight, psPriceRight, isDel], function (tx, results) {}, function (err) {
                        console.log("TDscPlan=", err);
                    });
                }
            });
        };

        _this.selectKgtuser = function (UserCode) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from KGtuser where UserCode='" + UserCode + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        if (results.rows.length == 1) {
                            resolve(results.rows.item(0));
                        } else {
                            resolve(results.rows);
                        }
                    }, function (error) {
                        reject("");
                    });
                });
            });
        };

        return _this;
    }

    babelHelpers.createClass(DBAdapter, [{
        key: 'open',
        value: function open() {
            db = sqLiteOpenHelper.open();
            return db;
        }
    }, {
        key: 'deleteData',
        value: function deleteData(dbName) {
            if (!db) {
                this.open();
            }
            db.transaction(function (tx) {
                tx.executeSql("delete from '" + dbName + "'", [], function () {}, function (err) {
                    console.log("detele=", err);
                });
            });
        }
    }, {
        key: 'dropTable',
        value: function dropTable(dbName) {
            var _this2 = this;

            db.transaction(function (tx) {
                tx.executeSql('drop table ' + dbName + '', [], function () {});
            }, function (err) {
                _this2._errorCB('transaction', err);
            }, function () {
                _this2._successCB('transaction');
            });
        }
    }, {
        key: 'insertTShopItemData',
        value: function insertTShopItemData(tShopItemData) {
            var _this3 = this;

            var len = tShopItemData.length;
            if (!db) {
                this.open();
            }

            this.deleteData('tshopitem');
            db.transaction(function (tx) {
                for (var i = 0; i < len; i++) {
                    var tShopItem = tShopItemData[i];
                    var pid = tShopItem.pid;
                    var shopcode = tShopItem.shopcode;
                    var shopname = tShopItem.shopname;
                    var UniqueCode = tShopItem.UniqueCode;
                    var shoplevel = tShopItem.shoplevel;
                    var subcode = tShopItem.subcode;
                    var FNeedPS = tShopItem.FNeedPS;
                    var FCanPH = tShopItem.FCanPH;

                    var PSShop = tShopItem.PSShop;
                    var isdel = tShopItem.isdel;
                    var FCanCG = tShopItem.FCanCG;

                    var sql = "INSERT INTO tshopitem(pid,shopcode,shopname,UniqueCode,shoplevel,subcode,FNeedPS,FCanPH,PSShop,isdel,FCanCG)" + "values(?,?,?,?,?,?,?,?,?,?,?)";
                    tx.executeSql(sql, [pid, shopcode, shopname, UniqueCode, shoplevel, subcode, FNeedPS, FCanPH, PSShop, isdel, FCanCG], function () {}, function (err) {
                        console.log(err);
                    });
                }
            }, function (error) {
                _this3._errorCB('transaction', error);
            }, function () {
                _this3._successCB('transaction insert data');
            });
        }
    }, {
        key: 'insertKgopt',
        value: function insertKgopt(datas) {
            var len = datas.length;
            if (!db) {
                this.open();
            }
            this.deleteData("KgtOpt");
            db.transaction(function (tx) {
                for (var i = 0; i < len; i++) {
                    var data = datas[i];
                    var optName = data.OptName;
                    var optValue = data.OptValue;
                    var sql = "INSERT INTO KgtOpt(OptName,OptValue) values(?,?)";
                    tx.executeSql(sql, [optName, optValue], function () {}, function (err) {
                        console.log(err);
                    });
                }
            });
        }
    }, {
        key: 'selectKgOpt',
        value: function selectKgOpt(where) {
            if (!db) {
                this.open();
            }
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    try {
                        var sql = "select * from KgtOpt where upper(OptName) = '" + (where + "").toUpperCase() + "'";
                        console.log(sql);
                        tx.executeSql(sql, [], function (tx, result) {
                            resolve(result.rows);
                        }, function (err) {
                            reject("");
                            console.log(err);
                        });
                    } catch (err) {
                        console.log("kgop=", err);
                    }
                });
            });
        }
    }, {
        key: 'selectPosOpt',
        value: function selectPosOpt(where) {
            if (!db) {
                this.open();
            }
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    try {
                        var sql = "select * from PosOpt where upper(OptName) = '" + (where + "").toUpperCase() + "'";

                        tx.executeSql(sql, [], function (tx, result) {
                            resolve(result.rows);
                        }, function (err) {
                            reject("");
                        });
                    } catch (err) {}
                });
            });
        }
    }, {
        key: 'insertPosOpt',
        value: function insertPosOpt(datas) {
            var len = datas.length;
            if (!db) {
                this.open();
            }
            try {
                this.deleteData("PosOpt");
                db.transaction(function (tx) {
                    for (var i = 0; i < len; i++) {
                        var data = datas[i];
                        var posCode = data.PosCode;
                        var shopCode = data.ShopCode;
                        var optName = data.OptName;
                        var optValue = data.OptValue;
                        var sql = "INSERT INTO PosOpt(PosCode,ShopCode,OptName,OptValue) values(?,?,?,?)";
                        tx.executeSql(sql, [posCode, shopCode, optName, optValue], function () {}, function (err) {
                            console.log(err);
                        });
                    }
                });
            } catch (err) {
                console.log("err", err);
            }
        }
    }, {
        key: 'insertTUsershopData',
        value: function insertTUsershopData(tusershopData) {
            var _this4 = this;

            var len = tusershopData.length;
            if (!db) {
                this.open();
            }

            this.deleteData('tusershop');
            db.transaction(function (tx) {
                for (var i = 0; i < len; i++) {
                    console.log(i);
                    var tusershop = tusershopData[i];
                    var usercode = tusershop.usercode;
                    var shopcode = tusershop.shopcode;
                    var sql = "INSERT INTO tusershop(usercode,shopcode)" + "values(?,?)";
                    tx.executeSql(sql, [usercode, shopcode], function () {}, function (err) {
                        console.log(err);
                    });
                }
            }, function (error) {
                _this4._errorCB('transaction', error);
            }, function () {
                _this4._successCB('transaction insert data');
            });
        }
    }, {
        key: 'insertTUserRrightData',
        value: function insertTUserRrightData(tuserRirghtData) {
            var _this5 = this;

            var len = tuserRirghtData.length;
            if (!db) {
                this.open();
            }
            this.deleteData('tuserright');
            db.transaction(function (tx) {
                for (var i = 0; i < len; i++) {
                    var tuserRirght = tuserRirghtData[i];
                    var usercode = tuserRirght.Usercode;
                    var Funccode = tuserRirght.Funccode;
                    var isEnter = tuserRirght.isEnter;
                    var IsAdd = tuserRirght.IsAdd;
                    var IsEdit = tuserRirght.IsEdit;
                    var IsDel = tuserRirght.IsDel;
                    var IsQuery = tuserRirght.IsQuery;
                    var IsPrint = tuserRirght.IsPrint;
                    var IsPrnSet = tuserRirght.IsPrnSet;
                    var IsExPort = tuserRirght.IsExPort;
                    var IsCheck = tuserRirght.IsCheck;
                    var IsWrite = tuserRirght.IsWrite;
                    var IsSpec = tuserRirght.IsSpec;
                    var sql = "INSERT INTO tuserright(usercode,Funccode,isEnter,IsAdd,IsEdit,IsDel,IsQuery,IsPrint,IsPrnSet,IsExPort,IsCheck,IsWrite,IsSpec)" + "values(?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    tx.executeSql(sql, [usercode, Funccode, isEnter, IsAdd, IsEdit, IsDel, IsQuery, IsPrint, IsPrnSet, IsExPort, IsCheck, IsWrite, IsSpec], function () {}, function (err) {
                        console.log(err);
                    });
                }
            }, function (error) {
                _this5._errorCB('transaction', error);
            }, function () {
                _this5._successCB('transaction insert data');
            });
        }
    }, {
        key: 'insertTDepSetData',
        value: function insertTDepSetData(tdepSetData) {
            var _this6 = this;

            return new Promise(function (resolve, reject) {
                var len = tdepSetData.length;

                _this6.deleteData('tdepset');
                db.transaction(function (tx) {
                    for (var i = 0; i < len; i++) {
                        var tdepSet = tdepSetData[i];
                        var pid = tdepSet.Pid;
                        var DepCode = tdepSet.DepCode;
                        var DepName = tdepSet.DepName;
                        var AidCode = tdepSet.AidCode;
                        var SubCode = tdepSet.SubCode;
                        var DepMemo = tdepSet.DepMemo;
                        var SpecTag = tdepSet.SpecTag;
                        var IsLeaf = tdepSet.IsLeaf;
                        var ProfitRate = tdepSet.ProfitRate;
                        var GatherRate = tdepSet.GatherRate;
                        var DepLevel = tdepSet.DepLevel;
                        var IsDel = tdepSet.IsDel;
                        var depcode1 = tdepSet.depcode1;
                        var depcode2 = tdepSet.depcode2;
                        var depcode3 = tdepSet.depcode3;
                        var depcode4 = tdepSet.depcode4;
                        var depcode5 = tdepSet.depcode5;
                        var depcode6 = tdepSet.depcode6;

                        var sql = "INSERT INTO tdepset(pid,DepCode,DepName,AidCode,SubCode,DepMemo,SpecTag,IsLeaf,ProfitRate,GatherRate,DepLevel,IsDel,depcode1,depcode2,depcode3,depcode4,depcode5,depcode6)" + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        tx.executeSql(sql, [pid, DepCode, DepName, AidCode, SubCode, DepMemo, SpecTag, IsLeaf, ProfitRate, GatherRate, DepLevel, IsDel, depcode1, depcode2, depcode3, depcode4, depcode5, depcode6], function () {}, function (error) {
                            console.log(error);
                        });
                    }
                }, function (error) {
                    reject(false);
                    _this6._errorCB('transaction', error);
                }, function () {
                    resolve(true);
                });
            });
        }
    }, {
        key: 'insertTUserSetData',
        value: function insertTUserSetData(tuserSetData) {
            var _this7 = this;

            var len = tuserSetData.length;
            if (!db) {
                this.open();
            }

            this.deleteData('tuserset');
            db.transaction(function (tx) {
                for (var i = 0; i < len; i++) {
                    var tuserset = tuserSetData[i];
                    var pid = tuserset.PID;
                    var Usercode = tuserset.Usercode;
                    var Barcode = tuserset.Barcode;
                    var UserName = tuserset.UserName;
                    var UserPwd = tuserset.UserPwd;
                    var OpriceRight = tuserset.OpriceRight;
                    var PriceRight = tuserset.PriceRight;
                    var IsCashier = tuserset.IsCashier;
                    var IsClerk = tuserset.IsClerk;
                    var HDscRate = tuserset.HDscRate;

                    var sql = "INSERT INTO tuserset(pid,Usercode,Barcode,UserName,UserPwd,OpriceRight,PriceRight,IsCashier,IsClerk,HDscRate)" + "values(?,?,?,?,?,?,?,?,?,?)";
                    tx.executeSql(sql, [pid, Usercode, Barcode, UserName, UserPwd, OpriceRight, PriceRight, IsCashier, IsClerk, HDscRate], function () {}, function (err) {
                        console.log(err);
                    });
                }
            }, function (error) {
                _this7._errorCB('transaction', error);
            }, function () {
                _this7._successCB('transaction insert data');
            });
        }
    }, {
        key: 'insertShopInfo',
        value: function insertShopInfo(shopInfoData, atype) {
            var _this8 = this;

            return new Promise(function (resolve, reject) {
                var lenght = shopInfoData.length;
                if (!db) {
                    _this8.open();
                }
                db.transaction(function (tx) {
                    for (var i = 0; i < lenght; i++) {
                        var shopInfo = shopInfoData[i];
                        var shopName = shopInfo.prodname;
                        var ShopNumber = shopInfo.countm;
                        var ShopPrice = shopInfo.ShopPrice;
                        var ShopAmount = shopInfo.prototal;
                        var ShopRemark = shopInfo.promemo;
                        var Pid = shopInfo.Pid;
                        var ProdCode = shopInfo.ProdCode;
                        var DepCode = shopInfo.DepCode;
                        var ydcountm = shopInfo.ydcountm;
                        var suppCode = shopInfo.SuppCode;
                        var BarCode = shopInfo.BarCode;
                        var sql = "";

                        console.log("atype=", atype);
                        if ("1" == atype) {

                            sql = "update shopInfo set countm=countm+?,prototal=prototal+? where pid=?";
                            tx.executeSql(sql, [ShopNumber, ShopAmount, Pid], function () {
                                resolve(true);
                            }, function (err) {
                                reject(false);
                                console.log(err);
                            });

                            sql = "update shopInfo set ShopPrice=round(prototal/ShopPrice,2) where pid=?";
                            tx.executeSql(sql, [Pid], function () {
                                resolve(true);
                            }, function (err) {
                                reject(false);
                                console.log(err);
                            });

                            sql = "insert INTO shopInfo(pid,ProdCode,prodname,countm,ShopPrice,prototal,promemo,DepCode,ydcountm,SuppCode,BarCode)" + " select ?,?,?,?,?,?,?,?,?,?,? where not exists(select pid from shopInfo where pid=?)";
                            tx.executeSql(sql, [Pid, ProdCode, shopName, ShopNumber, ShopPrice, ShopAmount, ShopRemark, DepCode, ydcountm, suppCode, BarCode, Pid], function () {
                                resolve(true);
                            }, function (err) {
                                reject(false);
                                console.log(err);
                            });
                        } else {
                            sql = " replace INTO shopInfo(pid,ProdCode,prodname,countm,ShopPrice,prototal,promemo,DepCode,ydcountm,SuppCode,BarCode)" + "values(?,?,?,?,?,?,?,?,?,?,?)";
                            console.log("c=", ShopNumber);
                            tx.executeSql(sql, [Pid, ProdCode, shopName, ShopNumber, ShopPrice, ShopAmount, ShopRemark, DepCode, ydcountm, suppCode, BarCode], function () {
                                resolve(true);
                            }, function (err) {
                                reject(false);
                                console.log(err);
                            });
                        }
                    }
                });
            });
        }
    }, {
        key: 'selectShopInfo',
        value: function selectShopInfo() {
            var _this9 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select a.*,b.*,ifNull(b.countm,0) as ShopNumber,ifNull(b.ShopPrice,a.StdPrice) as ProPrice,ifNull(b.ShopPrice,a.StdPrice) as ShopPrice ,ifNull(b.prototal,0) as ShopAmount   " + ",ifNull(b.promemo,'') as ShopRemark,b.depcode as  DepCode1 " + " from product a join shopInfo b on a.Pid=b.Pid";

                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this9._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'selectShopInfoAllCountm',
        value: function selectShopInfoAllCountm() {
            var _this10 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql('select sum(countm) countm from shopInfo', [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this10._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'selectShopInfoCountm',
        value: function selectShopInfoCountm(DepCode) {
            var _this11 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql('select sum(countm) countm from shopInfo where DepCode =' + DepCode + '', [], function (tx, results) {
                        try {
                            resolve(results.rows);
                        } catch (err) {
                            reject(0);
                        }
                    });
                }, function (error) {
                    _this11._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'upDataShopInfoCountmSub',
        value: function upDataShopInfoCountmSub(ProdCode) {
            var _this12 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql("update shopInfo set countm=countm-1 where ProdCode='" + ProdCode + "'", [], function (tx, results) {
                        try {
                            resolve(true);
                        } catch (err) {
                            reject(false);
                        }
                    });
                }, function (error) {
                    _this12._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'deteleShopInfo',
        value: function deteleShopInfo(ProdCode) {
            var _this13 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql("delete from shopInfo where prodCode ='" + ProdCode + "'", [], function (tx, results) {
                        try {
                            resolve(true);
                        } catch (err) {
                            reject(false);
                        }
                    }, function (err) {
                        alert(JSON.stringify(err));
                    });
                }, function (error) {
                    _this13._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'upDataShopInfoCountmAdd',
        value: function upDataShopInfoCountmAdd(ProdCode) {
            var _this14 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql('update shopInfo set countm=countm+1 where ProdCode=' + ProdCode + '', [], function (tx, results) {
                        try {
                            resolve(true);
                        } catch (err) {
                            reject(false);
                        }
                    });
                }, function (error) {
                    _this14._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'insertProductData',
        value: function insertProductData(productData) {
            var _this15 = this;

            return new Promise(function (resolve, reject) {
                var len = productData.length;
                db.transaction(function (tx) {
                    for (var i = 0; i < len; i++) {
                        var product = productData[i];
                        var Pid = product.Pid;
                        var ProdCode = product.ProdCode;
                        var BarCode = product.BarCode;
                        var ProdName = product.ProdName;
                        var ShortName = product.ShortName;
                        var AidCode = product.AidCode;
                        var OtherCode = product.OtherCode;
                        var DepCode = product.DepCode;
                        var SuppCode = product.SuppCode;
                        var BrandCode = product.BrandCode;
                        var Spec = product.Spec;
                        var ProdAdr = product.ProdAdr;
                        var Unit = product.Unit;
                        var PUnitAmt = product.PUnitAmt;
                        var PicInfo = product.PicInfo;
                        var ProdMemo = product.ProdMemo;
                        var StdOPrice = product.StdOPrice;
                        var StdOutOPrice = product.StdOutOPrice;
                        var StdPrice = product.StdPrice;
                        var WPrice = product.WPrice;
                        var LowPrice = product.LowPrice;
                        var HighPrice = product.HighPrice;
                        var OTax = product.OTax;
                        var STax = product.STax;
                        var VipPrice1 = product.VipPrice1;
                        var VipPrice2 = product.VipPrice2;
                        var VipPrice3 = product.VipPrice3;
                        var BoxCode = product.BoxCode;
                        var IsIntCount = product.IsIntCount;
                        var SaleType = product.SaleType;
                        var GatherType = product.GatherType;
                        var GatherRate = product.GatherRate;
                        var ProdType = product.ProdType;

                        var SeasonCode = product.SeasonCode;
                        var ProdMemo1 = product.ProdMemo1;
                        var ProdMemo2 = product.ProdMemo2;
                        var ProdMemo3 = product.ProdMemo3;
                        var FNoCD = product.FNoCD;
                        var IsDel = product.IsDel;
                        var FNoSale = product.FNoSale;
                        var FNoTH = product.FNoTH;
                        var FNoPromotion = product.FNoPromotion;
                        var FUseSalePrice = product.FUseSalePrice;
                        var FNoYH = product.FNoYH;
                        var hlimit = product.HLimit;
                        var llimit = product.LLimit;
                        var bestkc = product.BestKC;
                        var FNoCG = product.FNoCG;

                        var TakeType = product.TakeType;
                        var TakeRate = product.TakeRate;
                        var PriceFlag = product.PriceFlag;
                        var OperRange = product.OperRange;
                        var sqlDet = "delete from product where pid =?";

                        tx.executeSql(sqlDet, [Pid], function () {}, function (error) {});
                        var sql = 'INSERT INTO product(Pid,ProdCode,BarCode,ProdName,ShortName,AidCode,OtherCode,DepCode,SuppCode,BrandCode,' + 'Spec,ProdAdr,Unit,PUnitAmt,PicInfo,ProdMemo,StdOPrice,StdOutOPrice,StdPrice,WPrice,LowPrice,HighPrice,OTax,' + 'STax,VipPrice1,VipPrice2,VipPrice3,BoxCode,IsIntCount,SaleType,GatherType,GatherRate,ProdType,SeasonCode,' + 'ProdMemo1,ProdMemo2,ProdMemo3,FNoCD,IsDel,FNoSale,FNoTH,FNoPromotion,FUseSalePrice,FNoYH,Hlimit,Llimit,Bestkc,FNoCG,TakeType,TakeRate,OperRange,PriceFlag)' + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        tx.executeSql(sql, [Pid, ProdCode, BarCode, ProdName, ShortName, AidCode, OtherCode, DepCode, SuppCode, BrandCode, Spec, ProdAdr, Unit, PUnitAmt, PicInfo, ProdMemo, StdOPrice, StdOutOPrice, StdPrice, WPrice, LowPrice, HighPrice, OTax, STax, VipPrice1, VipPrice2, VipPrice3, BoxCode, IsIntCount, SaleType, GatherType, GatherRate, ProdType, SeasonCode, ProdMemo1, ProdMemo2, ProdMemo3, FNoCD, IsDel, FNoSale, FNoTH, FNoPromotion, FUseSalePrice, FNoYH, hlimit, llimit, bestkc, FNoCG, TakeType, TakeRate, PriceFlag, OperRange], function () {}, function (error) {
                            console.log(error);
                        });
                    }
                }, function (error) {
                    _this15._errorCB('transaction', error);
                }, function () {
                    resolve(true);
                });
            });
        }
    }, {
        key: 'selectTUserShopData',
        value: function selectTUserShopData(Usercode) {
            var _this16 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql("select b.ShopCode,b.ShopName from tUserShop a inner join tshopitem b on b.SubCode||rtrim(b.shopcode)||';' " + "like '%;'||rtrim(a.shopcode)||';%' or rtrim(a.shopcode)='0'  where a.UserCode='" + Usercode + "'", [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this16._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'selectProdCode',
        value: function selectProdCode(prodCode, DepLevel) {
            var _this17 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select a.*,ifNull(b.countm,0) as ShopNumber,ifNull(b.ShopPrice,a.StdPrice) as ShopPrice ,ifNull(b.prototal,0) as ShopAmount   " + ",ifNull(b.promemo,'') as ShopRemark,c.depcode" + DepLevel + " as DepCode1 " + " from product a left join shopInfo b on a.Pid=b.Pid  ";
                    ssql = ssql + " left join  tdepset c on c.IsDel='0' and a.depcode=c.depcode where a.IsDel='0' and prodtype<>'1'";
                    ssql = ssql + "  and  a.prodcode ='" + prodCode + "'";
                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this17._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'isYHPSXP',
        value: function isYHPSXP(shopCode) {
            var _this18 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select PSShop from tShopItem where FNeedPS='1' and ShopCode='" + shopCode + "' and isdel='0'";
                    console.log(ssql);
                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this18._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'isXPCG',
        value: function isXPCG(shopCode) {
            var _this19 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select PSShop from tShopItem where FNeedPS='1' and PSShop='" + shopCode + "' and isdel='0' and PSShop<>ShopCode";
                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this19._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'isCGYS',
        value: function isCGYS(shopCode) {
            var _this20 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select FCanCG  from tShopItem  where isdel='0' and ((ShopCode='" + shopCode + "'  and FCanCG='1') or '" + shopCode + "'='0')";
                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this20._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'selectTUserSetData',
        value: function selectTUserSetData(Usercode, userpwd, shopcode) {
            var _this21 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql("select * from tuserset where Usercode = '" + Usercode + "'", [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this21._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'isLogin',
        value: function isLogin(Usercode, userpwd, currShopCode, posCode) {
            var _this22 = this;

            var md5Pwd = _MD5Utils2.default.encryptMD5(userpwd);
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    tx.executeSql("select * from tuserset where Usercode = '" + Usercode + "'", [], function (tx, results) {
                        var length = results.rows.length;
                        if (length === 1) {
                            var item = results.rows.item(0);
                            if (md5Pwd + '' == item.UserPwd) {
                                var userName = item.UserName;
                                var pid = JSON.stringify(item.pid);
                                var _Usercode = item.Usercode;
                                _Storage2.default.save("userName", userName);
                                _Storage2.default.save("Pid", pid);
                                _Storage2.default.save("usercode", _Usercode);

                                var shopCode = void 0;
                                _DataUtils2.default.get('code', '').then(function (data) {
                                    shopCode = data;
                                    console.log("shopCode", shopCode);
                                    if (shopCode == currShopCode) {
                                        var categoryBody = _RequestBodyUtils2.default.createCategory(currShopCode);
                                        _this22.downProductAndCategory(categoryBody, currShopCode).then(function (result) {
                                            console.log("本地没有保存机构号,根据当前的机构号下载商品和品类");
                                            resolve(result);
                                        }, function (err) {
                                            reject(false);
                                        });
                                        resolve(true);
                                    } else if (shopCode == '') {
                                        var _categoryBody = _RequestBodyUtils2.default.createCategory(currShopCode);
                                        _this22.downProductAndCategory(_categoryBody, currShopCode).then(function (result) {
                                            console.log("本地没有保存机构号,根据当前的机构号下载商品和品类");
                                            resolve(result);
                                        }, function (err) {
                                            reject(false);
                                        });
                                    } else {
                                        _DataUtils2.default.save('shopCode', currShopCode);
                                        console.log("cccc重新保存并下载新的品类和商品信息");

                                        var _categoryBody2 = _RequestBodyUtils2.default.createCategory(currShopCode);
                                        _this22.downProductAndCategory(_categoryBody2, currShopCode).then(function (result) {
                                            resolve(result);
                                        }, function (err) {
                                            reject(false);
                                        });
                                    }
                                });
                            } else {
                                reject(false);
                            }
                        } else {
                            reject(false);
                        }
                    });
                }, function (error) {
                    _this22._errorCB('transactiondsaf', error);
                });
            });
        }
    }, {
        key: 'downProductAndCategory',
        value: function downProductAndCategory(categoryBody, currShopCode) {
            var _this23 = this;

            return new Promise(function (resolve, reject) {
                _DataUtils2.default.get("LinkUrl", '').then(function (urlData) {
                    _RequestBodyUtils2.default.requestProduct(urlData, currShopCode, _this23).then(function (prodResult) {
                        _FetchUtils2.default.post(urlData, categoryBody).then(function (datas) {
                            _this23.insertTDepSetData(datas.TblRow).then(function (result) {
                                var suppset = _RequestBodyUtils2.default.createSuppset(currShopCode);
                                _FetchUtils2.default.post(urlData, suppset).then(function (suppData) {
                                    _this23.insertSuppeset(suppData.TblRow).then(function (result) {
                                        _DownLoadBasicData2.default.downLoadKgtOpt(urlData, currShopCode, _this23);
                                        resolve(true);
                                    });
                                }, function (err) {
                                    reject(false);
                                });
                            });
                        }, function (err) {
                            reject(false);
                        });
                    }, function (err) {
                        reject(false);
                    });
                });
            });
        }
    }, {
        key: 'selectTDepSet',
        value: function selectTDepSet(DepLevel) {
            var _this24 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select a.ShopNumber,b.* from (select a.depcode1 as depcode12 ,sum(ShopNumber) as ShopNumber from " + "(select a.depcode1  ,ifNull(b.countm,0) as ShopNumber from tdepset a left join (select depcode,sum(countm) " + " as countm from shopInfo group by depcode) b on a.depcode=b.depcode where IsDel=0 ) a join tdepset b on " + "a.depcode1=b.depcode and b.isdel='0' where b.DepLevel='1' group by a.depcode1) a join tdepset b on a.depcode12=b.depcode and b.isdel='0'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this24._errorCB('wtf', error);
                });
            });
        }
    }, {
        key: 'selectProduct1',
        value: function selectProduct1(DepCode, DepLevel) {
            var _this25 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select count(*) as countn " + "from product a left join shopInfo b on a.Pid=b.Pid where IsDel='0' and prodtype<>'1'";
                    ssql = ssql + "and a.DepCode in (select depcode from tdepset where IsDel='0' and depcode" + DepLevel + "='" + DepCode + "')";
                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this25._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'selectProduct',
        value: function selectProduct(DepCode, currpage, DepLevel) {
            var _this26 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select a.*,ifNull(b.countm,'') as ShopNumber,ifNull(b.ShopPrice,a.StdPrice) as ShopPrice ,ifNull(b.prototal,0) as ShopAmount   " + ",ifNull(b.promemo,'') as ShopRemark,'" + DepCode + "' as DepCode1 " + " from product a left join shopInfo b on a.Pid=b.Pid where IsDel='0' and prodtype<>'1' ";
                    ssql = ssql + " and a.DepCode in (select depcode from tdepset where IsDel='0' and depcode" + DepLevel + "='" + DepCode + "')";
                    ssql = ssql + " limit 15 offset " + (currpage - 1) * 9;
                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this26._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'selectProdCode',
        value: function selectProdCode(prodCode, DepLevel) {
            var _this27 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select a.*,ifNull(b.countm,0) as ShopNumber,ifNull(b.ShopPrice,a.StdPrice) as ShopPrice ,ifNull(b.prototal,0) as ShopAmount   " + ",ifNull(b.promemo,'') as ShopRemark,c.depcode" + DepLevel + " as DepCode1 " + " from product a left join shopInfo b on a.Pid=b.Pid  ";
                    ssql = ssql + " left join  tdepset c on c.IsDel='0' and a.depcode=c.depcode where a.IsDel='0' and prodtype<>'1'";
                    ssql = ssql + "  and  a.prodcode ='" + prodCode + "'";
                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this27._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'selectAidCode',
        value: function selectAidCode(aidCode, DepLevel) {
            var _this28 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select a.*,ifNull(b.countm,0) as ShopNumber,ifNull(b.ShopPrice,a.StdPrice) as ShopPrice ,ifNull(b.prototal,0) as ShopAmount   " + ",ifNull(b.promemo,'') as ShopRemark,c.depcode" + DepLevel + " as DepCode1 " + " from product a left join shopInfo b on a.Pid=b.Pid  ";
                    ssql = ssql + " left join  tdepset c on c.IsDel='0' and a.depcode=c.depcode where a.IsDel='0' and prodtype<>'1'";
                    ssql = ssql + "  and (a.prodname like '%" + aidCode + "%' or a.aidcode like '%" + aidCode + "%' or a.prodcode like '%" + aidCode + "%' or a.barcode like '%" + aidCode + "%')";
                    ssql = ssql + " limit 20 ";
                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this28._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'scaningCode',
        value: function scaningCode(scanCode, DepLevel) {
            var _this29 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var ssql = "select a.*,ifNull(b.countm,0) as ShopNumber,ifNull(b.ShopPrice,a.StdPrice) as ShopPrice ,ifNull(b.prototal,0) as ShopAmount   " + ",ifNull(b.promemo,'') as ShopRemark,c.depcode" + DepLevel + " as DepCode1 " + " from product a left join shopInfo b on a.Pid=b.Pid  ";
                    ssql = ssql + " left join  from tdepset c on c.IsDel='0' and a.depcode=c.depcode where a.IsDel='0' and prodtype<>'1'";
                    ssql = ssql + "  and (a.barcode = '" + scanCode + "' or a.prodcode = '" + scanCode + "' )";

                    tx.executeSql(ssql, [], function (tx, results) {
                        resolve(results.rows);
                    });
                }, function (error) {
                    _this29._errorCB('transaction', error);
                });
            });
        }
    }, {
        key: 'selectUserRight',
        value: function selectUserRight(userCode, funcCode) {
            var _this30 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from tuserright where usercode = '" + userCode + "' and Funccode='" + funcCode + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows.length != 0);
                    });
                }, function (error) {
                    reject(false);
                    _this30._errorCB('error', error);
                });
            });
        }
    }, {
        key: 'selecUserRightA1012',
        value: function selecUserRightA1012(userCode) {
            var _this31 = this;

            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from tuserright where usercode='" + userCode + "' and Funccode='A1012'";
                    console.log(sql);
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows.length != 0);
                    });
                }, function (error) {
                    reject(false);
                    _this31._errorCB('error', error);
                });
            });
        }
    }, {
        key: 'insertSum',
        value: function insertSum(sumDatas) {
            console.log("wtfsadfas");
            db.transaction(function (tx) {
                for (var i = 0; i < sumDatas.length; i++) {
                    try {
                        var sum = sumDatas[i];
                        var lsNo = sum.LsNo;
                        var sDateTime = sum.sDateTime;
                        var tradeFlag = sum.TradeFlag;
                        var cashierId = sum.CashierId;
                        var cashierCode = sum.CashierCode;
                        var ino = sum.ino;
                        var cashierName = sum.CashierName;
                        var dscTotal = sum.DscTotal;

                        var total = sum.Total;
                        var totalPay = sum.TotalPay;
                        var change = sum.Change;
                        var custType = sum.CustType;
                        var custCode = sum.CustCode;

                        var payId = sum.PayId;
                        var payCode = sum.PayCode;
                        var amount = sum.Amount;
                        var oldAmount = sum.OldAmount;
                        var tendPayCode = sum.TendPayCode;

                        var innerNo = sum.InnerNo;


                        var sql = "insert into Sum(LsNo,sDateTime,TradeFlag,CashierId,CashierCode,ino,CashierName,DscTotal,Total,TotalPay,Change,CustType,CustCode," + "PayId,PayCode,Amount,OldAmount,TendPayCode,InnerNo) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        try {
                            tx.executeSql(sql, [lsNo, sDateTime, tradeFlag, cashierId, cashierCode, ino, cashierName, dscTotal, total, totalPay, change, custType, custCode, payId, payCode, amount, oldAmount, tendPayCode, innerNo], function (tx, results) {}, function (err) {
                                console.log("err===", err);
                            });
                        } catch (err) {
                            console.log(err);
                        }
                    } catch (err) {
                        console.log("err2==", err);
                    }
                }
            });
        }
    }, {
        key: 'insertDetail',
        value: function insertDetail(detailDatas) {
            db.transaction(function (tx) {
                for (var i = 0; i < detailDatas.length; i++) {
                    try {
                        var detail = detailDatas[i];
                        var lsNo = detail.LsNo;
                        var sDateTime = detail.sDateTime;
                        var tradeFlag = detail.TradeFlag;
                        var cashierId = detail.CashierId;
                        var cashierCode = detail.CashierCode;
                        var cashierName = detail.CashierName;
                        var clerkId = detail.ClerkId;
                        var clerkCode = detail.ClerkCode;
                        var pid = detail.Pid;
                        var barCode = detail.BarCode;
                        var clerkName = detail.ClerkName;
                        var prodCode = detail.ProdCode;
                        var prodName = detail.ProdName;
                        var depCode = detail.DepCode;
                        var price = detail.Price;
                        var amount = detail.Amount;
                        var dscTotal = detail.DscTotal;
                        var total = detail.Total;
                        var autoDscTotal = detail.AutoDscTotal;
                        var handDsc = detail.HandDsc;

                        var innerNo = detail.InnerNo;
                        var orderNo = detail.OrderNo;

                        var sql = "insert into Detail(LsNo,sDateTime,TradeFlag,CashierId,CashierCode,CashierName,ClerkId,ClerkCode,Pid," + "BarCode,ClerkName,ProdCode,ProdName,DepCode,Price,Amount,DscTotal,Total,AutoDscTotal,HandDsc,InnerNo,OrderNo) values(" + "?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        tx.executeSql(sql, [lsNo, sDateTime, tradeFlag, cashierId, cashierCode, cashierName, clerkId, clerkCode, pid, barCode, clerkName, prodCode, prodName, depCode, price, amount, dscTotal, total, autoDscTotal, handDsc, innerNo, orderNo], function (tx, results) {
                            console.log("resultDeta=", results.rows);
                        }, function (error) {
                            console.log("err===", error);
                        });
                    } catch (error) {
                        console.log("err2==", error);
                    }
                }
            });
        }
    }, {
        key: 'insertRDetail',
        value: function insertRDetail(rdetailDatas) {
            db.transaction(function (tx) {
                for (var i = 0; i < rdetailDatas.length; i++) {
                    var detail = rdetailDatas[i];
                    var lsNo = detail.LsNo;
                    var sDateTime = detail.sDateTime;
                    var tradeFlag = detail.TradeFlag;
                    var cashierId = detail.CashierId;
                    var cashierCode = detail.CashierCode;
                    var cashierName = detail.CashierName;
                    var clerkId = detail.ClerkId;
                    var clerkCode = detail.ClerkCode;
                    var pid = detail.Pid;
                    var barCode = detail.BarCode;
                    var clerkName = detail.ClerkName;
                    var prodCode = detail.ProdCode;
                    var prodName = detail.ProdName;
                    var depCode = detail.DepCode;
                    var price = detail.Price;
                    var amount = detail.Amount;
                    var dscTotal = detail.DscTotal;
                    var total = detail.Total;
                    var autoDscTotal = detail.AutoDscTotal;
                    var handDsc = detail.HandDsc;
                    var cxDsc = detail.CxDsc;
                    var evenDsc = detail.EvenDsc;
                    var mljDsc = detail.MljDsc;
                    var overDsc = detail.OverDsc;
                    var otherDsc = detail.OtherDsc;
                    var tranDsc = detail.TranDsc;
                    var vipDsc = detail.VipDsc;
                    var innerNo = detail.InnerNo;
                    var orderNo = detail.OrderNo;
                    var transFlag = detail.TransFlag;
                    var transDateTime = detail.TransDateTime;
                    var brandDsc = detail.BrandDsc;
                    var subProd = detail.isSubProd;
                    var minus = detail.isMinus;
                    var buyPresentCode = detail.BuyPresentCode;
                    var buyPresentGroupNo = detail.BuyPresentGroupNo;
                    var bpUsedCountN = detail.BPUsedCountN;
                    var dscFormNo = detail.DscFormNo;
                    var dscMJFormNo = detail.DscMJFormNo;
                    var ssid = detail.SSID;
                    var dscMZFormNo = detail.DscMZFormNo;
                    var dscGSFormNo = detail.DscGSFormNo;
                    var gsUsedCountN = detail.GSUsedCountN;
                    var ywDate = detail.YWDate;
                    var sql = "insert into Detail(LsNo,sDateTime,TradeFlag,CashierId,CashierCode,CashierName,ClerkId,ClerkCode,Pid," + "BarCode,ClerkName,ProdCode,ProdName,DepCode,Price,Amount,DscTotal,Total,AutoDscTotal,HandDsc,CxDsc,EvenDsc,MljDsc," + "OverDsc,OtherDsc,TranDsc,VipDsc,InnerNo,OrderNo,TransFlag,TransDateTime,BrandDsc,isSubProd,isMinus,BuyPresentCode," + "BuyPresentGroupNo,BPUsedCountN,DscFormNo,DscMJFormNo,SSID,DscMZFormNo,DscGSFormNo,GSUsedCountN,YWDate) values(" + "?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    tx.executeSql(sql, [lsNo, sDateTime, tradeFlag, cashierId, cashierCode, cashierName, clerkId, clerkCode, pid, barCode, clerkName, prodCode, prodName, depCode, price, amount, dscTotal, total, autoDscTotal, handDsc, cxDsc, evenDsc, mljDsc, overDsc, otherDsc, tranDsc, vipDsc, innerNo, orderNo, transFlag, transDateTime, brandDsc, subProd, minus, buyPresentCode, buyPresentGroupNo, bpUsedCountN, dscFormNo, dscMJFormNo, ssid, dscMZFormNo, dscGSFormNo, gsUsedCountN, ywDate], function (tx, results) {}, function (error) {
                        console.log("err===", error);
                    });
                }
            });
        }
    }, {
        key: 'selectSum',
        value: function selectSum() {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select distinct lsno,innerno,sdatetime,transflag from Sum " + "where transflag is null or  transflag='' order by sdatetime,lsno,innerno limit 100";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        reject("");
                    });
                }, function (err) {
                    console.log("err=", err);
                });
            });
        }
    }, {
        key: 'selectSumAllData',
        value: function selectSumAllData(lsNo, innerno, sdatetime) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from Sum where lsno='" + lsNo + "' AND (TransFlag is null or TransFlag='' ) and innerno='" + innerno + "' and sdatetime = '" + sdatetime + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        reject("");
                    });
                }, function (err) {
                    console.log("err=", err);
                });
            });
        }
    }, {
        key: 'selectDetailAllData',
        value: function selectDetailAllData(lsNo, sdatetime) {
            return new Promise(function (resolve, reject) {
                db.transaction(function (tx) {
                    var sql = "select * from Detail where lsno='" + lsNo + "' AND (TransFlag is null or TransFlag='') and sdatetime = '" + sdatetime + "'";
                    tx.executeSql(sql, [], function (tx, results) {
                        resolve(results.rows);
                    }, function (error) {
                        reject("");
                    });
                });
            });
        }
    }, {
        key: 'close',
        value: function close() {
            if (db) {
                this._successCB('close');
                db.close();
            } else {
                console.log("SQLiteStorage not open");
            }
            db = null;
        }
    }]);
    return DBAdapter;
}(_SQLiteOpenHelper3.default);

exports.default = DBAdapter;
}, 333, null, "myproject/adapter/DBAdapter.js");
__d(/* myproject/sqLiteOpenHelper/SQLiteOpenHelper.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNativeSqliteStorage = require(335                          ); // 335 = react-native-sqlite-storage

var _reactNativeSqliteStorage2 = babelHelpers.interopRequireDefault(_reactNativeSqliteStorage);

_reactNativeSqliteStorage2.default.DEBUG(false);
var database_name = "PosBasicItem.db";
var database_version = "3.0";
var database_displayname = "MySQLite";
var database_size = -1;
var db = void 0;

var SQLiteOpenHelper = function () {
  function SQLiteOpenHelper() {
    babelHelpers.classCallCheck(this, SQLiteOpenHelper);

    this.createTable();
  }

  babelHelpers.createClass(SQLiteOpenHelper, [{
    key: "open",
    value: function open() {
      var _this = this;

      db = _reactNativeSqliteStorage2.default.openDatabase(database_name, database_version, database_displayname, database_size, function () {}, function (err) {
        _this._errorCB('open', err);
      });
      this.createTable();
      return db;
    }
  }, {
    key: "createTable",
    value: function createTable() {
      var _this2 = this;

      if (!db) {
        this.open();
      }

      db.updater;
      db.transaction(function (tx) {
        tx.executeSql('CREATE TABLE IF NOT EXISTS tshopitem(pid int not null Primary Key,shopcode varchar(20) null,shopname varchar(200) null,' + 'UniqueCode varchar(5) null,shoplevel int null,subcode varchar(200) null,FNeedPS char(1) null,FCanPH char(1) null,PSShop varchar(20) null,isdel varchar(1) null,FCanCG varchar(1) null)', [], function () {}, function (err) {
          _this2._errorCB('a', err);
        });

        tx.executeSql('CREATE TABLE IF NOT EXISTS tusershop(usercode varchar(20) null,shopcode varchar(20) null)', [], function () {}, function (err) {
          _this2._errorCB('b', err);
        });

        tx.executeSql('CREATE TABLE IF NOT EXISTS tuserright(usercode varchar(20) null,Funccode varchar(20) null,' + 'isEnter int null,IsAdd int null,IsEdit int null,IsDel int null,IsQuery int null,IsPrint int null,IsPrnSet int null,' + 'IsExPort int null,IsCheck int null,IsWrite int null,IsSpec int null)', [], function () {}, function (err) {
          _this2._errorCB('c', err);
        });

        tx.executeSql('CREATE TABLE IF NOT EXISTS tdepset(pid int not null Primary Key,DepCode varchar(20) null,DepName varchar(100) null,' + 'AidCode varchar(20) null,SubCode varchar(20) null,DepMemo varchar(50) null,SpecTag int(4) null,IsLeaf int(4) null,' + 'ProfitRate float(8) null,GatherRate float(8) null,DepLevel int(4) null,IsDel varchar(1) null,depcode1 varchar(12) null' + ',depcode2 varchar(12) null,depcode3 varchar(12) null,depcode4 varchar(12) null,depcode5 varchar(12) null,depcode6 varchar(12) null)', [], function () {}, function (err) {
          _this2._errorCB('d', err);
        });

        tx.executeSql('CREATE INDEX IF NOT EXISTS  [index_tdepset_depcode] ON [tdepset] ([DepCode] COLLATE NOCASE ASC)', [], function () {}, function (err) {
          _this2._errorCB('d', err);
        });

        tx.executeSql('CREATE INDEX IF NOT EXISTS  [index_tdepset_subcode] ON [tdepset] ([SubCode] COLLATE NOCASE ASC)', [], function () {}, function (err) {
          _this2._errorCB('d', err);
        });

        tx.executeSql('CREATE TABLE IF NOT EXISTS tuserset(pid int not null Primary Key,Usercode varchar(20) null,Barcode varchar(20) null,' + 'UserName varchar(20) null,UserPwd varchar(100) null,OpriceRight varchar(10) null,PriceRight varchar(10) null,IsCashier varchar(10) null,' + 'IsClerk varchar(10) null,HDscRate varchar(10) null)', [], function () {}, function (err) {
          _this2._errorCB('e', err);
        });

        tx.executeSql('CREATE TABLE IF NOT EXISTS product(Pid int not null Primary Key,ProdCode varchar(13) null,BarCode varchar(18) null,' + 'ProdName varchar(40) null,ShortName varchar(20) null,AidCode varchar(20) null,OtherCode varchar(20)' + 'null,DepCode varchar(12) null,SuppCode varchar(12) null,BrandCode varchar(12) null,Spec varchar(20) null,' + 'ProdAdr varchar(20) null,Unit varchar(4) null,PUnitAmt float(8) null,PicInfo int(4) null,ProdMemo varchar(50) null,' + 'StdOPrice float(8) null, StdPrice float(8) null,WPrice float(8) null,LowPrice float(8) null,' + 'HighPrice float(8) null,OTax float(8) null,STax float(8) null,VipPrice1 float(8) null,VipPrice2 float(8) null,' + 'VipPrice3 float(8) null,BoxCode varchar(13) null ,IsIntCount char(1) null,SaleType char(1) null,' + 'GatherType char(1) null,GatherRate float(8) null,ProdType char(1) null,SeasonCode varchar(12) null,' + 'ProdMemo1 varchar(20) null,ProdMemo2 varchar(20) null,ProdMemo3 varchar(20) null,FNoCD char(1) null,IsDel char(1) null,' + 'FNoSale char(1) null,FNoTH char(1) null,FNoPromoton char(1) null,FUseSalePrice char(1) null,StdOutOPrice float(8) null,FNoYH char(1) null,' + 'HLimit money(8) null,LLimit money(8) null,BestKC money(8) null,PriceFlag varchar(2) null,FNoPromotion varchar(10) null,FNoCG varchar(10) null,' + 'OperRange varchar(10) null,TakeRate varchar(10) null,TakeType varchar(10) null)', [], function () {}, function (err) {
          _this2._errorCB('f', err);
        });

        tx.executeSql('CREATE INDEX IF NOT EXISTS  [index_product_myprodcode] ON [Product] ([ProdCode] COLLATE NOCASE ASC)', [], function () {}, function (err) {
          _this2._errorCB('f', err);
        });

        tx.executeSql('CREATE INDEX IF NOT EXISTS  [index_product_barcode] ON [Product] ([barcode] COLLATE NOCASE ASC)', [], function () {}, function (err) {
          _this2._errorCB('f', err);
        });

        tx.executeSql('CREATE INDEX IF NOT EXISTS  [index_product_depcode] ON [Product] ([depcode] COLLATE NOCASE ASC)', [], function () {}, function (err) {
          _this2._errorCB('f', err);
        });

        tx.executeSql("CREATE TABLE IF NOT EXISTS shopInfo(pid int not null Primary Key,ProdCode varchar(20) null,prodname varchar(255) null,countm float(8) null," + "ShopPrice float(8) null,prototal float(8) null,promemo varchar(50) null,DepCode varchar(20) null,ydcountm int(255) null,SuppCode varchar(50) null" + ",BarCode varchar(20) null)", [], function () {}, function (err) {
          console.log(err);
        });
        tx.executeSql("CREATE TABLE IF NOT EXISTS tsuppset(pid int not null Primary Key,sCode varchar(20) null,sname varchar(255) null,levelno int(8) null," + "aidcode varchar(8) null,subcode varchar(8) null,SuppType varchar(50) null)", [], function () {}, function (err) {
          console.log(err);
        });
        tx.executeSql("CREATE TABLE IF NOT EXISTS KgtOpt(OptName varchar(12) null,OptValue varchar(100) null)", [], function () {}, function (err) {
          console.log(err);
        });
        tx.executeSql("CREATE TABLE IF NOT EXISTS PosOpt(PosCode varchar(12) null,ShopCode varchar(12) null,OptName varchar(20) null,OptValue varchar(100) null)", [], function () {}, function (err) {
          console.log(err);
        });
        tx.executeSql("CREATE TABLE IF NOT EXISTS Sum(LsNo varchar(12) not null,sDateTime varchar(19) not null,TradeFlag varchar(1) null default('')," + "CashierId int(4) null default(0),CashierCode varchar(12) null default(''),ino int(4) not null,CashierName varchar(20) null default(''),DscTotal float(8) null default(0),AutoDscTotal float(8) null default(0)," + "Total float(8) null default(0), TotalPay float(8) null default(0),Change float(8) null default(0),CustType varchar(1) null default(''), CustCode varchar(20) null default('')," + "InvCode varchar(12) null default(''),PayId int(4) null default(0),PayCode varchar(2) null default(''),Amount float(8) null default(0),OldAmount float(8) null default(0)," + "TendPayCode varchar(30) null default(''),VipTotal float(8) null default(0),TScore float(8) null default(0),VipSCore float(8) null default(0), InnerNo varchar(12) not null  ,TransFlag varchar(19) null default(''),TransDateTime varchar(19) null default(''),YWDate varchar(10) null default(''),Primary Key(LsNo,sDateTime,InnerNo,ino))", [], function () {}, function (err) {
          console.log(err);
        });
        tx.executeSql("CREATE TABLE IF NOT EXISTS Detail(LsNo varchar(12) not null,sDateTime varchar(19) not null,TradeFlag varchar(1) null default('')," + "CashierId int(4) null default(0),CashierCode varchar(12) null default(''),CashierName varchar(20) null default(''),ClerkId int(4) null default(0),ClerkCode varchar(12) null default(''),Pid int(4) not null,BarCode varchar(18) null default('')," + "ClerkName  varchar(20) null default(''),ProdCode varchar(13) null default(''),ProdName varchar(40) null default(''),DepCode varchar(12) null default(''),Price float(8) null default(0),Amount float(8) null default(0)," + "DscTotal float(8) null default(0),AutoDscTotal float(8) null default(0)," + "Total float(8) null default(0),HandDsc float(8) null default(0),CxDsc float(8) null default(0),EvenDsc float(8) null default(0),MljDsc float(8) null default(0), OverDsc float(8) null default(0),OtherDsc float(8) null default(0),TranDsc float(1) null default(0), VipDsc float(20) null default(0)," + "InnerNo varchar(12) not null,OrderNo varchar(3) not null,TransFlag varchar(1) null default(''),TransDateTime varchar(19) null default(''),BrandDsc float(8) null default(0)," + "isSubProd varchar(1) null default(''),isMinus varchar(1) null default(''),BuyPresentCode varchar(20) null default(''),BuyPresentGroupNo varchar(20) null default(''), BPUsedCountN float(8) null default(0),DscFormNo varchar(20) null default(''),DscMJFormNo varchar(20) null default(''),SSID varchar(32) null default('')," + "DscMZFormNo varchar(20) null default(''),DscGSFormNo varchar(20) null default(''),GSUsedCountN float(8) null default(0),YWDate varchar(10)  null default(''),Primary Key(LsNo,sDateTime,InnerNo,OrderNo))", [], function () {}, function (err) {
          console.log(err);
        });

        tx.executeSql("CREATE TABLE IF NOT EXISTS RDetail(LsNo varchar(12) not null,sDateTime varchar(19) not null,TradeFlag varchar(1) null," + "CashierId int(4) null,CashierCode varchar(12) null,CashierName varchar(20) null,ClerkId int(4) null,ClerkCode varchar(12) null,Pid int(4) not null,BarCode varchar(18) null," + "ClerkName  varchar(20) null,ProdCode varchar(13) null,ProdName varchar(40) null,DepCode varchar(12) null,Price float(8) null,Amount float(8) null," + "DscTotal float(8) null,AutoDscTotal float(8) null," + "Total float(8) null,HandDscTotal float(8) null,CxDsc float(8) null,EvenDsc float(8) null,MljDsc float(8) null, OverDsc float(8) null," + "OtherDsc float(8) null,TranDsc float(1) null, VipDsc float(20) null," + "InnerNo varchar(12) null,OrderNo varchar(3) null,TransFlag varchar(1) null,TransDateTime varchar(19) null,BrandDsc float(8) null," + "isSubProd varchar(1) null,isMinus varchar(1) null,BuyPresentCode varchar(20) null,BuyPresentGroupNo varchar(20) null, " + "BPUsedCountN float(8) null,DscFormNo varchar(20) null,DscMJFormNo varchar(20) null,SSID varchar(32) null," + "DscMZFormNo varchar(20) null,DscGSFormNo varchar(20) null,GSUsedCountN float(8) null,YWDate varchar(10))", [], function () {}, function (err) {
          console.log(err);
        });
        tx.executeSql("CREATE TABLE IF NOT EXISTS payInfo(Pid int(4) not null,PayCode varchar(12) null,payName varchar(50) null," + "ExchgRate double(8) null,IsChange varchar(8) null,IsGetCode varchar(2) null,ChangeCode varchar(2) null," + "GatherRate int(4) null,IsSystem varchar(1) null,ShortCut varchar(1) null,PayMemo varchar(50)null," + "IsDel varchar(1) null,NoDsc varchar(1) null)", [], function () {});
        tx.executeSql("CREATE TABLE IF NOT EXISTS TDscCust(FormNo varchar(20) not null,CustTypeCode varchar(20) null," + "CustTypeName varchar(40) null)", [], function () {});
        tx.executeSql("CREATE TABLE IF NOT EXISTS TDscPlan(FormNo varchar(20) not null,BeginDate varchar(10) null," + "EndDate varchar(10) null,BeginTime varchar(10) null,EndTime varchar(10) null,VldWeek varchar(7) null)", [], function () {});
        tx.executeSql("CREATE TABLE IF NOT EXISTS TDscProd(FormNo varchar(20) not null,Pid int(4) null,ProdCode varchar(18) null," + "ProdName varchar(40) null,BarCode varchar(18) null,ProdType varchar(1) null,DscType varchar(1) null,DscValue float(8) null," + "OTax int(4) null,STax int(4) null,DscPrice float(8) null,DscOPrice float(8) null,DscOutOPrice float(8) null," + "StdPrice float(8) null,Spec varchar(20) null,ProdAdr varchar(20) null,DepCode varchar(20) null,DepName varchar(40) null," + "SuppCode varchar(20) null,SuppName varvhar(40) null,BrandCode varvhar(20) null,BrandName varvhar(40) null," + "Remark varvhar(50) null,TimeMark int(4) null,Str1 varvhar(20) null,Str2 varvhar(20) null,Str3 varvhar(20) null," + "Curr1 float(8) null,Curr2 float(8) null,Curr3 float(8) null,Tag int(4) null)", [], function () {});

        tx.executeSql("CREATE TABLE IF NOT EXISTS KGtuser(Pid int(4) null,UserCode varchar(12) null,BarCode varchar(13) null,UserName varchar(20) null," + "UserPwd varchar(20) null,EditDateTime varchar(19) null,HDscRate float(8) null,IsCashier varchar(1) null," + "IsClerk varchar(1) null,Statues varchar(1) null,IsStationCtrl varchar(1) null,UserMemo varchar(20) null," + "OPriceRight varchar(1) null,PriceRight varchar(1) null,VPriceRight varchar(1) null,PSPriceRight varchar(1) null,IsDel varchar(1) null)", [], function () {});

        tx.executeSql("CREATE TABLE IF NOT EXISTS TDscExcept(FormNo varchar(20) not null,ProdCode varchar(20) not null," + "ProdName varchar(40) null,  StdPrice float(8) null, Remark varchar(50) null)", [], function () {});

        tx.executeSql("CREATE TABLE IF NOT EXISTS Tdschead(FormNo varchar(20) not null,FormName varchar(40)  null,FormType varchar(2) null,dtDep varchar(1) null," + "dtSupp varchar(1) null, dtBrand varchar(1) null, dtProd varchar(1) null, dtAll varchar(1) null, dtCust varchar(1) null," + "FormMaker varchar(30) null, FormDate varchar(10) null, CheckCode varchar(12) null, CheckName varchar(30) null, " + "WriteDate varchar(19) null, UserCode varchar(12) null, UserName varchar(30) null, sDateTime varchar(19) null," + "CheckType varchar(1) null,Tag int(4) null, PrnTimes int(4) null, Remark varchar(200) null, MakeShop varchar(4) null, " + "MakeShopTblCode varchar(5) null, ywRange varchar(1) null, allPF varchar(1) null, AutoMulti varchar(1) null, " + "ConditionType varchar(1) null, Con1 float(8) null, Con2 float(8) null, StopCode varchar(12) null, StopDate varchar(10) null," + " DscType varchar(1) null, DscValue float(8) null, str1 varchar(20) null, str2 varchar(20) null, str3 varchar(20) null," + " str4 varchar(20) null, str5 varchar(20) null,PricMode varchar(2) null)", [], function () {});

        tx.executeSql("CREATE TABLE IF NOT EXISTS TDscDep(FormNo varchar(20) not null,DepCode varchar(20) not null, " + "DepName varchar(40) null, DscType varchar(1) null, DscValue float(8) null, Remark varchar(50) null,PriceMode varchar(2) null)", [], function () {});

        tx.executeSql("CREATE TABLE IF NOT EXISTS TDscSupp(FormNo varchar(20) not null,SuppCode varchar(20) not null, " + "SuppName varchar(40) null, DscType varchar(1) null, DscValue float(8) null, Remark varchar(50) null,PriceMode varchar(2) null)", [], function () {});

        tx.executeSql("CREATE TABLE IF NOT EXISTS TDscBrand(FormNo varchar(20) not null,BrandCode varchar(20) not null, " + "BrandName varchar(40) null, DscType varchar(1) null, DscValue float(8) null, Remark varchar(50) null,PriceMode varchar(2) null)", [], function () {});

        tx.executeSql("CREATE TABLE IF NOT EXISTS TDscCondition(FormNo varchar(20) not null,ConType varchar(10) null," + "Con1 float(8) null, Con2 float(8) null, Remark varchar(50) null,cxConType varchar(5) null)", [], function () {});

        tx.executeSql("CREATE TABLE IF NOT EXISTS tDscPresent(FormNo varchar(20) not null,ProdCode varchar(20) null," + "ProdName varchar(40) null, PlanNo varchar(20) null, GroupNo varchar(20) null, CountN float(8) null, " + "StdPrice float(8) null, Remark varchar(50) null)", [], function () {});
        tx.executeSql("CREATE TABLE IF NOT EXISTS tDscGroupPrice(FormNo varchar(20) not null,GroupNo varchar(2) null," + "GroupCountN float(8) null, GroupTotal float(8) null)", [], function () {});

        tx.executeSql("select name from sqlite_master where type='table' and lower(name) ='shopinfo' and lower(sql) " + "like lower('%FormType%')", [], function (tx, results) {
          if (results.rows.length == 0) {

            tx.executeSql("alter table shopInfo add FormType varchar(5)", [], function () {});
          }
        });
      }, function (err) {
        _this2._errorCB('transaction', err);
      }, function () {});
    }
  }, {
    key: "close",
    value: function close() {
      if (db) {
        db.close();
      } else {
        console.log("SQLiteStorage not open");
      }
      db = null;
    }
  }, {
    key: "_successCB",
    value: function _successCB(name) {
      console.log("SQLiteStorage=" + name + " success");
    }
  }, {
    key: "_errorCB",
    value: function _errorCB(name, err) {
      console.log("SQLiteStorage " + name);
      console.log(err);
    }
  }]);
  return SQLiteOpenHelper;
}();

exports.default = SQLiteOpenHelper;
;
}, 334, null, "myproject/sqLiteOpenHelper/SQLiteOpenHelper.js");
__d(/* react-native-sqlite-storage/sqlite.js */function(global, require, module, exports) {
var plugin = require(336                   ); // 336 = ./lib/sqlite.core.js
var SQLiteFactory = plugin.SQLiteFactory;


var config = [[false, "SQLitePlugin", "transaction", false, true, true], [false, "SQLitePlugin", "readTransaction", false, true, true], [false, "SQLitePlugin", "close", false, false, true], [false, "SQLitePlugin", "executeSql", true, false, true], [false, "SQLitePlugin", "sqlBatch", false, false, true], [false, "SQLitePlugin", "attach", true, false, true], [false, "SQLitePlugin", "detach", false, false, true], [false, "SQLitePluginTransaction", "executeSql", true, false, false], [false, "SQLiteFactory", "deleteDatabase", false, false, true], [true, "SQLiteFactory", "openDatabase", false, false, true], [false, "SQLiteFactory", "echoTest", false, false, true]];

var originalFns = {};
config.forEach(function (entry) {
  var _entry = babelHelpers.slicedToArray(entry, 3),
      returnValueExpected = _entry[0],
      prototype = _entry[1],
      fn = _entry[2];

  var originalFn = plugin[prototype].prototype[fn];
  originalFns[prototype + "." + fn] = originalFn;
});

function enablePromiseRuntime(enable) {
  if (enable) {
    createPromiseRuntime();
  } else {
    createCallbackRuntime();
  }
}
function createCallbackRuntime() {
  config.forEach(function (entry) {
    var _entry2 = babelHelpers.slicedToArray(entry, 6),
        returnValueExpected = _entry2[0],
        prototype = _entry2[1],
        fn = _entry2[2],
        argsNeedPadding = _entry2[3],
        reverseCallbacks = _entry2[4],
        rejectOnError = _entry2[5];

    plugin[prototype].prototype[fn] = originalFns[prototype + "." + fn];
  });
  console.log("Callback based runtime ready");
}
function createPromiseRuntime() {
  config.forEach(function (entry) {
    var _entry3 = babelHelpers.slicedToArray(entry, 6),
        returnValueExpected = _entry3[0],
        prototype = _entry3[1],
        fn = _entry3[2],
        argsNeedPadding = _entry3[3],
        reverseCallbacks = _entry3[4],
        rejectOnError = _entry3[5];

    var originalFn = plugin[prototype].prototype[fn];
    plugin[prototype].prototype[fn] = function () {
      var _this = this;

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (argsNeedPadding && args.length == 1) {
        args.push([]);
      }
      var promise = new Promise(function (resolve, reject) {
        var success = function success() {
          if (!returnValueExpected) {
            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }

            return resolve(args);
          }
        };
        var error = function error(err) {
          var _console;

          (_console = console).log.apply(_console, ['error: ', fn].concat(babelHelpers.toConsumableArray(args), [arguments]));
          if (rejectOnError) {
            reject(err);
          }
          return false;
        };
        var retValue = originalFn.call.apply(originalFn, [_this].concat(babelHelpers.toConsumableArray(args), [reverseCallbacks ? error : success, reverseCallbacks ? success : error]));
        if (returnValueExpected) {
          return resolve(retValue);
        }
      });

      return promise;
    };
  });
  console.log("Promise based runtime ready");
}
SQLiteFactory.prototype.enablePromise = enablePromiseRuntime;

module.exports = new SQLiteFactory();
}, 335, null, "react-native-sqlite-storage/sqlite.js");
__d(/* react-native-sqlite-storage/lib/sqlite.core.js */function(global, require, module, exports) {

var NativeModules = require(26            ).NativeModules; // 26 = react-native
var DB_STATE_INIT, DB_STATE_OPEN, READ_ONLY_REGEX, SQLiteFactory, SQLitePlugin, SQLitePluginTransaction, argsArray, dblocations, newSQLError, nextTick, root, txLocks;

var plugin = {};

READ_ONLY_REGEX = /^(\s|;)*(?:alter|create|delete|drop|insert|reindex|replace|update)/i;

DB_STATE_INIT = "INIT";

DB_STATE_OPEN = "OPEN";

txLocks = {};

newSQLError = function newSQLError(error, code) {
  var sqlError;
  sqlError = error;
  if (!code) {
    code = 0;
  }
  if (!sqlError) {
    sqlError = new Error("a plugin had an error but provided no response");
    sqlError.code = code;
  }
  if (typeof sqlError === "string") {
    sqlError = new Error(error);
    sqlError.code = code;
  }
  if (!sqlError.code && sqlError.message) {
    sqlError.code = code;
  }
  if (!sqlError.code && !sqlError.message) {
    sqlError = new Error("an unknown error was returned: " + JSON.stringify(sqlError));
    sqlError.code = code;
  }
  return sqlError;
};

nextTick = window.setImmediate || function (fun) {
  window.setTimeout(fun, 0);
};

argsArray = function argsArray(fun) {
  return function () {
    var args, i, len;
    len = arguments.length;
    if (len) {
      args = [];
      i = -1;
      while (++i < len) {
        args[i] = arguments[i];
      }
      return fun.call(this, args);
    } else {
      return fun.call(this, []);
    }
  };
};

plugin.exec = function (method, options, success, error) {
  if (plugin.sqlitePlugin.DEBUG) {
    console.log('SQLite.' + method + '(' + JSON.stringify(options) + ')');
  }
  NativeModules["SQLite"][method](options, success, error);
};

SQLitePlugin = function SQLitePlugin(openargs, openSuccess, openError) {
  var dbname;
  if (!(openargs && openargs['name'])) {
    throw newSQLError("Cannot create a SQLitePlugin db instance without a db name");
  }
  dbname = openargs.name;
  if (typeof dbname !== 'string') {
    throw newSQLError('sqlite plugin database name must be a string');
  }
  this.openargs = openargs;
  this.dbname = dbname;
  this.openSuccess = openSuccess;
  this.openError = openError;
  this.openSuccess || (this.openSuccess = function () {
    console.log("DB opened: " + dbname);
  });
  this.openError || (this.openError = function (e) {
    console.log(e.message);
  });
  this.open(this.openSuccess, this.openError);
};

SQLitePlugin.prototype.databaseFeatures = {
  isSQLitePluginDatabase: true
};

SQLitePlugin.prototype.openDBs = {};

SQLitePlugin.prototype.addTransaction = function (t) {
  if (!txLocks[this.dbname]) {
    txLocks[this.dbname] = {
      queue: [],
      inProgress: false
    };
  }
  txLocks[this.dbname].queue.push(t);
  if (this.dbname in this.openDBs && this.openDBs[this.dbname] !== DB_STATE_INIT) {
    this.startNextTransaction();
  } else {
    if (this.dbname in this.openDBs) {
      console.log('new transaction is waiting for open operation');
    } else {
      console.log('database is closed, new transaction is [stuck] waiting until db is opened again!');
    }
  }
};

SQLitePlugin.prototype.transaction = function (fn, error, success) {
  if (!this.openDBs[this.dbname]) {
    error(newSQLError('database not open'));
    return;
  }
  this.addTransaction(new SQLitePluginTransaction(this, fn, error, success, true, false));
};

SQLitePlugin.prototype.readTransaction = function (fn, error, success) {
  if (!this.openDBs[this.dbname]) {
    error(newSQLError('database not open'));
    return;
  }
  this.addTransaction(new SQLitePluginTransaction(this, fn, error, success, false, true));
};

SQLitePlugin.prototype.startNextTransaction = function () {
  var self;
  self = this;
  nextTick(function (_this) {
    return function () {
      var txLock;
      if (!(_this.dbname in _this.openDBs) || _this.openDBs[_this.dbname] !== DB_STATE_OPEN) {
        console.log('cannot start next transaction: database not open');
        return;
      }
      txLock = txLocks[self.dbname];
      if (!txLock) {
        console.log('cannot start next transaction: database connection is lost');
      } else if (txLock.queue.length > 0 && !txLock.inProgress) {
        txLock.inProgress = true;
        txLock.queue.shift().start();
      }
    };
  }(this));
};

SQLitePlugin.prototype.abortAllPendingTransactions = function () {
  var j, len1, ref, tx, txLock;
  txLock = txLocks[this.dbname];
  if (!!txLock && txLock.queue.length > 0) {
    ref = txLock.queue;
    for (j = 0, len1 = ref.length; j < len1; j++) {
      tx = ref[j];
      tx.abortFromQ(newSQLError('Invalid database handle'));
    }
    txLock.queue = [];
    txLock.inProgress = false;
  }
};

SQLitePlugin.prototype.sqlBatch = function (sqlStatements, success, error) {
  var batchList, j, len1, myfn, st;
  if (!sqlStatements || sqlStatements.constructor !== Array) {
    throw newSQLError('sqlBatch expects an array');
  }
  batchList = [];
  for (j = 0, len1 = sqlStatements.length; j < len1; j++) {
    st = sqlStatements[j];
    if (st.constructor === Array) {
      if (st.length === 0) {
        throw newSQLError('sqlBatch array element of zero (0) length');
      }
      batchList.push({
        sql: st[0],
        params: st.length === 0 ? [] : st[1]
      });
    } else {
      batchList.push({
        sql: st,
        params: []
      });
    }
  }
  myfn = function myfn(tx) {
    var elem, k, len2, results;
    results = [];
    for (k = 0, len2 = batchList.length; k < len2; k++) {
      elem = batchList[k];
      results.push(tx.addStatement(elem.sql, elem.params, null, null));
    }
    return results;
  };
  var mysuccess = function mysuccess() {
    if (!!success) {
      return success();
    }
  };
  var myerror = function myerror(e) {
    if (!!error) {
      return error(e);
    } else {
      console.log("Error handler not provided: ", e);
    }
  };

  this.addTransaction(new SQLitePluginTransaction(this, myfn, myerror, mysuccess, true, false));
};

SQLitePlugin.prototype.open = function (success, error) {
  var openerrorcb, opensuccesscb;

  if (this.dbname in this.openDBs && this.openDBs[this.dbname] === DB_STATE_OPEN) {
    console.log('database already open: ' + this.dbname);
    nextTick(function (_this) {
      return function () {
        success(_this);
      };
    }(this));
  } else {
    console.log('OPEN database: ' + this.dbname);
    opensuccesscb = function (_this) {
      return function () {
        var txLock;
        if (!_this.openDBs[_this.dbname]) {
          console.log('database was closed during open operation');
        }
        if (_this.dbname in _this.openDBs) {
          _this.openDBs[_this.dbname] = DB_STATE_OPEN;
        }
        if (!!success) {
          success(_this);
        }
        txLock = txLocks[_this.dbname];
        if (!!txLock && txLock.queue.length > 0 && !txLock.inProgress) {
          _this.startNextTransaction();
        }
      };
    }(this);
    openerrorcb = function (_this) {
      return function () {
        console.log('OPEN database: ' + _this.dbname + ' failed, aborting any pending transactions');
        if (!!error) {
          error(newSQLError('Could not open database'));
        }
        delete _this.openDBs[_this.dbname];
        _this.abortAllPendingTransactions();
      };
    }(this);
    this.openDBs[this.dbname] = DB_STATE_INIT;
    plugin.exec("open", this.openargs, opensuccesscb, openerrorcb);
  }
};

SQLitePlugin.prototype.close = function (success, error) {
  if (this.dbname in this.openDBs) {
    if (txLocks[this.dbname] && txLocks[this.dbname].inProgress) {
      console.log('cannot close: transaction is in progress');
      error(newSQLError('database cannot be closed while a transaction is in progress'));
      return;
    }
    console.log('CLOSE database: ' + this.dbname);
    delete this.openDBs[this.dbname];
    if (txLocks[this.dbname]) {
      console.log('closing db with transaction queue length: ' + txLocks[this.dbname].queue.length);
    } else {
      console.log('closing db with no transaction lock state');
    }
    var mysuccess = function mysuccess(t, r) {
      if (!!success) {
        return success(r);
      }
    };
    var myerror = function myerror(t, e) {
      if (!!error) {
        return error(e);
      } else {
        console.log("Error handler not provided: ", e);
      }
    };
    plugin.exec("close", { path: this.dbname }, mysuccess, myerror);
  } else {
    var err = 'cannot close: database is not open';
    console.log(err);
    if (error) {
      nextTick(function () {
        return error(err);
      });
    }
  }
};

SQLitePlugin.prototype.attach = function (dbNameToAttach, dbAlias, success, error) {
  if (this.dbname in this.openDBs) {
    if (txLocks[this.dbname] && txLocks[this.dbname].inProgress) {
      console.log('cannot attach: transaction is in progress');
      error(newSQLError('database cannot be attached while a transaction is in progress'));
      return;
    }
    console.log('ATTACH database ' + dbNameToAttach + ' to ' + this.dbname + ' with alias ' + dbAlias);

    var mysuccess = function mysuccess(t, r) {
      if (!!success) {
        return success(r);
      }
    };
    var myerror = function myerror(e) {
      if (!!error) {
        return error(e);
      } else {
        console.log("Error handler not provided: ", e);
      }
    };
    plugin.exec("attach", { path: this.dbname, dbName: dbNameToAttach, dbAlias: dbAlias }, mysuccess, myerror);
  } else {
    var err = 'cannot attach: database is not open';
    if (error) {
      nextTick(function () {
        return error(err);
      });
    }
  }
};

SQLitePlugin.prototype.detach = function (dbAlias, success, error) {
  if (this.dbname in this.openDBs) {
    if (txLocks[this.dbname] && txLocks[this.dbname].inProgress) {
      console.log('cannot attach: transaction is in progress');
      error(newSQLError('database cannot be attached while a transaction is in progress'));
      return;
    }
    console.log('DETACH database ' + dbAlias + ' from ' + this.dbname);

    var mysuccess = function mysuccess(t, r) {
      if (!!success) {
        return success(r);
      }
    };
    var myerror = function myerror(e) {
      console.log('ERR', e);
      if (!!error) {
        return error(e);
      } else {
        console.log("Error handler not provided: ", e);
      }
    };
    this.executeSql('DETACH DATABASE ' + dbAlias, [], mysuccess, myerror);
  } else {
    var err = 'cannot attach: database is not open';
    console.log(err);
    if (error) {
      nextTick(function () {
        return error(err);
      });
    }
  }
};

SQLitePlugin.prototype.executeSql = function (statement, params, success, error) {
  var myerror, myfn, mysuccess;
  mysuccess = function mysuccess(t, r) {
    if (!!success) {
      return success(r);
    }
  };
  myerror = function myerror(t, e) {
    if (!!error) {
      return error(e);
    } else {
      console.log("Error handler not provided: ", e);
    }
  };
  myfn = function myfn(tx) {
    tx.addStatement(statement, params, mysuccess, myerror);
  };
  this.addTransaction(new SQLitePluginTransaction(this, myfn, null, null, false, false));
};

SQLitePluginTransaction = function SQLitePluginTransaction(db, fn, error, success, txlock, readOnly) {
  if (typeof fn !== "function") {
    var err = newSQLError("transaction expected a function");
    if (!!error) {
      return error(err);
    } else {
      throw err;
    }
  }
  this.db = db;
  this.fn = fn;
  this.error = error;
  this.success = success;
  this.txlock = txlock;
  this.readOnly = readOnly;
  this.executes = [];
  if (txlock) {
    this.addStatement("BEGIN", [], null, function (tx, err) {
      throw newSQLError("unable to begin transaction: " + err.message, err.code);
    });
  } else {
    this.addStatement("SELECT 1", [], null, null);
  }
};

SQLitePluginTransaction.prototype.start = function () {
  var err;
  try {
    this.fn(this);
    this.run();
  } catch (_error) {
    err = _error;
    txLocks[this.db.dbname].inProgress = false;
    this.db.startNextTransaction();
    if (this.error) {
      this.error(newSQLError(err));
    }
  }
};

SQLitePluginTransaction.prototype.executeSql = function (sql, values, success, error) {
  var that = this;
  if (that.finalized) {
    throw {
      message: 'InvalidStateError: DOM Exception 11: This transaction is already finalized. Transactions are committed' + ' after its success or failure handlers are called. If you are using a Promise to handle callbacks, be aware that' + ' implementations following the A+ standard adhere to run-to-completion semantics and so Promise resolution occurs' + ' on a subsequent tick and therefore after the transaction commits.',
      code: 11
    };
  }
  if (that.readOnly && READ_ONLY_REGEX.test(sql)) {
    that.handleStatementFailure(error, {
      message: 'invalid sql for a read-only transaction'
    });
    return;
  }
  var mysuccess = function mysuccess(t, r) {
    if (!!success) {
      return success(t, r);
    }
  };
  var myerror = function myerror(t, e) {
    if (!!error) {
      return error(e);
    } else {
      console.log("Error handler not provided: ", e);
    }
  };
  that.addStatement(sql, values, mysuccess, myerror);
};

SQLitePluginTransaction.prototype.addStatement = function (sql, values, success, error) {
  var j, len1, params, sqlStatement, t, v;
  sqlStatement = typeof sql === 'string' ? sql : sql.toString();
  params = [];
  if (!!values && values.constructor === Array) {
    for (j = 0, len1 = values.length; j < len1; j++) {
      v = values[j];
      t = typeof v;
      if (v === null || v === void 0 || t === 'number' || t === 'string') {
        params.push(v);
      } else if (t === 'boolean') {
        params.push(~~v);
      } else if (t !== 'function') {
        params.push(v.toString());
        console.warn('addStatement - parameter of type <' + t + '> converted to string using toString()');
      } else {
        var errorMsg = 'Unsupported parameter type <' + t + '> found in addStatement()';
        console.error(errorMsg);
        error(newSQLError(errorMsg));
        return;
      }
    }
  }
  this.executes.push({
    success: success,
    error: error,
    sql: sqlStatement,
    params: params
  });
};

SQLitePluginTransaction.prototype.handleStatementSuccess = function (handler, response) {
  var payload, rows;
  if (!handler) {
    return;
  }
  rows = response.rows || [];

  payload = {
    rows: {
      item: function item(i) {
        return rows[i];
      },

      raw: function raw() {
        return rows.slice();
      },
      length: rows.length
    },
    rowsAffected: response.rowsAffected || 0,
    insertId: response.insertId || void 0
  };

  handler(this, payload);
};

SQLitePluginTransaction.prototype.handleStatementFailure = function (handler, response) {
  if (!handler) {
    throw newSQLError("a statement with no error handler failed: " + response.message, response.code);
  }
  if (handler(this, response) !== false) {
    throw newSQLError("a statement error callback did not return false: " + response.message, response.code);
  }
};

SQLitePluginTransaction.prototype.run = function () {
  var batchExecutes, handlerFor, i, callbacks, request, tropts, tx, txFailure, waiting;
  txFailure = null;
  tropts = [];
  batchExecutes = this.executes;
  waiting = batchExecutes.length;
  this.executes = [];
  tx = this;
  handlerFor = function handlerFor(index, didSucceed) {
    return function (response) {
      if (!txFailure) {
        try {
          if (didSucceed) {
            tx.handleStatementSuccess(batchExecutes[index].success, response);
          } else {
            tx.handleStatementFailure(batchExecutes[index].error, newSQLError(response));
          }
        } catch (err) {
          var errorMsg = JSON.stringify(err);
          if (errorMsg === "{}") errorMsg = err.toString();
          console.log("warning - exception while invoking a callback: " + errorMsg);
        }

        if (!didSucceed) {
          txFailure = newSQLError(response);
        }
      }
      if (--waiting === 0) {
        if (txFailure) {
          tx.executes = [];
          tx.abort(txFailure);
        } else if (tx.executes.length > 0) {
          tx.run();
        } else {
          tx.finish();
        }
      }
    };
  };

  i = 0;
  callbacks = [];
  while (i < batchExecutes.length) {
    request = batchExecutes[i];
    callbacks.push({
      success: handlerFor(i, true),
      error: handlerFor(i, false)
    });
    tropts.push({
      qid: 1111,
      sql: request.sql,
      params: request.params
    });
    i++;
  }

  var mysuccess = function mysuccess(result) {
    var j, last, q, r, res, type;
    if (result.length == 0) {
      return;
    }
    last = result.length - 1;
    for (j = 0; j <= last; ++j) {
      r = result[j];
      type = r.type;
      res = r.result;
      q = callbacks[j];
      if (q) {
        if (q[type]) {
          q[type](res);
        }
      }
    }
  };

  var myerror = function myerror(error) {
    console.log("batch execution error: ", error);
  };

  plugin.exec("backgroundExecuteSqlBatch", {
    dbargs: {
      dbname: this.db.dbname
    },
    executes: tropts
  }, mysuccess, myerror);
};

SQLitePluginTransaction.prototype.abort = function (txFailure) {
  var failed, succeeded, tx;
  if (this.finalized) {
    return;
  }
  tx = this;
  succeeded = function succeeded(tx) {
    txLocks[tx.db.dbname].inProgress = false;
    tx.db.startNextTransaction();
    if (tx.error) {
      tx.error(txFailure);
    }
  };
  failed = function failed(tx, err) {
    txLocks[tx.db.dbname].inProgress = false;
    tx.db.startNextTransaction();
    if (tx.error) {
      tx.error(newSQLError("error while trying to roll back: " + err.message, err.code));
    }
  };
  this.finalized = true;
  if (this.txlock) {
    this.addStatement("ROLLBACK", [], succeeded, failed);
    this.run();
  } else {
    succeeded(tx);
  }
};

SQLitePluginTransaction.prototype.finish = function () {
  var failed, succeeded, tx;
  if (this.finalized) {
    return;
  }
  tx = this;
  succeeded = function succeeded(tx) {
    txLocks[tx.db.dbname].inProgress = false;
    tx.db.startNextTransaction();
    if (tx.success) {
      tx.success();
    }
  };
  failed = function failed(tx, err) {
    txLocks[tx.db.dbname].inProgress = false;
    tx.db.startNextTransaction();
    if (tx.error) {
      tx.error(newSQLError("error while trying to commit: " + err.message, err.code));
    }
  };
  this.finalized = true;
  if (this.txlock) {
    this.addStatement("COMMIT", [], succeeded, failed);
    this.run();
  } else {
    succeeded(tx);
  }
};

SQLitePluginTransaction.prototype.abortFromQ = function (sqlerror) {
  if (this.error) {
    this.error(sqlerror);
  }
};

dblocations = {
  'default': 'nosync',
  'Documents': 'docs',
  'Library': 'libs'
};

SQLiteFactory = function SQLiteFactory() {};

SQLiteFactory.prototype.DEBUG = function (debug) {
  console.log("Setting debug to:", debug);
  plugin.sqlitePlugin.DEBUG = debug;
};

SQLiteFactory.prototype.sqliteFeatures = function () {
  return {
    isSQLitePlugin: true
  };
};

SQLiteFactory.prototype.openDatabase = argsArray(function (args) {
  var errorcb, first, okcb, openargs, readOnly;
  if (args.length < 1) {
    return null;
  }
  first = args[0];
  openargs = null;
  okcb = errorcb = function errorcb() {};
  if (first.constructor === String) {
    openargs = {
      name: first,
      dblocation: dblocations['default']
    };
    if (args.length >= 5) {
      okcb = args[4];
      if (args.length > 5) {
        errorcb = args[5];
      }
    }
  } else {
    openargs = first;
    readOnly = !!openargs.readOnly;
    if (!readOnly && (!openargs.location || openargs.location.constructor !== String || !dblocations.hasOwnProperty(openargs.location))) {
      openargs.dblocation = dblocations['default'];
    } else {
      openargs.dblocation = dblocations[openargs.location];
    }

    if (!!openargs.createFromLocation) {
      if (openargs.createFromLocation === 1) {
        openargs.assetFilename = "1";
      } else if (typeof openargs.createFromLocation == 'string') {
        openargs.assetFilename = openargs.createFromLocation;
      }
    }

    if (!!openargs.androidDatabaseImplementation && openargs.androidDatabaseImplementation === 2) {
      openargs.androidOldDatabaseImplementation = 1;
    }

    if (!!openargs.androidLockWorkaround && openargs.androidLockWorkaround === 1) {
      openargs.androidBugWorkaround = 1;
    }

    if (args.length >= 2) {
      okcb = args[1];
      if (args.length > 2) {
        errorcb = args[2];
      }
    }
  }

  return new SQLitePlugin(openargs, okcb, errorcb);
});

SQLiteFactory.prototype.echoTest = function (success, error) {
  var inputTestValue = 'test-string';
  var mysuccess = function mysuccess(testValue) {
    if (testValue === inputTestValue) {
      return success();
    } else {
      return error("Mismatch: got: " + testValue + " , expected: " + inputTestValue);
    }
  };
  var myerror = function myerror(e) {
    return error(e);
  };

  plugin.exec("echoStringValue", { value: inputTestValue }, mysuccess, myerror);
};

SQLiteFactory.prototype.deleteDatabase = function (first, success, error) {
  var args = {};
  if (first.constructor === String) {
    args.path = first;
    args.dblocation = dblocations['default'];
  } else {
    if (!(first && first['name'])) {
      throw new Error("Please specify db name via name property");
    }
    args.path = first.name;
    if (!first.location || first.location.constructor !== String || !dblocations.hasOwnProperty(first.location)) {
      args.dblocation = dblocations['default'];
    } else {
      args.dblocation = dblocations[first.location];
    }
  }

  var mysuccess = function mysuccess(r) {
    delete SQLitePlugin.prototype.openDBs[args.path];
    if (!!success) {
      return success(r);
    }
  };
  var myerror = function myerror(e) {
    if (!!error) {
      return error(e);
    } else {
      console.log("deleteDatabase error handler not provided: ", e);
    }
  };

  plugin.exec("delete", args, mysuccess, myerror);
};

plugin.sqlitePlugin = {
  SQLiteFactory: SQLiteFactory,
  SQLitePluginTransaction: SQLitePluginTransaction,
  SQLitePlugin: SQLitePlugin
};

module.exports = plugin.sqlitePlugin;
}, 336, null, "react-native-sqlite-storage/lib/sqlite.core.js");
__d(/* myproject/utils/MD5Utils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _md = require(338            ); // 338 = crypto-js/md5

var _md2 = babelHelpers.interopRequireDefault(_md);

var MD5Utils = function MD5Utils() {
  babelHelpers.classCallCheck(this, MD5Utils);
};

MD5Utils.encryptMD5 = function (encryptMsg) {
  return (0, _md2.default)(encryptMsg);
};

exports.default = MD5Utils;
}, 337, null, "myproject/utils/MD5Utils.js");
__d(/* crypto-js/md5.js */function(global, require, module, exports) {;(function (root, factory) {
	if (typeof exports === "object") {
		module.exports = exports = factory(require(339     )); // 339 = ./core
	} else if (typeof define === "function" && define.amd) {
		define(["./core"], factory);
	} else {
		factory(root.CryptoJS);
	}
})(this, function (CryptoJS) {

	(function (Math) {
		var C = CryptoJS;
		var C_lib = C.lib;
		var WordArray = C_lib.WordArray;
		var Hasher = C_lib.Hasher;
		var C_algo = C.algo;

		var T = [];

		(function () {
			for (var i = 0; i < 64; i++) {
				T[i] = Math.abs(Math.sin(i + 1)) * 0x100000000 | 0;
			}
		})();

		var MD5 = C_algo.MD5 = Hasher.extend({
			_doReset: function _doReset() {
				this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);
			},

			_doProcessBlock: function _doProcessBlock(M, offset) {
				for (var i = 0; i < 16; i++) {
					var offset_i = offset + i;
					var M_offset_i = M[offset_i];

					M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;
				}

				var H = this._hash.words;

				var M_offset_0 = M[offset + 0];
				var M_offset_1 = M[offset + 1];
				var M_offset_2 = M[offset + 2];
				var M_offset_3 = M[offset + 3];
				var M_offset_4 = M[offset + 4];
				var M_offset_5 = M[offset + 5];
				var M_offset_6 = M[offset + 6];
				var M_offset_7 = M[offset + 7];
				var M_offset_8 = M[offset + 8];
				var M_offset_9 = M[offset + 9];
				var M_offset_10 = M[offset + 10];
				var M_offset_11 = M[offset + 11];
				var M_offset_12 = M[offset + 12];
				var M_offset_13 = M[offset + 13];
				var M_offset_14 = M[offset + 14];
				var M_offset_15 = M[offset + 15];

				var a = H[0];
				var b = H[1];
				var c = H[2];
				var d = H[3];

				a = FF(a, b, c, d, M_offset_0, 7, T[0]);
				d = FF(d, a, b, c, M_offset_1, 12, T[1]);
				c = FF(c, d, a, b, M_offset_2, 17, T[2]);
				b = FF(b, c, d, a, M_offset_3, 22, T[3]);
				a = FF(a, b, c, d, M_offset_4, 7, T[4]);
				d = FF(d, a, b, c, M_offset_5, 12, T[5]);
				c = FF(c, d, a, b, M_offset_6, 17, T[6]);
				b = FF(b, c, d, a, M_offset_7, 22, T[7]);
				a = FF(a, b, c, d, M_offset_8, 7, T[8]);
				d = FF(d, a, b, c, M_offset_9, 12, T[9]);
				c = FF(c, d, a, b, M_offset_10, 17, T[10]);
				b = FF(b, c, d, a, M_offset_11, 22, T[11]);
				a = FF(a, b, c, d, M_offset_12, 7, T[12]);
				d = FF(d, a, b, c, M_offset_13, 12, T[13]);
				c = FF(c, d, a, b, M_offset_14, 17, T[14]);
				b = FF(b, c, d, a, M_offset_15, 22, T[15]);

				a = GG(a, b, c, d, M_offset_1, 5, T[16]);
				d = GG(d, a, b, c, M_offset_6, 9, T[17]);
				c = GG(c, d, a, b, M_offset_11, 14, T[18]);
				b = GG(b, c, d, a, M_offset_0, 20, T[19]);
				a = GG(a, b, c, d, M_offset_5, 5, T[20]);
				d = GG(d, a, b, c, M_offset_10, 9, T[21]);
				c = GG(c, d, a, b, M_offset_15, 14, T[22]);
				b = GG(b, c, d, a, M_offset_4, 20, T[23]);
				a = GG(a, b, c, d, M_offset_9, 5, T[24]);
				d = GG(d, a, b, c, M_offset_14, 9, T[25]);
				c = GG(c, d, a, b, M_offset_3, 14, T[26]);
				b = GG(b, c, d, a, M_offset_8, 20, T[27]);
				a = GG(a, b, c, d, M_offset_13, 5, T[28]);
				d = GG(d, a, b, c, M_offset_2, 9, T[29]);
				c = GG(c, d, a, b, M_offset_7, 14, T[30]);
				b = GG(b, c, d, a, M_offset_12, 20, T[31]);

				a = HH(a, b, c, d, M_offset_5, 4, T[32]);
				d = HH(d, a, b, c, M_offset_8, 11, T[33]);
				c = HH(c, d, a, b, M_offset_11, 16, T[34]);
				b = HH(b, c, d, a, M_offset_14, 23, T[35]);
				a = HH(a, b, c, d, M_offset_1, 4, T[36]);
				d = HH(d, a, b, c, M_offset_4, 11, T[37]);
				c = HH(c, d, a, b, M_offset_7, 16, T[38]);
				b = HH(b, c, d, a, M_offset_10, 23, T[39]);
				a = HH(a, b, c, d, M_offset_13, 4, T[40]);
				d = HH(d, a, b, c, M_offset_0, 11, T[41]);
				c = HH(c, d, a, b, M_offset_3, 16, T[42]);
				b = HH(b, c, d, a, M_offset_6, 23, T[43]);
				a = HH(a, b, c, d, M_offset_9, 4, T[44]);
				d = HH(d, a, b, c, M_offset_12, 11, T[45]);
				c = HH(c, d, a, b, M_offset_15, 16, T[46]);
				b = HH(b, c, d, a, M_offset_2, 23, T[47]);

				a = II(a, b, c, d, M_offset_0, 6, T[48]);
				d = II(d, a, b, c, M_offset_7, 10, T[49]);
				c = II(c, d, a, b, M_offset_14, 15, T[50]);
				b = II(b, c, d, a, M_offset_5, 21, T[51]);
				a = II(a, b, c, d, M_offset_12, 6, T[52]);
				d = II(d, a, b, c, M_offset_3, 10, T[53]);
				c = II(c, d, a, b, M_offset_10, 15, T[54]);
				b = II(b, c, d, a, M_offset_1, 21, T[55]);
				a = II(a, b, c, d, M_offset_8, 6, T[56]);
				d = II(d, a, b, c, M_offset_15, 10, T[57]);
				c = II(c, d, a, b, M_offset_6, 15, T[58]);
				b = II(b, c, d, a, M_offset_13, 21, T[59]);
				a = II(a, b, c, d, M_offset_4, 6, T[60]);
				d = II(d, a, b, c, M_offset_11, 10, T[61]);
				c = II(c, d, a, b, M_offset_2, 15, T[62]);
				b = II(b, c, d, a, M_offset_9, 21, T[63]);

				H[0] = H[0] + a | 0;
				H[1] = H[1] + b | 0;
				H[2] = H[2] + c | 0;
				H[3] = H[3] + d | 0;
			},

			_doFinalize: function _doFinalize() {
				var data = this._data;
				var dataWords = data.words;

				var nBitsTotal = this._nDataBytes * 8;
				var nBitsLeft = data.sigBytes * 8;

				dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;

				var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
				var nBitsTotalL = nBitsTotal;
				dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff | (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;
				dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff | (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;

				data.sigBytes = (dataWords.length + 1) * 4;

				this._process();

				var hash = this._hash;
				var H = hash.words;

				for (var i = 0; i < 4; i++) {
					var H_i = H[i];

					H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;
				}

				return hash;
			},

			clone: function clone() {
				var clone = Hasher.clone.call(this);
				clone._hash = this._hash.clone();

				return clone;
			}
		});

		function FF(a, b, c, d, x, s, t) {
			var n = a + (b & c | ~b & d) + x + t;
			return (n << s | n >>> 32 - s) + b;
		}

		function GG(a, b, c, d, x, s, t) {
			var n = a + (b & d | c & ~d) + x + t;
			return (n << s | n >>> 32 - s) + b;
		}

		function HH(a, b, c, d, x, s, t) {
			var n = a + (b ^ c ^ d) + x + t;
			return (n << s | n >>> 32 - s) + b;
		}

		function II(a, b, c, d, x, s, t) {
			var n = a + (c ^ (b | ~d)) + x + t;
			return (n << s | n >>> 32 - s) + b;
		}

		C.MD5 = Hasher._createHelper(MD5);

		C.HmacMD5 = Hasher._createHmacHelper(MD5);
	})(Math);

	return CryptoJS.MD5;
});
}, 338, null, "crypto-js/md5.js");
__d(/* crypto-js/core.js */function(global, require, module, exports) {;(function (root, factory) {
	if (typeof exports === "object") {
		module.exports = exports = factory();
	} else if (typeof define === "function" && define.amd) {
		define([], factory);
	} else {
		root.CryptoJS = factory();
	}
})(this, function () {
	var CryptoJS = CryptoJS || function (Math, undefined) {
		var create = Object.create || function () {
			function F() {};

			return function (obj) {
				var subtype;

				F.prototype = obj;

				subtype = new F();

				F.prototype = null;

				return subtype;
			};
		}();

		var C = {};

		var C_lib = C.lib = {};

		var Base = C_lib.Base = function () {

			return {
				extend: function extend(overrides) {
					var subtype = create(this);

					if (overrides) {
						subtype.mixIn(overrides);
					}

					if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
						subtype.init = function () {
							subtype.$super.init.apply(this, arguments);
						};
					}

					subtype.init.prototype = subtype;

					subtype.$super = this;

					return subtype;
				},

				create: function create() {
					var instance = this.extend();
					instance.init.apply(instance, arguments);

					return instance;
				},

				init: function init() {},

				mixIn: function mixIn(properties) {
					for (var propertyName in properties) {
						if (properties.hasOwnProperty(propertyName)) {
							this[propertyName] = properties[propertyName];
						}
					}

					if (properties.hasOwnProperty('toString')) {
						this.toString = properties.toString;
					}
				},

				clone: function clone() {
					return this.init.prototype.extend(this);
				}
			};
		}();

		var WordArray = C_lib.WordArray = Base.extend({
			init: function init(words, sigBytes) {
				words = this.words = words || [];

				if (sigBytes != undefined) {
					this.sigBytes = sigBytes;
				} else {
					this.sigBytes = words.length * 4;
				}
			},

			toString: function toString(encoder) {
				return (encoder || Hex).stringify(this);
			},

			concat: function concat(wordArray) {
				var thisWords = this.words;
				var thatWords = wordArray.words;
				var thisSigBytes = this.sigBytes;
				var thatSigBytes = wordArray.sigBytes;

				this.clamp();

				if (thisSigBytes % 4) {
					for (var i = 0; i < thatSigBytes; i++) {
						var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
						thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
					}
				} else {
					for (var i = 0; i < thatSigBytes; i += 4) {
						thisWords[thisSigBytes + i >>> 2] = thatWords[i >>> 2];
					}
				}
				this.sigBytes += thatSigBytes;

				return this;
			},

			clamp: function clamp() {
				var words = this.words;
				var sigBytes = this.sigBytes;

				words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;
				words.length = Math.ceil(sigBytes / 4);
			},

			clone: function clone() {
				var clone = Base.clone.call(this);
				clone.words = this.words.slice(0);

				return clone;
			},

			random: function random(nBytes) {
				var words = [];

				var r = function r(m_w) {
					var m_w = m_w;
					var m_z = 0x3ade68b1;
					var mask = 0xffffffff;

					return function () {
						m_z = 0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10) & mask;
						m_w = 0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10) & mask;
						var result = (m_z << 0x10) + m_w & mask;
						result /= 0x100000000;
						result += 0.5;
						return result * (Math.random() > .5 ? 1 : -1);
					};
				};

				for (var i = 0, rcache; i < nBytes; i += 4) {
					var _r = r((rcache || Math.random()) * 0x100000000);

					rcache = _r() * 0x3ade67b7;
					words.push(_r() * 0x100000000 | 0);
				}

				return new WordArray.init(words, nBytes);
			}
		});

		var C_enc = C.enc = {};

		var Hex = C_enc.Hex = {
			stringify: function stringify(wordArray) {
				var words = wordArray.words;
				var sigBytes = wordArray.sigBytes;

				var hexChars = [];
				for (var i = 0; i < sigBytes; i++) {
					var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
					hexChars.push((bite >>> 4).toString(16));
					hexChars.push((bite & 0x0f).toString(16));
				}

				return hexChars.join('');
			},

			parse: function parse(hexStr) {
				var hexStrLength = hexStr.length;

				var words = [];
				for (var i = 0; i < hexStrLength; i += 2) {
					words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
				}

				return new WordArray.init(words, hexStrLength / 2);
			}
		};

		var Latin1 = C_enc.Latin1 = {
			stringify: function stringify(wordArray) {
				var words = wordArray.words;
				var sigBytes = wordArray.sigBytes;

				var latin1Chars = [];
				for (var i = 0; i < sigBytes; i++) {
					var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
					latin1Chars.push(String.fromCharCode(bite));
				}

				return latin1Chars.join('');
			},

			parse: function parse(latin1Str) {
				var latin1StrLength = latin1Str.length;

				var words = [];
				for (var i = 0; i < latin1StrLength; i++) {
					words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;
				}

				return new WordArray.init(words, latin1StrLength);
			}
		};

		var Utf8 = C_enc.Utf8 = {
			stringify: function stringify(wordArray) {
				try {
					return decodeURIComponent(escape(Latin1.stringify(wordArray)));
				} catch (e) {
					throw new Error('Malformed UTF-8 data');
				}
			},

			parse: function parse(utf8Str) {
				return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
			}
		};

		var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
			reset: function reset() {
				this._data = new WordArray.init();
				this._nDataBytes = 0;
			},

			_append: function _append(data) {
				if (typeof data == 'string') {
					data = Utf8.parse(data);
				}

				this._data.concat(data);
				this._nDataBytes += data.sigBytes;
			},

			_process: function _process(doFlush) {
				var data = this._data;
				var dataWords = data.words;
				var dataSigBytes = data.sigBytes;
				var blockSize = this.blockSize;
				var blockSizeBytes = blockSize * 4;

				var nBlocksReady = dataSigBytes / blockSizeBytes;
				if (doFlush) {
					nBlocksReady = Math.ceil(nBlocksReady);
				} else {
					nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
				}

				var nWordsReady = nBlocksReady * blockSize;

				var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

				if (nWordsReady) {
					for (var offset = 0; offset < nWordsReady; offset += blockSize) {
						this._doProcessBlock(dataWords, offset);
					}

					var processedWords = dataWords.splice(0, nWordsReady);
					data.sigBytes -= nBytesReady;
				}

				return new WordArray.init(processedWords, nBytesReady);
			},

			clone: function clone() {
				var clone = Base.clone.call(this);
				clone._data = this._data.clone();

				return clone;
			},

			_minBufferSize: 0
		});

		var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
			cfg: Base.extend(),

			init: function init(cfg) {
				this.cfg = this.cfg.extend(cfg);

				this.reset();
			},

			reset: function reset() {
				BufferedBlockAlgorithm.reset.call(this);

				this._doReset();
			},

			update: function update(messageUpdate) {
				this._append(messageUpdate);

				this._process();

				return this;
			},

			finalize: function finalize(messageUpdate) {
				if (messageUpdate) {
					this._append(messageUpdate);
				}

				var hash = this._doFinalize();

				return hash;
			},

			blockSize: 512 / 32,

			_createHelper: function _createHelper(hasher) {
				return function (message, cfg) {
					return new hasher.init(cfg).finalize(message);
				};
			},

			_createHmacHelper: function _createHmacHelper(hasher) {
				return function (message, key) {
					return new C_algo.HMAC.init(hasher, key).finalize(message);
				};
			}
		});

		var C_algo = C.algo = {};

		return C;
	}(Math);

	return CryptoJS;
});
}, 339, null, "crypto-js/core.js");
__d(/* myproject/utils/DataUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(26            ); // 26 = react-native

var regeneratorRuntime = require(67                   ); // 67 = regenerator-runtime

var DataUtils = function () {
  function DataUtils() {
    babelHelpers.classCallCheck(this, DataUtils);
  }

  babelHelpers.createClass(DataUtils, null, [{
    key: 'save',
    value: function save(key, value) {
      return regeneratorRuntime.async(function save$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              try {
                _reactNative.AsyncStorage.setItem(key, value);
                console.log('_save success: ', value);
              } catch (error) {
                console.log('_save error: ', error.message);
              }

            case 1:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'get',
    value: function get(key, defaultValue) {
      return regeneratorRuntime.async(function get$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt('return', new Promise(function (resolve, reject) {
                try {
                  _reactNative.AsyncStorage.getItem(key, function (error, result) {
                    if (result == null) {
                      resolve(defaultValue);
                    } else {
                      resolve(result);
                    }
                  });
                } catch (error) {
                  reject(defaultValue);
                }
              }));

            case 1:
            case 'end':
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'remove',
    value: function remove(key) {
      return regeneratorRuntime.async(function remove$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              console.log('Demo._remove()');
              _context3.prev = 1;
              _context3.next = 4;
              return regeneratorRuntime.awrap(_reactNative.AsyncStorage.removeItem(key));

            case 4:
              console.log('_remove() success');
              _context3.next = 10;
              break;

            case 7:
              _context3.prev = 7;
              _context3.t0 = _context3['catch'](1);

              console.log('_remove() error: ', _context3.t0.message);

            case 10:
            case 'end':
              return _context3.stop();
          }
        }
      }, null, this, [[1, 7]]);
    }
  }]);
  return DataUtils;
}();

exports.default = DataUtils;
}, 340, null, "myproject/utils/DataUtils.js");
__d(/* myproject/utils/DownLoadBasicData.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _FetchUtils = require(324           ); // 324 = ./FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _Storage = require(325        ); // 325 = ./Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var regeneratorRuntime = require(67                   ); // 67 = regenerator-runtime

var DownLoadBasicData = function () {
  function DownLoadBasicData() {
    babelHelpers.classCallCheck(this, DownLoadBasicData);
  }

  babelHelpers.createClass(DownLoadBasicData, null, [{
    key: 'downLoadKgtOpt',
    value: function downLoadKgtOpt(url, shopCode, dbAdapter) {
      var requestBody;
      return regeneratorRuntime.async(function downLoadKgtOpt$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              requestBody = JSON.stringify({
                'TblName': 'tshopitem',
                'ShopCode': shopCode,
                'PosCode': '0001',
                'NeedPage': '0',
                'PageSize': 2000,
                'CurrPageIndex': 1,
                'OrderFld': 'pid',
                'NeedYWDate': '0',
                'LastYWDate': ''
              });
              _context.next = 3;
              return regeneratorRuntime.awrap(_FetchUtils2.default.post(url, requestBody).then(function (response) {
                if (response.retcode == 1) {
                  var tblRow2 = response.TblRow2;
                  dbAdapter.insertKgopt(tblRow2);
                }
              }));

            case 3:
              DownLoadBasicData.downLoadTshopitem(url, shopCode, dbAdapter);

              _Storage2.default.get('PosCode').then(function (PosCode) {
                DownLoadBasicData.downLoadPosOpt(url, shopCode, dbAdapter, PosCode);
              });

            case 5:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'downLoadPosOpt',
    value: function downLoadPosOpt(url, shopCode, dbAdapter, posCode) {
      return new Promise(function (resolve, reject) {
        try {
          var requestBody = JSON.stringify({
            'TblName': 'positem',
            'shopcode': shopCode,
            'poscode': posCode
          });
          console.log("bodu=", requestBody);
          new Promise.all([_FetchUtils2.default.post(url, requestBody), DownLoadBasicData.downLaodkgtuser(url, shopCode, dbAdapter, posCode), DownLoadBasicData.downLoadTdschead(url, shopCode, dbAdapter, posCode)]).then(function (values) {
            if (values.length == 3) {
              if (values[0] != "" && values[0].retcode == 1) {
                var tblRow3 = values[0].TblRow3;
                console.log("posopt", tblRow3);
                dbAdapter.insertPosOpt(tblRow3);
              }
              if (values[2]) {
                resolve(true);
              } else {
                resolve(false);
              }
            } else {
              reject(false);
            }
          });
        } catch (err) {
          reject(false);
        }
      });
    }
  }, {
    key: 'downLoadTshopitem',
    value: function downLoadTshopitem(url, shopCode, dbAdapter) {
      var requestBody;
      return regeneratorRuntime.async(function downLoadTshopitem$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              requestBody = JSON.stringify({
                'TblName': 'tshopitem',
                'ShopCode': shopCode,
                'PosCode': '0'
              });
              _context2.next = 3;
              return regeneratorRuntime.awrap(_FetchUtils2.default.post(url, requestBody).then(function (response) {
                if (response != "" && response.retcode == 1) {
                  var tblRow1 = response.TblRow1;
                  console.log("tblRow1=", tblRow1);
                  dbAdapter.insertPayInfo(tblRow1);
                }
              }));

            case 3:
            case 'end':
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }]);
  return DownLoadBasicData;
}();

DownLoadBasicData.downLaodkgtuser = function (url, shopCode, dbAdapter, posCode) {
  return new Promise(function (resolve, reject) {
    var requestBody = JSON.stringify({
      'TblName': 'kgtuser',
      'shopcode': shopCode,
      'poscode': posCode
    });
    _FetchUtils2.default.post(url, requestBody).then(function (response) {
      if (response != "" && response.retcode == 1) {
        var tblRow = response.TblRow;
        dbAdapter.insertKgtuser(tblRow);
        resolve(true);
      }
    });
  });
};

DownLoadBasicData.downLoadTdschead = function (url, shopCode, dbAdapter, posCode) {
  return new Promise(function (resolve, reject) {
    var requestBody = JSON.stringify({
      'TblName': 'tdschead',
      'shopcode': shopCode,
      'poscode': posCode
    });
    _FetchUtils2.default.post(url, requestBody).then(function (response) {
      if (response != "" && response.retcode == 1) {
        var tDscHead = response.TblRow;
        var tDscCondition = response.TblRow1;
        var tDscCust = response.TblRow2;
        var TDscDep = response.TblRow3;
        var tDscExcept = response.TblRow4;
        var tDscGroupPrice = response.TblRow5;
        var tDscBrand = response.TblRow6;
        var tDscPlan = response.TblRow7;
        var tDscPresent = response.TblRow8;
        var tDscProd = response.TblRow9;
        var tDscSupp = response.TblRow11;

        dbAdapter.insertTdschead(tDscHead);
        dbAdapter.insertTDscCondition(tDscCondition);

        dbAdapter.inserttDscGroupPrice(tDscGroupPrice);
        dbAdapter.insertTDscDep(TDscDep);
        dbAdapter.insertTDscExcept(tDscExcept);
        dbAdapter.insertTDscCust(tDscCust);
        dbAdapter.insertTDscBrand(tDscBrand);
        dbAdapter.insertTDscPlan(tDscPlan);
        dbAdapter.inserttDscPresent(tDscPresent);
        dbAdapter.insertTDscProd(tDscProd);
        dbAdapter.insertTDscSupp(tDscSupp);
        resolve(true);
      } else {
        reject(false);
      }
    });
  });
};

exports.default = DownLoadBasicData;
}, 341, null, "myproject/utils/DownLoadBasicData.js");
__d(/* myproject/utils/RequestBodyUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _MD5Utils = require(337         ); // 337 = ./MD5Utils

var _MD5Utils2 = babelHelpers.interopRequireDefault(_MD5Utils);

var _DateUtils = require(313          ); // 313 = ./DateUtils

var _DateUtils2 = babelHelpers.interopRequireDefault(_DateUtils);

var _Storage = require(325        ); // 325 = ./Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _FetchUtils = require(324           ); // 324 = ./FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var regeneratorRuntime = require(67                   ); // 67 = regenerator-runtime

var RequestBodyUtils = function () {
  function RequestBodyUtils() {
    babelHelpers.classCallCheck(this, RequestBodyUtils);
  }

  babelHelpers.createClass(RequestBodyUtils, [{
    key: 'businessSelect',
    value: function businessSelect(reqDetailCode, clientCode) {
      var date = _DateUtils2.default.getCurrentDate(new Date());
      var sign = _MD5Utils2.default.encryptMD5('App_PosReq' + "##" + reqDetailCode + "##" + date + "##" + 'PosControlCs');
      return JSON.stringify({
        'reqCode': 'App_PosReq', 'reqDetailCode': reqDetailCode,

        'ClientCode': clientCode,
        'sDateTime': date,
        'Sign': sign + ''
      });
    }
  }, {
    key: 'businessDetailSelect',
    value: function businessDetailSelect(reqDetailCode, clientCode, beginDate, endDate, shopcode, formno, prodcode, childshopcode) {
      var date = _DateUtils2.default.getCurrentDate(new Date());
      var sign = _MD5Utils2.default.encryptMD5('App_PosReq' + "##" + reqDetailCode + "##" + date + "##" + 'PosControlCs');
      return JSON.stringify({
        'reqCode': 'App_PosReq', 'reqDetailCode': reqDetailCode,
        'ClientCode': clientCode, 'sDateTime': date, 'Sign': 'sign',
        'username': '收银员1', 'usercode': '001', 'BeginDate': beginDate, 'EndDate': endDate, 'shopcode': shopcode, "childshopcode": childshopcode, 'formno': formno, 'prodcode': prodcode });
    }
  }], [{
    key: 'businessPut',
    value: function businessPut(reqDetailCode, DetailInfo1, DetailInfo2) {
      var date, sign, userName, userCode, clientCode, a;
      return regeneratorRuntime.async(function businessPut$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              date = _DateUtils2.default.getCurrentDate(new Date());
              sign = _MD5Utils2.default.encryptMD5('App_PosReq' + "##" + reqDetailCode + "##" + date + "##" + 'PosControlCs');
              _context.next = 4;
              return regeneratorRuntime.awrap(_Storage2.default.get("userName"));

            case 4:
              userName = _context.sent;
              _context.next = 7;
              return regeneratorRuntime.awrap(_Storage2.default.get("userCode"));

            case 7:
              userCode = _context.sent;
              _context.next = 10;
              return regeneratorRuntime.awrap(_Storage2.default.get("ClientCode"));

            case 10:
              clientCode = _context.sent;
              a = JSON.stringify({
                "reqCode": "App_PosReq",
                "reqDetailCode": reqDetailCode,
                "ClientCode": clientCode + "",
                "sDateTime": date,
                "Sign": sign + "",
                "username": userName + "",
                "usercode": userCode + "",
                "DetailInfo1": DetailInfo1,
                "DetailInfo2": DetailInfo2
              });
              return _context.abrupt('return', a);

            case 13:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'extracted',
    value: function extracted(shopCode, url, resolve, dbAdapter, reject) {
      _Storage2.default.get("CurrDate").then(function (currentData) {
        var requestBody = RequestBodyUtils.createProduct(shopCode, currentData, RequestBodyUtils.currPage);
        _FetchUtils2.default.post(url, requestBody).then(function (json) {
          if (!(json == "" || json == null || json == undefined || json == "[]")) {
            if (json.retcode == 99) {
              RequestBodyUtils.currPage = 1;
              RequestBodyUtils.count = 0;
              RequestBodyUtils.currDate = '';
              resolve(true);
            }
            var tablow = json.TblRow;
            if (RequestBodyUtils.currPage > 1) {
              tablow = json;
            } else if (RequestBodyUtils.currPage == 1) {
              RequestBodyUtils.count = json.tblRowCount;
              RequestBodyUtils.currDate = json.CurrDate;
            }
            var queryNum = 0;
            var num = RequestBodyUtils.count % 200;
            if (num != 0) {
              queryNum = RequestBodyUtils.count / 200;
              queryNum += 1;
            } else {
              queryNum = RequestBodyUtils.count / 200;
            }
            if (RequestBodyUtils.count > 0) {
              dbAdapter.insertProductData(tablow);
            }
            if (RequestBodyUtils.currPage < queryNum) {
              RequestBodyUtils.currPage++;

              RequestBodyUtils.extracted(shopCode, url, resolve, dbAdapter, reject);
            }
          } else {
            _Storage2.default.save("CurrDate", RequestBodyUtils.currDate);
            RequestBodyUtils.currPage = 1;
            RequestBodyUtils.count = 0;
            RequestBodyUtils.currDate = '';
            resolve(true);
          }
        }, function (json) {}).catch(function (error) {
          reject(false);
        });
      });
    }
  }]);
  return RequestBodyUtils;
}();

RequestBodyUtils.createShopCode = function (clientCode, pwd) {
  var date = _DateUtils2.default.getCurrentDate(new Date());
  var md5Pwd = _MD5Utils2.default.encryptMD5(pwd);
  var sign = _MD5Utils2.default.encryptMD5('App_PosReq' + '##' + 'App_Client_Qry' + '##' + date + '##' + 'PosControlCs');
  return JSON.stringify({
    'reqCode': 'App_PosReq',
    'reqDetailCode': 'App_Client_Qry',
    'ClientCode': clientCode,
    'sDateTime': date,
    'Pwd': md5Pwd + '',
    'Sign': sign + ''
  });
};

RequestBodyUtils.createDownload = function (clientCode) {
  var date = _DateUtils2.default.getCurrentDate(new Date());
  var sign = _MD5Utils2.default.encryptMD5('App_PosReq' + "##" + 'App_Client_UseQry' + "##" + date + "##" + "PosControlCs");
  return JSON.stringify({
    'reqCode': 'App_PosReq',
    'reqDetailCode': 'App_Client_UseQry',
    'ClientCode': clientCode,
    'sDateTime': date,
    'Sign': sign
  });
};

RequestBodyUtils.createYH = function (clientCode) {
  var date = _DateUtils2.default.getCurrentDate(new Date());
  var sign = _MD5Utils2.default.encryptMD5('App_PosReq' + "##" + "App_Client_ProYH" + "##" + date + "##" + 'PosControlCs');
  var DetailInfo1 = {
    "reqCode": "App_PosReq",
    "reqDetailCode": "App_Client_ProYH",
    "ClientCode": clientCode,
    "sDateTime": "",
    "Sign": "",
    "username": "001",
    "usercode": "001",
    "DetailInfo1": { "ShopCode": "0", "OrgFormno": "", "ProMemo": "表单备注" },
    "DetailInfo2": [{ "prodcode": "0101", "countm": 10, "ProPrice": 12, "promemo": "", "kccount": '10' }]
  };

  return DetailInfo1;
};

RequestBodyUtils.createPS = function (clientCode, orgFormno) {
  var date = _DateUtils2.default.getCurrentDate(new Date());
  var sign = _MD5Utils2.default.encryptMD5('App_PosReq' + "##" + "App_Client_ProPSSH" + "##" + date + "##" + 'PosControlCs');
  var DetailInfo1 = {
    "reqCode": "App_PosReq",
    "reqDetailCode": "App_Client_ProPSSH",
    "ClientCode": clientCode,
    "sDateTime": "",
    "Sign": "",
    "username": "001",
    "usercode": "001",
    "DetailInfo1": { "ShopCode": "0", "OrgFormno": "" + orgFormno + "", "ProMemo": "表单备注" },
    "DetailInfo2": [{ "prodcode": "0101", "countm": 10, "ProPrice": 12, "promemo": "", "kccount": '10' }]
  };

  return DetailInfo1;
};

RequestBodyUtils.createPD = function (clientCode, orgFormno) {
  var date = _DateUtils2.default.getCurrentDate(new Date());
  var sign = _MD5Utils2.default.encryptMD5('App_PosReq' + "##" + "App_Client_ProPC" + "##" + date + "##" + 'PosControlCs');
  var DetailInfo1 = {
    "reqCode": "App_PosReq",
    "reqDetailCode": "App_Client_ProPC",
    "ClientCode": clientCode,
    "sDateTime": "",
    "Sign": "",
    "username": "001",
    "usercode": "001",
    "DetailInfo1": { "ShopCode": "0", "OrgFormno": "" + orgFormno + "", "ProMemo": "表单备注" },
    "DetailInfo2": [{ "prodcode": "0101", "countm": 10, "ProPrice": 12, "promemo": "", "kccount": '10' }]
  };

  return DetailInfo1;
};

RequestBodyUtils.createSSPD = function (clientCode) {
  var date = _DateUtils2.default.getCurrentDate(new Date());
  var sign = _MD5Utils2.default.encryptMD5('App_PosReq' + "##" + "App_Client_ProCurrPC" + "##" + date + "##" + 'PosControlCs');
  var DetailInfo1 = {
    "reqCode": "App_PosReq",
    "reqDetailCode": "App_Client_ProCurrPC",
    "ClientCode": clientCode,
    "sDateTime": "",
    "Sign": "",
    "username": "001",
    "usercode": "001",
    "DetailInfo1": { "ShopCode": "0", "OrgFormno": "", "ProMemo": "表单备注" },
    "DetailInfo2": [{ "prodcode": "0101", "countm": 10, "ProPrice": 12, "promemo": "", "kccount": '10' }]
  };

  return DetailInfo1;
};

RequestBodyUtils.createSY = function (clientCode, userName, userCode) {
  var date = _DateUtils2.default.getCurrentDate(new Date());
  var sign = _MD5Utils2.default.encryptMD5('App_PosReq' + "##" + "App_Client_ProSY" + "##" + date + "##" + 'PosControlCs');
  var DetailInfo1 = {
    "reqCode": "App_PosReq",
    "reqDetailCode": "App_Client_ProSY",
    "ClientCode": clientCode,
    "sDateTime": date,
    "Sign": sign + "",
    "username": userName,
    "usercode": userCode,
    "DetailInfo1": { "ShopCode": "0", "OrgFormno": "", "ProMemo": "表单备注" },
    "DetailInfo2": [{ "prodcode": "0101", "countm": 10, "ProPrice": 12, "promemo": "", "kccount": '10' }]
  };

  return DetailInfo1;
};

RequestBodyUtils.createSuppset = function (shopCode) {
  return JSON.stringify({
    "TblName": "BasicInfo",
    "reqCode": "tsuppset",
    "ShopCode": shopCode,
    "PosCode": '',
    "UserCode": '',
    "Code": "",
    "NeedPage": "0",
    "PageCount": "200",
    "CurrPage": "1"
  });
};

RequestBodyUtils.createCategory = function (shopCode) {
  return JSON.stringify({
    'TblName': 'tdepset',
    'ShopCode': shopCode,
    'PosCode': '0001',
    'NeedPage': '1',
    'PageSize': 5000,
    'CurrPageIndex': 1,
    'OrderFld': 'pid',
    'NeedYWDate': '0',
    'LastYWDate': '2016-06-04'
  });
};

RequestBodyUtils.createProduct = function (shopCode, currDate, currentPage) {
  return JSON.stringify({
    'TblName': 'product',
    'shopcode': shopCode,
    'poscode': '0001',
    'NeedPage': '1',
    'PageSize': 200,
    'CurrPage': currentPage,
    'OrderFld': 'pid',
    'NeedYWDate': '0',
    'LastYWDate': currDate
  });
};

RequestBodyUtils.createNOYSCGQ = function (reqDetailCode) {
  var date = _DateUtils2.default.getCurrentDate(new Date());
  var sign = _MD5Utils2.default.encryptMD5('App_PosReq' + "##" + reqDetailCode + "##" + date + "##" + 'PosControlCs');
  return JSON.stringify({
    'reqCode': 'App_PosReq', 'reqDetailCode': reqDetailCode,
    'ClientCode': '810001', 'sDateTime': date, 'Sign': sign + '',
    'username': '收银员1', 'usercode': '001', 'shopcode': '0' });
};

RequestBodyUtils.count = 0;
RequestBodyUtils.currDate = '';
RequestBodyUtils.currPage = 1;
RequestBodyUtils.currDate = '2017-1-1 10:00:00';

RequestBodyUtils.requestProduct = function (url, shopCode, dbAdapter) {
  return new Promise(function (resolve, reject) {
    RequestBodyUtils.extracted(shopCode, url, resolve, dbAdapter, reject);
  });
};

RequestBodyUtils.memberSelect = function (cardFaceNo, poscode, shopcode) {
  return JSON.stringify({
    'TblName': 'ReadVipInfo', 'CardFaceNo': cardFaceNo,
    'poscode': poscode, 'shopcode': shopcode, 'IsChuZhi': ''

  });
};

exports.default = RequestBodyUtils;
}, 342, null, "myproject/utils/RequestBodyUtils.js");
__d(/* myproject/images/2_01.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":40,"height":40,"scales":[1],"hash":"0c9ec7152101bc103ec1d0163bf2f353","name":"2_01","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 343, null, "myproject/images/2_01.png");
__d(/* myproject/images/1_431.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":26,"height":26,"scales":[1],"hash":"eab2661a46ca626516940c478d9dfe63","name":"1_431","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 344, null, "myproject/images/1_431.png");
__d(/* myproject/images/1_43.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":26,"height":26,"scales":[1],"hash":"9733bd289b92e35ad6eec2b25f83531f","name":"1_43","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 345, null, "myproject/images/1_43.png");
__d(/* myproject/images/background.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":800,"height":768,"scales":[1],"hash":"0d13e0e2b3973c91401e070ad287913d","name":"background","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 346, null, "myproject/images/background.png");
__d(/* myproject/images/1_05.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":40,"height":40,"scales":[1],"hash":"225039eaca5a8ce7557b8c1c4a36df54","name":"1_05","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 347, null, "myproject/images/1_05.png");
__d(/* myproject/app/OrderDetails.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\OrderDetails.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _ShoppingCart = require(349             ); // 349 = ./ShoppingCart

var _ShoppingCart2 = babelHelpers.interopRequireDefault(_ShoppingCart);

var _Search = require(350       ); // 350 = ./Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _Sell = require(310           ); // 310 = ../Sell/Sell

var _Sell2 = babelHelpers.interopRequireDefault(_Sell);

var _NumberUtils = require(326                   ); // 326 = ../utils/NumberUtils

var _NumberUtils2 = babelHelpers.interopRequireDefault(_NumberUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _BigDecimalUtils = require(314                       ); // 314 = ../utils/BigDecimalUtils

var _BigDecimalUtils2 = babelHelpers.interopRequireDefault(_BigDecimalUtils);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var dbAdapter = new _DBAdapter2.default();

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var RNScannerAndroid = NativeModules.RNScannerAndroid;

var GoodsDetails = function (_Component) {
    babelHelpers.inherits(GoodsDetails, _Component);

    function GoodsDetails(props) {
        babelHelpers.classCallCheck(this, GoodsDetails);

        var _this = babelHelpers.possibleConstructorReturn(this, (GoodsDetails.__proto__ || Object.getPrototypeOf(GoodsDetails)).call(this, props));

        _this.state = {
            ProdCode: _this.props.ProdCode ? _this.props.ProdCode : "",
            ProdName: _this.props.ProdName ? _this.props.ProdName : "",
            Pid: _this.props.Pid ? _this.props.Pid : "",
            ShopPrice: _this.props.ShopPrice ? _this.props.ShopPrice : "",
            Remark: _this.props.Remark ? _this.props.Remark : "",
            Number: _this.props.countm ? _this.props.countm : "",
            DepCode: _this.props.DepCode ? _this.props.DepCode : "",
            ydcountm: _this.props.ydcountm ? _this.props.ydcountm : "",
            SuppCode: _this.props.SuppCode ? _this.props.SuppCode : "",
            BarCode: _this.props.BarCode ? _this.props.BarCode : "",
            ShoppData: _this.props.ShoppData ? _this.props.ShoppData : "",
            Price: "",
            totalPrice: "",
            name: "",
            YdCountm: "",
            shuliang: "",
            numberFormat2: "",
            Modify: "",
            OnPrice: "",
            Total: "",
            Price: "",
            DataName: "",
            OrderDetails: 1,
            BQNumber: _this.props.countm ? _this.props.countm : 1
        };
        return _this;
    }

    babelHelpers.createClass(GoodsDetails, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this.setState({
                focus: true
            });
            dbAdapter.selectShopInfoData(this.state.Pid).then(function (data) {
                if (data.length >= 0) {
                    _this2.setState({
                        Number: data.item(0).countm
                    });
                }
            });
            _Storage2.default.get('Name').then(function (tags) {
                _this2.setState({
                    name: tags
                });
            });

            _Storage2.default.get('DataName').then(function (tags) {
                _this2.setState({
                    DataName: tags
                });
            });

            _Storage2.default.get('YdCountm').then(function (tags) {
                _this2.setState({
                    YdCountm: tags
                });
            });

            _Storage2.default.get('Modify').then(function (tags) {
                _this2.setState({
                    Modify: tags
                });
            });

            _Storage2.default.get('YuanDan').then(function (tags) {
                if (tags == 1) {
                    if (_this2.state.ydcountm > 0) {
                        _this2.setState({
                            Number: _this2.state.ydcountm
                        });
                    }
                }
                var numberFormat1 = _NumberUtils2.default.numberFormat2(_this2.state.ShopPrice);
                var numberFormat2 = _NumberUtils2.default.numberFormat2(_this2.state.Number * _this2.state.ShopPrice);
                _this2.setState({
                    ShopPrice: numberFormat1,
                    numberFormat2: numberFormat2
                });
            });
        }
    }, {
        key: 'GoodsDetails',
        value: function GoodsDetails() {
            if (this.state.name == "移动销售") {
                var nextRoute = {
                    name: "移动销售",
                    component: _Sell2.default
                };
                this.props.navigator.push(nextRoute);
            } else if (this.state.ShoppData == "0") {
                var nextRoute = {
                    name: "清单",
                    component: _ShoppingCart2.default,
                    params: {
                        DepCode: this.state.DepCode
                    }
                };
                this.props.navigator.push(nextRoute);
            } else {
                var nextRoute = {
                    name: "主页",
                    component: _Index2.default,
                    params: {
                        DepCode: this.state.DepCode
                    }
                };
                this.props.navigator.push(nextRoute);
            }
        }
    }, {
        key: 'onSubmitEditing',
        value: function onSubmitEditing() {
            var ShopPrice = this.state.Number * this.state.ShopPrice;
            this.setState({
                numberFormat2: _NumberUtils2.default.numberFormat2(ShopPrice)
            });
        }
    }, {
        key: 'onNumber',
        value: function onNumber() {
            var ShopPrice = this.state.Number * this.state.ShopPrice;
            this.setState({
                numberFormat2: _NumberUtils2.default.numberFormat2(ShopPrice)
            });
            if (this.state.name == "商品采购" || this.state.name == "协配采购" || this.state.name == "移动销售" || this.state.Modify == 1) {
                this.setState({
                    OnPrice: 1,
                    PriceText: 1
                });
            } else {
                var x = this.state.Number;
                var y = String(x).indexOf(".") + 1;
                if (y > 0 && !this.state.DataName == "移动销售") {
                    alert("数量不能含有小数");
                } else if (this.state.name == "商品配送" && this.state.ydcountm == 0) {
                    alert("库存为0，该商品不能进行配送");
                } else {
                    if (this.state.name == "实时盘点" || this.state.name == "商品盘点") {
                        var shopInfoData = [];
                        var shopInfo = {};
                        shopInfo.Pid = this.state.Pid;
                        shopInfo.ProdCode = this.state.ProdCode;
                        shopInfo.prodname = this.state.ProdName;
                        shopInfo.countm = this.state.Number;
                        shopInfo.ShopPrice = this.state.ShopPrice;
                        if (this.state.YdCountm == 5) {
                            shopInfo.prototal = "0";
                        } else {
                            shopInfo.prototal = _NumberUtils2.default.numberFormat2(ShopPrice);
                        }
                        shopInfo.promemo = this.state.Remark;
                        shopInfo.DepCode = this.state.DepCode;
                        shopInfo.ydcountm = this.state.ydcountm;
                        shopInfo.SuppCode = this.state.SuppCode;
                        shopInfo.BarCode = this.state.BarCode;
                        shopInfoData.push(shopInfo);

                        dbAdapter.insertShopInfo(shopInfoData);
                        if (this.state.name == "移动销售") {
                            var nextRoute = {
                                name: "移动销售",
                                component: _Sell2.default
                            };
                            this.props.navigator.push(nextRoute);
                        } else if (this.state.ShoppData == "0") {
                            var nextRoute = {
                                name: "清单",
                                component: _ShoppingCart2.default,
                                params: {
                                    DepCode: this.state.DepCode
                                }
                            };
                            this.props.navigator.push(nextRoute);
                        } else {
                            var nextRoute = {
                                name: "主页",
                                component: _Index2.default,
                                params: {
                                    DepCode: this.state.DepCode
                                }
                            };
                            this.props.navigator.push(nextRoute);
                        }
                    } else {
                        if (this.state.Number == 0) {
                            _reactNative.ToastAndroid.show('商品数量不能为空', _reactNative.ToastAndroid.SHORT);
                        } else {
                            var shopInfoData = [];
                            var shopInfo = {};
                            shopInfo.Pid = this.state.Pid;
                            shopInfo.ProdCode = this.state.ProdCode;
                            shopInfo.prodname = this.state.ProdName;
                            shopInfo.countm = this.state.Number;
                            shopInfo.ShopPrice = this.state.ShopPrice;
                            if (this.state.YdCountm == 5) {
                                shopInfo.prototal = "0";
                            } else {
                                shopInfo.prototal = _NumberUtils2.default.numberFormat2(ShopPrice);
                            }
                            shopInfo.promemo = this.state.Remark;
                            shopInfo.DepCode = this.state.DepCode;
                            shopInfo.ydcountm = this.state.ydcountm;
                            shopInfo.SuppCode = this.state.SuppCode;
                            shopInfo.BarCode = this.state.BarCode;
                            shopInfoData.push(shopInfo);

                            dbAdapter.insertShopInfo(shopInfoData);
                            if (this.state.name == "移动销售") {
                                var nextRoute = {
                                    name: "移动销售",
                                    component: _Sell2.default
                                };
                                this.props.navigator.push(nextRoute);
                            } else if (this.state.ShoppData == "0") {
                                var nextRoute = {
                                    name: "清单",
                                    component: _ShoppingCart2.default,
                                    params: {
                                        DepCode: this.state.DepCode
                                    }
                                };
                                this.props.navigator.push(nextRoute);
                            } else {
                                var nextRoute = {
                                    name: "主页",
                                    component: _Index2.default,
                                    params: {
                                        DepCode: this.state.DepCode
                                    }
                                };
                                this.props.navigator.push(nextRoute);
                            }
                        }
                    }
                }
            }
        }
    }, {
        key: 'NumberButton',
        value: function NumberButton() {
            this.setState({
                PriceText: "",
                Total: "",
                OnPrice: ""
            });
        }
    }, {
        key: 'PriceButton',
        value: function PriceButton() {
            this.setState({
                OnPrice: 1,
                Total: ""
            });
        }
    }, {
        key: 'NumberFormat',
        value: function NumberFormat() {
            this.setState({
                OnPrice: 1,
                Total: 1
            });
        }
    }, {
        key: 'add',
        value: function add() {
            if (this.state.Number == "" && this.state.name !== "标签采集") {
                this.setState({
                    Number: 1,
                    numberFormat2: this.state.ShopPrice
                });
            } else if (this.state.name == "标签采集" && this.state.BQNumber == 1) {
                this.setState({
                    BQNumber: parseInt(this.state.BQNumber) + 1
                });
            } else {
                var numberFormat2 = _BigDecimalUtils2.default.multiply(_BigDecimalUtils2.default.add(this.state.Number, 1, 2), this.state.ShopPrice, 2);
                this.setState({
                    Number: _BigDecimalUtils2.default.add(this.state.Number, 1, 2),
                    BQNumber: _BigDecimalUtils2.default.add(this.state.BQNumber, 1, 2),
                    numberFormat2: numberFormat2
                });
            }
        }
    }, {
        key: 'subtraction',
        value: function subtraction() {
            var Number1 = this.state.Number;
            var BQNumber1 = this.state.BQNumber;
            this.setState({
                Number: parseInt(Number1) - 1,
                BQNumber: parseInt(BQNumber1) - 1
            });

            var numberFormat2 = _BigDecimalUtils2.default.multiply(_BigDecimalUtils2.default.subtract(Number1, 1, 2), this.state.ShopPrice, 2);
            this.setState({
                numberFormat2: numberFormat2
            });
            if (this.state.Number == 1 && this.state.name !== "标签采集") {
                _reactNative.ToastAndroid.show('商品数量不能为0', _reactNative.ToastAndroid.SHORT);
                this.setState({
                    Number: 1,
                    numberFormat2: this.state.ShopPrice
                });
                return;
            } else if (this.state.BQNumber == 1 && this.state.name == "标签采集") {
                _reactNative.ToastAndroid.show('商品数量不能为0', _reactNative.ToastAndroid.SHORT);
                this.setState({
                    BQNumber: 1,
                    numberFormat2: this.state.ShopPrice
                });
            }
        }
    }, {
        key: 'clear',
        value: function clear() {
            var numberFormat2 = _NumberUtils2.default.numberFormat2(0 * this.state.ShopPrice);
            this.setState({
                Number: 0,
                BQNumber: 1,
                numberFormat2: numberFormat2
            });
        }
    }, {
        key: 'onEndEditing',
        value: function onEndEditing() {
            if (this.state.Number == "") {
                this.setState({
                    numberFormat2: "0.00"
                });
            } else {
                var numberFormat2 = _NumberUtils2.default.numberFormat2(parseInt(this.state.Number) * this.state.ShopPrice);
                this.setState({
                    numberFormat2: numberFormat2,
                    Total: 1,
                    OnPrice: ""
                });
            }
        }
    }, {
        key: 'TotalButton',
        value: function TotalButton() {
            if (this.state.Number == "") {
                alert("请先添加商品数量");
                this.setState({
                    numberFormat2: "0.00"
                });
            } else {
                var Modify = _NumberUtils2.default.numberFormat2(this.state.numberFormat2 / this.state.Number);
                this.setState({
                    ShopPrice: Modify
                });
                if (this.state.OrderDetails == 1) {
                    var x = this.state.Number;
                    var y = String(x).indexOf(".") + 1;
                    if (y > 0 && !this.state.DataName == "移动销售") {
                        alert("数量不能含有小数");
                    } else {
                        if (this.state.name == "实时盘点" || this.state.name == "商品盘点") {
                            var shopInfoData = [];
                            var shopInfo = {};
                            shopInfo.Pid = this.state.Pid;
                            shopInfo.ProdCode = this.state.ProdCode;
                            shopInfo.prodname = this.state.ProdName;
                            shopInfo.countm = this.state.Number;
                            shopInfo.ShopPrice = Modify;
                            if (this.state.YdCountm == 5) {
                                shopInfo.prototal = "0";
                            } else {
                                shopInfo.prototal = this.state.numberFormat2;
                            }
                            shopInfo.promemo = this.state.Remark;
                            shopInfo.DepCode = this.state.DepCode;
                            shopInfo.ydcountm = this.state.ydcountm;
                            shopInfo.SuppCode = this.state.SuppCode;
                            shopInfo.BarCode = this.state.BarCode;
                            shopInfoData.push(shopInfo);

                            dbAdapter.insertShopInfo(shopInfoData);
                            if (this.state.ShoppData == "0") {
                                var nextRoute = {
                                    name: "清单",
                                    component: _ShoppingCart2.default,
                                    params: {
                                        DepCode: this.state.DepCode
                                    }
                                };
                                this.props.navigator.push(nextRoute);
                            } else {

                                var nextRoute = {
                                    name: "主页",
                                    component: _Index2.default,
                                    params: {
                                        DepCode: this.state.DepCode
                                    }
                                };
                                this.props.navigator.push(nextRoute);
                            }
                        } else {
                            if (this.state.Number == 0) {
                                _reactNative.ToastAndroid.show('商品数量不能为空', _reactNative.ToastAndroid.SHORT);
                            } else {
                                var shopInfoData = [];
                                var shopInfo = {};
                                shopInfo.Pid = this.state.Pid;
                                shopInfo.ProdCode = this.state.ProdCode;
                                shopInfo.prodname = this.state.ProdName;
                                if (this.state.name == "标签采集") {
                                    shopInfo.countm = this.state.BQNumber;
                                } else {
                                    shopInfo.countm = this.state.Number;
                                }
                                shopInfo.ShopPrice = Modify;
                                if (this.state.YdCountm == 5) {
                                    shopInfo.prototal = "0";
                                } else {
                                    shopInfo.prototal = this.state.numberFormat2;
                                }
                                shopInfo.promemo = this.state.Remark;
                                shopInfo.DepCode = this.state.DepCode;
                                shopInfo.ydcountm = this.state.ydcountm;
                                shopInfo.SuppCode = this.state.SuppCode;
                                shopInfo.BarCode = this.state.BarCode;
                                shopInfoData.push(shopInfo);

                                dbAdapter.insertShopInfo(shopInfoData);
                                if (this.state.DataName == "移动销售") {
                                    var nextRoute = {
                                        name: "移动销售",
                                        component: _Sell2.default
                                    };
                                    this.props.navigator.push(nextRoute);
                                } else if (this.state.ShoppData == "0") {
                                    var nextRoute = {
                                        name: "清单",
                                        component: _ShoppingCart2.default,
                                        params: {
                                            DepCode: this.state.DepCode
                                        }
                                    };
                                    this.props.navigator.push(nextRoute);
                                } else {
                                    var nextRoute = {
                                        name: "主页",
                                        component: _Index2.default,
                                        params: {
                                            DepCode: this.state.DepCode
                                        }
                                    };
                                    this.props.navigator.push(nextRoute);
                                }
                            }
                        }
                    }
                }
            }
        }
    }, {
        key: 'numberFormat2',
        value: function numberFormat2() {
            if (this.state.Number == "") {
                alert("请先添加商品数量");
                this.setState({
                    numberFormat2: "0.00"
                });
            } else {
                var Modify = _NumberUtils2.default.numberFormat2(this.state.numberFormat2 / this.state.Number);
                this.setState({
                    ShopPrice: Modify
                });
            }
        }
    }, {
        key: 'pressPop',
        value: function pressPop() {
            var x = this.state.Number;
            var y = String(x).indexOf(".") + 1;
            if (y > 0 && !this.state.DataName == "移动销售") {
                alert("数量不能含有小数");
            } else if (this.state.name == "商品配送" && this.state.ydcountm == 0) {
                alert("库存为0，该商品不能进行配送");
            } else {
                if (this.state.name == "实时盘点" || this.state.name == "商品盘点") {
                    var shopInfoData = [];
                    var shopInfo = {};
                    shopInfo.Pid = this.state.Pid;
                    shopInfo.ProdCode = this.state.ProdCode;
                    shopInfo.prodname = this.state.ProdName;
                    shopInfo.countm = this.state.Number;
                    shopInfo.ShopPrice = this.state.ShopPrice;
                    if (this.state.YdCountm == 5) {
                        shopInfo.prototal = "0";
                    } else {
                        shopInfo.prototal = this.state.numberFormat2;
                    }
                    shopInfo.promemo = this.state.Remark;
                    shopInfo.DepCode = this.state.DepCode;
                    shopInfo.ydcountm = this.state.ydcountm;
                    shopInfo.SuppCode = this.state.SuppCode;
                    shopInfo.BarCode = this.state.BarCode;
                    shopInfoData.push(shopInfo);

                    dbAdapter.insertShopInfo(shopInfoData);
                    if (this.state.ShoppData == "0") {
                        var nextRoute = {
                            name: "清单",
                            component: _ShoppingCart2.default,
                            params: {
                                DepCode: this.state.DepCode
                            }
                        };
                        this.props.navigator.push(nextRoute);
                    } else {
                        var nextRoute = {
                            name: "主页",
                            component: _Index2.default,
                            params: {
                                DepCode: this.state.DepCode
                            }
                        };
                        this.props.navigator.push(nextRoute);
                    }
                } else {
                    if (this.state.Number == 0 && this.state.name !== "标签采集") {
                        _reactNative.ToastAndroid.show('商品数量不能为0', _reactNative.ToastAndroid.SHORT);
                    } else if (this.state.BQNumber == 0 && this.state.name == "标签采集") {
                        _reactNative.ToastAndroid.show('商品数量不能为0', _reactNative.ToastAndroid.SHORT);
                    } else {
                        var shopInfoData = [];
                        var shopInfo = {};
                        shopInfo.Pid = this.state.Pid;
                        shopInfo.ProdCode = this.state.ProdCode;
                        shopInfo.prodname = this.state.ProdName;
                        if (this.state.name == "标签采集") {
                            shopInfo.countm = this.state.BQNumber;
                        } else {
                            shopInfo.countm = this.state.Number;
                        }
                        shopInfo.ShopPrice = this.state.ShopPrice;
                        if (this.state.YdCountm == 5) {
                            shopInfo.prototal = "0";
                        } else {
                            shopInfo.prototal = this.state.numberFormat2;
                        }
                        shopInfo.promemo = this.state.Remark;
                        shopInfo.DepCode = this.state.DepCode;
                        shopInfo.ydcountm = this.state.ydcountm;
                        shopInfo.SuppCode = this.state.SuppCode;
                        shopInfo.BarCode = this.state.BarCode;
                        console.log("a=", shopInfo.countm);
                        shopInfoData.push(shopInfo);

                        dbAdapter.insertShopInfo(shopInfoData);
                        if (this.state.DataName == "移动销售") {
                            var nextRoute = {
                                name: "移动销售",
                                component: _Sell2.default
                            };
                            this.props.navigator.push(nextRoute);
                        } else if (this.state.ShoppData == "0") {
                            var nextRoute = {
                                name: "清单",
                                component: _ShoppingCart2.default,
                                params: {
                                    DepCode: this.state.DepCode
                                }
                            };
                            this.props.navigator.push(nextRoute);
                        } else {
                            var nextRoute = {
                                name: "主页",
                                component: _Index2.default,
                                params: {
                                    DepCode: this.state.DepCode
                                }
                            };
                            this.props.navigator.push(nextRoute);
                        }
                    }
                }
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                _reactNative.ScrollView,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 600
                    }
                },
                _react2.default.createElement(
                    _reactNative.ScrollView,
                    { style: styles.ScrollView, scrollEnabled: false, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 601
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.header, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 602
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.cont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 603
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.GoodsDetails.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 604
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                        fileName: _jsxFileName,
                                        lineNumber: 605
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.HeaderList, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 607
                                    }
                                },
                                this.state.name
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 610
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 611
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.left, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 612
                                    }
                                },
                                '\u540D\u79F0'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 613
                                    }
                                },
                                this.state.ProdName
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 615
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 616
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 617
                                        }
                                    },
                                    '\u6570\u91CF'
                                ),
                                this.state.YdCountm == 5 ? _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.onPrice, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 620
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.TextInput, {
                                        style: styles.Number,
                                        autoFocus: true,
                                        underlineColorAndroid: 'transparent',
                                        keyboardType: 'numeric',
                                        value: this.state.BQNumber.toString(),
                                        placeholderTextColor: '#333333',
                                        onChangeText: function onChangeText(value) {
                                            _this3.setState({ BQNumber: value });
                                        },
                                        onSubmitEditing: this.onSubmitEditing.bind(this),
                                        onEndEditing: this.onSubmitEditing.bind(this),
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 621
                                        }
                                    })
                                ) : _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.onPrice, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 634
                                        }
                                    },
                                    this.state.PriceText == 1 ? _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.NumberButton.bind(this), __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 637
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.PriceText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 638
                                                }
                                            },
                                            this.state.Number
                                        )
                                    ) : _react2.default.createElement(_reactNative.TextInput, {
                                        style: styles.Number,
                                        returnKeyType: 'search',
                                        autoFocus: true,
                                        underlineColorAndroid: 'transparent',
                                        keyboardType: 'numeric',
                                        value: this.state.Number.toString(),
                                        placeholderTextColor: '#333333',
                                        onChangeText: function onChangeText(value) {
                                            _this3.setState({ Number: value });
                                        },
                                        onSubmitEditing: this.onNumber.bind(this),
                                        onEndEditing: this.onSubmitEditing.bind(this),
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 641
                                        }
                                    })
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.right1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 657
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: [styles.sublime, { marginLeft: 0 }], onPress: this.clear.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 658
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: require(354                 ), __source: { // 354 = ../images/1_09.png
                                            fileName: _jsxFileName,
                                            lineNumber: 658
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.sublime, onPress: this.add.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 659
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: require(355                 ), __source: { // 355 = ../images/1_15.png
                                            fileName: _jsxFileName,
                                            lineNumber: 659
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.sublime, onPress: this.subtraction.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 660
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: require(356                 ), __source: { // 356 = ../images/1_13.png
                                            fileName: _jsxFileName,
                                            lineNumber: 660
                                        }
                                    })
                                )
                            )
                        ),
                        this.state.YdCountm == 1 || this.state.YdCountm == 5 ? _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 665
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 666
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 667
                                        }
                                    },
                                    '\u73B0\u5728\u5E93\u5B58'
                                ),
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.Price1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 668
                                        }
                                    },
                                    this.state.ydcountm
                                )
                            )
                        ) : null,
                        this.state.YdCountm == 2 || this.state.name == "商品配送" ? _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 674
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 675
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 676
                                        }
                                    },
                                    '\u539F\u5355\u6570\u91CF'
                                ),
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.Price1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 677
                                        }
                                    },
                                    this.state.ydcountm
                                )
                            )
                        ) : null,
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 681
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 682
                                    }
                                },
                                this.state.name == "商品配送" ? _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 685
                                        }
                                    },
                                    '\u914D\u9001\u5355\u4EF7'
                                ) : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 687
                                        }
                                    },
                                    '\u5355\u4EF7'
                                ),
                                this.state.name == "商品采购" || this.state.name == "协配采购" || this.state.name == "移动销售" || this.state.Modify == 1 ? _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.onPrice, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 692
                                        }
                                    },
                                    this.state.OnPrice == 1 ? _react2.default.createElement(_reactNative.TextInput, {
                                        autoFocus: true,
                                        returnKeyType: 'search',
                                        style: styles.Number,
                                        underlineColorAndroid: 'transparent',
                                        keyboardType: 'numeric',
                                        value: this.state.ShopPrice.toString(),
                                        placeholderTextColor: '#333333',
                                        onChangeText: function onChangeText(value) {
                                            _this3.setState({
                                                ShopPrice: value
                                            });
                                        },
                                        onSubmitEditing: this.onEndEditing.bind(this),
                                        onEndEditing: this.onSubmitEditing.bind(this),
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 695
                                        }
                                    }) : _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.PriceButton.bind(this), __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 712
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.PriceText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 713
                                                }
                                            },
                                            this.state.ShopPrice
                                        )
                                    )
                                ) : _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 719
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.Price1, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 720
                                            }
                                        },
                                        this.state.ShopPrice
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.right2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 724
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.price, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 725
                                        }
                                    },
                                    '\u5143/\u4EF6'
                                )
                            )
                        ),
                        this.state.YdCountm == 5 ? null : _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 731
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 732
                                    }
                                },
                                this.state.name == "商品配送" ? _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 735
                                        }
                                    },
                                    '\u914D\u9001\u91D1\u989D'
                                ) : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 737
                                        }
                                    },
                                    '\u91D1\u989D'
                                ),
                                this.state.name == "商品采购" || this.state.name == "商品验收" || this.state.name == "移动销售" || this.state.name == "协配采购" ? _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.onPrice, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 742
                                        }
                                    },
                                    this.state.Total == 1 ? _react2.default.createElement(_reactNative.TextInput, {
                                        autoFocus: true,
                                        returnKeyType: 'search',
                                        style: styles.Number,
                                        underlineColorAndroid: 'transparent',
                                        keyboardType: 'numeric',
                                        value: this.state.numberFormat2.toString(),
                                        placeholderTextColor: '#333333',
                                        onChangeText: function onChangeText(value) {
                                            _this3.setState({
                                                numberFormat2: value
                                            });
                                        },
                                        onSubmitEditing: this.TotalButton.bind(this),
                                        onEndEditing: this.numberFormat2.bind(this),
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 745
                                        }
                                    }) : _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.NumberFormat.bind(this), __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 762
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.PriceText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 763
                                                }
                                            },
                                            this.state.numberFormat2
                                        )
                                    )
                                ) : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.Price1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 768
                                        }
                                    },
                                    this.state.numberFormat2
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.right2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 771
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.price, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 772
                                        }
                                    },
                                    '\u5143'
                                )
                            )
                        ),
                        this.state.YdCountm == 4 ? null : _react2.default.createElement(
                            _reactNative.View,
                            { style: [styles.List, { paddingTop: 10 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 779
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 780
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.left, { marginTop: 9 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 781
                                        }
                                    },
                                    '\u5907\u6CE8'
                                ),
                                _react2.default.createElement(_reactNative.TextInput, {
                                    style: [styles.Number1, { fontSize: 14 }],
                                    placeholder: '\u6682\u65E0\u5907\u6CE8',
                                    placeholderTextColor: '#999999',
                                    maxLength: 50,
                                    value: this.state.Remark.toString(),
                                    underlineColorAndroid: 'transparent',
                                    onChangeText: function onChangeText(value) {
                                        _this3.setState({ Remark: value });
                                    }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 782
                                    }
                                })
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.button, onPress: this.pressPop.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 793
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ButtonText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 794
                                    }
                                },
                                '\u786E\u5B9A'
                            )
                        )
                    )
                )
            );
        }
    }]);
    return GoodsDetails;
}(_react.Component);

exports.default = GoodsDetails;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderImage1: {
        marginRight: 25,
        marginTop: 5
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 56,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    List: {
        height: 54,
        paddingTop: 15,
        backgroundColor: "#ffffff",
        paddingLeft: 25,
        paddingRight: 25,
        flexDirection: "row",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    left: {
        fontSize: 16,
        color: "#666666",
        width: 75,
        textAlign: "right"
    },
    right: {
        fontSize: 16,
        color: "#333333",
        flexDirection: "row",
        marginLeft: 15,
        fontWeight: "200"
    },
    Right: {
        fontSize: 16,
        color: "#666666",
        flexDirection: "row"
    },
    left1: {
        flexDirection: "row",
        flex: 1
    },
    right1: {
        flexDirection: "row",
        flex: 1,
        position: "absolute",
        right: 5,
        top: 5
    },
    left2: {
        flexDirection: "row",
        flex: 6
    },
    right2: {
        position: "absolute",
        right: 25,
        top: 12,
        flexDirection: "row"
    },
    Price1: {
        fontSize: 16,
        color: "#333333",
        marginLeft: 15,
        fontWeight: "200"
    },
    Number: {
        fontSize: 16,
        color: "#333333",
        fontWeight: "200",
        paddingLeft: 5,
        paddingTop: 0,
        marginLeft: 5,
        marginBottom: 4,
        flex: 1
    },
    PriceText: {
        color: "#333333",
        fontSize: 16,
        fontWeight: "200",
        marginLeft: 10,
        marginBottom: 4
    },
    onPrice: {
        flex: 1
    },
    Number1: {
        fontSize: 16,
        color: "#333333",
        flex: 6,
        marginBottom: 1,
        fontWeight: "200"
    },
    Delete: {
        fontSize: 20,
        color: "#f63e4d",
        flex: 1,
        textAlign: "center"
    },
    Reduce: {
        fontSize: 20,
        color: "#f63e4d",
        flex: 1,
        textAlign: "center"
    },
    Increase: {
        fontSize: 20,
        color: "#f63e4d",
        flex: 1,
        textAlign: "center"
    },
    sublime: {
        marginLeft: 8
    },
    button: {
        marginTop: 30,
        flex: 1,
        marginLeft: 25,
        marginRight: 25,
        backgroundColor: "#ff4e4e",
        borderRadius: 5,
        paddingTop: 13,
        paddingBottom: 13
    },
    ButtonText: {
        color: "#ffffff",
        textAlign: "center",
        fontSize: 18
    }
});
}, 348, null, "myproject/app/OrderDetails.js");
__d(/* myproject/app/ShoppingCart.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\ShoppingCart.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _HistoricalDocument = require(309                   ); // 309 = ./HistoricalDocument

var _HistoricalDocument2 = babelHelpers.interopRequireDefault(_HistoricalDocument);

var _Search = require(350       ); // 350 = ./Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _OrderDetails2 = require(348             ); // 348 = ./OrderDetails

var _OrderDetails3 = babelHelpers.interopRequireDefault(_OrderDetails2);

var _SunYi = require(357      ); // 357 = ./SunYi

var _SunYi2 = babelHelpers.interopRequireDefault(_SunYi);

var _Query = require(360      ); // 360 = ./Query

var _Query2 = babelHelpers.interopRequireDefault(_Query);

var _Distrition = require(363           ); // 363 = ./Distrition

var _Distrition2 = babelHelpers.interopRequireDefault(_Distrition);

var _ProductCG = require(364          ); // 364 = ./ProductCG

var _ProductCG2 = babelHelpers.interopRequireDefault(_ProductCG);

var _ProductYS = require(368          ); // 368 = ./ProductYS

var _ProductYS2 = babelHelpers.interopRequireDefault(_ProductYS);

var _ProductXP = require(369          ); // 369 = ./ProductXP

var _ProductXP2 = babelHelpers.interopRequireDefault(_ProductXP);

var _ProductSH = require(371          ); // 371 = ./ProductSH

var _ProductSH2 = babelHelpers.interopRequireDefault(_ProductSH);

var _PSDan = require(372             ); // 372 = ../PSDan/PSDan

var _PSDan2 = babelHelpers.interopRequireDefault(_PSDan);

var _DeCodePrePrint = require(351                        ); // 351 = ../utils/DeCodePrePrint18

var _DeCodePrePrint2 = babelHelpers.interopRequireDefault(_DeCodePrePrint);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage2 = require(325               ); // 325 = ../utils/Storage

var _Storage3 = babelHelpers.interopRequireDefault(_Storage2);

var _NumberUtils = require(326                   ); // 326 = ../utils/NumberUtils

var _NumberUtils2 = babelHelpers.interopRequireDefault(_NumberUtils);

var _reactNativeSideMenu = require(376                     ); // 376 = react-native-side-menu

var _reactNativeSideMenu2 = babelHelpers.interopRequireDefault(_reactNativeSideMenu);

var _reactNativeSwipeListView = require(378                           ); // 378 = react-native-swipe-list-view

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var RNScannerAndroid = NativeModules.RNScannerAndroid;
var dbAdapter = new _DBAdapter2.default();
var decodepreprint = new _DeCodePrePrint2.default();
var db = void 0;

var ShoppingCart = function (_Component) {
    babelHelpers.inherits(ShoppingCart, _Component);

    function ShoppingCart(props) {
        babelHelpers.classCallCheck(this, ShoppingCart);

        var _this = babelHelpers.possibleConstructorReturn(this, (ShoppingCart.__proto__ || Object.getPrototypeOf(ShoppingCart)).call(this, props));

        _this.state = {
            show: false,
            Show: false,
            ScreenBod: false,
            Succeed: false,
            Wait: false,
            DeleteData: false,
            ShopNumber: "",
            ShopAmount: "",
            reqDetailCode: "",
            Remark: "",
            suppcode: "",
            shildshop: "",
            IMEI: "",
            ProYH: "",
            Date: "",
            active: "",
            ClientCode: "",
            Usercode: "",
            SuppCode: "",
            ShopCode: "",
            ChildShopCode: "",
            OrgFormno: "",
            FormType: "",
            LinkUrl: "",
            Document: "",
            SUbmit: "",
            BeiZhu: "",
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return row1 !== row2;
                } }),
            ds: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
                    return r1 !== r2;
                } })
        };
        _this.ds = [];
        return _this;
    }

    babelHelpers.createClass(ShoppingCart, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _Storage3.default.get('Document').then(function (tags) {
                    _this2.setState({
                        Document: tags
                    });
                });
                _this2._dpSearch();
                _this2._fetch();
                _this2.Storage();
                _this2.Device();
            });

            _Storage3.default.get('Name').then(function (tags) {
                _this2.setState({
                    Name: tags
                });
            });
        }
    }, {
        key: '_dpSearch',
        value: function _dpSearch() {
            var _this3 = this;

            _Storage3.default.get('valueOf').then(function (tags) {
                _this3.setState({
                    reqDetailCode: tags
                });
            });

            _Storage3.default.get('username').then(function (tags) {
                _this3.setState({
                    Username: tags
                });
            });

            _Storage3.default.get('userpwd').then(function (tags) {
                _this3.setState({
                    Userpwd: tags
                });
            });

            _Storage3.default.get('IMEI').then(function (tags) {
                _this3.setState({
                    IMEI: tags
                });
            });

            _Storage3.default.get('ProYH').then(function (tags) {
                _this3.setState({
                    ProYH: tags
                });
            });

            _Storage3.default.get('Date').then(function (tags) {
                _this3.setState({
                    Date: tags
                });
            });

            this.modal();

            dbAdapter.selectShopInfo().then(function (rows) {
                var shopnumber = 0;
                var shopAmount = 0;
                _this3.ds = [];
                _this3.DataShop = [];
                for (var i = 0; i < rows.length; i++) {
                    var serial = i + 1;
                    var row = rows.item(i);
                    var prodname = row.prodname;
                    var number = row.ShopNumber;
                    var prodcode = row.ProdCode;
                    var countm = row.countm;
                    var ProPrice = row.ShopPrice;
                    var promemo = row.promemo;
                    var ydcountm = row.ydcountm;
                    var barCode = row.BarCode;
                    var SHopAMount = _NumberUtils2.default.numberFormat2(row.ShopAmount);
                    shopAmount += Number(SHopAMount);
                    shopnumber += Number(row.ShopNumber);
                    _this3.ds.push(row);
                    var DataShop = {
                        'serial': serial,
                        'prodname': prodname,
                        'barCode': barCode,
                        'prodcode': prodcode,
                        'shopnumber': number,
                        'countm': countm,
                        'ProPrice': ProPrice,
                        'promemo': promemo,
                        'ydcountm': ydcountm,
                        'ShopAmount': row.ShopAmount,
                        'SuppCode': row.SuppCode,
                        'Pid': row.pid,
                        'DepCode': row.DepCode
                    };
                    _this3.DataShop.push(DataShop);
                }
                if (_this3.ds == 0) {
                    _this3.modal();
                    return;
                } else {
                    _this3.setState({
                        number1: number,
                        ShopNumber: shopnumber,
                        ShopAmount: _NumberUtils2.default.numberFormat2(shopAmount),
                        ds: _this3.state.ds.cloneWithRows(_this3.DataShop)
                    });
                    _this3.modal();
                }
            });
        }
    }, {
        key: 'Storage',
        value: function Storage() {
            var _this4 = this;

            _Storage3.default.get('Name').then(function (tags) {
                _this4.setState({
                    head: tags
                });
            });

            _Storage3.default.get('username').then(function (tags) {
                _this4.setState({
                    username: tags
                });
            });

            _Storage3.default.get('ClientCode').then(function (tags) {
                _this4.setState({
                    ClientCode: tags
                });
            });

            _Storage3.default.get('Usercode').then(function (tags) {
                _this4.setState({
                    Usercode: tags
                });
            });

            _Storage3.default.get('code').then(function (tags) {
                _this4.setState({
                    ShopCode: tags
                });
            });

            _Storage3.default.get('shildshop').then(function (tags) {
                _this4.setState({
                    ChildShopCode: tags
                });
            });

            _Storage3.default.get('OrgFormno').then(function (tags) {
                _this4.setState({
                    OrgFormno: tags
                });
            });
        }
    }, {
        key: '_fetch',
        value: function _fetch() {
            var _this5 = this;

            dbAdapter.selectShopInfoAllCountm().then(function (rows) {
                var ShopCar = rows.item(0).countm;
                _this5.setState({
                    shopcar: ShopCar
                });
            });
        }
    }, {
        key: 'Code',
        value: function Code() {
            RNScannerAndroid.openScanner();
        }
    }, {
        key: 'Device',
        value: function Device() {
            var _this6 = this;

            _reactNative.DeviceEventEmitter.addListener("code", function (reminder) {
                decodepreprint.init(reminder, dbAdapter);
                if (reminder.length == 18 && decodepreprint.deCodePreFlag()) {
                    decodepreprint.deCodeProdCode().then(function (datas) {
                        dbAdapter.selectProdCode(datas, 1).then(function (rows) {
                            _Storage3.default.get('FormType').then(function (tags) {
                                _this6.setState({
                                    FormType: tags
                                });
                            });

                            _Storage3.default.get('LinkUrl').then(function (tags) {
                                _this6.setState({
                                    LinkUrl: tags
                                });
                            });

                            _Storage3.default.get('userName').then(function (tags) {
                                var params = {
                                    reqCode: "App_PosReq",
                                    reqDetailCode: "App_Client_CurrProdQry",
                                    ClientCode: _this6.state.ClientCode,
                                    sDateTime: Date.parse(new Date()),
                                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_CurrProdQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                                    username: tags,
                                    usercode: _this6.state.Usercode,
                                    SuppCode: rows.item(0).SuppCode,
                                    ShopCode: _this6.state.ShopCode,
                                    ChildShopCode: _this6.state.ChildShopCode,
                                    ProdCode: datas,
                                    OrgFormno: _this6.state.OrgFormno,
                                    FormType: _this6.state.FormType
                                };
                                FetchUtil.post(_this6.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                                    var countm = JSON.stringify(data.countm);
                                    var ShopPrice = JSON.stringify(data.ShopPrice);
                                    if (data.retcode == 1) {
                                        var ShopCar = rows.item(0).ProdName;
                                        _this6.props.navigator.push({
                                            component: _OrderDetails3.default,
                                            params: {
                                                ProdName: rows.item(0).ProdName,
                                                ShopPrice: ShopPrice,
                                                Pid: rows.item(0).Pid,
                                                countm: rows.item(0).ShopNumber,
                                                promemo: rows.item(0).promemo,
                                                prototal: rows.item(0).ShopAmount,
                                                ProdCode: rows.item(0).ProdCode,
                                                DepCode: rows.item(0).DepCode1,
                                                SuppCode: rows.item(0).SuppCode,
                                                ydcountm: countm,
                                                BarCode: rows.item(0).BarCode,
                                                ShoppData: "0"
                                            }
                                        });
                                    } else {
                                        alert(JSON.stringify(data));
                                    }
                                }, function (err) {
                                    alert("网络请求失败");
                                });
                            });
                        });
                    });
                } else {
                    dbAdapter.selectAidCode(reminder, 1).then(function (rows) {
                        if (rows.length == 0) {
                            alert("该商品不存在");
                        } else {
                            _Storage3.default.get('FormType').then(function (tags) {
                                _this6.setState({
                                    FormType: tags
                                });
                            });

                            _Storage3.default.get('LinkUrl').then(function (tags) {
                                _this6.setState({
                                    LinkUrl: tags
                                });
                            });

                            _Storage3.default.get('userName').then(function (tags) {
                                var params = {
                                    reqCode: "App_PosReq",
                                    reqDetailCode: "App_Client_CurrProdQry",
                                    ClientCode: _this6.state.ClientCode,
                                    sDateTime: Date.parse(new Date()),
                                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_CurrProdQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                                    username: tags,
                                    usercode: _this6.state.Usercode,
                                    SuppCode: rows.item(0).SuppCode,
                                    ShopCode: _this6.state.ShopCode,
                                    ChildShopCode: _this6.state.ChildShopCode,
                                    ProdCode: rows.item(0).ProdCode,
                                    OrgFormno: _this6.state.OrgFormno,
                                    FormType: _this6.state.FormType
                                };
                                _FetchUtils2.default.post(_this6.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                                    var countm = JSON.stringify(data.countm);
                                    var ShopPrice = JSON.stringify(data.ShopPrice);
                                    if (data.retcode == 1) {
                                        var ShopCar = rows.item(0).ProdName;
                                        _this6.props.navigator.push({
                                            component: _OrderDetails3.default,
                                            params: {
                                                ProdName: rows.item(0).ProdName,
                                                ShopPrice: ShopPrice,
                                                Pid: rows.item(0).Pid,
                                                countm: rows.item(0).ShopNumber,
                                                promemo: rows.item(0).ShopRemark,
                                                prototal: rows.item(0).ShopAmount,
                                                ProdCode: rows.item(0).ProdCode,
                                                DepCode: rows.item(0).DepCode1,
                                                SuppCode: rows.item(0).SuppCode,
                                                ydcountm: countm,
                                                BarCode: rows.item(0).BarCode,
                                                ShoppData: "0"
                                            }
                                        });
                                    } else {
                                        alert(JSON.stringify(data));
                                    }
                                }, function (err) {
                                    alert("网络请求失败");
                                });
                            });
                        }
                    });
                }
            });
        }
    }, {
        key: 'renderRow',
        value: function renderRow(rowData, sectionID, rowID) {
            var _this7 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { style: styles.ShopList, onPress: function onPress() {
                        return _this7.OrderDetails(rowData);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 405
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: [styles.RowList, { paddingLeft: 30 }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 406
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.serial, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 407
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.SerialText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 408
                                }
                            },
                            rowData.serial,
                            '.'
                        )
                    ),
                    rowData.prodcode == "" ? _react2.default.createElement(
                        _reactNative.Text,
                        { style: [styles.Name, styles.Name1], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 412
                            }
                        },
                        rowData.prodcode
                    ) : _react2.default.createElement(
                        _reactNative.Text,
                        { style: [styles.Name, styles.Name1], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 414
                            }
                        },
                        rowData.barCode
                    ),
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: [styles.Name, styles.Name1], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 416
                            }
                        },
                        rowData.prodname
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList1, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 418
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: [styles.Number, styles.Name1], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 419
                            }
                        },
                        rowData.shopnumber
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList1, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 421
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: [styles.Price, styles.Name1], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 422
                            }
                        },
                        rowData.ProPrice
                    )
                ),
                this.state.Name == "标签采集" ? null : _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList1, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 427
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: [styles.SmallScale, styles.Name1], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 428
                            }
                        },
                        rowData.ShopAmount
                    )
                )
            );
        }
    }, {
        key: 'renderHiddenRow',
        value: function renderHiddenRow(rowData, sectionID, rowID) {
            var _this8 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                        return _this8.deteleShopInfo(rowData);
                    }, style: styles.rowBack, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 437
                    }
                },
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.rowBackText, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 438
                        }
                    },
                    '\u5220\u9664'
                )
            );
        }
    }, {
        key: 'deteleShopInfo',
        value: function deteleShopInfo(rowData, sectionID, rowID) {
            var _this9 = this;

            dbAdapter.deteleShopInfo(rowData.ProdCode).then(function (rows) {});
            dbAdapter.selectShopInfo().then(function (rows) {
                var shopnumber = 0;
                var shopAmount = 0;
                _this9.ds = [];
                for (var i = 0; i < rows.length; i++) {
                    var row = rows.item(i);
                    var number = row.ShopNumber;
                    var SHopAMount = _NumberUtils2.default.numberFormat2(row.ShopAmount);
                    shopAmount += Number(SHopAMount);
                    shopnumber += Number(row.ShopNumber);
                    if (number !== 0) {
                        _this9.ds.push(row);
                    }
                }
                _this9.setState({
                    number1: number,
                    ShopNumber: shopnumber,
                    ShopAmount: _NumberUtils2.default.numberFormat2(shopAmount),
                    ds: _this9.state.ds.cloneWithRows(_this9.ds)
                });
            });
            dbAdapter.selectShopInfoAllCountm().then(function (rows) {
                var ShopCar = rows.item(0).countm;
                _this9.setState({
                    shopcar: ShopCar
                });
            });
        }
    }, {
        key: 'History',
        value: function History() {
            var _this10 = this;

            _Storage3.default.get('Name').then(function (tags) {
                if (tags == "移动销售" || tags == "标签采集") {
                    _reactNative.ToastAndroid.show('暂不支持该业务', _reactNative.ToastAndroid.SHORT);
                } else {
                    var nextRoute = {
                        name: "主页",
                        component: _HistoricalDocument2.default
                    };
                    _this10.props.navigator.push(nextRoute);
                }
            });
        }
    }, {
        key: 'Shop',
        value: function Shop() {
            var nextRoute = {
                name: "主页",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'pressPush',
        value: function pressPush() {
            this.props.navigator.push({
                component: _Search2.default,
                params: {
                    ShoppData: "0"
                }
            });
            _reactNative.DeviceEventEmitter.removeAllListeners();
        }
    }, {
        key: 'OrderDetails',
        value: function OrderDetails(rowData, sectionID, rowID) {
            var _this11 = this;

            _Storage3.default.get('FormType').then(function (tags) {
                _this11.setState({
                    FormType: tags
                });
            });

            _Storage3.default.get('LinkUrl').then(function (tags) {
                _this11.setState({
                    LinkUrl: tags
                });
            });
            _Storage3.default.get('userName').then(function (tags) {
                var params = {
                    reqCode: "App_PosReq",
                    reqDetailCode: "App_Client_CurrProdQry",
                    ClientCode: _this11.state.ClientCode,
                    sDateTime: Date.parse(new Date()),
                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_CurrProdQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                    username: tags,
                    usercode: _this11.state.Usercode,
                    SuppCode: rowData.SuppCode,
                    ShopCode: _this11.state.ShopCode,
                    ChildShopCode: _this11.state.ChildShopCode,
                    ProdCode: rowData.prodcode,
                    OrgFormno: _this11.state.OrgFormno,
                    FormType: _this11.state.FormType
                };

                _FetchUtils2.default.post(_this11.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                    var countm = JSON.stringify(data.countm);
                    var ShopPrice = JSON.stringify(data.ShopPrice);
                    if (data.retcode == 1) {
                        _this11.props.navigator.push({
                            component: _OrderDetails3.default,
                            params: {
                                ProdName: rowData.prodname,
                                ShopPrice: rowData.ProPrice,
                                countm: rowData.shopnumber,
                                Pid: rowData.pid,
                                ProdCode: rowData.prodcode,
                                DepCode: rowData.DepCode,
                                ydcountm: countm,
                                ShoppData: "0"
                            }
                        });
                    } else {
                        alert(JSON.stringify(data));
                    }
                }, function (err) {
                    alert("网络请求失败");
                });
            });
        }
    }, {
        key: 'pressPop',
        value: function pressPop() {
            this._setModalVisible();
            this.props.navigator.pop();
        }
    }, {
        key: 'ScreenBod',
        value: function ScreenBod() {
            var isScreen = this.state.ScreenBod;
            this.setState({
                ScreenBod: !isScreen
            });
        }
    }, {
        key: 'SCreenBod',
        value: function SCreenBod() {
            this.setState({
                SUbmit: ''
            });
            this.ScreenBod();
        }
    }, {
        key: 'submit',
        value: function submit() {
            var _this12 = this;

            this.setState({
                SUbmit: 1
            });
            if (this.state.SUbmit == 1) {
                return;
            } else {
                if (this.ds == 0) {
                    alert("请添加商品");
                } else {
                    this.screen = [];
                    _Storage3.default.get('shildshop').then(function (tags) {
                        _this12.setState({
                            shildshop: tags
                        });
                    });

                    _Storage3.default.get('LinkUrl').then(function (tags) {
                        _this12.setState({
                            linkurl: tags
                        });
                    });

                    _Storage3.default.get('Screen').then(function (tags) {
                        _this12.setState({
                            Screen: tags
                        });
                    });
                    this.Wait();
                    _Storage3.default.get('code').then(function (tags) {
                        _Storage3.default.get("usercode", "").then(function (usercode) {
                            _Storage3.default.get("username", "").then(function (username) {
                                var params = {
                                    ClientCode: _this12.state.ClientCode,
                                    username: _this12.state.Username,
                                    usercode: _this12.state.Userpwd,
                                    Remark: _this12.state.ShopRemark
                                };
                            });
                        });
                        _Storage3.default.get('scode').then(function (scode) {
                            _Storage3.default.get('CKu').then(function (CKu) {
                                var params = {
                                    reqCode: "App_PosReq",
                                    reqDetailCode: _this12.state.reqDetailCode,
                                    ClientCode: _this12.state.ClientCode,
                                    sDateTime: "2017-08-09 12:12:12",
                                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + _this12.state.reqDetailCode + "##" + "2017-08-09 12:12:12" + "##" + "PosControlCs") + '',
                                    username: _this12.state.Username,
                                    usercode: _this12.state.Userpwd,
                                    DetailInfo1: {
                                        "ShopCode": tags,
                                        "OrgFormno": _this12.state.OrgFormno,
                                        "ProMemo": _this12.state.Remark,
                                        "SuppCode": scode,
                                        "childshop": _this12.state.shildshop,
                                        "pdaGuid": _this12.state.IMEI,
                                        "pdgFormno": _this12.state.ProYH + _this12.state.Date,
                                        "storecode": CKu
                                    },
                                    DetailInfo2: _this12.DataShop
                                };
                                console.log(JSON.stringify(params));
                                if (_this12.state.Screen == "1" || _this12.state.Screen == "2") {
                                    var DetailInfo2 = params.DetailInfo2;
                                    for (var i = 0; i < DetailInfo2.length; i++) {
                                        var detail = DetailInfo2[i];
                                        var ydcountm = detail.ydcountm;
                                        var countm = detail.countm;
                                        if (ydcountm !== countm) {
                                            _this12.screen.push(detail);
                                        }
                                    }
                                    if (_this12.screen == "") {
                                        _FetchUtils2.default.post(_this12.state.linkurl, JSON.stringify(params)).then(function (data) {
                                            if (data.retcode == 1) {
                                                if (_this12.state.Screen !== "1" || _this12.state.Screen !== "2" || _this12.screen == "" || scode == null) {
                                                    _this12.Wait();
                                                    _this12.Succeed();
                                                }
                                            } else {
                                                _this12.Wait();
                                                alert(JSON.stringify(data));
                                            }
                                        }, function (err) {
                                            alert("网络请求失败");
                                        });
                                    } else {
                                        _this12.setState({
                                            dataSource: _this12.state.dataSource.cloneWithRows(_this12.screen)
                                        });
                                        _this12.Wait();
                                        _this12.ScreenBod();
                                    }
                                    _this12.setState({
                                        SUbmit: ''
                                    });
                                } else {
                                    _FetchUtils2.default.post(_this12.state.linkurl, JSON.stringify(params)).then(function (data) {
                                        if (data.retcode == 1) {
                                            if (_this12.state.Screen !== "1" || _this12.state.Screen !== "2" || _this12.screen == "" || scode == null) {
                                                _this12.Wait();
                                                _this12.Succeed();
                                            }
                                            _this12.setState({
                                                SUbmit: ''
                                            });
                                        } else {
                                            _this12.Wait();
                                            alert(JSON.stringify(data));
                                        }
                                    }, function (err) {
                                        alert("网络请求失败");
                                    });
                                }
                            });
                        });
                    });
                }
            }
        }
    }, {
        key: 'submit1',
        value: function submit1() {
            var _this13 = this;

            _Storage3.default.get('shildshop').then(function (tags) {
                _this13.setState({
                    shildshop: tags
                });
            });

            _Storage3.default.get('LinkUrl').then(function (tags) {
                _this13.setState({
                    linkurl: tags
                });
            });

            if (this.ds == 0) {
                alert("请添加商品");
            } else {
                _Storage3.default.get('code').then(function (tags) {
                    _Storage3.default.get("usercode", "").then(function (usercode) {
                        _Storage3.default.get("username", "").then(function (username) {
                            var params = {
                                ClientCode: _this13.state.ClientCode,
                                username: _this13.state.Username,
                                usercode: _this13.state.Userpwd,
                                Remark: _this13.state.ShopRemark
                            };
                        });
                    });
                    _Storage3.default.get('scode').then(function (scod) {
                        _Storage3.default.get('CKu').then(function (CKu) {
                            var params = {
                                reqCode: "App_PosReq",
                                reqDetailCode: _this13.state.reqDetailCode,
                                ClientCode: _this13.state.ClientCode,
                                sDateTime: "2017-08-09 12:12:12",
                                Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + _this13.state.reqDetailCode + "##" + "2017-08-09 12:12:12" + "##" + "PosControlCs") + '',
                                username: _this13.state.Username,
                                usercode: _this13.state.Userpwd,
                                DetailInfo1: {
                                    "ShopCode": tags,
                                    "OrgFormno": _this13.state.OrgFormno,
                                    "ProMemo": _this13.state.Remark,
                                    "SuppCode": scod,
                                    "childshop": _this13.state.shildshop,
                                    "pdaGuid": _this13.state.IMEI,
                                    "pdgFormno": _this13.state.ProYH + _this13.state.Date,
                                    "storecode": CKu
                                },
                                DetailInfo2: _this13.DataShop
                            };

                            _FetchUtils2.default.post(_this13.state.linkurl, JSON.stringify(params)).then(function (data) {
                                if (data.retcode == 1) {
                                    _this13.ScreenBod();
                                    _this13.Succeed();
                                    _this13.setState({
                                        SUbmit: ''
                                    });
                                } else {
                                    alert(JSON.stringify(data));
                                }
                            }, function (err) {
                                alert("网络请求失败");
                            });
                        });
                    });
                });
            }
        }
    }, {
        key: '_Screen',
        value: function _Screen(rowData, sectionID, rowID) {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.ScreenList, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 775
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.coulumnScreen, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 776
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.coulumnText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 777
                            }
                        },
                        rowData.prodname
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.coulumnScreen, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 781
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.coulumnText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 782
                            }
                        },
                        rowData.ydcountm
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.coulumnScreen, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 786
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.coulumnText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 787
                            }
                        },
                        rowData.countm
                    )
                )
            );
        }
    }, {
        key: '_rightButtonClick',
        value: function _rightButtonClick() {
            if (this.ds == 0) {
                alert("请添加商品");
            } else {
                this._setModalVisible();
            }
        }
    }, {
        key: '_setModalVisible',
        value: function _setModalVisible() {
            var isShow = this.state.show;
            this.setState({
                show: !isShow,
                BeiZhu: this.state.Remark
            });
        }
    }, {
        key: 'modal',
        value: function modal() {
            var isShow = this.state.Show;
            this.setState({
                Show: !isShow
            });
        }
    }, {
        key: 'Succeed',
        value: function Succeed() {
            var isShow = this.state.Succeed;
            this.setState({
                Succeed: !isShow
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            this.Succeed();
            this.DataSource();
        }
    }, {
        key: 'DeterMine',
        value: function DeterMine() {
            var _this14 = this;

            _Storage3.default.get('Name').then(function (tags) {
                if (tags == "商品盘点") {
                    _this14.Succeed();
                    var nextRoute = {
                        name: "Query",
                        component: _Query2.default
                    };
                    _this14.props.navigator.push(nextRoute);
                    _this14.DataSource();
                }
                if (tags == "配送收货") {
                    _this14.Succeed();
                    var nextRoute = {
                        name: "Distrition",
                        component: _Distrition2.default
                    };
                    _this14.props.navigator.push(nextRoute);
                    _this14.DataSource();
                }
                if (tags == "商品采购") {
                    _this14.Succeed();
                    var nextRoute = {
                        name: "ProductCG",
                        component: _ProductCG2.default
                    };
                    _this14.props.navigator.push(nextRoute);
                    _this14.DataSource();
                }
                if (tags == "商品验收") {
                    _this14.Succeed();
                    var nextRoute = {
                        name: "ProductYS",
                        component: _ProductYS2.default
                    };
                    _this14.props.navigator.push(nextRoute);
                    _this14.DataSource();
                }
                if (tags == "协配采购") {
                    _this14.Succeed();
                    var nextRoute = {
                        name: "ProductXP",
                        component: _ProductXP2.default
                    };
                    _this14.props.navigator.push(nextRoute);
                    _this14.DataSource();
                }
                if (tags == "协配收货") {
                    _this14.Succeed();
                    var nextRoute = {
                        name: "ProductSH",
                        component: _ProductSH2.default
                    };
                    _this14.props.navigator.push(nextRoute);
                    _this14.DataSource();
                }
                if (tags == "商品损溢") {
                    _this14.Succeed();
                    var nextRoute = {
                        name: "SunYi",
                        component: _SunYi2.default
                    };
                    _this14.props.navigator.push(nextRoute);
                    _this14.DataSource();
                }
                if (tags == "商品配送") {
                    _this14.Succeed();
                    var nextRoute = {
                        name: "PSDan",
                        component: _PSDan2.default
                    };
                    _this14.props.navigator.push(nextRoute);
                    _this14.DataSource();
                }
                if (tags == "门店要货" || tags == "实时盘点" || tags == "标签采集") {
                    _this14.DataSource();
                    _this14.Succeed();
                }
            });
        }
    }, {
        key: 'DataSource',
        value: function DataSource() {
            dbAdapter.deleteData("shopInfo");
            this.ds = [];
            var price = "";
            var date = new Date();
            var data = JSON.stringify(date.getTime());
            this.setState({
                ds: this.state.ds.cloneWithRows(this.ds),
                ShopNumber: price,
                ShopAmount: price,
                shopcar: "",
                active: data,
                BeiZhu: ""
            });
            _Storage3.default.save('Date', this.state.active);
        }
    }, {
        key: 'DataButton',
        value: function DataButton() {
            dbAdapter.deleteData("shopInfo");
            this.ds = [];
            var price = "";
            this.setState({
                ds: this.state.ds.cloneWithRows(this.ds),
                ShopNumber: price,
                ShopAmount: price,
                shopcar: "",
                BeiZhu: ""
            });
            this.DeleteData();
        }
    }, {
        key: 'CloseButton',
        value: function CloseButton() {
            this.DeleteData();
        }
    }, {
        key: 'Wait',
        value: function Wait() {
            var isShow = this.state.Wait;
            this.setState({
                Wait: !isShow
            });
        }
    }, {
        key: 'DeleteData',
        value: function DeleteData() {
            var isShow = this.state.DeleteData;
            this.setState({
                DeleteData: !isShow
            });
        }
    }, {
        key: 'DeleteShop',
        value: function DeleteShop() {
            this.DeleteData();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this15 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 972
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 973
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 974
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 975
                                }
                            },
                            '\u5546\u54C1\u6E05\u5355'
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Code.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 976
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(347                 ), style: styles.HeaderImage1, __source: { // 347 = ../images/1_05.png
                                    fileName: _jsxFileName,
                                    lineNumber: 977
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.pressPush.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 979
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(381                 ), style: styles.HeaderImage, __source: { // 381 = ../images/1_08.png
                                    fileName: _jsxFileName,
                                    lineNumber: 980
                                }
                            })
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList1, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 984
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.NameList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 985
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.Name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 986
                                }
                            },
                            '\u540D\u5B57'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.Number, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 987
                                }
                            },
                            '\u6570\u91CF'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.Price, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 988
                                }
                            },
                            '\u5355\u4EF7'
                        ),
                        this.state.Name == "标签采集" ? null : _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.SmallScale, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 993
                                }
                            },
                            '\u5C0F\u8BA1'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 996
                            }
                        },
                        _react2.default.createElement(_reactNativeSwipeListView.SwipeListView, {
                            dataSource: this.state.ds,
                            renderRow: this.renderRow.bind(this),
                            renderHiddenRow: this.renderHiddenRow.bind(this),
                            rightOpenValue: -100,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 997
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.viewStyle, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1005
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Combined, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1006
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Combinedleft, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1007
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.CombinedText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1008
                                    }
                                },
                                '\u5408\u8BA1\uFF1A'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.Combinedright, onPress: this.DeleteShop.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1010
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Deletetext, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1011
                                    }
                                },
                                '\u6E05\u7A7A\u5168\u90E8\u5546\u54C1'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Client, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1014
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.ClientText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1015
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [styles.ClientText, styles.ClientType], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1016
                                    }
                                },
                                '\u8D27\u54C1\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ClientType, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1017
                                    }
                                },
                                this.state.ShopNumber
                            )
                        ),
                        this.state.Name == "标签采集" ? null : _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.ClientText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1023
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [styles.ClientText, styles.ClientType], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1024
                                    }
                                },
                                '\u603B\u4EF7\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Price1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1025
                                    }
                                },
                                this.state.ShopAmount
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Note, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1030
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this._rightButtonClick.bind(this), style: styles.DanJU, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1031
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.DocumentsNote, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1032
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.Documentsnote, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1033
                                        }
                                    },
                                    '\u5355\u636E\u5907\u6CE8\uFF1A'
                                )
                            ),
                            _react2.default.createElement(_reactNative.TextInput, {
                                style: styles.DocumentsNote1,
                                autofocus: true,
                                editable: false,
                                defaultValue: this.state.BeiZhu,
                                textalign: 'center',
                                underlineColorAndroid: 'transparent',
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1035
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.Submit, onPress: this.submit.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1044
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: { fontSize: 18, color: "#ffffff", textAlign: "center" }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1045
                                    }
                                },
                                '\u63D0\u4EA4'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.footer, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1049
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Home, onPress: this.History.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1050
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(382                  ), __source: { // 382 = ../images/1_300.png
                                fileName: _jsxFileName,
                                lineNumber: 1050
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.home1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1050
                                }
                            },
                            '\u5386\u53F2\u5355\u636E\u67E5\u8BE2'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Home, onPress: this.Shop.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1051
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(383                  ), __source: { // 383 = ../images/1_311.png
                                fileName: _jsxFileName,
                                lineNumber: 1051
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.home1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1051
                                }
                            },
                            '\u5546\u54C1'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.Home, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1052
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1053
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Image,
                                { source: require(384                 ), __source: { // 384 = ../images/1_32.png
                                        fileName: _jsxFileName,
                                        lineNumber: 1054
                                    }
                                },
                                this.state.shopcar == 0 ? null : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [{ position: "absolute", right: -200 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1058
                                        }
                                    },
                                    this.state.shopcar
                                ),
                                this.state.shopcar > 0 ? _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ShopCar, { paddingTop: 3 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1062
                                        }
                                    },
                                    this.state.shopcar
                                ) : null,
                                this.state.shopcar < 999 ? null : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.ShopCar, { width: 30, height: 30, top: 11, lineHeight: 21 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1067
                                        }
                                    },
                                    this.state.shopcar
                                ),
                                this.state.shopcar > 999 ? _react2.default.createElement(
                                    _reactNative.View,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1071
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: [styles.ShopCar, { width: 30, height: 30, top: 11, lineHeight: 23 }], __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1072
                                            }
                                        },
                                        this.state.shopcar
                                    ),
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.Add, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1073
                                            }
                                        },
                                        '+'
                                    )
                                ) : null
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.home2, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1080
                                }
                            },
                            '\u6E05\u5355'
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.Show,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1083
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LoadCenter, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1089
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.loading, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1090
                                }
                            },
                            _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1091
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TextLoading, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1092
                                    }
                                },
                                '\u52A0\u8F7D\u4E2D'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        transparent: true,
                        visible: this.state.show,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1096
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: [styles.modalStyle, { justifyContent: 'center', alignItems: 'center' }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1101
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [styles.ModalView, { borderRadius: 5, paddingBottom: 20, width: 300,
                                    height: 330, backgroundColor: "#ffffff" }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1102
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.DanJu, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1104
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.danju, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1105
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.DanText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1105
                                            }
                                        },
                                        '\u5355\u636E\u5907\u6CE8'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.ModalLeft, onPress: this._setModalVisible.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1106
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: require(385                 ), __source: { // 385 = ../images/2_02.png
                                            fileName: _jsxFileName,
                                            lineNumber: 1107
                                        }
                                    })
                                )
                            ),
                            _react2.default.createElement(_reactNative.TextInput, {
                                multiline: true,
                                maxLength: 25,
                                placeholder: '\u8BF7\u586B\u5199\u5355\u636E\u5907\u6CE8\u4FE1\u606F',
                                underlineColorAndroid: 'transparent',
                                placeholderTextColor: '#888888',
                                value: this.state.Remark,
                                style: styles.TextInput,
                                onChangeText: function onChangeText(value) {
                                    _this15.setState({
                                        Remark: value
                                    });
                                }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1110
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { style: styles.Button, onPress: this._setModalVisible.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1123
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ButtonText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1124
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.ScreenBod,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1131
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.ModalStyle, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1137
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.DanJu, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1138
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.danju, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1139
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.DanText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1139
                                        }
                                    },
                                    '\u4EE5\u4E0B\u5546\u54C1\u6570\u91CF\u4E0D\u76F8\u7B49\uFF0C\u662F\u5426\u7EE7\u7EED\uFF1F'
                                )
                            )
                        ),
                        this.state.Screen == "1" ? _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ScreenTitle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1144
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.coulumnScreen, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1145
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.coulumnText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1146
                                        }
                                    },
                                    '\u5546\u54C1\u540D\u79F0'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.coulumnScreen, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1150
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.coulumnText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1151
                                        }
                                    },
                                    '\u539F\u59CB\u6570\u91CF'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.coulumnScreen, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1155
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.coulumnText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1156
                                        }
                                    },
                                    '\u6570\u91CF'
                                )
                            )
                        ) : null,
                        this.state.Screen == "2" ? _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ScreenTitle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1165
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.coulumnScreen, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1166
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.coulumnText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1167
                                        }
                                    },
                                    '\u5546\u54C1\u540D\u79F0'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.coulumnScreen, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1171
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.coulumnText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1172
                                        }
                                    },
                                    '\u73B0\u5728\u5E93\u5B58'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.coulumnScreen, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1176
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.coulumnText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1177
                                        }
                                    },
                                    '\u6570\u91CF'
                                )
                            )
                        ) : null,
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [{ maxHeight: 300 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1184
                                }
                            },
                            _react2.default.createElement(_reactNative.ListView, {
                                dataSource: this.state.dataSource,
                                showsVerticalScrollIndicator: true,
                                renderRow: this._Screen.bind(this),
                                enableEmptySections: true,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1185
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Determine, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1192
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { style: styles.Cancel, onPress: this.SCreenBod.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1193
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.CancelText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1194
                                        }
                                    },
                                    '\u53D6\u6D88'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { style: [styles.Cancel, { marginRight: 25 }], onPress: this.submit1.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1198
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.CancelText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1199
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.Succeed,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1206
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Succeed, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1212
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.header, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1213
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.cont, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1214
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { onPress: this.Return.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1215
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: require(343                 ), __source: { // 343 = ../images/2_01.png
                                            fileName: _jsxFileName,
                                            lineNumber: 1216
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.HeaderList, { textAlign: "left", marginLeft: 10 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1218
                                        }
                                    },
                                    this.state.head
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.SucceedCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1221
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(386                    ), __source: { // 386 = ../images/succeed.png
                                    fileName: _jsxFileName,
                                    lineNumber: 1222
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.SucceedText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1223
                                    }
                                },
                                '\u63D0\u4EA4\u6210\u529F'
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.DeterMine.bind(this), style: styles.DeterMine, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1226
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.DeterMineText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1227
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.DeleteData,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1235
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: [styles.modalStyle, { justifyContent: 'center', alignItems: 'center' }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1241
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [styles.ModalView, { borderRadius: 5, paddingBottom: 50, width: 300, backgroundColor: "#ffffff" }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1242
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.DanJu, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1243
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.danju, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1244
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.DanText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1244
                                            }
                                        },
                                        '\u662F\u5426\u6E05\u7A7A\u5168\u90E8\u5546\u54C1\uFF1F'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.Row, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1246
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { onPress: this.DataButton.bind(this), style: styles.DataButton, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1247
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalTitleText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1248
                                            }
                                        },
                                        '\u786E\u5B9A'
                                    )
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { onPress: this.CloseButton.bind(this), style: styles.CloseButton, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1252
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        { style: styles.ModalTitleText, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1253
                                            }
                                        },
                                        '\u53D6\u6D88'
                                    )
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.Wait,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1261
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LoadCenter, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1267
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.loading, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1268
                                }
                            },
                            _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1269
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TextLoading, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1270
                                    }
                                },
                                '\u6B63\u5728\u63D0\u4EA4'
                            )
                        )
                    )
                )
            );
        }
    }]);
    return ShoppingCart;
}(_react.Component);

exports.default = ShoppingCart;


var styles = _reactNative.StyleSheet.create({
    ModalTitleText: {
        fontSize: 16,
        color: "#ffffff",
        textAlign: "center"
    },
    Row: {
        flexDirection: "row",
        marginTop: 50,
        paddingLeft: 20,
        paddingRight: 20
    },
    DataButton: {
        flex: 1,
        marginRight: 35,
        paddingTop: 8,
        paddingBottom: 8,
        borderRadius: 3,
        backgroundColor: "#ff4e4e"
    },
    CloseButton: {
        flex: 1,
        paddingTop: 8,
        paddingBottom: 8,
        borderRadius: 3,
        backgroundColor: "#ff4e4e"
    },
    container: {
        flex: 1,
        backgroundColor: "#f2f2f2"
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderImage: {
        marginLeft: 18
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    NameList: {
        paddingLeft: 25,
        paddingRight: 25,
        flexDirection: "row",
        paddingTop: 20,
        paddingBottom: 20,
        alignItems: "center"
    },
    RowList: {
        flex: 2
    },
    serial: {
        position: "absolute",
        top: 5,
        left: 4
    },
    SerialText: {
        borderRadius: 50,
        color: "#000000",
        fontSize: 14
    },
    RowList1: {
        flex: 1
    },
    Name: {
        flex: 2,
        fontSize: 18,
        color: "#333333"
    },
    Number: {
        flex: 1,
        textAlign: "left",
        fontSize: 18,
        color: "#333333"
    },
    Price: {
        flex: 1,
        textAlign: "right",
        fontSize: 18,
        color: "#333333"
    },
    SmallScale: {
        flex: 1,
        textAlign: "right",
        fontSize: 18,
        color: "#333333"
    },
    ShopList: {
        paddingRight: 10,
        paddingTop: 18,
        paddingBottom: 18,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2",
        flexDirection: "row"
    },
    Name1: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    ContList1: {
        flex: 16,
        marginBottom: 60
    },
    CommoditySettlement: {
        backgroundColor: "#ffffff",
        borderTopWidth: 1,
        borderTopColor: "#f5f5f5",
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 15,
        height: 160

    },
    Client: {
        flexDirection: "row",
        paddingBottom: 5,
        overflow: "hidden"
    },
    Goods: {
        flexDirection: "row"
    },
    Note: {
        flexDirection: "row"
    },
    Combined: {
        flexDirection: "row"
    },
    Combinedleft: {
        flex: 1,
        paddingTop: 5
    },
    Combinedright: {
        flex: 1,
        paddingTop: 5,
        paddingBottom: 5
    },
    Deletetext: {
        color: "#ff4e4e",
        textAlign: "center",
        fontWeight: "bold"
    },
    CombinedText: {
        fontSize: 16,
        color: "#333333",
        fontWeight: "bold"
    },
    ClientType: {
        fontSize: 16,
        color: "#666666"
    },
    DocumentsNote: {
        width: 95,
        marginTop: 14
    },
    DanJU: {
        flex: 5,
        flexDirection: "row"
    },
    Documentsnote: {
        fontSize: 16,
        color: "#666666"
    },
    DocumentsNote1: {
        marginTop: 3,
        flex: 4,
        color: "#777777"
    },
    Submit: {
        backgroundColor: "#ff4e4e",
        paddingTop: 10,
        paddingBottom: 10,
        flex: 2
    },
    ModalStyle: {
        flex: 1,
        backgroundColor: "#F2F2F2"
    },
    DanJu: {
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ff4e4e",
        flexDirection: 'row'
    },
    DanText: {
        color: "#ffffff",
        textAlign: "center",
        fontSize: 16
    },
    TextInput: {
        marginLeft: 25,
        marginRight: 25,
        height: 150,
        marginTop: 25,
        backgroundColor: "#e2e2e2",
        textAlignVertical: 'top'
    },
    Button: {
        marginLeft: 50,
        marginRight: 50,
        backgroundColor: "#ff4e4e",
        paddingTop: 13,
        paddingBottom: 13,
        borderRadius: 5,
        marginTop: 25
    },
    ButtonText: {
        color: "#ffffff",
        fontSize: 18,
        textAlign: "center"
    },
    ModalLeft: {
        position: "absolute",
        right: 15,
        top: 6,
        paddingLeft: 5,
        paddingRight: 5
    },
    danju: {
        flex: 1
    },
    viewStyle: {
        backgroundColor: "#fffce6",
        paddingLeft: 25,
        height: 120
    },
    leftView: {
        flexDirection: 'row',
        marginLeft: 8
    },
    rightView: {
        flexDirection: 'row',
        marginRight: 8
    },
    Client: {
        marginTop: 10,
        marginBottom: 10,
        flexDirection: 'row'
    },
    client: {
        fontSize: 16,
        color: "#555555"
    },
    ClientType: {
        fontSize: 16,
        color: "#555555"
    },
    goods: {
        fontSize: 16,
        color: "#555555"
    },
    ClientText: {
        flex: 2
    },
    GoodsNumber: {
        fontSize: 16,
        color: "#555555"
    },
    Price1: {
        fontSize: 16,
        fontWeight: "bold",
        color: "#ff4e4e",
        flex: 2,
        textAlign: "right"
    },
    modalStyle: {
        backgroundColor: "#3e3d3d",
        opacity: 0.9,
        flex: 1
    },
    LoadCenter: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    loading: {
        paddingLeft: 15,
        paddingRight: 15,
        paddingTop: 15,
        paddingBottom: 15,
        backgroundColor: "#000000",
        opacity: 0.8,
        borderRadius: 5
    },
    TextLoading: {
        fontSize: 17,
        color: "#ffffff"
    },
    activity: {
        marginBottom: 5
    },
    ScreenList: {
        paddingTop: 8,
        paddingBottom: 8,
        flexDirection: "row",
        backgroundColor: "#ffffff",
        marginBottom: 2
    },
    ScreenTitle: {
        paddingTop: 8,
        paddingBottom: 8,
        height: 55,
        flexDirection: "row"
    },
    coulumnScreen: {
        flex: 1,
        paddingLeft: 5
    },
    coulumnText: {
        fontSize: 16,
        textAlign: 'center',
        lineHeight: 30
    },
    Determine: {
        marginTop: 20,
        flexDirection: "row"
    },
    Cancel: {
        flex: 1,
        marginLeft: 25,
        backgroundColor: "#ff4e4e",
        paddingTop: 13,
        paddingBottom: 13,
        borderRadius: 5
    },
    CancelText: {
        fontSize: 16,
        color: "#ffffff",
        textAlign: "center"
    },
    footer: {
        height: 80,
        flexDirection: "row",
        borderTopWidth: 1,
        borderTopColor: "#f2f2f2"
    },
    source: {
        flexDirection: "row",
        flex: 1
    },
    Home: {
        flex: 1,
        alignItems: 'center',
        paddingTop: 10,
        backgroundColor: "#ffffff"
    },
    home1: {
        color: '#999999',
        fontSize: 16,
        marginTop: 5,
        flex: 1
    },
    home2: {
        color: '#ff4e4e',
        fontSize: 16,
        marginTop: 5,
        flex: 1
    },
    ShopCar: {
        width: 25,
        height: 25,
        backgroundColor: "#ffba00",
        color: "#ffffff",
        textAlign: "center",
        borderRadius: 50,
        position: "absolute",
        top: 10,
        right: -42
    },
    Add: {
        position: "absolute",
        right: -50,
        top: 5,
        color: "#ff4e4e",
        fontWeight: "bold"
    },
    Succeed: {
        flex: 1,
        backgroundColor: "#ffffff"
    },
    SucceedCont: {
        justifyContent: 'center',
        alignItems: 'center',
        flex: 1
    },
    SucceedText: {
        marginTop: 20,
        fontSize: 18,
        color: "#333333"
    },
    DeterMine: {
        position: "absolute",
        bottom: 20,
        paddingTop: 15,
        paddingBottom: 15,
        borderRadius: 25,
        width: 300,
        backgroundColor: "#ff4e4e"
    },
    DeterMineText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    },
    rowBack: {
        backgroundColor: "#ff4e4e",
        paddingTop: 18,
        paddingBottom: 18,
        paddingRight: 35
    },
    rowBackText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "right"
    }
});
}, 349, null, "myproject/app/ShoppingCart.js");
__d(/* myproject/app/Search.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\Search.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _ShoppingCart = require(349             ); // 349 = ./ShoppingCart

var _ShoppingCart2 = babelHelpers.interopRequireDefault(_ShoppingCart);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _NumberUtils = require(326                   ); // 326 = ../utils/NumberUtils

var _NumberUtils2 = babelHelpers.interopRequireDefault(_NumberUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage2 = require(325               ); // 325 = ../utils/Storage

var _Storage3 = babelHelpers.interopRequireDefault(_Storage2);

var _DeCodePrePrint = require(351                        ); // 351 = ../utils/DeCodePrePrint18

var _DeCodePrePrint2 = babelHelpers.interopRequireDefault(_DeCodePrePrint);

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var RNScannerAndroid = NativeModules.RNScannerAndroid;
var dbAdapter = new _DBAdapter2.default();
var db = void 0;
var decodepreprint = new _DeCodePrePrint2.default();

var Search = function (_Component) {
    babelHelpers.inherits(Search, _Component);

    function Search(props) {
        babelHelpers.classCallCheck(this, Search);

        var _this = babelHelpers.possibleConstructorReturn(this, (Search.__proto__ || Object.getPrototypeOf(Search)).call(this, props));

        _this.state = {
            Search: "",
            Price: "",
            totalPrice: "",
            name: "",
            YdCountm: "",
            shuliang: "",
            numberFormat2: "",
            ProdName: "",
            ShopPrice: "",
            Pid: "",
            countm: "",
            prototal: "",
            ProdCode: "",
            DepCode: "",
            SuppCode: "",
            ydcountm: "",
            Number1: "",
            Remark: "",
            BarCode: "",
            modal: "",
            BQNumber: "",
            Modify: "",
            OnPrice: "",
            Total: "",
            Price: "",
            OrderDetails: 1,
            Show: false,
            emptydata: false,
            dataRows: "1",
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return row1 !== row2;
                } }),
            ShoppData: _this.props.ShoppData ? _this.props.ShoppData : ""
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(Search, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _this2.Storage();
                _this2.Device();
            });
        }
    }, {
        key: 'Device',
        value: function Device() {
            var _this3 = this;

            _reactNative.DeviceEventEmitter.addListener("code", function (reminder) {
                decodepreprint.init(reminder, dbAdapter);
                if (reminder.length == 18 && decodepreprint.deCodePreFlag()) {
                    decodepreprint.deCodeProdCode().then(function (datas) {
                        dbAdapter.selectProdCode(datas, 1).then(function (rows) {
                            _Storage3.default.get('FormType').then(function (tags) {
                                _this3.setState({
                                    FormType: tags
                                });
                            });

                            _Storage3.default.get('LinkUrl').then(function (tags) {
                                _this3.setState({
                                    LinkUrl: tags
                                });
                            });

                            _Storage3.default.get('userName').then(function (tags) {
                                var params = {
                                    reqCode: "App_PosReq",
                                    reqDetailCode: "App_Client_CurrProdQry",
                                    ClientCode: _this3.state.ClientCode,
                                    sDateTime: Date.parse(new Date()),
                                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_CurrProdQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                                    username: tags,
                                    usercode: _this3.state.Usercode,
                                    SuppCode: rows.item(0).SuppCode,
                                    ShopCode: _this3.state.ShopCode,
                                    ChildShopCode: _this3.state.ChildShopCode,
                                    ProdCode: datas,
                                    OrgFormno: _this3.state.OrgFormno,
                                    FormType: _this3.state.FormType
                                };
                                _FetchUtils2.default.post(_this3.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                                    var countm = JSON.stringify(data.countm);
                                    var ShopPrice = JSON.stringify(data.ShopPrice);
                                    if (data.retcode == 1) {
                                        var ShopCar = rows.item(0).ProdName;
                                        if (rows.item(0).ShopNumber == 0) {
                                            _this3.setState({
                                                Number1: ""
                                            });
                                        } else {
                                            _this3.setState({
                                                Number1: rows.item(0).ShopNumber
                                            });
                                        }
                                        _this3.setState({
                                            ProdName: rows.item(0).ProdName,
                                            ShopPrice: rows.item(0).ShopPrice,
                                            Pid: rows.item(0).Pid,
                                            Remark: rows.item(0).ShopRemark,
                                            prototal: rows.item(0).prototal,
                                            ProdCode: rows.item(0).ProdCode,
                                            DepCode: rows.item(0).DepCode1,
                                            SuppCode: rows.item(0).SuppCode,
                                            BarCode: rows.item(0).BarCode,
                                            ydcountm: countm,
                                            focus: true,
                                            Search: "",
                                            modal: 1
                                        });
                                        _Storage3.default.get('YdCountm').then(function (ydcountm) {
                                            if (ydcountm == 2) {
                                                _this3.setState({
                                                    Number1: countm
                                                });
                                            }
                                            _this3.setState({
                                                YdCountm: ydcountm
                                            });
                                        });

                                        _Storage3.default.get('YuanDan').then(function (tags) {
                                            if (tags == "1") {
                                                if (_this3.state.Number1 == "" && !_this3.state.isFrist) {
                                                    _this3.setState({
                                                        Number1: _this3.state.ydcountm
                                                    });
                                                }
                                            }
                                            var numberFormat1 = _NumberUtils2.default.numberFormat2(_this3.state.ShopPrice);
                                            var numberFormat2 = _NumberUtils2.default.numberFormat2(_this3.state.Number1 * _this3.state.ShopPrice);
                                            _this3.setState({
                                                ShopPrice: numberFormat1,
                                                numberFormat2: numberFormat2
                                            });
                                        });
                                    } else {
                                        alert(JSON.stringify(data));
                                    }
                                }, function (err) {
                                    alert("网络请求失败");
                                });
                            });
                        });
                    });
                } else {
                    dbAdapter.selectAidCode(reminder, 1).then(function (rows) {
                        if (rows.length == 0) {
                            alert("该商品不存在");
                        } else {
                            _Storage3.default.get('FormType').then(function (tags) {
                                _this3.setState({
                                    FormType: tags
                                });
                            });

                            _Storage3.default.get('LinkUrl').then(function (tags) {
                                _this3.setState({
                                    LinkUrl: tags
                                });
                            });

                            _Storage3.default.get('userName').then(function (tags) {
                                var params = {
                                    reqCode: "App_PosReq",
                                    reqDetailCode: "App_Client_CurrProdQry",
                                    ClientCode: _this3.state.ClientCode,
                                    sDateTime: Date.parse(new Date()),
                                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_CurrProdQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                                    username: tags,
                                    usercode: _this3.state.Usercode,
                                    SuppCode: rows.item(0).SuppCode,
                                    ShopCode: _this3.state.ShopCode,
                                    ChildShopCode: _this3.state.ChildShopCode,
                                    ProdCode: rows.item(0).ProdCode,
                                    OrgFormno: _this3.state.OrgFormno,
                                    FormType: _this3.state.FormType
                                };
                                _FetchUtils2.default.post(_this3.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                                    var countm = JSON.stringify(data.countm);
                                    var ShopPrice = JSON.stringify(data.ShopPrice);
                                    if (data.retcode == 1) {
                                        var ShopCar = rows.item(0).ProdName;
                                        if (rows.item(0).ShopNumber == 0) {
                                            _this3.setState({
                                                Number1: ""
                                            });
                                        } else {
                                            _this3.setState({
                                                Number1: rows.item(0).ShopNumber
                                            });
                                        }
                                        _this3.setState({
                                            ProdName: rows.item(0).ProdName,
                                            ShopPrice: rows.item(0).ShopPrice,
                                            Pid: rows.item(0).Pid,
                                            Remark: rows.item(0).ShopRemark,
                                            prototal: rows.item(0).ShopAmount,
                                            ProdCode: rows.item(0).ProdCode,
                                            DepCode: rows.item(0).DepCode1,
                                            SuppCode: rows.item(0).SuppCode,
                                            BarCode: rows.item(0).BarCode,
                                            ydcountm: countm,
                                            focus: true,
                                            Search: "",
                                            modal: 1
                                        });
                                        _Storage3.default.get('YdCountm').then(function (ydcountm) {
                                            if (ydcountm == 2) {
                                                _this3.setState({
                                                    Number1: countm
                                                });
                                            }
                                            _this3.setState({
                                                YdCountm: ydcountm
                                            });
                                        });

                                        _Storage3.default.get('YuanDan').then(function (tags) {
                                            if (tags == "1") {
                                                if (_this3.state.Number1 == "" && !_this3.state.isFrist) {
                                                    _this3.setState({
                                                        Number1: _this3.state.ydcountm
                                                    });
                                                }
                                            }
                                            var numberFormat1 = _NumberUtils2.default.numberFormat2(_this3.state.ShopPrice);
                                            var numberFormat2 = _NumberUtils2.default.numberFormat2(_this3.state.Number1 * _this3.state.ShopPrice);
                                            _this3.setState({
                                                ShopPrice: numberFormat1,
                                                numberFormat2: numberFormat2
                                            });
                                        });
                                    } else {
                                        alert(JSON.stringify(data));
                                    }
                                }, function (err) {
                                    alert("网络请求失败");
                                });
                            });
                        }
                    });
                }
            });
        }
    }, {
        key: 'Storage',
        value: function Storage() {
            var _this4 = this;

            _Storage3.default.get('Name').then(function (tags) {
                _this4.setState({
                    name: tags
                });
            });

            _Storage3.default.get('username').then(function (tags) {
                _this4.setState({
                    username: tags
                });
            });

            _Storage3.default.get('ClientCode').then(function (tags) {
                _this4.setState({
                    ClientCode: tags
                });
            });

            _Storage3.default.get('Usercode').then(function (tags) {
                _this4.setState({
                    Usercode: tags
                });
            });

            _Storage3.default.get('code').then(function (tags) {
                _this4.setState({
                    ShopCode: tags
                });
            });

            _Storage3.default.get('shildshop').then(function (tags) {
                _this4.setState({
                    ChildShopCode: tags
                });
            });

            _Storage3.default.get('OrgFormno').then(function (tags) {
                _this4.setState({
                    OrgFormno: tags
                });
            });

            _Storage3.default.get('YdCountm').then(function (tags) {
                _this4.setState({
                    YdCountm: tags
                });
            });

            _Storage3.default.get('Modify').then(function (tags) {
                _this4.setState({
                    Modify: tags
                });
            });
        }
    }, {
        key: 'Close',
        value: function Close() {
            _reactNative.DeviceEventEmitter.removeAllListeners();
            if (this.state.ShoppData == "0") {
                var nextRoute = {
                    name: "清单",
                    component: _ShoppingCart2.default
                };
                this.props.navigator.push(nextRoute);
            } else {
                var nextRoute = {
                    name: "主页",
                    component: _Index2.default
                };
                this.props.navigator.push(nextRoute);
            }
        }
    }, {
        key: 'inputOnBlur',
        value: function inputOnBlur(value) {
            var _this5 = this;

            this.Modal();
            dbAdapter.selectAidCode(value, 1).then(function (rows) {
                _this5.dataRows = [];
                console.log("row==", rows.length);
                for (var i = 0; i < rows.length; i++) {
                    var row = rows.item(i);
                    console.log("rilegoule=", row.ShopNumber);
                    _this5.dataRows.push(row);
                }
                _this5.setState({
                    dataSource: _this5.state.dataSource.cloneWithRows(_this5.dataRows),
                    dataRows: _this5.dataRows
                });
            });
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this6 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                        return _this6.OrderDetails(rowData);
                    }, underlayColor: 'red', style: styles.Block, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 377
                    }
                },
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.BlockText, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 378
                        }
                    },
                    rowData.ProdName
                )
            );
        }
    }, {
        key: 'OrderDetails',
        value: function OrderDetails(rowData) {
            var _this7 = this;

            _Storage3.default.get('FormType').then(function (tags) {
                _this7.setState({
                    FormType: tags
                });
            });

            _Storage3.default.get('LinkUrl').then(function (tags) {
                _this7.setState({
                    LinkUrl: tags
                });
            });

            dbAdapter.selectAidCode(rowData.ProdCode, 1).then(function (rows) {
                _Storage3.default.get('userName').then(function (tags) {
                    var params = {
                        reqCode: "App_PosReq",
                        reqDetailCode: "App_Client_CurrProdQry",
                        ClientCode: _this7.state.ClientCode,
                        sDateTime: Date.parse(new Date()),
                        Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_CurrProdQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                        username: tags,
                        usercode: _this7.state.Usercode,
                        SuppCode: rowData.SuppCode,
                        ShopCode: _this7.state.ShopCode,
                        ChildShopCode: _this7.state.ChildShopCode,
                        ProdCode: rowData.ProdCode,
                        OrgFormno: _this7.state.OrgFormno,
                        FormType: _this7.state.FormType
                    };
                    _FetchUtils2.default.post(_this7.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                        var countm = JSON.stringify(data.countm);
                        var ShopPrice = JSON.stringify(data.ShopPrice);
                        if (data.retcode == 1) {
                            for (var i = 0; i < rows.length; i++) {
                                var row = rows.item(i);
                                if (_this7.state.name == "商品采购" || _this7.state.name == "协配采购" || _this7.state.Modify == 1) {
                                    if (rowData.ShopNumber == 0) {
                                        _this7.setState({
                                            ShopPrice: ShopPrice,
                                            ProdName: rowData.ProdName,
                                            Pid: rowData.Pid,
                                            Number1: '',
                                            Remark: rowData.ShopRemark,
                                            prototal: rowData.prototal,
                                            ProdCode: rowData.ProdCode,
                                            DepCode: rowData.DepCode1,
                                            SuppCode: rowData.SuppCode,
                                            BarCode: rowData.BarCode,
                                            ydcountm: countm,
                                            Search: "",
                                            modal: 1,
                                            numberFormat2: 0.00
                                        });
                                    } else {
                                        var numberFormat2 = _NumberUtils2.default.numberFormat2(rowData.ShopNumber * row.ShopPrice);
                                        _this7.setState({
                                            ShopPrice: row.ShopPrice,
                                            ProdName: rowData.ProdName,
                                            Pid: rowData.Pid,
                                            Number1: rowData.ShopNumber,
                                            Remark: rowData.ShopRemark,
                                            prototal: rowData.prototal,
                                            ProdCode: rowData.ProdCode,
                                            DepCode: rowData.DepCode1,
                                            SuppCode: rowData.SuppCode,
                                            BarCode: rowData.BarCode,
                                            ydcountm: countm,
                                            Search: "",
                                            modal: 1,
                                            numberFormat2: numberFormat2
                                        });
                                    }
                                } else {
                                    var _numberFormat = _NumberUtils2.default.numberFormat2(rowData.ShopNumber * ShopPrice);
                                    if (rowData.ShopNumber == 0) {
                                        _this7.setState({
                                            numberFormat2: 0.00,
                                            Number1: ''
                                        });
                                    } else {
                                        _this7.setState({
                                            numberFormat2: _numberFormat,
                                            Number1: rowData.ShopNumber
                                        });
                                    }
                                    _this7.setState({
                                        ShopPrice: ShopPrice,
                                        ProdName: rowData.ProdName,
                                        Pid: rowData.Pid,
                                        Remark: rowData.ShopRemark,
                                        prototal: rowData.prototal,
                                        ProdCode: rowData.ProdCode,
                                        DepCode: rowData.DepCode1,
                                        SuppCode: rowData.SuppCode,
                                        BarCode: rowData.BarCode,
                                        ydcountm: countm,
                                        Search: "",
                                        modal: 1
                                    });
                                }
                            }
                            _this7.Modal();
                        } else {
                            alert(JSON.stringify(data));
                        }
                    }, function (err) {
                        alert("网络请求失败");
                    });
                });
            });
        }
    }, {
        key: 'Modal',
        value: function Modal() {
            var isShow = this.state.Show;
            this.setState({
                Show: !isShow
            });
        }
    }, {
        key: 'onSubmitEditing',
        value: function onSubmitEditing() {
            var ShopPrice = this.state.Number1 * this.state.ShopPrice;
            this.setState({
                numberFormat2: ShopPrice
            });
        }
    }, {
        key: 'onNumber',
        value: function onNumber() {
            var ShopPrice = this.state.Number1 * this.state.ShopPrice;
            this.setState({
                numberFormat2: _NumberUtils2.default.numberFormat2(ShopPrice)
            });
            if (this.state.name == "商品采购" || this.state.name == "协配采购" || this.state.Modify == 1) {
                this.setState({
                    OnPrice: 1,
                    PriceText: 1
                });
            } else {
                var x = this.state.Number1;
                var y = String(x).indexOf(".") + 1;
                if (y > 0) {
                    alert("数量不能含有小数");
                } else {
                    if (this.state.name == "实时盘点" || this.state.name == "商品盘点") {
                        var shopInfoData = [];
                        var shopInfo = {};
                        shopInfo.Pid = this.state.Pid;
                        shopInfo.ProdCode = this.state.ProdCode;
                        shopInfo.prodname = this.state.ProdName;
                        shopInfo.countm = this.state.Number1;
                        shopInfo.ShopPrice = this.state.ShopPrice;
                        if (this.state.BQNumber == 3) {
                            shopInfo.prototal = "0";
                        } else {
                            shopInfo.prototal = _NumberUtils2.default.numberFormat2(ShopPrice);
                        }
                        shopInfo.promemo = this.state.Remark;
                        shopInfo.DepCode = this.state.DepCode;
                        shopInfo.ydcountm = this.state.ydcountm;
                        shopInfo.SuppCode = this.state.SuppCode;
                        shopInfo.BarCode = this.state.BarCode;
                        shopInfoData.push(shopInfo);

                        dbAdapter.insertShopInfo(shopInfoData);
                        this.setState({
                            Number1: "",
                            ydcountm: "",
                            ShopPrice: "",
                            numberFormat2: "",
                            Remark: "",
                            ProdName: "",
                            modal: ""
                        });
                    } else {
                        if (this.state.Number1 == 0) {
                            _reactNative.ToastAndroid.show('商品数量不能为空', _reactNative.ToastAndroid.SHORT);
                        } else {
                            var shopInfoData = [];
                            var shopInfo = {};
                            shopInfo.Pid = this.state.Pid;
                            shopInfo.ProdCode = this.state.ProdCode;
                            shopInfo.prodname = this.state.ProdName;
                            shopInfo.countm = this.state.Number1;
                            shopInfo.ShopPrice = this.state.ShopPrice;
                            if (this.state.BQNumber == 3) {
                                shopInfo.prototal = "0";
                            } else {
                                shopInfo.prototal = _NumberUtils2.default.numberFormat2(ShopPrice);
                            }
                            shopInfo.promemo = this.state.Remark;
                            shopInfo.DepCode = this.state.DepCode;
                            shopInfo.ydcountm = this.state.ydcountm;
                            shopInfo.SuppCode = this.state.SuppCode;
                            shopInfo.BarCode = this.state.BarCode;
                            shopInfoData.push(shopInfo);

                            dbAdapter.insertShopInfo(shopInfoData);
                            this.setState({
                                Number1: "",
                                ydcountm: "",
                                ShopPrice: "",
                                numberFormat2: "",
                                Remark: "",
                                ProdName: "",
                                modal: ""
                            });
                        }
                    }
                }
            }
        }
    }, {
        key: 'NumberButton',
        value: function NumberButton() {
            this.setState({
                PriceText: "",
                Total: "",
                OnPrice: ""
            });
        }
    }, {
        key: 'PriceButton',
        value: function PriceButton() {
            this.setState({
                OnPrice: 1,
                Total: ""
            });
        }
    }, {
        key: 'NumberFormat',
        value: function NumberFormat() {
            this.setState({
                OnPrice: 1
            });
        }
    }, {
        key: 'add',
        value: function add() {
            if (this.state.Number == "" && this.state.name !== "标签采集") {
                this.setState({
                    Number: 1,
                    numberFormat2: this.state.ShopPrice
                });
            } else if (this.state.name == "标签采集" && this.state.BQNumber == 1) {
                this.setState({
                    BQNumber: 2
                });
            } else {
                var numberFormat2 = _NumberUtils2.default.numberFormat2((parseInt(this.state.Number1) + 1) * this.state.ShopPrice);
                this.setState({
                    Number1: parseInt(this.state.Number1) + 1,
                    BQNumber: parseInt(this.state.BQNumber) + 1,
                    numberFormat2: numberFormat2
                });
            }
        }
    }, {
        key: 'subtraction',
        value: function subtraction() {
            if (this.state.Number1 > 0 || this.state.BQNumber > 1) {
                var Number1 = this.state.Number1;
                var BQNumber1 = this.state.BQNumber;
                this.setState({
                    Number1: parseInt(Number1) - 1,
                    BQNumber: parseInt(BQNumber1) - 1
                });
                var numberFormat2 = _NumberUtils2.default.numberFormat2((parseInt(Number1) - 1) * this.state.ShopPrice);
                this.setState({
                    numberFormat2: numberFormat2
                });
            }
            if (this.state.Number1 == 0 || this.state.Number1 == "") {
                _reactNative.ToastAndroid.show('商品数量不能为空', _reactNative.ToastAndroid.SHORT);
                this.setState({
                    Number1: ""
                });
            }
        }
    }, {
        key: 'clear',
        value: function clear() {
            var numberFormat2 = _NumberUtils2.default.numberFormat2(0 * this.state.ShopPrice);
            this.setState({
                Number1: 0,
                BQNumber: 1,
                numberFormat2: numberFormat2
            });
        }
    }, {
        key: 'onEndEditing',
        value: function onEndEditing() {
            if (this.state.Number1 == "") {
                this.setState({
                    numberFormat2: "0.00"
                });
            } else {
                var numberFormat2 = _NumberUtils2.default.numberFormat2(parseInt(this.state.Number1) * this.state.ShopPrice);
                this.setState({
                    numberFormat2: numberFormat2,
                    Total: 1,
                    OnPrice: ""
                });
            }
        }
    }, {
        key: 'TotalButton',
        value: function TotalButton() {
            if (this.state.Number1 == "") {
                alert("请先添加商品数量");
                this.setState({
                    numberFormat2: "0.00"
                });
            } else {
                var Modify = _NumberUtils2.default.numberFormat2(this.state.numberFormat2 / this.state.Number1);
                this.setState({
                    ShopPrice: Modify,
                    modal: '',
                    OnPrice: '',
                    Total: '',
                    PriceText: ''
                });
                if (this.state.OrderDetails == 1) {
                    var x = this.state.Number1;
                    var y = String(x).indexOf(".") + 1;
                    if (y > 0) {
                        alert("数量不能含有小数");
                    } else {
                        if (this.state.name == "实时盘点" || this.state.name == "商品盘点") {
                            var shopInfoData = [];
                            var shopInfo = {};
                            shopInfo.Pid = this.state.Pid;
                            shopInfo.ProdCode = this.state.ProdCode;
                            shopInfo.prodname = this.state.ProdName;
                            shopInfo.countm = this.state.Number1;
                            shopInfo.ShopPrice = Modify;
                            if (this.state.BQNumber == 3) {
                                shopInfo.prototal = "0";
                            } else {
                                shopInfo.prototal = this.state.numberFormat2;
                            }
                            shopInfo.promemo = this.state.Remark;
                            shopInfo.DepCode = this.state.DepCode;
                            shopInfo.ydcountm = this.state.ydcountm;
                            shopInfo.SuppCode = this.state.SuppCode;
                            shopInfo.BarCode = this.state.BarCode;
                            shopInfoData.push(shopInfo);

                            dbAdapter.insertShopInfo(shopInfoData);
                            this.setState({
                                Number1: "",
                                ydcountm: "",
                                ShopPrice: "",
                                numberFormat2: "",
                                Remark: "",
                                ProdName: "",
                                modal: ""
                            });
                        } else {
                            if (this.state.Number1 == 0) {
                                _reactNative.ToastAndroid.show('商品数量不能为空', _reactNative.ToastAndroid.SHORT);
                            } else {
                                var shopInfoData = [];
                                var shopInfo = {};
                                shopInfo.Pid = this.state.Pid;
                                shopInfo.ProdCode = this.state.ProdCode;
                                shopInfo.prodname = this.state.ProdName;
                                shopInfo.countm = this.state.Number1;
                                shopInfo.ShopPrice = Modify;
                                if (this.state.BQNumber == 3) {
                                    shopInfo.prototal = "0";
                                } else {
                                    shopInfo.prototal = this.state.numberFormat2;
                                }
                                shopInfo.promemo = this.state.Remark;
                                shopInfo.DepCode = this.state.DepCode;
                                shopInfo.ydcountm = this.state.ydcountm;
                                shopInfo.SuppCode = this.state.SuppCode;
                                shopInfo.BarCode = this.state.BarCode;
                                shopInfoData.push(shopInfo);

                                dbAdapter.insertShopInfo(shopInfoData);
                                this.setState({
                                    Number1: "",
                                    ydcountm: "",
                                    ShopPrice: "",
                                    numberFormat2: "",
                                    Remark: "",
                                    ProdName: "",
                                    modal: ""
                                });
                            }
                        }
                    }
                }
            }
        }
    }, {
        key: 'numberFormat2',
        value: function numberFormat2() {
            if (this.state.Number1 == "") {
                alert("请先添加商品数量");
                this.setState({
                    numberFormat2: "0.00"
                });
            } else {
                var Modify = _NumberUtils2.default.numberFormat2(this.state.numberFormat2 / this.state.Number1);
                this.setState({
                    ShopPrice: Modify
                });
            }
        }
    }, {
        key: 'pressPop',
        value: function pressPop() {
            var x = this.state.Number1;
            var y = String(x).indexOf(".") + 1;
            if (y > 0) {
                alert("数量不能含有小数");
            } else {
                if (this.state.name == "实时盘点" || this.state.name == "商品盘点") {
                    var shopInfoData = [];
                    var shopInfo = {};
                    shopInfo.Pid = this.state.Pid;
                    shopInfo.ProdCode = this.state.ProdCode;
                    shopInfo.prodname = this.state.ProdName;
                    shopInfo.countm = this.state.Number1;
                    shopInfo.ShopPrice = this.state.ShopPrice;
                    if (this.state.BQNumber == 3) {
                        shopInfo.prototal = "0";
                    } else {
                        shopInfo.prototal = this.state.numberFormat2;
                    }
                    shopInfo.promemo = this.state.Remark;
                    shopInfo.DepCode = this.state.DepCode;
                    shopInfo.ydcountm = this.state.ydcountm;
                    shopInfo.SuppCode = this.state.SuppCode;
                    shopInfo.BarCode = this.state.BarCode;
                    shopInfoData.push(shopInfo);

                    dbAdapter.insertShopInfo(shopInfoData);
                    this.setState({
                        Number1: "",
                        ydcountm: "",
                        ShopPrice: "",
                        numberFormat2: "",
                        Remark: "",
                        ProdName: "",
                        modal: ""
                    });
                } else {
                    if (this.state.Number == 0 && this.state.name !== "标签采集") {
                        alert(this.state.Number);
                        _reactNative.ToastAndroid.show('商品数量不能为0', _reactNative.ToastAndroid.SHORT);
                    } else if (this.state.BQNumber == 0 && this.state.name == "标签采集") {
                        _reactNative.ToastAndroid.show('商品数量不能为0', _reactNative.ToastAndroid.SHORT);
                    } else {
                        var shopInfoData = [];
                        var shopInfo = {};
                        shopInfo.Pid = this.state.Pid;
                        shopInfo.ProdCode = this.state.ProdCode;
                        shopInfo.prodname = this.state.ProdName;
                        shopInfo.countm = this.state.Number1;
                        shopInfo.ShopPrice = this.state.ShopPrice;
                        if (this.state.BQNumber == 3) {
                            shopInfo.prototal = "0";
                        } else {
                            shopInfo.prototal = this.state.numberFormat2;
                        }
                        shopInfo.promemo = this.state.Remark;
                        shopInfo.DepCode = this.state.DepCode;
                        shopInfo.ydcountm = this.state.ydcountm;
                        shopInfo.SuppCode = this.state.SuppCode;
                        shopInfo.BarCode = this.state.BarCode;
                        shopInfoData.push(shopInfo);

                        dbAdapter.insertShopInfo(shopInfoData);
                        this.setState({
                            Number1: "",
                            ydcountm: "",
                            ShopPrice: "",
                            numberFormat2: "",
                            Remark: "",
                            ProdName: "",
                            modal: ""
                        });
                    }
                }
            }
        }
    }, {
        key: '_Emptydata',
        value: function _Emptydata() {
            var isShow = this.state.emptydata;
            this.setState({
                emptydata: !isShow
            });
        }
    }, {
        key: 'Emptydata',
        value: function Emptydata() {
            this._Emptydata();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this8 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 876
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Title, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 877
                        }
                    },
                    this.state.modal == "1" ? _react2.default.createElement(_reactNative.TextInput, {
                        returnKeyType: 'search',
                        style: styles.Search,
                        placeholder: '\u8BF7\u8F93\u5165\u641C\u7D22\u5546\u54C1\u540D\u79F0',
                        placeholderColor: '#999999',
                        underlineColorAndroid: 'transparent',
                        value: this.state.Search,
                        onChangeText: function onChangeText(value) {
                            _this8.setState({
                                Search: value
                            });
                            _this8.inputOnBlur(value);
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 880
                        }
                    }) : _react2.default.createElement(_reactNative.TextInput, {
                        autoFocus: true,
                        returnKeyType: 'search',
                        style: styles.Search,
                        placeholder: '\u8BF7\u8F93\u5165\u641C\u7D22\u5546\u54C1\u540D\u79F0',
                        placeholderColor: '#999999',
                        underlineColorAndroid: 'transparent',
                        value: this.state.Search,
                        onChangeText: function onChangeText(value) {
                            _this8.setState({
                                Search: value
                            });
                            _this8.inputOnBlur(value);
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 894
                        }
                    }),
                    _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                            fileName: _jsxFileName,
                            lineNumber: 910
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.Close.bind(this), style: styles.Right1, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 911
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Text1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 912
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Text, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 912
                                    }
                                },
                                '\u53D6\u6D88'
                            )
                        )
                    )
                ),
                this.state.Search == "" ? _react2.default.createElement(
                    _reactNative.ScrollView,
                    { style: styles.ScrollView, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 918
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 919
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 920
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.left, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 921
                                    }
                                },
                                '\u540D\u79F0'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 922
                                    }
                                },
                                this.state.ProdName
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 924
                                }
                            },
                            this.state.modal == "1" ? _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 927
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 928
                                        }
                                    },
                                    '\u6570\u91CF'
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.onPrice, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 930
                                        }
                                    },
                                    this.state.PriceText == 1 ? _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { style: styles.NumBer, onPress: this.NumberButton.bind(this), __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 933
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.PriceText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 934
                                                }
                                            },
                                            this.state.Number1
                                        )
                                    ) : _react2.default.createElement(_reactNative.TextInput, {
                                        style: styles.Number,
                                        returnKeyType: 'search',
                                        autoFocus: true,
                                        underlineColorAndroid: 'transparent',
                                        keyboardType: 'numeric',
                                        value: this.state.Number1.toString(),
                                        placeholderTextColor: '#333333',
                                        onChangeText: function onChangeText(value) {
                                            _this8.setState({ Number1: value });
                                        },
                                        onSubmitEditing: this.onNumber.bind(this),
                                        onEndEditing: this.onSubmitEditing.bind(this),
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 937
                                        }
                                    })
                                )
                            ) : _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 953
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 954
                                        }
                                    },
                                    '\u6570\u91CF'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.right1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 957
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.sublime, onPress: this.clear.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 958
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: require(354                 ), __source: { // 354 = ../images/1_09.png
                                            fileName: _jsxFileName,
                                            lineNumber: 958
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.sublime, onPress: this.add.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 959
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: require(355                 ), __source: { // 355 = ../images/1_15.png
                                            fileName: _jsxFileName,
                                            lineNumber: 959
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    { style: styles.sublime, onPress: this.subtraction.bind(this), __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 960
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.Image, { source: require(356                 ), __source: { // 356 = ../images/1_13.png
                                            fileName: _jsxFileName,
                                            lineNumber: 960
                                        }
                                    })
                                )
                            )
                        ),
                        this.state.YdCountm == 1 || this.state.YdCountm == 5 ? _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 965
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 966
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 967
                                        }
                                    },
                                    '\u73B0\u5728\u5E93\u5B58'
                                ),
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.Price1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 968
                                        }
                                    },
                                    this.state.ydcountm
                                )
                            )
                        ) : null,
                        this.state.YdCountm == 2 || this.state.name == "商品配送" ? _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 974
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 975
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 976
                                        }
                                    },
                                    '\u539F\u5355\u6570\u91CF'
                                ),
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.Price1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 977
                                        }
                                    },
                                    this.state.ydcountm
                                )
                            )
                        ) : null,
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 981
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 982
                                    }
                                },
                                this.state.name == "商品配送" ? _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 985
                                        }
                                    },
                                    '\u914D\u9001\u5355\u4EF7'
                                ) : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 987
                                        }
                                    },
                                    '\u5355\u4EF7'
                                ),
                                this.state.name == "商品采购" || this.state.name == "协配采购" || this.state.Modify == "1" ? _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.onPrice, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 991
                                        }
                                    },
                                    this.state.OnPrice == 1 ? _react2.default.createElement(_reactNative.TextInput, {
                                        autoFocus: true,
                                        returnKeyType: 'search',
                                        style: styles.Number,
                                        underlineColorAndroid: 'transparent',
                                        keyboardType: 'numeric',
                                        value: this.state.ShopPrice.toString(),
                                        placeholderTextColor: '#333333',
                                        onChangeText: function onChangeText(value) {
                                            _this8.setState({
                                                ShopPrice: value
                                            });
                                        },
                                        onSubmitEditing: this.onEndEditing.bind(this),
                                        onEndEditing: this.onEndEditing.bind(this),
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 994
                                        }
                                    }) : _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.PriceButton.bind(this), __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1011
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.PriceText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 1012
                                                }
                                            },
                                            this.state.ShopPrice
                                        )
                                    )
                                ) : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.Price1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1018
                                        }
                                    },
                                    this.state.ShopPrice
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.right2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1021
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.price, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1022
                                        }
                                    },
                                    '\u5143/\u4EF6'
                                )
                            )
                        ),
                        this.state.YdCountm == 5 ? null : _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.List, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1028
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1029
                                    }
                                },
                                this.state.name == "商品配送" ? _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1032
                                        }
                                    },
                                    '\u914D\u9001\u91D1\u989D'
                                ) : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.left, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1034
                                        }
                                    },
                                    '\u91D1\u989D'
                                ),
                                this.state.name == "商品采购" || this.state.name == "商品验收" || this.state.name == "协配采购" ? _react2.default.createElement(
                                    _reactNative.View,
                                    { style: styles.onPrice, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1038
                                        }
                                    },
                                    this.state.Total == 1 ? _react2.default.createElement(_reactNative.TextInput, {
                                        autoFocus: true,
                                        returnKeyType: 'search',
                                        style: styles.Number,
                                        underlineColorAndroid: 'transparent',
                                        keyboardType: 'numeric',
                                        value: this.state.numberFormat2.toString(),
                                        placeholderTextColor: '#333333',
                                        onChangeText: function onChangeText(value) {
                                            _this8.setState({
                                                numberFormat2: value
                                            });
                                        },
                                        onSubmitEditing: this.TotalButton.bind(this),
                                        onEndEditing: this.numberFormat2.bind(this),
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1041
                                        }
                                    }) : _react2.default.createElement(
                                        _reactNative.TouchableOpacity,
                                        { onPress: this.NumberFormat.bind(this), __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 1058
                                            }
                                        },
                                        _react2.default.createElement(
                                            _reactNative.Text,
                                            { style: styles.PriceText, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 1059
                                                }
                                            },
                                            this.state.numberFormat2
                                        )
                                    )
                                ) : _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.Price1, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1064
                                        }
                                    },
                                    this.state.numberFormat2
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.right2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1067
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.price, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1068
                                        }
                                    },
                                    '\u5143'
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [styles.List, { paddingTop: 10 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1072
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.left2, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1073
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: [styles.left, { marginTop: 9 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1074
                                        }
                                    },
                                    '\u5907\u6CE8'
                                ),
                                _react2.default.createElement(_reactNative.TextInput, {
                                    style: [styles.Number1, { fontSize: 14 }],
                                    placeholder: '\u6682\u65E0\u5907\u6CE8',
                                    placeholderTextColor: '#999999',
                                    underlineColorAndroid: 'transparent',
                                    value: this.state.Remark.toString(),
                                    onChangeText: function onChangeText(value) {
                                        _this8.setState({ Remark: value });
                                    }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1075
                                    }
                                })
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.button, onPress: this.pressPop.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1086
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ButtonText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1087
                                    }
                                },
                                '\u786E\u5B9A'
                            )
                        )
                    )
                ) : _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.BlockList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1092
                        }
                    },
                    this.state.dataRows == "" ? _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Null, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 1095
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.NullText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1096
                                }
                            },
                            '\u6CA1\u6709\u641C\u7D22\u5230\u76F8\u5173\u5546\u54C1~~~'
                        )
                    ) : _react2.default.createElement(_reactNative.ListView, {
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        ref: 'myInput',
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1100
                        }
                    })
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        transparent: true,
                        visible: this.state.emptydata,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 1109
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Image,
                        { source: require(346                       ), style: [styles.ModalStyle, { justifyContent: 'center', alignItems: 'center' }], __source: { // 346 = ../images/background.png
                                fileName: _jsxFileName,
                                lineNumber: 1114
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ModalStyleCont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 1115
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: styles.ModalStyleTitle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1116
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ModalTitleText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1117
                                        }
                                    },
                                    '\u8BF7\u9009\u62E9\u5355\u636E'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.Emptydata.bind(this), style: styles.Button, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 1121
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.ModalTitleText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 1122
                                        }
                                    },
                                    '\u597D\u7684'
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);
    return Search;
}(_react.Component);

exports.default = Search;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    Title: {
        backgroundColor: "#ff4e4e",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 15,
        paddingBottom: 15,
        flexDirection: "row"
    },
    SearchImage: {
        position: "absolute",
        top: 22,
        left: 24
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 15,
        paddingTop: 6,
        paddingBottom: 6,
        fontSize: 14,
        flex: 1
    },
    Right1: {
        width: 60,
        flexDirection: "row",
        paddingTop: 3,
        paddingLeft: 6
    },
    HeaderImage1: {
        flex: 1,
        marginLeft: 20
    },
    Text1: {
        flex: 1
    },
    Text: {
        fontSize: 18,
        color: "#ffffff",
        paddingTop: 5,
        paddingLeft: 10
    },
    modal: {
        marginTop: 70
    },
    BlockList: {
        flex: 1,
        flexDirection: "column",
        backgroundColor: "#ffffff"
    },
    Row: {
        flexDirection: "row"
    },
    Block: {
        paddingTop: 15,
        paddingBottom: 15,
        paddingLeft: 25,
        paddingRight: 25,
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2",
        backgroundColor: "#ffffff"
    },
    BlockText: {
        fontSize: 14,
        color: "#333333"
    },
    Null: {
        marginLeft: 25,
        marginRight: 25,
        marginTop: 120
    },
    NullText: {
        color: "#cccccc",
        fontSize: 20,
        textAlign: "center"
    },
    ScrollView: {
        backgroundColor: "#f2f2f2",
        flex: 1
    },
    List: {
        height: 54,
        paddingTop: 15,
        backgroundColor: "#ffffff",
        paddingLeft: 25,
        paddingRight: 25,
        flexDirection: "row",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    left: {
        fontSize: 16,
        color: "#666666",
        width: 75,
        textAlign: "right"
    },
    right: {
        fontSize: 16,
        color: "#333333",
        flexDirection: "row",
        marginLeft: 15,
        fontWeight: "200"
    },
    Right: {
        fontSize: 16,
        color: "#666666",
        flexDirection: "row"
    },
    left1: {
        flexDirection: "row",
        flex: 1,
        marginRight: 120
    },
    right1: {
        flexDirection: "row",
        position: "absolute",
        right: 15,
        top: 5
    },
    left2: {
        flexDirection: "row",
        flex: 6,
        marginRight: 35
    },
    right2: {
        position: "absolute",
        right: 25,
        top: 12,
        flexDirection: "row"
    },
    Price1: {
        fontSize: 16,
        color: "#333333",
        marginLeft: 15,
        fontWeight: "200"
    },
    NumBer: {
        flex: 1
    },
    Number: {
        fontSize: 16,
        color: "#333333",
        fontWeight: "200",
        paddingLeft: 5,
        flex: 1,
        marginLeft: 5,
        marginBottom: 4,
        paddingTop: 0
    },
    PriceText: {
        color: "#333333",
        fontSize: 16,
        fontWeight: "200",
        marginLeft: 10,
        marginBottom: 4
    },
    onPrice: {
        flex: 1
    },
    Number1: {
        fontSize: 16,
        color: "#333333",
        flex: 6,
        marginBottom: 1,
        fontWeight: "200"
    },
    Delete: {
        fontSize: 20,
        color: "#f63e4d",
        flex: 1,
        textAlign: "center"
    },
    Reduce: {
        fontSize: 20,
        color: "#f63e4d",
        flex: 1,
        textAlign: "center"
    },
    Increase: {
        fontSize: 20,
        color: "#f63e4d",
        flex: 1,
        textAlign: "center"
    },
    sublime: {
        marginLeft: 8
    },
    button: {
        marginTop: 30,
        marginBottom: 15,
        flex: 1,
        marginLeft: 25,
        marginRight: 25,
        backgroundColor: "#ff4e4e",
        borderRadius: 5,
        paddingTop: 13,
        paddingBottom: 13
    },
    ButtonText: {
        color: "#ffffff",
        textAlign: "center",
        fontSize: 18
    },
    ModalStyle: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        width: null,
        height: null
    },
    ModalStyleCont: {
        height: 130,
        paddingTop: 30,
        paddingLeft: 10,
        paddingRight: 10,
        borderRadius: 5,
        backgroundColor: "#ffffff"
    },
    ModalStyleTitle: {
        height: 40,
        paddingLeft: 100,
        paddingRight: 100,
        borderBottomWidth: 1,
        borderBottomColor: "#f5f5f5"
    },
    ModalTitleText: {
        fontSize: 16,
        color: "#333333",
        textAlign: "center"
    },
    Button: {
        paddingTop: 20
    }
});
}, 350, null, "myproject/app/Search.js");
__d(/* myproject/utils/DeCodePrePrint18.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _StringUtils = require(352            ); // 352 = ./StringUtils

var _StringUtils2 = babelHelpers.interopRequireDefault(_StringUtils);

var regeneratorRuntime = require(67                   ); // 67 = regenerator-runtime

var deCode = void 0;
var dbAdapter = void 0;
var strWeightLen = void 0;
var strLength = void 0;

var DeCodePrePrint18 = function () {
  function DeCodePrePrint18() {
    var _this = this;

    babelHelpers.classCallCheck(this, DeCodePrePrint18);

    this.init = function (code, DbAdapter) {
      deCode = code;
      dbAdapter = DbAdapter;
    };

    this.deCodePreFlag = function () {
      var flag = _StringUtils2.default.subStr(0, 2, deCode);
      if ("27" == flag) {
        return true;
      } else if ("13" == flag) {
        return true;
      } else {
        return false;
      }
    };

    this.deCodeTotal = function () {
      return new Promise(function (resolve, reject) {
        var fixed = 2;

        var strDegree = "";

        dbAdapter.selectKgOpt("ScaleBARDEGREE").then(function (datas) {
          var dataLen = datas.length;
          if (dataLen != 0) {
            strDegree = datas.item(0).OptValue;
            if (strDegree == "") {
              strDegree = "0.01";
              fixed = 2;
            } else if ("分" == strDegree) {
              strDegree = "0.01";
              fixed = 2;
            } else if ("角" == strDegree) {
              strDegree = "0.1";
              fixed = 1;
            } else if ("元" == strDegree) {
              strDegree = "1";
              fixed = 0;
            }
          } else {
            strDegree = "0.01";
            fixed = 2;
          }
          _this.braMode().then(function (mode) {
            var deTotil = void 0;
            if ("0" == mode) {
              deTotil = deCode.substring(2 + Number(strLength) + Number(strWeightLen), 18 - 1);
            } else {
              deTotil = deCode.substring(2 + Number(strLength), 18 - 1 - Number(strWeightLen));
            }

            var v = parseFloat(Number(deTotil) * Number(strDegree)).toFixed(fixed);
            resolve(v);
          });
        });
      });
    };

    this.deCodeWeight = function () {
      return new Promise(function (resolve, reject) {
        var fixed = 2;

        strWeightLen = "5";

        var strWeightQTR = void 0;
        dbAdapter.selectKgOpt("ScaleWEIGHTLEN").then(function (datas) {
          var length = datas.length;
          if (length != 0) {
            strWeightLen = datas.item(0).OptValue;
          } else {
            strWeightLen = "5";
          }
          dbAdapter.selectPosOpt("WEIGHTQTY").then(function (datas) {
            var length = datas.length;
            if (length != 0) {
              strWeightQTR = datas.item(0).OptValue;
              if (strWeightQTR == "") {
                strWeightQTR = "0.001";
                fixed = 3;
              } else if ("0" == strWeightQTR) {
                strWeightQTR = "1";
                fixed = 1;
              } else if ("1" == strWeightQTR) {
                strWeightQTR = "0.1";
                fixed = 1;
              } else if ("2" == strWeightQTR) {
                strWeightQTR = "0.01";
                fixed = 2;
              } else if ("3" == strWeightQTR) {
                strWeightQTR = "0.001";
                fixed = 3;
              } else if ("4" == strWeightQTR) {
                strWeightQTR = "0.0001";
                fixed = 4;
              } else if ("5" == strWeightQTR) {
                strWeightQTR = "0.00001";
                fixed = 5;
              }
            } else {
              strWeightQTR = "0.01";
            }
            _this.braMode().then(function (mode) {
              var strWeight = void 0;
              if (mode == "0") {
                strWeight = _StringUtils2.default.subStr(2 + Number(strLength), 2 + Number(strLength) + Number(strWeightLen), deCode);
              } else {
                strWeight = _StringUtils2.default.subStr(2 + Number(strLength) + (18 - 1 - 2 - Number(strLength) - Number(strWeightLen)), 18 - 1, deCode);
              }
              var douWeight = parseFloat(Number(strWeight) * Number(strWeightQTR)).toFixed(fixed);
              resolve(douWeight);
            });
          });
        });
      });
    };
  }

  babelHelpers.createClass(DeCodePrePrint18, [{
    key: "deCodeProdCode",
    value: function deCodeProdCode() {
      return regeneratorRuntime.async(function deCodeProdCode$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt("return", new Promise(function (resolve, reject) {
                dbAdapter.selectKgOpt("ScalePluLength").then(function (datas) {
                  var dataLen = datas.length;
                  if (dataLen != 0) {
                    strLength = datas.item(0).OptValue;
                    if (strLength == "") {
                      strLength = "5";
                    }
                  } else {
                    strLength = "5";
                  }
                  resolve(_StringUtils2.default.subStr(2, 2 + Number(strLength), deCode));
                });
              }));

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "braMode",
    value: function braMode() {
      var strScaleBraMode = void 0;
      return new Promise(function (resolve, reject) {
        dbAdapter.selectKgOpt("ScaleBarMode").then(function (datas) {
          var length = datas.length;
          if (length != 0) {
            strScaleBraMode = datas.item(0).OptValue;
          } else {
            strScaleBraMode = "0";
          }
          resolve(strScaleBraMode);
        });
      });
    }
  }]);
  return DeCodePrePrint18;
}();

exports.default = DeCodePrePrint18;
}, 351, null, "myproject/utils/DeCodePrePrint18.js");
__d(/* myproject/utils/StringUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var StringUtils = function () {
  function StringUtils() {
    babelHelpers.classCallCheck(this, StringUtils);
  }

  babelHelpers.createClass(StringUtils, null, [{
    key: "subStr",
    value: function subStr(startIndex, endIndex, str) {
      if (endIndex > str.length) {
        return "-1";
      } else if (str == null || str.length <= 0) {
        return "-1";
      }
      return str.substring(startIndex, endIndex);
    }
  }]);
  return StringUtils;
}();

exports.default = StringUtils;
}, 352, null, "myproject/utils/StringUtils.js");
__d(/* myproject/images/2.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":28,"height":28,"scales":[1],"hash":"0a81c0f50b34f2d13a5ebc41ea80035c","name":"2","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 353, null, "myproject/images/2.png");
__d(/* myproject/images/1_09.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":40,"height":40,"scales":[1],"hash":"2c61299386a1be634b43f16f9aa0f506","name":"1_09","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 354, null, "myproject/images/1_09.png");
__d(/* myproject/images/1_15.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":40,"height":40,"scales":[1],"hash":"3a0cd6e97e0249684cd08aa8178b55bc","name":"1_15","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 355, null, "myproject/images/1_15.png");
__d(/* myproject/images/1_13.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":40,"height":40,"scales":[1],"hash":"f73e39a7dff34f95d772f7279112e359","name":"1_13","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 356, null, "myproject/images/1_13.png");
__d(/* myproject/app/SunYi.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\SunYi.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Search = require(350       ); // 350 = ./Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var SunYi = function (_Component) {
    babelHelpers.inherits(SunYi, _Component);

    function SunYi(props) {
        babelHelpers.classCallCheck(this, SunYi);

        var _this = babelHelpers.possibleConstructorReturn(this, (SunYi.__proto__ || Object.getPrototypeOf(SunYi)).call(this, props));

        _this.state = {
            invoice: "",
            active: ""
        };
        return _this;
    }

    babelHelpers.createClass(SunYi, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('invoice').then(function (tags) {
                _this2.setState({
                    invoice: tags
                });
            });

            _Storage2.default.get('Disting').then(function (tags) {
                _this2.setState({
                    Disting: tags
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'BaoSun',
        value: function BaoSun() {
            if (this.state.Disting == "0") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                this.setState({
                    active: data
                });
                var nextRoute = {
                    name: "主页",
                    component: _Index2.default
                };
                this.props.navigator.push(nextRoute);
                _Storage2.default.delete('OrgFormno');
                _Storage2.default.delete('scode');
                _Storage2.default.delete('shildshop');
                _Storage2.default.delete('YuanDan');
                _Storage2.default.delete('Screen');
                _Storage2.default.delete('StateMent');
                _Storage2.default.delete('BQNumber');
                _Storage2.default.delete('Modify');
                _Storage2.default.save('Name', '商品损溢');
                _Storage2.default.save('FormType', 'SYYW');
                _Storage2.default.save('ProYH', 'ProSY');
                _Storage2.default.save('YdCountm', '3');
                _Storage2.default.save('OrgFormno', "1");
                _Storage2.default.save('Date', this.state.active);
                _Storage2.default.save('valueOf', 'App_Client_ProSY');
                _Storage2.default.save('history', 'App_Client_ProSYQ');
                _Storage2.default.save('historyClass', 'App_Client_ProSYDetailQ');
            } else if (this.state.Disting == "1") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                this.setState({
                    active: data
                });
                var nextRoute = {
                    name: "Search",
                    component: _Search2.default
                };
                this.props.navigator.push(nextRoute);
                _Storage2.default.delete('OrgFormno');
                _Storage2.default.delete('scode');
                _Storage2.default.delete('shildshop');
                _Storage2.default.delete('YuanDan');
                _Storage2.default.delete('Screen');
                _Storage2.default.delete('StateMent');
                _Storage2.default.delete('BQNumber');
                _Storage2.default.delete('Modify');
                _Storage2.default.save("invoice", "商品损溢");
                _Storage2.default.save('Document', "商品损溢");
                _Storage2.default.save('Name', '商品损溢');
                _Storage2.default.save('FormType', 'SYYW');
                _Storage2.default.save('ProYH', 'ProSY');
                _Storage2.default.save('YdCountm', '3');
                _Storage2.default.save('OrgFormno', "1");
                _Storage2.default.save('Date', this.state.active);
                _Storage2.default.save('valueOf', 'App_Client_ProSY');
                _Storage2.default.save('history', 'App_Client_ProSYQ');
                _Storage2.default.save('historyClass', 'App_Client_ProSYDetailQ');
            }
        }
    }, {
        key: 'YiChu',
        value: function YiChu() {
            if (this.state.Disting == "0") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                this.setState({
                    active: data
                });
                var nextRoute = {
                    name: "主页",
                    component: _Index2.default
                };
                this.props.navigator.push(nextRoute);
                _Storage2.default.delete('OrgFormno');
                _Storage2.default.delete('scode');
                _Storage2.default.delete('shildshop');
                _Storage2.default.delete('YuanDan');
                _Storage2.default.delete('Screen');
                _Storage2.default.delete('StateMent');
                _Storage2.default.delete('BQNumber');
                _Storage2.default.delete('YdCountm');
                _Storage2.default.delete('Modify');
                _Storage2.default.save("invoice", "商品损溢");
                _Storage2.default.save('Document', "商品损溢");
                _Storage2.default.save('Name', '商品损溢');
                _Storage2.default.save('FormType', 'SYYW');
                _Storage2.default.save('ProYH', 'ProSY');
                _Storage2.default.save('YdCountm', '3');
                _Storage2.default.save('OrgFormno', "0");
                _Storage2.default.save('Date', this.state.active);
                _Storage2.default.save('valueOf', 'App_Client_ProSY');
                _Storage2.default.save('history', 'App_Client_ProSYQ');
                _Storage2.default.save('historyClass', 'App_Client_ProSYDetailQ');
            } else if (this.state.Disting == "1") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                this.setState({
                    active: data
                });
                var nextRoute = {
                    name: "Search",
                    component: _Search2.default
                };
                this.props.navigator.push(nextRoute);
                _Storage2.default.delete('OrgFormno');
                _Storage2.default.delete('scode');
                _Storage2.default.delete('shildshop');
                _Storage2.default.delete('YuanDan');
                _Storage2.default.delete('Screen');
                _Storage2.default.delete('StateMent');
                _Storage2.default.delete('BQNumber');
                _Storage2.default.delete('YdCountm');
                _Storage2.default.delete('Modify');
                _Storage2.default.save('Name', '商品损溢');
                _Storage2.default.save('FormType', 'SYYW');
                _Storage2.default.save('ProYH', 'ProSY');
                _Storage2.default.save('YdCountm', '3');
                _Storage2.default.save('OrgFormno', "0");
                _Storage2.default.save('Date', this.state.active);
                _Storage2.default.save('valueOf', 'App_Client_ProSY');
                _Storage2.default.save('history', 'App_Client_ProSYQ');
                _Storage2.default.save('historyClass', 'App_Client_ProSYDetailQ');
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 179
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 180
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 181
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 182
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 183
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 185
                                }
                            },
                            this.state.invoice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.SYlist, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 188
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.BSlist, onPress: this.BaoSun.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 189
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(358                  ), style: styles.BSimage, __source: { // 358 = ../images/1_077.png
                                fileName: _jsxFileName,
                                lineNumber: 190
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.BStext, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 191
                                }
                            },
                            '\u62A5\u635F'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.BSlist, onPress: this.YiChu.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 195
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(359                  ), style: styles.BSimage, __source: { // 359 = ../images/1_071.png
                                fileName: _jsxFileName,
                                lineNumber: 196
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.BStext, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 197
                                }
                            },
                            '\u6EA2\u51FA'
                        )
                    )
                )
            );
        }
    }]);
    return SunYi;
}(_react.Component);

exports.default = SunYi;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 50,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    SYlist: {},
    BSlist: {
        paddingTop: 20,
        paddingBottom: 20,
        paddingLeft: 90,
        backgroundColor: "#ffffff",
        marginBottom: 1
    },
    BSimage: {
        position: "absolute",
        top: 22,
        left: 25
    },
    BStext: {
        color: "#333333",
        fontSize: 16
    }

});
}, 357, null, "myproject/app/SunYi.js");
__d(/* myproject/images/1_077.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":38,"height":24,"scales":[1],"hash":"3523f9b16235f1496788724518ce724c","name":"1_077","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 358, null, "myproject/images/1_077.png");
__d(/* myproject/images/1_071.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":42,"height":24,"scales":[1],"hash":"0a7febc3e5cc54d0862c29d6a0a767a5","name":"1_071","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 359, null, "myproject/images/1_071.png");
__d(/* myproject/app/Query.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\Query.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Search = require(350       ); // 350 = ./Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _Distrition_list = require(361                ); // 361 = ./Distrition_list

var _Distrition_list2 = babelHelpers.interopRequireDefault(_Distrition_list);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var Query = function (_Component) {
    babelHelpers.inherits(Query, _Component);

    function Query(props) {
        babelHelpers.classCallCheck(this, Query);

        var _this = babelHelpers.possibleConstructorReturn(this, (Query.__proto__ || Object.getPrototypeOf(Query)).call(this, props));

        _this.state = {
            show: false,
            Number: "",
            sCode1: "",
            active: "",
            Disting: ""
        };
        return _this;
    }

    babelHelpers.createClass(Query, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('invoice').then(function (tags) {
                _this2.setState({
                    invoice: tags
                });
            });

            _Storage2.default.get('Disting').then(function (tags) {
                _this2.setState({
                    Disting: tags
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_reloadView',
        value: function _reloadView(sCode) {
            sCode = String(sCode);
            this.setState({
                sCode1: sCode
            });
        }
    }, {
        key: 'Home',
        value: function Home() {
            if (this.state.Disting == "0") {
                var str = this.state.sCode1;
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                if (this.state.sCode1 == "") {
                    alert("请选择原始单号");
                } else {
                    var nextRoute = {
                        name: "主页",
                        component: _Index2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('OrgFormno');
                    _Storage2.default.delete('Screen');
                    _Storage2.default.delete('scode');
                    _Storage2.default.delete('shildshop');
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.delete('YuanDan');
                    _Storage2.default.delete('YdCountm');
                    _Storage2.default.delete('Modify');
                    _Storage2.default.save('YdCountm', '3');
                    _Storage2.default.save('OrgFormno', str);
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save('Name', '商品盘点');
                    _Storage2.default.save('valueOf', 'App_Client_ProPC');
                    _Storage2.default.save('history', 'App_Client_ProPCQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProPCDetailQ');
                    _Storage2.default.save('ProYH', 'ProPC');
                    _Storage2.default.save('Document', "商品盘点");
                }
            } else if (this.state.Disting == "1") {
                var str = this.state.sCode1;
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                if (this.state.sCode1 == "") {
                    alert("请选择原始单号");
                } else {
                    var nextRoute = {
                        name: "Search",
                        component: _Search2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('OrgFormno');
                    _Storage2.default.delete('Screen');
                    _Storage2.default.delete('scode');
                    _Storage2.default.delete('shildshop');
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.delete('YuanDan');
                    _Storage2.default.delete('YdCountm');
                    _Storage2.default.delete('Modify');
                    _Storage2.default.save('YdCountm', '3');
                    _Storage2.default.save('OrgFormno', str);
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save('Name', '商品盘点');
                    _Storage2.default.save('valueOf', 'App_Client_ProPC');
                    _Storage2.default.save('history', 'App_Client_ProPCQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProPCDetailQ');
                    _Storage2.default.save('ProYH', 'ProPC');
                    _Storage2.default.save('Document', "商品盘点");
                }
            }
        }
    }, {
        key: 'Search',
        value: function Search() {
            var _this3 = this;

            _Storage2.default.save('shopPandian', 'App_Client_NoEndPCQ');
            var nextRoute = {
                name: "Distrition_list",
                component: _Distrition_list2.default,
                params: {
                    reloadView: function reloadView(sCode) {
                        return _this3._reloadView(sCode);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 142
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 143
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 144
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 145
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 146
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 148
                                }
                            },
                            this.state.invoice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 152
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 153
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 154
                                }
                            },
                            '\u5355\u53F7:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.Search.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 156
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.sCode1,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u5355\u53F7',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 157
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.Search.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 169
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 170
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.search, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 173
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.determine, onPress: this.Home.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 174
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.determine1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 175
                                }
                            },
                            '\u786E\u5B9A'
                        )
                    )
                )
            );
        }
    }]);
    return Query;
}(_react.Component);

exports.default = Query;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 50,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    ContList: {
        height: 58,
        paddingLeft: 25,
        paddingRight: 15,
        paddingTop: 12,
        backgroundColor: "#ffffff",
        flexDirection: "row",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    listleft: {
        width: 60,
        marginTop: 6
    },
    listLeftText: {
        color: "#333333",
        fontSize: 16,
        textAlign: "right"
    },
    listcont: {
        flex: 7,
        paddingLeft: 5,
        paddingRight: 5
    },
    listContText: {
        color: "#333333",
        fontSize: 16
    },
    TextInput1: {
        paddingLeft: 5,
        paddingRight: 5,
        marginBottom: 5,
        fontSize: 16,
        color: "#333333"
    },
    search: {
        flexDirection: "row",
        marginTop: 30,
        paddingLeft: 25
    },
    textsearch: {
        marginLeft: 30,
        marginRight: 20,
        backgroundColor: "#f47882",
        borderRadius: 15,
        flex: 5,
        paddingTop: 10,
        paddingBottom: 10
    },
    textsearch1: {
        textAlign: "center",
        fontSize: 16,
        color: "#ffffff"
    },
    determine: {
        flex: 1,
        backgroundColor: "#ff4e4e",
        borderRadius: 3,
        paddingTop: 13,
        paddingBottom: 13,
        marginRight: 25
    },
    determine1: {
        textAlign: "center",
        fontSize: 16,
        color: "#ffffff"
    },
    images: {
        height: 50,
        paddingLeft: 30,
        borderBottomWidth: 1,
        borderBottomColor: "#cacccb",
        justifyContent: 'center'
    },
    Search: {
        width: 60,
        paddingTop: 8,
        paddingLeft: 15,
        backgroundColor: "#f5f5f5"
    }
});
}, 360, null, "myproject/app/Query.js");
__d(/* myproject/app/Distrition_list.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\Distrition_list.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var dbAdapter = new _DBAdapter2.default();
var db = void 0;

var Distrition_list = function (_Component) {
    babelHelpers.inherits(Distrition_list, _Component);

    function Distrition_list(props) {
        babelHelpers.classCallCheck(this, Distrition_list);

        var _this = babelHelpers.possibleConstructorReturn(this, (Distrition_list.__proto__ || Object.getPrototypeOf(Distrition_list)).call(this, props));

        _this.state = {
            search: "",
            LinkUrl: "",
            shopPandian: "",
            userName: "",
            Usercode: "",
            str2: "",
            DetailInfo: "",
            show: false,
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return true;
                } })
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(Distrition_list, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _Storage2.default.get('shopPandian').then(function (tags) {
                    _this2.setState({
                        shopPandian: tags
                    });
                });

                _Storage2.default.get('userName').then(function (tags) {
                    _this2.setState({
                        userName: tags
                    });
                });

                _Storage2.default.get('Usercode').then(function (tags) {
                    _this2.setState({
                        Usercode: tags
                    });
                });

                _Storage2.default.get('str2').then(function (tags) {
                    _this2.setState({
                        str2: tags
                    });
                });

                _Storage2.default.get('LinkUrl').then(function (tags) {
                    _this2.setState({
                        LinkUrl: tags
                    });
                });

                _Storage2.default.get('invoice').then(function (tags) {
                    _this2.setState({
                        invoice: tags
                    });
                });
                _this2.fetch();
            });
        }
    }, {
        key: 'fetch',
        value: function fetch() {
            var _this3 = this;

            _Storage2.default.get('ClientCode').then(function (tags) {
                var params = {
                    reqCode: "App_PosReq",
                    reqDetailCode: _this3.state.shopPandian,
                    ClientCode: tags,
                    sDateTime: Date.parse(new Date()),
                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + _this3.state.shopPandian + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                    username: _this3.state.userName,
                    usercode: _this3.state.Usercode,
                    shopcode: _this3.state.str2
                };

                _FetchUtils2.default.post(_this3.state.LinkUrl, JSON.stringify(params)).then(function (data) {
                    if (data.retcode == 1) {
                        var DetailInfo = data.DetailInfo;
                        console.log(DetailInfo);
                        _this3.dataRows = _this3.dataRows.concat(DetailInfo);
                        _this3.setState({
                            DetailInfo: DetailInfo
                        });
                        if (DetailInfo == null) {
                            return;
                        } else {
                            _this3.setState({
                                dataSource: _this3.state.dataSource.cloneWithRows(_this3.dataRows)
                            });
                        }
                    } else {}
                }, function (err) {
                    alert("网络请求失败");
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            this.props.navigator.pop();
        }
    }, {
        key: 'Search',
        value: function Search(value) {
            for (var i = 0; i < this.dataRows.length; i++) {
                var dataRow = this.dataRows[i];
                if ((dataRow.Formno + "").indexOf(value) >= 0) {
                    var str = this.dataRows.splice(i, 1);
                    this.dataRows.unshift(str[0]);
                    break;
                }
            }
            this.setState({
                dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
            });
        }
    }, {
        key: 'pressPop',
        value: function pressPop(rowData) {
            if (this.props.reloadView) {
                if (this.state.shopPandian == 'App_Client_NoEndPCQ' || this.state.shopPandian == 'App_Client_NOYSPSQ') {
                    this.props.reloadView(rowData.Formno);
                }
            }
            this.props.navigator.pop();
        }
    }, {
        key: 'pressPop1',
        value: function pressPop1(rowData) {
            if (this.props.SearchShopname) {
                if (this.state.shopPandian == 'App_Client_NOYSCGQ' || this.state.shopPandian == 'App_Client_NOYSXPCGQ') {
                    this.props.SearchShopname(rowData.Formno);
                }
            }
            if (this.props.SearchShopname1) {
                if (this.state.shopPandian == 'App_Client_NOYSCGQ' || this.state.shopPandian == 'App_Client_NOYSXPCGQ') {
                    this.props.SearchShopname1(rowData.suppcode);
                }
            }
            this.props.navigator.pop();
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this4 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { style: styles.header, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 164
                    }
                },
                this.state.shopPandian == 'App_Client_NoEndPCQ' || this.state.shopPandian == 'App_Client_NOYSPSQ' ? _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { onPress: function onPress() {
                            return _this4.pressPop(rowData);
                        }, style: styles.coding, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 167
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 168
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.codingText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 169
                                }
                            },
                            rowData.Formno
                        )
                    )
                ) : null,
                this.state.shopPandian == 'App_Client_NOYSCGQ' || this.state.shopPandian == 'App_Client_NOYSXPCGQ' ? _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { onPress: function onPress() {
                            return _this4.pressPop1(rowData);
                        }, style: styles.coding, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 175
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 176
                            }
                        },
                        rowData.Formno
                    )
                ) : null,
                this.state.shopPandian == 'App_Client_NOYSCGQ' || this.state.shopPandian == 'App_Client_NOYSXPCGQ' ? _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { onPress: function onPress() {
                            return _this4.pressPop1(rowData);
                        }, style: styles.name, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 181
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 182
                            }
                        },
                        rowData.suppcode
                    )
                ) : null
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 192
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Title, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 193
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, {
                        autofocus: '{true}',
                        returnKeyType: 'search',
                        placeholder: '\u641C\u7D22\u76F8\u5173\u5355\u53F7',
                        placeholderColor: '#323232',
                        underlineColorAndroid: 'transparent',
                        style: styles.Search,
                        onChangeText: function onChangeText(value) {
                            _this5.setState({
                                search: value
                            });
                            _this5.Search(value);
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 194
                        }
                    }),
                    _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                            fileName: _jsxFileName,
                            lineNumber: 208
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Right, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 209
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.Text1, onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 210
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Text, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 210
                                    }
                                },
                                '\u53D6\u6D88'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 213
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.head, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 214
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.coding, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 215
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 216
                                    }
                                },
                                '\u5355\u636E\u53F7'
                            )
                        ),
                        this.state.invoice == "商品验收" || this.state.invoice == "协配收货" ? _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 220
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 221
                                    }
                                },
                                '\u4F9B\u5E94\u5546'
                            )
                        ) : null
                    ),
                    this.state.DetailInfo == null ? _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Null, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 228
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.NullText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 229
                                }
                            },
                            '\u6682\u65E0\u6570\u636E~~~'
                        )
                    ) : _react2.default.createElement(_reactNative.ListView, {
                        style: styles.scrollview,
                        enableEmptySections: true,
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 233
                        }
                    })
                )
            );
        }
    }]);
    return Distrition_list;
}(_react.Component);

exports.default = Distrition_list;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    Title: {
        backgroundColor: "#ff4e4e",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 15,
        paddingBottom: 15,
        flexDirection: "row"
    },
    SearchImage: {
        position: "absolute",
        top: 22,
        left: 24
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 15,
        paddingTop: 6,
        paddingBottom: 6,
        fontSize: 14,
        flex: 1
    },
    Right: {
        width: 60,
        flexDirection: "row",
        paddingTop: 3,
        paddingLeft: 6
    },
    Text: {
        fontSize: 18,
        color: "#ffffff",
        paddingTop: 5,
        paddingLeft: 10
    },
    head: {
        flexDirection: "row",
        paddingTop: 13,
        paddingBottom: 13,
        paddingLeft: 25,
        paddingRight: 25
    },
    coding: {
        flex: 2,
        paddingLeft: 5
    },
    codingText: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    name: {
        flex: 1
    },
    header: {
        flexDirection: "row",
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    scrollview: {
        marginBottom: 120
    },
    Null: {
        marginLeft: 25,
        marginRight: 25,
        marginTop: 120
    },
    NullText: {
        color: "#cccccc",
        fontSize: 18,
        textAlign: "center"
    }

});
}, 361, null, "myproject/app/Distrition_list.js");
__d(/* myproject/images/2_03.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":40,"height":30,"scales":[1],"hash":"9cd4baa6e4eebb6a815ef0ade2d3961e","name":"2_03","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 362, null, "myproject/images/2_03.png");
__d(/* myproject/app/Distrition.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\Distrition.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Search = require(350       ); // 350 = ./Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _Distrition_list = require(361                ); // 361 = ./Distrition_list

var _Distrition_list2 = babelHelpers.interopRequireDefault(_Distrition_list);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var Distrition = function (_Component) {
    babelHelpers.inherits(Distrition, _Component);

    function Distrition(props) {
        babelHelpers.classCallCheck(this, Distrition);

        var _this = babelHelpers.possibleConstructorReturn(this, (Distrition.__proto__ || Object.getPrototypeOf(Distrition)).call(this, props));

        _this.state = {
            show: false,
            Number: "",
            invoice: "",
            sCode1: "",
            active: ""
        };
        return _this;
    }

    babelHelpers.createClass(Distrition, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('invoice').then(function (tags) {
                _this2.setState({
                    invoice: tags
                });
            });

            _Storage2.default.get('Disting').then(function (tags) {
                _this2.setState({
                    Disting: tags
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_reloadView',
        value: function _reloadView(sCode) {
            sCode = String(sCode);
            this.setState({
                sCode1: sCode
            });
        }
    }, {
        key: 'Home',
        value: function Home() {
            if (this.state.Disting == "0") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                this.setState({
                    active: data
                });
                var str = this.state.sCode1;
                var nextRoute = {
                    name: "主页",
                    component: _Index2.default
                };
                this.props.navigator.push(nextRoute);
                _Storage2.default.delete('shildshop');
                _Storage2.default.delete('StateMent');
                _Storage2.default.delete('BQNumber');
                _Storage2.default.delete('Modify');
                _Storage2.default.save('YdCountm', '2');
                _Storage2.default.save('YuanDan', '1');
                _Storage2.default.save('OrgFormno', str);
                _Storage2.default.save("scode", str);
                _Storage2.default.save('Date', this.state.active);
                _Storage2.default.save('Name', '配送收货');
                _Storage2.default.save('FormType', 'PSSHYW');
                _Storage2.default.save('valueOf', 'App_Client_ProPSSH');
                _Storage2.default.save('history', 'App_Client_ProPSSHQ');
                _Storage2.default.save('historyClass', 'App_Client_ProPSSHDetailQ');
                _Storage2.default.save('ProYH', 'ProPSSH');
                _Storage2.default.save('Screen', '1');
            } else if (this.state.Disting == "1") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                this.setState({
                    active: data
                });
                var str = this.state.sCode1;
                var nextRoute = {
                    name: "Search",
                    component: _Search2.default
                };
                this.props.navigator.push(nextRoute);
                _Storage2.default.delete('shildshop');
                _Storage2.default.delete('StateMent');
                _Storage2.default.delete('BQNumber');
                _Storage2.default.delete('Modify');
                _Storage2.default.save('YdCountm', '2');
                _Storage2.default.save('YuanDan', '1');
                _Storage2.default.save('OrgFormno', str);
                _Storage2.default.save("scode", str);
                _Storage2.default.save('Date', this.state.active);
                _Storage2.default.save('Name', '配送收货');
                _Storage2.default.save('FormType', 'PSSHYW');
                _Storage2.default.save('valueOf', 'App_Client_ProPSSH');
                _Storage2.default.save('history', 'App_Client_ProPSSHQ');
                _Storage2.default.save('historyClass', 'App_Client_ProPSSHDetailQ');
                _Storage2.default.save('ProYH', 'ProPSSH');
                _Storage2.default.save('Screen', '1');
            }
        }
    }, {
        key: 'Search',
        value: function Search() {
            var _this3 = this;

            _Storage2.default.save('shopPandian', 'App_Client_NOYSPSQ');
            var nextRoute = {
                name: "Distrition_list",
                component: _Distrition_list2.default,
                params: {
                    reloadView: function reloadView(sCode) {
                        return _this3._reloadView(sCode);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 160
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 161
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 162
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 163
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 164
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 166
                                }
                            },
                            this.state.invoice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 170
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 171
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 172
                                }
                            },
                            '\u5355\u53F7:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.Search.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 174
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.sCode1,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u5355\u53F7',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 175
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listimages, onPress: this.Search.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 187
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), style: styles.Image, __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 188
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.search, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 191
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.determine, onPress: this.Home.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 192
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.determine1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 193
                                }
                            },
                            '\u786E\u5B9A'
                        )
                    )
                )
            );
        }
    }]);
    return Distrition;
}(_react.Component);

exports.default = Distrition;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#ffffff'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 50,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    ContList: {
        height: 58,
        paddingLeft: 25,
        paddingRight: 15,
        paddingTop: 12,
        backgroundColor: "#ffffff",
        flexDirection: "row",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    listleft: {
        width: 60,
        marginTop: 6
    },
    listLeftText: {
        color: "#333333",
        fontSize: 16,
        textAlign: "right"
    },
    listcont: {
        flex: 7,
        paddingLeft: 5,
        paddingRight: 5
    },
    listContText: {
        color: "#333333",
        fontSize: 16
    },
    TextInput1: {
        paddingLeft: 5,
        paddingRight: 5,
        marginBottom: 5,
        fontSize: 16,
        color: "#333333"
    },
    search: {
        flexDirection: "row",
        marginTop: 30,
        paddingLeft: 25
    },
    textsearch: {
        marginLeft: 30,
        marginRight: 20,
        backgroundColor: "#f47882",
        borderRadius: 15,
        flex: 5,
        paddingTop: 10,
        paddingBottom: 10
    },
    textsearch1: {
        textAlign: "center",
        fontSize: 16,
        color: "#ffffff"
    },
    determine: {
        flex: 1,
        backgroundColor: "#ff4e4e",
        borderRadius: 3,
        paddingTop: 13,
        paddingBottom: 13,
        marginRight: 25
    },
    determine1: {
        textAlign: "center",
        fontSize: 16,
        color: "#ffffff"
    },
    images: {
        height: 50,
        paddingLeft: 30,
        borderBottomWidth: 1,
        borderBottomColor: "#cacccb",
        justifyContent: 'center'
    },
    Search: {
        width: 60,
        paddingTop: 8,
        paddingLeft: 15,
        backgroundColor: "#f5f5f5"
    }
});
}, 363, null, "myproject/app/Distrition.js");
__d(/* myproject/app/ProductCG.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\ProductCG.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Search = require(350       ); // 350 = ./Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _ProductCG_list = require(365               ); // 365 = ./ProductCG_list

var _ProductCG_list2 = babelHelpers.interopRequireDefault(_ProductCG_list);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _native = require(366     ); // 366 = native

var _native2 = babelHelpers.interopRequireDefault(_native);

var ProductCG = function (_Component) {
    babelHelpers.inherits(ProductCG, _Component);

    function ProductCG(props) {
        babelHelpers.classCallCheck(this, ProductCG);

        var _this = babelHelpers.possibleConstructorReturn(this, (ProductCG.__proto__ || Object.getPrototypeOf(ProductCG)).call(this, props));

        _this.state = {
            show: false,
            Number: "",
            sCode1: "",
            invoice: "",
            active: ""
        };
        return _this;
    }

    babelHelpers.createClass(ProductCG, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('invoice').then(function (tags) {
                _this2.setState({
                    invoice: tags
                });
            });

            _Storage2.default.get('Disting').then(function (tags) {
                _this2.setState({
                    Disting: tags
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'onclick',
        value: function onclick() {
            var _this3 = this;

            var nextRoute = {
                name: "ProductCG_list",
                component: _ProductCG_list2.default,
                params: {
                    reloadView: function reloadView(sCode) {
                        return _this3._reloadView(sCode);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_reloadView',
        value: function _reloadView(sCode) {
            sCode = String(sCode);
            this.setState({
                sCode1: sCode
            });
        }
    }, {
        key: 'Button',
        value: function Button() {
            if (this.state.Disting == "0") {
                var str = this.state.sCode1;
                if (this.state.sCode1 == "") {
                    alert("请选择供应商");
                } else {
                    var date = new Date();
                    var data = JSON.stringify(date.getTime());
                    var nextRoute = {
                        name: "Index",
                        component: _Index2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('OrgFormno');
                    _Storage2.default.delete('shildshop');
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.delete('YuanDan');
                    _Storage2.default.delete('Screen');
                    _Storage2.default.delete('Modify');
                    _Storage2.default.save('Name', '商品采购');
                    _Storage2.default.save('FormType', 'CGYW');
                    _Storage2.default.save('valueOf', 'App_Client_ProCG');
                    _Storage2.default.save('history', 'App_Client_ProCGQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProCGDetailQ');
                    _Storage2.default.save('ProYH', 'ProCG');
                    _Storage2.default.save('YdCountm', '3');
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save("scode", str);
                }
            } else if (this.state.Disting == "1") {
                var str = this.state.sCode1;
                if (this.state.sCode1 == "") {
                    alert("请选择供应商");
                } else {
                    var date = new Date();
                    var data = JSON.stringify(date.getTime());
                    var nextRoute = {
                        name: "Search",
                        component: _Search2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('OrgFormno');
                    _Storage2.default.delete('shildshop');
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.delete('YuanDan');
                    _Storage2.default.delete('Screen');
                    _Storage2.default.delete('Modify');
                    _Storage2.default.save('Name', '商品采购');
                    _Storage2.default.save('FormType', 'CGYW');
                    _Storage2.default.save('valueOf', 'App_Client_ProCG');
                    _Storage2.default.save('history', 'App_Client_ProCGQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProCGDetailQ');
                    _Storage2.default.save('ProYH', 'ProCG');
                    _Storage2.default.save('YdCountm', '3');
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save("scode", str);
                }
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 140
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 141
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 142
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 143
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 144
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 146
                                }
                            },
                            this.state.invoice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 150
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 151
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 152
                                }
                            },
                            '\u4F9B\u5E94\u5546:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.onclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 154
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.sCode1,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u4F9B\u5E94\u5546',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 155
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.onclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 167
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 168
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: styles.button, onPress: this.Button.bind(this), __source: {
                            fileName: _jsxFileName,
                            lineNumber: 171
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.buttonText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 172
                            }
                        },
                        '\u786E\u5B9A'
                    )
                )
            );
        }
    }]);
    return ProductCG;
}(_react.Component);

exports.default = ProductCG;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 50,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    ContList: {
        height: 58,
        paddingLeft: 25,
        paddingRight: 15,
        paddingTop: 12,
        backgroundColor: "#ffffff",
        flexDirection: "row",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    listleft: {
        width: 70,
        marginTop: 6
    },
    listLeftText: {
        color: "#333333",
        fontSize: 16,
        textAlign: "right"
    },
    listcont: {
        flex: 7,
        paddingLeft: 5,
        paddingRight: 5
    },
    listContText: {
        color: "#333333",
        fontSize: 16
    },
    TextInput1: {
        paddingLeft: 5,
        paddingRight: 5,
        paddingTop: 5,
        marginBottom: 5,
        fontSize: 16,
        color: "#333333"
    },
    button: {
        marginLeft: 25,
        marginRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ff4e4e",
        borderRadius: 3,
        marginTop: 30
    },
    buttonText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    }
});
}, 364, null, "myproject/app/ProductCG.js");
__d(/* myproject/app/ProductCG_list.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\ProductCG_list.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var dbAdapter = new _DBAdapter2.default();
var db = void 0;

var ProductCG_list = function (_Component) {
    babelHelpers.inherits(ProductCG_list, _Component);

    function ProductCG_list(props) {
        babelHelpers.classCallCheck(this, ProductCG_list);

        var _this = babelHelpers.possibleConstructorReturn(this, (ProductCG_list.__proto__ || Object.getPrototypeOf(ProductCG_list)).call(this, props));

        _this.state = {
            search: "",
            show: false,
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return true;
                } })
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(ProductCG_list, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _Storage2.default.get('invoice').then(function (tags) {
                    _this2.setState({
                        invoice: tags
                    });
                });
                _this2.fetch();
            });
        }
    }, {
        key: 'fetch',
        value: function fetch() {
            var _this3 = this;

            dbAdapter.selectAllData("tsuppset").then(function (rows) {
                for (var i = 0; i < rows.length; i++) {
                    var row = rows.item(i);
                    _this3.dataRows.push(row);
                }
                console.log(_this3.dataRows);
                _this3.setState({
                    dataSource: _this3.state.dataSource.cloneWithRows(_this3.dataRows)
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            this.props.navigator.pop();
        }
    }, {
        key: 'Search',
        value: function Search(value) {
            var _this4 = this;

            if (value == "") {
                this.abc = [];
                dbAdapter.selectAllData("tsuppset").then(function (rows) {
                    for (var i = 0; i < rows.length; i++) {
                        var row = rows.item(i);
                        _this4.abc.push(row);
                    }
                    _this4.setState({
                        dataSource: _this4.state.dataSource.cloneWithRows(_this4.abc)
                    });
                });
            } else if (value !== "") {
                for (var i = 0; i < this.dataRows.length; i++) {
                    var dataRow = this.dataRows[i];
                    if ((dataRow.sCode + "").indexOf(value) >= 0 || (dataRow.sname + "").indexOf(value) >= 0) {
                        var str = this.dataRows.splice(i, 1);
                        this.dataRows.unshift(str[0]);
                    }
                }
                this.setState({
                    dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
                });
            }
        }
    }, {
        key: 'pressPop',
        value: function pressPop(rowData) {
            if (this.props.reloadView) {
                this.props.reloadView(rowData.sCode);
            }
            this.props.navigator.pop();
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { style: styles.header, onPress: function onPress() {
                        return _this5.pressPop(rowData);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 100
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.coding, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 101
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 102
                            }
                        },
                        rowData.sCode
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.name, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 104
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 105
                            }
                        },
                        rowData.sname
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 113
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Title, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 114
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, {
                        autofocus: '{true}',
                        returnKeyType: 'search',
                        placeholder: '\u641C\u7D22\u76F8\u5173\u5355\u53F7',
                        placeholderColor: '#323232',
                        underlineColorAndroid: 'transparent',
                        style: styles.Search,
                        onChangeText: function onChangeText(value) {
                            _this6.setState({
                                search: value
                            });
                            _this6.Search(value);
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 115
                        }
                    }),
                    _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                            fileName: _jsxFileName,
                            lineNumber: 129
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Right, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 130
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.Text1, onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 131
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Text, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 131
                                    }
                                },
                                '\u53D6\u6D88'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 134
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.head, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 135
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.coding, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 136
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 137
                                    }
                                },
                                '\u7F16\u7801'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 139
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 140
                                    }
                                },
                                '\u540D\u79F0'
                            )
                        )
                    ),
                    _react2.default.createElement(_reactNative.ListView, {
                        style: styles.scrollview,
                        enableEmptySections: true,
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 143
                        }
                    })
                )
            );
        }
    }]);
    return ProductCG_list;
}(_react.Component);

exports.default = ProductCG_list;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    Title: {
        backgroundColor: "#ff4e4e",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 15,
        paddingBottom: 15,
        flexDirection: "row"
    },
    SearchImage: {
        position: "absolute",
        top: 22,
        left: 24
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 15,
        paddingTop: 6,
        paddingBottom: 6,
        fontSize: 14,
        flex: 1
    },
    Right: {
        width: 60,
        flexDirection: "row",
        paddingTop: 3,
        paddingLeft: 6
    },
    Text: {
        fontSize: 18,
        color: "#ffffff",
        paddingTop: 5,
        paddingLeft: 10
    },
    head: {
        flexDirection: "row",
        paddingTop: 13,
        paddingBottom: 13,
        paddingLeft: 25,
        paddingRight: 25
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    codingText: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    name: {
        flex: 1
    },
    header: {
        flexDirection: "row",
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    codingText1: {
        color: "#333333",
        fontSize: 16
    },
    name: {
        flex: 1
    },
    nameText1: {
        color: "#333333",
        fontSize: 16
    },
    scrollview: {
        marginBottom: 120
    }
});
}, 365, null, "myproject/app/ProductCG_list.js");
__d(/* react-native-modal-dropdown/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ModalDropdown = require(367                         ); // 367 = ./components/ModalDropdown

var _ModalDropdown2 = babelHelpers.interopRequireDefault(_ModalDropdown);

exports.default = _ModalDropdown2.default;
}, 366, null, "react-native-modal-dropdown/index.js");
__d(/* react-native-modal-dropdown/components/ModalDropdown.js */function(global, require, module, exports) {

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'D:\\myproject\\node_modules\\native\\components\\ModalDropdown.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var TOUCHABLE_ELEMENTS = ['TouchableHighlight', 'TouchableOpacity', 'TouchableWithoutFeedback', 'TouchableNativeFeedback'];

var ModalDropdown = function (_Component) {
  babelHelpers.inherits(ModalDropdown, _Component);

  function ModalDropdown(props) {
    babelHelpers.classCallCheck(this, ModalDropdown);

    var _this = babelHelpers.possibleConstructorReturn(this, (ModalDropdown.__proto__ || Object.getPrototypeOf(ModalDropdown)).call(this, props));

    _this._button = null;
    _this._buttonFrame = null;
    _this._nextValue = null;
    _this._nextIndex = null;

    _this.state = {
      disabled: props.disabled,
      accessible: !!props.accessible,
      loading: props.options === null || props.options === undefined,
      showDropdown: false,
      buttonText: props.defaultValue,
      selectedIndex: props.defaultIndex
    };
    return _this;
  }

  babelHelpers.createClass(ModalDropdown, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var buttonText = this._nextValue == null ? this.state.buttonText : this._nextValue.toString();
      var selectedIndex = this._nextIndex == null ? this.state.selectedIndex : this._nextIndex;
      if (selectedIndex < 0) {
        selectedIndex = nextProps.defaultIndex;
        if (selectedIndex < 0) {
          buttonText = nextProps.defaultValue;
        }
      }
      this._nextValue = "aaa";
      this._nextIndex = null;

      this.setState({
        disabled: nextProps.disabled,
        loading: nextProps.options == null,
        buttonText: buttonText,
        selectedIndex: selectedIndex
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({}, this.props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 104
          }
        }),
        this._renderButton(),
        this._renderModal()
      );
    }
  }, {
    key: '_updatePosition',
    value: function _updatePosition(callback) {
      var _this2 = this;

      if (this._button && this._button.measure) {
        this._button.measure(function (fx, fy, width, height, px, py) {
          _this2._buttonFrame = { x: px, y: py, w: width, h: height };
          callback && callback();
        });
      }
    }
  }, {
    key: 'show',
    value: function show() {
      var _this3 = this;

      this._updatePosition(function () {
        _this3.setState({
          showDropdown: true
        });
      });
    }
  }, {
    key: 'hide',
    value: function hide() {
      this.setState({
        showDropdown: false
      });
    }
  }, {
    key: 'select',
    value: function select(idx) {
      var value = this.props.defaultValue;
      if (idx == null || this.props.options == null || idx >= this.props.options.length) {
        idx = this.props.defaultIndex;
      }

      if (idx >= 0) {
        value = this.props.options[idx].toString();
      }

      this._nextValue = value;
      this._nextIndex = idx;

      this.setState({
        buttonText: value,
        selectedIndex: idx
      });
    }
  }, {
    key: '_renderButton',
    value: function _renderButton() {
      var _this4 = this;

      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        { ref: function ref(button) {
            return _this4._button = button;
          },
          disabled: this.props.disabled,
          accessible: this.props.accessible,
          onPress: this._onButtonPress.bind(this), __source: {
            fileName: _jsxFileName,
            lineNumber: 155
          }
        },
        this.props.children || _react2.default.createElement(
          _reactNative.View,
          { style: styles.button, __source: {
              fileName: _jsxFileName,
              lineNumber: 162
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            { style: [styles.buttonText, this.props.textStyle],
              numberOfLines: 1, __source: {
                fileName: _jsxFileName,
                lineNumber: 163
              }
            },
            this.state.buttonText
          )
        )
      );
    }
  }, {
    key: '_onButtonPress',
    value: function _onButtonPress() {
      if (!this.props.onDropdownWillShow || this.props.onDropdownWillShow() !== false) {
        this.show();
      }
    }
  }, {
    key: '_renderModal',
    value: function _renderModal() {
      if (this.state.showDropdown && this._buttonFrame) {
        var frameStyle = this._calcPosition();
        var animationType = this.props.animated ? 'fade' : 'none';
        return _react2.default.createElement(
          _reactNative.Modal,
          { animationType: animationType,
            transparent: true,
            onRequestClose: this._onRequestClose.bind(this),
            supportedOrientations: ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'], __source: {
              fileName: _jsxFileName,
              lineNumber: 186
            }
          },
          _react2.default.createElement(
            _reactNative.TouchableWithoutFeedback,
            { accessible: this.props.accessible,
              disabled: !this.state.showDropdown,
              onPress: this._onModalPress.bind(this), __source: {
                fileName: _jsxFileName,
                lineNumber: 190
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              { style: styles.modal, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 193
                }
              },
              _react2.default.createElement(
                _reactNative.View,
                { style: [styles.dropdown, this.props.dropdownStyle, frameStyle], __source: {
                    fileName: _jsxFileName,
                    lineNumber: 194
                  }
                },
                this.state.loading ? this._renderLoading() : this._renderDropdown()
              )
            )
          )
        );
      }
    }
  }, {
    key: '_calcPosition',
    value: function _calcPosition() {
      var dimensions = _reactNative.Dimensions.get('window');
      var windowWidth = dimensions.width;
      var windowHeight = dimensions.height;

      var dropdownHeight = this.props.dropdownStyle && _reactNative.StyleSheet.flatten(this.props.dropdownStyle).height || _reactNative.StyleSheet.flatten(styles.dropdown).height;

      var bottomSpace = windowHeight - this._buttonFrame.y - this._buttonFrame.h;
      var rightSpace = windowWidth - this._buttonFrame.x;
      var showInBottom = bottomSpace >= dropdownHeight || bottomSpace >= this._buttonFrame.y;
      var showInLeft = rightSpace >= this._buttonFrame.x;

      var style = {
        height: dropdownHeight,
        top: showInBottom ? this._buttonFrame.y + this._buttonFrame.h : Math.max(0, this._buttonFrame.y - dropdownHeight)
      };

      if (showInLeft) {
        style.left = this._buttonFrame.x;
      } else {
        var dropdownWidth = this.props.dropdownStyle && _reactNative.StyleSheet.flatten(this.props.dropdownStyle).width || this.props.style && _reactNative.StyleSheet.flatten(this.props.style).width || -1;
        if (dropdownWidth !== -1) {
          style.width = dropdownWidth;
        }
        style.right = rightSpace - this._buttonFrame.w;
      }

      if (this.props.adjustFrame) {
        style = this.props.adjustFrame(style) || style;
      }

      return style;
    }
  }, {
    key: '_onRequestClose',
    value: function _onRequestClose() {
      if (!this.props.onDropdownWillHide || this.props.onDropdownWillHide() !== false) {
        this.hide();
      }
    }
  }, {
    key: '_onModalPress',
    value: function _onModalPress() {
      if (!this.props.onDropdownWillHide || this.props.onDropdownWillHide() !== false) {
        this.hide();
      }
    }
  }, {
    key: '_renderLoading',
    value: function _renderLoading() {
      return _react2.default.createElement(_reactNative.ActivityIndicator, { size: 'small', __source: {
          fileName: _jsxFileName,
          lineNumber: 256
        }
      });
    }
  }, {
    key: '_renderDropdown',
    value: function _renderDropdown() {
      return _react2.default.createElement(_reactNative.ListView, { style: styles.list,
        dataSource: this._dataSource,
        renderRow: this._renderRow.bind(this),
        renderSeparator: this.props.renderSeparator || this._renderSeparator.bind(this),
        automaticallyAdjustContentInsets: false,
        showsVerticalScrollIndicator: this.props.showsVerticalScrollIndicator,
        keyboardShouldPersistTaps: this.props.keyboardShouldPersistTaps,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 262
        }
      });
    }
  }, {
    key: '_renderRow',
    value: function _renderRow(rowData, sectionID, rowID, highlightRow) {
      var _this5 = this;

      var key = 'row_' + rowID;
      var highlighted = rowID == this.state.selectedIndex;
      var row = !this.props.renderRow ? _react2.default.createElement(
        _reactNative.Text,
        { style: [styles.rowText, this.props.dropdownTextStyle, highlighted && styles.highlightedRowText, highlighted && this.props.dropdownTextHighlightStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 284
          }
        },
        rowData
      ) : this.props.renderRow(rowData, rowID, highlighted);
      var preservedProps = {
        key: key,
        accessible: this.props.accessible,
        onPress: function onPress() {
          return _this5._onRowPress(rowData, sectionID, rowID, highlightRow);
        }
      };
      if (TOUCHABLE_ELEMENTS.find(function (name) {
        return name == row.type.displayName;
      })) {
        var props = babelHelpers.extends({}, row.props);
        props.key = preservedProps.key;
        props.onPress = preservedProps.onPress;
        switch (row.type.displayName) {
          case 'TouchableHighlight':
            {
              return _react2.default.createElement(
                _reactNative.TouchableHighlight,
                babelHelpers.extends({}, props, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 307
                  }
                }),
                row.props.children
              );
            }
            break;
          case 'TouchableOpacity':
            {
              return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                babelHelpers.extends({}, props, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 316
                  }
                }),
                row.props.children
              );
            }
            break;
          case 'TouchableWithoutFeedback':
            {
              return _react2.default.createElement(
                _reactNative.TouchableWithoutFeedback,
                babelHelpers.extends({}, props, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 325
                  }
                }),
                row.props.children
              );
            }
            break;
          case 'TouchableNativeFeedback':
            {
              return _react2.default.createElement(
                _reactNative.TouchableNativeFeedback,
                babelHelpers.extends({}, props, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 334
                  }
                }),
                row.props.children
              );
            }
            break;
          default:
            break;
        }
      }
      return _react2.default.createElement(
        _reactNative.TouchableHighlight,
        babelHelpers.extends({}, preservedProps, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 345
          }
        }),
        row
      );
    }
  }, {
    key: '_onRowPress',
    value: function _onRowPress(rowData, sectionID, rowID, highlightRow) {
      if (!this.props.onSelect || this.props.onSelect(rowID, rowData) !== false) {
        highlightRow(sectionID, rowID);
        this._nextValue = rowData;
        this._nextIndex = rowID;
        this.setState({
          buttonText: rowData.toString(),
          selectedIndex: rowID
        });
      }
      if (!this.props.onDropdownWillHide || this.props.onDropdownWillHide() !== false) {
        this.setState({
          showDropdown: false
        });
      }
    }
  }, {
    key: '_renderSeparator',
    value: function _renderSeparator(sectionID, rowID, adjacentRowHighlighted) {
      var key = 'spr_' + rowID;
      return _react2.default.createElement(_reactNative.View, { style: styles.separator,
        key: key,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 372
        }
      });
    }
  }, {
    key: '_dataSource',
    get: function get() {
      var ds = new _reactNative.ListView.DataSource({
        rowHasChanged: function rowHasChanged(r1, r2) {
          return r1 !== r2;
        }
      });
      return ds.cloneWithRows(this.props.options);
    }
  }]);
  return ModalDropdown;
}(_react.Component);

ModalDropdown.propTypes = {
  disabled: _react.PropTypes.bool,
  defaultIndex: _react.PropTypes.number,
  defaultValue: _react.PropTypes.string,
  options: _react.PropTypes.array,

  accessible: _react.PropTypes.bool,
  animated: _react.PropTypes.bool,
  showsVerticalScrollIndicator: _react.PropTypes.bool,
  keyboardShouldPersistTaps: _react.PropTypes.string,

  style: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.object, _react.PropTypes.array]),
  textStyle: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.object, _react.PropTypes.array]),
  dropdownStyle: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.object, _react.PropTypes.array]),
  dropdownTextStyle: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.object, _react.PropTypes.array]),
  dropdownTextHighlightStyle: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.object, _react.PropTypes.array]),

  adjustFrame: _react.PropTypes.func,
  renderRow: _react.PropTypes.func,
  renderSeparator: _react.PropTypes.func,

  onDropdownWillShow: _react.PropTypes.func,
  onDropdownWillHide: _react.PropTypes.func,
  onSelect: _react.PropTypes.func
};
exports.default = ModalDropdown;


var styles = _reactNative.StyleSheet.create({
  button: {
    justifyContent: 'center'
  },
  buttonText: {
    fontSize: 12
  },
  modal: {
    flexGrow: 1
  },
  dropdown: {
    height: (33 + _reactNative.StyleSheet.hairlineWidth) * 5,
    backgroundColor: '#f5f5f5',
    paddingTop: 5,
    paddingLeft: 15,
    paddingRight: 5,
    marginRight: 175
  },
  loading: {
    alignSelf: 'center'
  },
  list: {},
  rowText: {
    paddingHorizontal: 6,
    paddingVertical: 10,
    fontSize: 11,
    backgroundColor: '#f5f5f5',
    textAlignVertical: 'center'
  },
  highlightedRowText: {
    color: '#333333'
  },
  separator: {
    height: _reactNative.StyleSheet.hairlineWidth
  }
});
}, 367, null, "react-native-modal-dropdown/components/ModalDropdown.js");
__d(/* myproject/app/ProductYS.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\ProductYS.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Search = require(350       ); // 350 = ./Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _Distrition_list = require(361                ); // 361 = ./Distrition_list

var _Distrition_list2 = babelHelpers.interopRequireDefault(_Distrition_list);

var _ProductCG_list = require(365               ); // 365 = ./ProductCG_list

var _ProductCG_list2 = babelHelpers.interopRequireDefault(_ProductCG_list);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _native = require(366     ); // 366 = native

var _native2 = babelHelpers.interopRequireDefault(_native);

var ProductCG = function (_Component) {
    babelHelpers.inherits(ProductCG, _Component);

    function ProductCG(props) {
        babelHelpers.classCallCheck(this, ProductCG);

        var _this = babelHelpers.possibleConstructorReturn(this, (ProductCG.__proto__ || Object.getPrototypeOf(ProductCG)).call(this, props));

        _this.state = {
            show: false,
            Number: "",
            sCode1: "",
            suppcode1: "",
            active: ""
        };
        return _this;
    }

    babelHelpers.createClass(ProductCG, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('invoice').then(function (tags) {
                _this2.setState({
                    invoice: tags
                });
            });

            _Storage2.default.get('Disting').then(function (tags) {
                _this2.setState({
                    Disting: tags
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'onclick',
        value: function onclick() {
            var _this3 = this;

            var nextRoute = {
                name: "ProductCG_list",
                component: _ProductCG_list2.default,
                params: {
                    reloadView: function reloadView(sCode) {
                        return _this3._reloadView(sCode);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_reloadView',
        value: function _reloadView(sCode) {
            sCode = String(sCode);
            this.setState({
                sCode1: sCode
            });
        }
    }, {
        key: 'SearchShopname',
        value: function SearchShopname(Suppcode) {
            Suppcode = String(Suppcode);
            this.setState({
                suppcode1: Suppcode
            });
        }
    }, {
        key: 'SearchShopname1',
        value: function SearchShopname1(Suppcode1) {
            Suppcode1 = String(Suppcode1);
            this.setState({
                sCode1: Suppcode1
            });
        }
    }, {
        key: 'Button',
        value: function Button() {
            if (this.state.Disting == "0") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                var str = this.state.sCode1;
                var str1 = this.state.suppcode1;
                if (this.state.sCode1 == "") {
                    alert("请选择供应商");
                } else {
                    _Storage2.default.delete('YuanDan');
                    var nextRoute = {
                        name: "Index",
                        component: _Index2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('shildshop');
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.save('YdCountm', '2');
                    _Storage2.default.save('OrgFormno', str1);
                    _Storage2.default.save('Name', '商品验收');
                    _Storage2.default.save('FormType', 'YSYW');
                    _Storage2.default.save('valueOf', 'App_Client_ProYS');
                    _Storage2.default.save('history', 'App_Client_ProYSQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProYSDetailQ');
                    _Storage2.default.save('ProYH', 'ProYS');
                    _Storage2.default.save('YuanDan', '1');
                    _Storage2.default.save('Screen', '1');
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save("scode", str);
                    if (this.state.suppcode1 == "") {
                        _Storage2.default.save('Modify', '1');
                    }
                }
            } else if (this.state.Disting == "1") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                var str = this.state.sCode1;
                var str1 = this.state.suppcode1;
                if (this.state.sCode1 == "") {
                    alert("请选择供应商");
                } else {
                    var date = new Date();
                    var data = JSON.stringify(date.getTime());
                    var nextRoute = {
                        name: "Search",
                        component: _Search2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('shildshop');
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.save('YdCountm', '2');
                    _Storage2.default.save('OrgFormno', str1);
                    _Storage2.default.save('Name', '商品验收');
                    _Storage2.default.save('FormType', 'YSYW');
                    _Storage2.default.save('valueOf', 'App_Client_ProYS');
                    _Storage2.default.save('history', 'App_Client_ProYSQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProYSDetailQ');
                    _Storage2.default.save('ProYH', 'ProYS');
                    _Storage2.default.save('YuanDan', '1');
                    _Storage2.default.save('Screen', '1');
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save("scode", str);
                    if (this.state.suppcode1 == "") {
                        _Storage2.default.save('Modify', '1');
                    }
                }
            }
        }
    }, {
        key: 'Search',
        value: function Search() {
            var _this4 = this;

            _Storage2.default.save('shopPandian', 'App_Client_NOYSCGQ');
            var nextRoute = {
                name: "Distrition_list",
                component: _Distrition_list2.default,
                params: {
                    SearchShopname: function SearchShopname(Suppcode) {
                        return _this4.SearchShopname(Suppcode);
                    },
                    SearchShopname1: function SearchShopname1(Suppcode1) {
                        return _this4.SearchShopname1(Suppcode1);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 174
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 175
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 176
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 177
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 178
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 180
                                }
                            },
                            this.state.invoice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 184
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 185
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 186
                                }
                            },
                            '\u4F9B\u5E94\u5546:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.onclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 188
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.sCode1,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u4F9B\u5E94\u5546',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 189
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listimages, onPress: this.onclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 201
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), style: styles.Image, __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 202
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 205
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 206
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 207
                                }
                            },
                            '\u91C7\u8D2D\u5355:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.Search.bind(this), style: styles.listcont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 209
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.suppcode1,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u91C7\u8D2D\u5355',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 210
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listimages, onPress: this.Search.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 222
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), style: styles.Image, __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 223
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: styles.button, onPress: this.Button.bind(this), __source: {
                            fileName: _jsxFileName,
                            lineNumber: 226
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.buttonText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 227
                            }
                        },
                        '\u786E\u5B9A'
                    )
                )
            );
        }
    }]);
    return ProductCG;
}(_react.Component);

exports.default = ProductCG;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 50,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    ContList: {
        height: 58,
        paddingLeft: 25,
        paddingRight: 15,
        paddingTop: 12,
        backgroundColor: "#ffffff",
        flexDirection: "row",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    listleft: {
        width: 70,
        marginTop: 6
    },
    listLeftText: {
        color: "#333333",
        fontSize: 16,
        textAlign: "right"
    },
    listcont: {
        flex: 7,
        paddingLeft: 5,
        paddingRight: 5
    },
    listContText: {
        color: "#333333",
        fontSize: 16
    },
    TextInput1: {
        width: 200,
        paddingLeft: 5,
        paddingRight: 5,
        marginBottom: 5,
        fontSize: 16,
        color: "#333333"
    },
    button: {
        marginLeft: 25,
        marginRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ff4e4e",
        borderRadius: 3,
        marginTop: 30
    },
    buttonText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    }
});
}, 368, null, "myproject/app/ProductYS.js");
__d(/* myproject/app/ProductXP.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\ProductXP.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Search = require(350       ); // 350 = ./Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _ProductCG_list = require(365               ); // 365 = ./ProductCG_list

var _ProductCG_list2 = babelHelpers.interopRequireDefault(_ProductCG_list);

var _ProductXP_list = require(370               ); // 370 = ./ProductXP_list

var _ProductXP_list2 = babelHelpers.interopRequireDefault(_ProductXP_list);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _native = require(366     ); // 366 = native

var _native2 = babelHelpers.interopRequireDefault(_native);

var ProductCG = function (_Component) {
    babelHelpers.inherits(ProductCG, _Component);

    function ProductCG(props) {
        babelHelpers.classCallCheck(this, ProductCG);

        var _this = babelHelpers.possibleConstructorReturn(this, (ProductCG.__proto__ || Object.getPrototypeOf(ProductCG)).call(this, props));

        _this.state = {
            show: false,
            Number: "",
            sCode1: "",
            shopname1: "",
            active: ""
        };
        return _this;
    }

    babelHelpers.createClass(ProductCG, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('invoice').then(function (tags) {
                _this2.setState({
                    invoice: tags
                });
            });

            _Storage2.default.get('Disting').then(function (tags) {
                _this2.setState({
                    Disting: tags
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'onclick',
        value: function onclick() {
            var _this3 = this;

            var nextRoute = {
                name: "ProductCG_list",
                component: _ProductCG_list2.default,
                params: {
                    reloadView: function reloadView(sCode) {
                        return _this3._reloadView(sCode);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_reloadView',
        value: function _reloadView(sCode) {
            sCode = String(sCode);
            this.setState({
                sCode1: sCode
            });
        }
    }, {
        key: 'Monclick',
        value: function Monclick() {
            var _this4 = this;

            var nextRoute = {
                name: "ProductXP_list",
                component: _ProductXP_list2.default,
                params: {
                    reloadShopname: function reloadShopname(shopname) {
                        return _this4._reloadShopname(shopname);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_reloadShopname',
        value: function _reloadShopname(shopname) {
            shopname = String(shopname);
            this.setState({
                shopname1: shopname
            });
        }
    }, {
        key: 'Button',
        value: function Button() {
            if (this.state.Disting == "0") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                var str = this.state.sCode1;
                var str1 = this.state.shopname1;
                if (this.state.sCode1 == "") {
                    alert("请选择供应商");
                } else if (this.state.shopname1 == "") {
                    alert("请选择机构信息");
                } else {
                    var nextRoute = {
                        name: "Index",
                        component: _Index2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('YuanDan');
                    _Storage2.default.delete('Screen');
                    _Storage2.default.delete('OrgFormno');
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.delete('Modify');
                    _Storage2.default.save('YdCountm', '3');
                    _Storage2.default.save('Name', '协配采购');
                    _Storage2.default.save('FormType', 'XPCGYW');
                    _Storage2.default.save('valueOf', 'App_Client_ProXPCG');
                    _Storage2.default.save('history', 'App_Client_ProXPCGQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProXPCGDetailQ');
                    _Storage2.default.save('ProYH', 'ProXPCG');
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save("scode", str);
                    _Storage2.default.save('shildshop', str1);
                }
            } else if (this.state.Disting == "1") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                var str = this.state.sCode1;
                var str1 = this.state.shopname1;
                if (this.state.sCode1 == "") {
                    alert("请选择供应商");
                } else if (this.state.shopname1 == "") {
                    alert("请选择机构信息");
                } else {
                    var nextRoute = {
                        name: "Search",
                        component: _Search2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('YuanDan');
                    _Storage2.default.delete('Screen');
                    _Storage2.default.delete('OrgFormno');
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.delete('Modify');
                    _Storage2.default.save('YdCountm', '3');
                    _Storage2.default.save('Name', '协配采购');
                    _Storage2.default.save('FormType', 'XPCGYW');
                    _Storage2.default.save('valueOf', 'App_Client_ProXPCG');
                    _Storage2.default.save('history', 'App_Client_ProXPCGQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProXPCGDetailQ');
                    _Storage2.default.save('ProYH', 'ProXPCG');
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save("scode", str);
                    _Storage2.default.save('shildshop', str1);
                }
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 163
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 164
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 165
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 166
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 167
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 169
                                }
                            },
                            this.state.invoice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 173
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 174
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 175
                                }
                            },
                            '\u4F9B\u5E94\u5546:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.onclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 177
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.sCode1,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u4F9B\u5E94\u5546',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 178
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listimages, onPress: this.onclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 190
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), style: styles.Image, __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 191
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 194
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 195
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 196
                                }
                            },
                            '\u673A\u6784:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.Monclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 198
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.shopname1,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u673A\u6784\u4FE1\u606F',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 199
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listimages, onPress: this.Monclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 211
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), style: styles.Image, __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 212
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: styles.button, onPress: this.Button.bind(this), __source: {
                            fileName: _jsxFileName,
                            lineNumber: 215
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.buttonText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 216
                            }
                        },
                        '\u786E\u5B9A'
                    )
                )
            );
        }
    }]);
    return ProductCG;
}(_react.Component);

exports.default = ProductCG;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 50,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    ContList: {
        height: 58,
        paddingLeft: 25,
        paddingRight: 15,
        paddingTop: 12,
        backgroundColor: "#ffffff",
        flexDirection: "row",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    listleft: {
        width: 70,
        marginTop: 6
    },
    listLeftText: {
        color: "#333333",
        fontSize: 16,
        textAlign: "right"
    },
    listcont: {
        flex: 7,
        paddingLeft: 5,
        paddingRight: 5
    },
    listContText: {
        color: "#333333",
        fontSize: 16
    },
    TextInput1: {
        paddingLeft: 5,
        paddingRight: 5,
        marginBottom: 5,
        fontSize: 16,
        color: "#333333"
    },
    button: {
        marginLeft: 25,
        marginRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ff4e4e",
        borderRadius: 3,
        marginTop: 30
    },
    buttonText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    }
});
}, 369, null, "myproject/app/ProductXP.js");
__d(/* myproject/app/ProductXP_list.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\ProductXP_list.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var dbAdapter = new _DBAdapter2.default();
var db = void 0;

var ProductXP_list = function (_Component) {
    babelHelpers.inherits(ProductXP_list, _Component);

    function ProductXP_list(props) {
        babelHelpers.classCallCheck(this, ProductXP_list);

        var _this = babelHelpers.possibleConstructorReturn(this, (ProductXP_list.__proto__ || Object.getPrototypeOf(ProductXP_list)).call(this, props));

        _this.state = {
            search: "",
            show: false,
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return true;
                } })
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(ProductXP_list, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _Storage2.default.get('invoice').then(function (tags) {
                    _this2.setState({
                        invoice: tags
                    });
                });

                _this2.fetch();
            });
        }
    }, {
        key: 'fetch',
        value: function fetch() {
            var _this3 = this;

            _Storage2.default.get('code').then(function (tags) {
                dbAdapter.selectXPShopCode(tags).then(function (rows) {
                    for (var i = 0; i < rows.length; i++) {
                        var row = rows.item(i);
                        _this3.dataRows.push(row);
                    }
                    _this3.setState({
                        dataSource: _this3.state.dataSource.cloneWithRows(_this3.dataRows)
                    });
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            this.props.navigator.pop();
        }
    }, {
        key: 'Search',
        value: function Search(value) {
            for (var i = 0; i < this.dataRows.length; i++) {
                var temp = this.dataRows[0];
                var dataRow = this.dataRows[i];
                if ((dataRow.shopcode + "").indexOf(value) >= 0) {
                    this.dataRows[0] = dataRow;
                    this.dataRows[i] = temp;
                    break;
                }
            }
            this.setState({
                dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
            });
        }
    }, {
        key: 'pressPop',
        value: function pressPop(rowData) {
            var Data = rowData.shopcode;
            if (this.props.reloadShopname) {
                this.props.reloadShopname(Data);
            }
            this.props.navigator.pop();
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this4 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { style: styles.header, onPress: function onPress() {
                        return _this4.pressPop(rowData);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 93
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.coding, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 94
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 95
                            }
                        },
                        rowData.shopcode
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.name, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 97
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 98
                            }
                        },
                        rowData.shopname
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 106
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Title, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 107
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, {
                        autofocus: '{true}',
                        returnKeyType: 'search',
                        placeholder: '\u641C\u7D22\u76F8\u5173\u5355\u53F7',
                        placeholderColor: '#323232',
                        underlineColorAndroid: 'transparent',
                        style: styles.Search,
                        onChangeText: function onChangeText(value) {
                            _this5.setState({
                                search: value
                            });
                            _this5.Search(value);
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 108
                        }
                    }),
                    _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                            fileName: _jsxFileName,
                            lineNumber: 122
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Right, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 123
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.Text1, onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 124
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Text, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 124
                                    }
                                },
                                '\u53D6\u6D88'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 127
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.head, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 128
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.coding, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 129
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 130
                                    }
                                },
                                '\u673A\u6784\u53F7'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 132
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 133
                                    }
                                },
                                '\u540D\u79F0'
                            )
                        )
                    ),
                    _react2.default.createElement(_reactNative.ListView, {
                        style: styles.scrollview,
                        enableEmptySections: true,
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 137
                        }
                    })
                )
            );
        }
    }]);
    return ProductXP_list;
}(_react.Component);

exports.default = ProductXP_list;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    Title: {
        backgroundColor: "#ff4e4e",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 15,
        paddingBottom: 15,
        flexDirection: "row"
    },
    SearchImage: {
        position: "absolute",
        top: 22,
        left: 24
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 15,
        paddingTop: 6,
        paddingBottom: 6,
        fontSize: 14,
        flex: 1
    },
    Right: {
        width: 60,
        flexDirection: "row",
        paddingTop: 3,
        paddingLeft: 6
    },
    Text: {
        fontSize: 18,
        color: "#ffffff",
        paddingTop: 5,
        paddingLeft: 10
    },
    head: {
        flexDirection: "row",
        paddingTop: 13,
        paddingBottom: 13,
        paddingLeft: 25,
        paddingRight: 25
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    codingText: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    name: {
        flex: 1
    },
    header: {
        flexDirection: "row",
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    name: {
        flex: 1
    },
    scrollview: {
        marginBottom: 120
    }
});
}, 370, null, "myproject/app/ProductXP_list.js");
__d(/* myproject/app/ProductSH.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\ProductSH.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Search = require(350       ); // 350 = ./Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _ProductCG_list = require(365               ); // 365 = ./ProductCG_list

var _ProductCG_list2 = babelHelpers.interopRequireDefault(_ProductCG_list);

var _ProductXP_list = require(370               ); // 370 = ./ProductXP_list

var _ProductXP_list2 = babelHelpers.interopRequireDefault(_ProductXP_list);

var _Distrition_list = require(361                ); // 361 = ./Distrition_list

var _Distrition_list2 = babelHelpers.interopRequireDefault(_Distrition_list);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _native = require(366     ); // 366 = native

var _native2 = babelHelpers.interopRequireDefault(_native);

var ProductCG = function (_Component) {
    babelHelpers.inherits(ProductCG, _Component);

    function ProductCG(props) {
        babelHelpers.classCallCheck(this, ProductCG);

        var _this = babelHelpers.possibleConstructorReturn(this, (ProductCG.__proto__ || Object.getPrototypeOf(ProductCG)).call(this, props));

        _this.state = {
            show: false,
            Number: "",
            sCode1: "",
            shopname1: "",
            suppcode1: "",
            active: ""
        };
        return _this;
    }

    babelHelpers.createClass(ProductCG, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('invoice').then(function (tags) {
                _this2.setState({
                    invoice: tags
                });
            });

            _Storage2.default.get('Disting').then(function (tags) {
                _this2.setState({
                    Disting: tags
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'onclick',
        value: function onclick() {
            var _this3 = this;

            var nextRoute = {
                name: "ProductCG_list",
                component: _ProductCG_list2.default,
                params: {
                    reloadView: function reloadView(sCode) {
                        return _this3._reloadView(sCode);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_reloadView',
        value: function _reloadView(sCode) {
            sCode = String(sCode);
            this.setState({
                sCode1: sCode
            });
        }
    }, {
        key: '_reloadShopname',
        value: function _reloadShopname(shopname) {
            shopname = String(shopname);
            this.setState({
                shopname1: shopname
            });
        }
    }, {
        key: 'SearchShopname',
        value: function SearchShopname(Suppcode) {
            Suppcode = String(Suppcode);
            this.setState({
                suppcode1: Suppcode
            });
        }
    }, {
        key: 'SearchShopname1',
        value: function SearchShopname1(Suppcode1) {
            Suppcode1 = String(Suppcode1);
            this.setState({
                sCode1: Suppcode1
            });
        }
    }, {
        key: 'Button',
        value: function Button() {
            if (this.state.Disting == "0") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                var str = this.state.sCode1;
                var str1 = this.state.shopname1;
                var str2 = this.state.suppcode1;
                if (this.state.sCode1 == "") {
                    alert("请选择供应商");
                } else {
                    var nextRoute = {
                        name: "Index",
                        component: _Index2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.save('YdCountm', '2');
                    _Storage2.default.save('OrgFormno', str2);
                    _Storage2.default.save('Name', '协配收货');
                    _Storage2.default.save('FormType', 'XPYSYW');
                    _Storage2.default.save('valueOf', 'App_Client_ProXPYS');
                    _Storage2.default.save('history', 'App_Client_ProXPYSQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProXPYSDetailQ');
                    _Storage2.default.save('ProYH', 'ProXPYS');
                    _Storage2.default.save('YuanDan', '1');
                    _Storage2.default.save('Screen', '1');
                    _Storage2.default.save('shopPandian', 'App_Client_NOYSXPCGQ');
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save("scode", str);
                    _Storage2.default.save('shildshop', str1);
                    if (this.state.suppcode1 == "") {
                        _Storage2.default.save('Modify', '1');
                    }
                }
            } else if (this.state.Disting == "1") {
                var date = new Date();
                var data = JSON.stringify(date.getTime());
                var str = this.state.sCode1;
                var str1 = this.state.shopname1;
                var str2 = this.state.suppcode1;
                if (this.state.sCode1 == "") {
                    alert("请选择供应商");
                } else {
                    var nextRoute = {
                        name: "Search",
                        component: _Search2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.save('YdCountm', '2');
                    _Storage2.default.save('OrgFormno', str2);
                    _Storage2.default.save('Name', '协配收货');
                    _Storage2.default.save('FormType', 'XPYSYW');
                    _Storage2.default.save('valueOf', 'App_Client_ProXPYS');
                    _Storage2.default.save('history', 'App_Client_ProXPYSQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProXPYSDetailQ');
                    _Storage2.default.save('ProYH', 'ProXPYS');
                    _Storage2.default.save('YuanDan', '1');
                    _Storage2.default.save('Screen', '1');
                    _Storage2.default.save('shopPandian', 'App_Client_NOYSXPCGQ');
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save("scode", str);
                    _Storage2.default.save('shildshop', str1);
                    if (this.state.suppcode1 == "") {
                        _Storage2.default.save('Modify', '1');
                    }
                }
            }
        }
    }, {
        key: 'Search',
        value: function Search() {
            var _this4 = this;

            _Storage2.default.save('shopPandian', 'App_Client_NOYSXPCGQ');
            var nextRoute = {
                name: "Distrition_list",
                component: _Distrition_list2.default,
                params: {
                    SearchShopname: function SearchShopname(Suppcode) {
                        return _this4.SearchShopname(Suppcode);
                    },
                    SearchShopname1: function SearchShopname1(Suppcode1) {
                        return _this4.SearchShopname1(Suppcode1);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 185
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 186
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 187
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 188
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 189
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 191
                                }
                            },
                            this.state.invoice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 195
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 196
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 197
                                }
                            },
                            '\u4F9B\u5E94\u5546:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.onclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 199
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.sCode1,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u4F9B\u5E94\u5546',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 200
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listimages, onPress: this.onclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 212
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), style: styles.Image, __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 213
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 216
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 217
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 218
                                }
                            },
                            '\u91C7\u8D2D\u5355:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.Search.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 220
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.suppcode1,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u91C7\u8D2D\u5355',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 221
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listimages, onPress: this.Search.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 233
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), style: styles.Image, __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 234
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: styles.button, onPress: this.Button.bind(this), __source: {
                            fileName: _jsxFileName,
                            lineNumber: 237
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.buttonText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 238
                            }
                        },
                        '\u786E\u5B9A'
                    )
                )
            );
        }
    }]);
    return ProductCG;
}(_react.Component);

exports.default = ProductCG;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 50,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    ContList: {
        height: 58,
        paddingLeft: 25,
        paddingRight: 15,
        paddingTop: 12,
        backgroundColor: "#ffffff",
        flexDirection: "row",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    listleft: {
        width: 70,
        marginTop: 6
    },
    listLeftText: {
        color: "#333333",
        fontSize: 16,
        textAlign: "right"
    },
    listcont: {
        flex: 7,
        paddingLeft: 5,
        paddingRight: 5
    },
    listContText: {
        color: "#333333",
        fontSize: 16
    },
    TextInput1: {
        paddingLeft: 5,
        paddingRight: 5,
        marginBottom: 5,
        fontSize: 16,
        color: "#333333"
    },
    button: {
        marginLeft: 25,
        marginRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ff4e4e",
        borderRadius: 3,
        marginTop: 30
    },
    buttonText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    }
});
}, 371, null, "myproject/app/ProductSH.js");
__d(/* myproject/PSDan/PSDan.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\PSDan\\PSDan.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308           ); // 308 = ../app/Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Search = require(350            ); // 350 = ../app/Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _JiGou = require(373      ); // 373 = ./JiGou

var _JiGou2 = babelHelpers.interopRequireDefault(_JiGou);

var _YHDan3 = require(374      ); // 374 = ./YHDan

var _YHDan4 = babelHelpers.interopRequireDefault(_YHDan3);

var _CKu3 = require(375    ); // 375 = ./CKu

var _CKu4 = babelHelpers.interopRequireDefault(_CKu3);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _native = require(366     ); // 366 = native

var _native2 = babelHelpers.interopRequireDefault(_native);

var PSDan = function (_Component) {
    babelHelpers.inherits(PSDan, _Component);

    function PSDan(props) {
        babelHelpers.classCallCheck(this, PSDan);

        var _this = babelHelpers.possibleConstructorReturn(this, (PSDan.__proto__ || Object.getPrototypeOf(PSDan)).call(this, props));

        _this.state = {
            invoice: "",
            JiGou: '',
            YHDan: '',
            Disting: '',
            CKu: "001"
        };
        return _this;
    }

    babelHelpers.createClass(PSDan, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('invoice').then(function (tags) {
                _this2.setState({
                    invoice: tags
                });
            });
            _Storage2.default.get('Disting').then(function (tags) {
                _this2.setState({
                    Disting: tags
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'JiGouOnclick',
        value: function JiGouOnclick() {
            var _this3 = this;

            var nextRoute = {
                name: "JiGou",
                component: _JiGou2.default,
                params: {
                    reloadShopname: function reloadShopname(JiGou) {
                        return _this3._reloadShopname(JiGou);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_reloadShopname',
        value: function _reloadShopname(JiGou) {
            JiGou = String(JiGou);
            this.setState({
                JiGou: JiGou
            });
        }
    }, {
        key: 'YHOnclick',
        value: function YHOnclick() {
            var _this4 = this;

            var nextRoute = {
                name: "YHDan",
                component: _YHDan4.default,
                params: {
                    YHDan: function YHDan(_YHDan2) {
                        return _this4._YHDan(_YHDan2);
                    },
                    JiGou: this.state.JiGou
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_YHDan',
        value: function _YHDan(YHDan) {
            YHDan = String(YHDan);
            this.setState({
                YHDan: YHDan
            });
        }
    }, {
        key: 'CKOclick',
        value: function CKOclick() {
            var _this5 = this;

            if (this.state.JiGou == '') {
                alert("请先选择机构号");
            } else {
                var nextRoute = {
                    name: "CKu",
                    component: _CKu4.default,
                    params: {
                        CKu: function CKu(_CKu2) {
                            return _this5._CKu(_CKu2);
                        },
                        JiGou: this.state.JiGou
                    }
                };
                this.props.navigator.push(nextRoute);
            }
        }
    }, {
        key: '_CKu',
        value: function _CKu(CKu) {
            CKu = String(CKu);
            this.setState({
                CKu: CKu
            });
        }
    }, {
        key: 'Button',
        value: function Button() {
            if (this.state.Disting == "0") {
                if (this.state.JiGou == '') {
                    alert("机构号不能为空");
                } else if (this.state.CKu == '') {
                    alert("仓库不能为空");
                } else {
                    var str1 = this.state.YHDan;
                    var str2 = this.state.JiGou;
                    var date = new Date();
                    var data = JSON.stringify(date.getTime());
                    var nextRoute = {
                        name: "Index",
                        component: _Index2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('scode');
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.delete('YuanDan');
                    _Storage2.default.delete('YdCountm');
                    _Storage2.default.delete('Modify');
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save('Screen', '1');
                    _Storage2.default.save('Name', '商品配送');
                    _Storage2.default.save('shildshop', str2);
                    _Storage2.default.save('OrgFormno', str1);
                    _Storage2.default.save('FormType', 'PSYW');
                    _Storage2.default.save('CKu', this.state.CKu);
                    _Storage2.default.save('valueOf', 'App_Client_ProPS');
                    _Storage2.default.save('history', 'App_Client_ProPSQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProPSDetailQ');
                }
            } else if (this.state.Disting == "1") {
                if (this.state.JiGou == '') {
                    alert("机构号不能为空");
                } else if (this.state.CKu == '') {
                    alert("仓库不能为空");
                } else {
                    var str1 = this.state.YHDan;
                    var str2 = this.state.JiGou;
                    var date = new Date();
                    var data = JSON.stringify(date.getTime());
                    var nextRoute = {
                        name: "Search",
                        component: _Search2.default
                    };
                    this.props.navigator.push(nextRoute);
                    _Storage2.default.delete('scode');
                    _Storage2.default.delete('StateMent');
                    _Storage2.default.delete('BQNumber');
                    _Storage2.default.delete('YuanDan');
                    _Storage2.default.delete('YdCountm');
                    _Storage2.default.delete('Modify');
                    _Storage2.default.save('Date', data);
                    _Storage2.default.save('Screen', '1');
                    _Storage2.default.save('Name', '商品配送');
                    _Storage2.default.save('OrgFormno', str1);
                    _Storage2.default.save('shildshop', str2);
                    _Storage2.default.save('FormType', 'PSYW');
                    _Storage2.default.save('CKu', this.state.CKu);
                    _Storage2.default.save('valueOf', 'App_Client_ProPS');
                    _Storage2.default.save('history', 'App_Client_ProPSQ');
                    _Storage2.default.save('historyClass', 'App_Client_ProPSDetailQ');
                }
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 185
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 186
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 187
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 188
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 189
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 191
                                }
                            },
                            this.state.invoice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 195
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 196
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 197
                                }
                            },
                            '\u673A\u6784:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.JiGouOnclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 199
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.JiGou,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u673A\u6784',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 200
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.JiGouOnclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 212
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 213
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 216
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 217
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 218
                                }
                            },
                            '\u8981\u8D27\u5355:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.YHOnclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 220
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.YHDan,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u8981\u8D27\u5355',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 221
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.YHOnclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 233
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 234
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 237
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 238
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 239
                                }
                            },
                            '\u4ED3\u5E93:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.CKOclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 241
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            value: this.state.CKu,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u4F9B\u5E94\u5546',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 242
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.CKOclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 254
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 255
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: styles.button, onPress: this.Button.bind(this), __source: {
                            fileName: _jsxFileName,
                            lineNumber: 258
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.buttonText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 259
                            }
                        },
                        '\u786E\u5B9A'
                    )
                )
            );
        }
    }]);
    return PSDan;
}(_react.Component);

exports.default = PSDan;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 50,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    ContList: {
        height: 58,
        paddingLeft: 25,
        paddingRight: 15,
        paddingTop: 12,
        backgroundColor: "#ffffff",
        flexDirection: "row",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    listleft: {
        width: 70,
        marginTop: 6
    },
    listLeftText: {
        color: "#333333",
        fontSize: 16,
        textAlign: "right"
    },
    listcont: {
        flex: 7,
        paddingLeft: 5,
        paddingRight: 5
    },
    listContText: {
        color: "#333333",
        fontSize: 16
    },
    TextInput1: {
        paddingLeft: 5,
        paddingRight: 5,
        paddingTop: 5,
        marginBottom: 5,
        fontSize: 16,
        color: "#333333"
    },
    button: {
        marginLeft: 25,
        marginRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ff4e4e",
        borderRadius: 3,
        marginTop: 30
    },
    buttonText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    }
});
}, 372, null, "myproject/PSDan/PSDan.js");
__d(/* myproject/PSDan/JiGou.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\PSDan\\JiGou.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var dbAdapter = new _DBAdapter2.default();
var db = void 0;

var JiGou = function (_Component) {
    babelHelpers.inherits(JiGou, _Component);

    function JiGou(props) {
        babelHelpers.classCallCheck(this, JiGou);

        var _this = babelHelpers.possibleConstructorReturn(this, (JiGou.__proto__ || Object.getPrototypeOf(JiGou)).call(this, props));

        _this.state = {
            search: "",
            show: false,
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return true;
                } })
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(JiGou, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _Storage2.default.get('invoice').then(function (tags) {
                    _this2.setState({
                        invoice: tags
                    });
                });

                _this2.fetch();
            });
        }
    }, {
        key: 'fetch',
        value: function fetch() {
            var _this3 = this;

            _Storage2.default.get('code').then(function (tags) {
                dbAdapter.selectXPShopCode(tags).then(function (rows) {
                    for (var i = 0; i < rows.length; i++) {
                        var row = rows.item(i);
                        _this3.dataRows.push(row);
                    }
                    _this3.setState({
                        dataSource: _this3.state.dataSource.cloneWithRows(_this3.dataRows)
                    });
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            this.props.navigator.pop();
        }
    }, {
        key: 'Search',
        value: function Search(value) {
            for (var i = 0; i < this.dataRows.length; i++) {
                var temp = this.dataRows[0];
                var dataRow = this.dataRows[i];
                if ((dataRow.shopcode + "").indexOf(value) >= 0) {
                    this.dataRows[0] = dataRow;
                    this.dataRows[i] = temp;
                    break;
                }
            }
            this.setState({
                dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
            });
        }
    }, {
        key: 'pressPop',
        value: function pressPop(rowData) {
            var Data = rowData.shopcode;
            if (this.props.reloadShopname) {
                this.props.reloadShopname(Data);
            }
            this.props.navigator.pop();
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this4 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { style: styles.header, onPress: function onPress() {
                        return _this4.pressPop(rowData);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 93
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.coding, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 94
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 95
                            }
                        },
                        rowData.shopcode
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.name, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 97
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 98
                            }
                        },
                        rowData.shopname
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 106
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Title, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 107
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, {
                        autofocus: '{true}',
                        returnKeyType: 'search',
                        placeholder: '\u641C\u7D22\u76F8\u5173\u5355\u53F7',
                        placeholderColor: '#323232',
                        underlineColorAndroid: 'transparent',
                        style: styles.Search,
                        onChangeText: function onChangeText(value) {
                            _this5.setState({
                                search: value
                            });
                            _this5.Search(value);
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 108
                        }
                    }),
                    _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                            fileName: _jsxFileName,
                            lineNumber: 122
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Right, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 123
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.Text1, onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 124
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Text, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 124
                                    }
                                },
                                '\u53D6\u6D88'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 127
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.head, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 128
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.coding, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 129
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 130
                                    }
                                },
                                '\u673A\u6784\u53F7'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 132
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 133
                                    }
                                },
                                '\u540D\u79F0'
                            )
                        )
                    ),
                    _react2.default.createElement(_reactNative.ListView, {
                        style: styles.scrollview,
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 137
                        }
                    })
                )
            );
        }
    }]);
    return JiGou;
}(_react.Component);

exports.default = JiGou;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    Title: {
        backgroundColor: "#ff4e4e",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 15,
        paddingBottom: 15,
        flexDirection: "row"
    },
    SearchImage: {
        position: "absolute",
        top: 22,
        left: 24
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 15,
        paddingTop: 6,
        paddingBottom: 6,
        fontSize: 14,
        flex: 1
    },
    Right: {
        width: 60,
        flexDirection: "row",
        paddingTop: 3,
        paddingLeft: 6
    },
    Text: {
        fontSize: 18,
        color: "#ffffff",
        paddingTop: 5,
        paddingLeft: 10
    },
    head: {
        flexDirection: "row",
        paddingTop: 13,
        paddingBottom: 13,
        paddingLeft: 25,
        paddingRight: 25
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    codingText: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    name: {
        flex: 1
    },
    header: {
        flexDirection: "row",
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    name: {
        flex: 1
    },
    scrollview: {
        marginBottom: 120
    }
});
}, 373, null, "myproject/PSDan/JiGou.js");
__d(/* myproject/PSDan/YHDan.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\PSDan\\YHDan.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var dbAdapter = new _DBAdapter2.default();
var db = void 0;

var YHDan = function (_Component) {
    babelHelpers.inherits(YHDan, _Component);

    function YHDan(props) {
        babelHelpers.classCallCheck(this, YHDan);

        var _this = babelHelpers.possibleConstructorReturn(this, (YHDan.__proto__ || Object.getPrototypeOf(YHDan)).call(this, props));

        _this.state = {
            JiGou: _this.props.JiGou ? _this.props.JiGou : "",
            search: "",
            show: false,
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return true;
                } })
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(YHDan, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _Storage2.default.get('invoice').then(function (tags) {
                    _this2.setState({
                        invoice: tags
                    });
                });
                _this2.fetch();
            });
        }
    }, {
        key: 'fetch',
        value: function fetch() {
            var _this3 = this;

            _Storage2.default.get('LinkUrl').then(function (LinkUrl) {
                _Storage2.default.get('username').then(function (username) {
                    _Storage2.default.get('userpwd').then(function (usercode) {
                        _Storage2.default.get('code').then(function (code) {
                            _Storage2.default.get('ClientCode').then(function (ClientCode) {
                                var params = {
                                    reqCode: "App_PosReq",
                                    reqDetailCode: "App_Client_NOYHQ",
                                    ClientCode: ClientCode,
                                    sDateTime: "2017-08-09 12:12:12",
                                    username: username,
                                    usercode: usercode,
                                    shopcode: code,
                                    detailshopcode: _this3.state.JiGou,
                                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + 'App_Client_NOYHQ' + "##" + "2017-08-09 12:12:12" + "##" + "PosControlCs") + ''
                                };
                                console.log(JSON.stringify(params));
                                _FetchUtils2.default.post(LinkUrl, JSON.stringify(params)).then(function (data) {
                                    if (data.retcode == 1) {
                                        var DetailInfo = data.DetailInfo;
                                        _this3.dataRows = _this3.dataRows.concat(DetailInfo);
                                        console.log('aaaa', _this3.dataRows);
                                        _this3.setState({
                                            dataSource: _this3.state.dataSource.cloneWithRows(_this3.dataRows)
                                        });
                                    } else {
                                        alert(JSON.stringify(data));
                                    }
                                }, function (err) {
                                    alert("网络请求失败");
                                });
                            });
                        });
                    });
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            this.props.navigator.pop();
        }
    }, {
        key: 'Search',
        value: function Search(value) {
            for (var i = 0; i < this.dataRows.length; i++) {
                var temp = this.dataRows[0];
                var dataRow = this.dataRows[i];
                if ((dataRow.Formno + "").indexOf(value) >= 0) {
                    this.dataRows[0] = dataRow;
                    this.dataRows[i] = temp;
                    break;
                }
            }
            this.setState({
                dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
            });
        }
    }, {
        key: 'pressPop',
        value: function pressPop(rowData) {
            var Data = rowData.Formno;
            if (this.props.YHDan) {
                this.props.YHDan(Data);
            }
            this.props.navigator.pop();
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this4 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { style: styles.header, onPress: function onPress() {
                        return _this4.pressPop(rowData);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 120
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.coding, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 121
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 122
                            }
                        },
                        rowData.Formno
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 130
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Title, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 131
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, {
                        autofocus: '{true}',
                        returnKeyType: 'search',
                        placeholder: '\u641C\u7D22\u76F8\u5173\u5355\u53F7',
                        placeholderColor: '#323232',
                        underlineColorAndroid: 'transparent',
                        style: styles.Search,
                        onChangeText: function onChangeText(value) {
                            _this5.setState({
                                search: value
                            });
                            _this5.Search(value);
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 132
                        }
                    }),
                    _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                            fileName: _jsxFileName,
                            lineNumber: 146
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Right, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 147
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.Text1, onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 148
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Text, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 148
                                    }
                                },
                                '\u53D6\u6D88'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 151
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.head, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 152
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.coding, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 153
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 154
                                    }
                                },
                                '\u8981\u8D27\u5355\u53F7'
                            )
                        )
                    ),
                    _react2.default.createElement(_reactNative.ListView, {
                        style: styles.scrollview,
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 157
                        }
                    })
                )
            );
        }
    }]);
    return YHDan;
}(_react.Component);

exports.default = YHDan;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    Title: {
        backgroundColor: "#ff4e4e",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 15,
        paddingBottom: 15,
        flexDirection: "row"
    },
    SearchImage: {
        position: "absolute",
        top: 22,
        left: 24
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 15,
        paddingTop: 6,
        paddingBottom: 6,
        fontSize: 14,
        flex: 1
    },
    Right: {
        width: 60,
        flexDirection: "row",
        paddingTop: 3,
        paddingLeft: 6
    },
    Text: {
        fontSize: 18,
        color: "#ffffff",
        paddingTop: 5,
        paddingLeft: 10
    },
    head: {
        flexDirection: "row",
        paddingTop: 13,
        paddingBottom: 13,
        paddingLeft: 25,
        paddingRight: 25
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    codingText: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    name: {
        flex: 1
    },
    header: {
        flexDirection: "row",
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    name: {
        flex: 1
    },
    scrollview: {
        marginBottom: 120
    }
});
}, 374, null, "myproject/PSDan/YHDan.js");
__d(/* myproject/PSDan/CKu.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\PSDan\\CKu.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var dbAdapter = new _DBAdapter2.default();
var db = void 0;

var CKu = function (_Component) {
    babelHelpers.inherits(CKu, _Component);

    function CKu(props) {
        babelHelpers.classCallCheck(this, CKu);

        var _this = babelHelpers.possibleConstructorReturn(this, (CKu.__proto__ || Object.getPrototypeOf(CKu)).call(this, props));

        _this.state = {
            JiGou: _this.props.JiGou ? _this.props.JiGou : "",
            search: "",
            show: false,
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return true;
                } })
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(CKu, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _Storage2.default.get('invoice').then(function (tags) {
                    _this2.setState({
                        invoice: tags
                    });
                });
                _this2.fetch();
            });
        }
    }, {
        key: 'fetch',
        value: function fetch() {
            var _this3 = this;

            _Storage2.default.get('LinkUrl').then(function (LinkUrl) {
                _Storage2.default.get('ClientCode').then(function (ClientCode) {
                    var params = {
                        reqCode: "App_PosReq",
                        reqDetailCode: "App_Client_ShopStoreQ",
                        ClientCode: ClientCode,
                        sDateTime: "2017-08-09 12:12" + ":12",
                        ShopCode: _this3.state.JiGou,
                        Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + 'App_Client_ShopStoreQ' + "##" + "2017-08-09 12:12:12" + "##" + "PosControlCs") + ''
                    };
                    console.log(JSON.stringify(params));
                    _FetchUtils2.default.post(LinkUrl, JSON.stringify(params)).then(function (data) {
                        if (data.retcode == 1) {
                            var DetailInfo = data.DetailInfo;
                            _this3.dataRows = _this3.dataRows.concat(DetailInfo);
                            console.log('aaaa', _this3.dataRows);
                            _this3.setState({
                                dataSource: _this3.state.dataSource.cloneWithRows(_this3.dataRows)
                            });
                        } else {
                            alert(JSON.stringify(data));
                        }
                    }, function (err) {
                        alert("网络请求失败");
                    });
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            this.props.navigator.pop();
        }
    }, {
        key: 'Search',
        value: function Search(value) {
            for (var i = 0; i < this.dataRows.length; i++) {
                var temp = this.dataRows[0];
                var dataRow = this.dataRows[i];
                if ((dataRow.storecode + "").indexOf(value) >= 0) {
                    this.dataRows[0] = dataRow;
                    this.dataRows[i] = temp;
                    break;
                }
            }
            this.setState({
                dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
            });
        }
    }, {
        key: 'pressPop',
        value: function pressPop(rowData) {
            var Data = rowData.storecode;
            if (this.props.YHDan) {
                this.props.YHDan(Data);
            }
            this.props.navigator.pop();
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this4 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { style: styles.header, onPress: function onPress() {
                        return _this4.pressPop(rowData);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 112
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.coding, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 113
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 114
                            }
                        },
                        rowData.storecode
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.coding, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 116
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 117
                            }
                        },
                        rowData.storename
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 125
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Title, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 126
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, {
                        autofocus: '{true}',
                        returnKeyType: 'search',
                        placeholder: '\u641C\u7D22\u76F8\u5173\u5355\u53F7',
                        placeholderColor: '#323232',
                        underlineColorAndroid: 'transparent',
                        style: styles.Search,
                        onChangeText: function onChangeText(value) {
                            _this5.setState({
                                search: value
                            });
                            _this5.Search(value);
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 127
                        }
                    }),
                    _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                            fileName: _jsxFileName,
                            lineNumber: 141
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Right, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 142
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.Text1, onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 143
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Text, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 143
                                    }
                                },
                                '\u53D6\u6D88'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 146
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.head, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 147
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.coding, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 148
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 149
                                    }
                                },
                                '\u4ED3\u5E93\u53F7'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.coding, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 151
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 152
                                    }
                                },
                                '\u4ED3\u5E93\u540D\u79F0'
                            )
                        )
                    ),
                    _react2.default.createElement(_reactNative.ListView, {
                        style: styles.scrollview,
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 155
                        }
                    })
                )
            );
        }
    }]);
    return CKu;
}(_react.Component);

exports.default = CKu;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    Title: {
        backgroundColor: "#ff4e4e",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 15,
        paddingBottom: 15,
        flexDirection: "row"
    },
    SearchImage: {
        position: "absolute",
        top: 22,
        left: 24
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 15,
        paddingTop: 6,
        paddingBottom: 6,
        fontSize: 14,
        flex: 1
    },
    Right: {
        width: 60,
        flexDirection: "row",
        paddingTop: 3,
        paddingLeft: 6
    },
    Text: {
        fontSize: 18,
        color: "#ffffff",
        paddingTop: 5,
        paddingLeft: 10
    },
    head: {
        flexDirection: "row",
        paddingTop: 13,
        paddingBottom: 13,
        paddingLeft: 25,
        paddingRight: 25
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    codingText: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    name: {
        flex: 1
    },
    header: {
        flexDirection: "row",
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    name: {
        flex: 1
    },
    scrollview: {
        marginBottom: 120
    }
});
}, 375, null, "myproject/PSDan/CKu.js");
__d(/* react-native-side-menu/build/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", { value: true });var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};var _jsxFileName = 'index.js';var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();var _react = require(12     );var _react2 = _interopRequireDefault(_react);var _reactNative = require(26            );var _propTypes = require(19          );var _propTypes2 = _interopRequireDefault(_propTypes);var _styles = require(377       );var _styles2 = _interopRequireDefault(_styles);function _interopRequireDefault(obj) { // 377 = ./styles // 19 = prop-types // 26 = react-native // 12 = react
  return obj && obj.__esModule ? obj : { default: obj };
}function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}var deviceScreen = _reactNative.Dimensions.get('window');var barrierForward = deviceScreen.width / 4;function shouldOpenMenu(dx) {
  return dx > barrierForward;
}var SideMenu = function (_React$Component) {
  _inherits(SideMenu, _React$Component);function SideMenu(props) {
    _classCallCheck(this, SideMenu);var _this = _possibleConstructorReturn(this, (SideMenu.__proto__ || Object.getPrototypeOf(SideMenu)).call(this, props));_this.prevLeft = 0;_this.isOpen = !!props.isOpen;var initialMenuPositionMultiplier = props.menuPosition === 'right' ? -1 : 1;var openOffsetMenuPercentage = props.openMenuOffset / deviceScreen.width;var hiddenMenuOffsetPercentage = props.hiddenMenuOffset / deviceScreen.width;var left = new _reactNative.Animated.Value(props.isOpen ? props.openMenuOffset * initialMenuPositionMultiplier : props.hiddenMenuOffset);_this.onLayoutChange = _this.onLayoutChange.bind(_this);_this.onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture.bind(_this);_this.onMoveShouldSetPanResponder = _this.handleMoveShouldSetPanResponder.bind(_this);_this.onPanResponderMove = _this.handlePanResponderMove.bind(_this);_this.onPanResponderRelease = _this.handlePanResponderEnd.bind(_this);_this.onPanResponderTerminate = _this.handlePanResponderEnd.bind(_this);_this.state = { width: deviceScreen.width, height: deviceScreen.height, openOffsetMenuPercentage: openOffsetMenuPercentage, openMenuOffset: deviceScreen.width * openOffsetMenuPercentage, hiddenMenuOffsetPercentage: hiddenMenuOffsetPercentage, hiddenMenuOffset: deviceScreen.width * hiddenMenuOffsetPercentage, left: left };return _this;
  }_createClass(SideMenu, [{ key: 'componentWillMount', value: function componentWillMount() {
      this.responder = _reactNative.PanResponder.create({ onStartShouldSetResponderCapture: this.onStartShouldSetResponderCapture, onMoveShouldSetPanResponder: this.onMoveShouldSetPanResponder, onPanResponderMove: this.onPanResponderMove, onPanResponderRelease: this.onPanResponderRelease, onPanResponderTerminate: this.onPanResponderTerminate });
    } }, { key: 'componentWillReceiveProps', value: function componentWillReceiveProps(props) {
      if (typeof props.isOpen !== 'undefined' && this.isOpen !== props.isOpen && (props.autoClosing || this.isOpen === false)) {
        this.openMenu(props.isOpen);
      }
    } }, { key: 'onLayoutChange', value: function onLayoutChange(e) {
      var _e$nativeEvent$layout = e.nativeEvent.layout,
          width = _e$nativeEvent$layout.width,
          height = _e$nativeEvent$layout.height;var openMenuOffset = width * this.state.openOffsetMenuPercentage;var hiddenMenuOffset = width * this.state.hiddenMenuOffsetPercentage;this.setState({ width: width, height: height, openMenuOffset: openMenuOffset, hiddenMenuOffset: hiddenMenuOffset });
    } }, { key: 'getContentView', value: function getContentView() {
      var _this2 = this;var overlay = null;if (this.isOpen) {
        overlay = _react2.default.createElement(_reactNative.TouchableWithoutFeedback, { onPress: function onPress() {
            return _this2.openMenu(false);
          }, __source: { fileName: _jsxFileName, lineNumber: 135 } }, _react2.default.createElement(_reactNative.View, { style: _styles2.default.overlay, __source: { fileName: _jsxFileName, lineNumber: 136 } }));
      }var _state = this.state,
          width = _state.width,
          height = _state.height;var ref = function ref(sideMenu) {
        return _this2.sideMenu = sideMenu;
      };var style = [_styles2.default.frontView, { width: width, height: height }, this.props.animationStyle(this.state.left)];return _react2.default.createElement(_reactNative.Animated.View, _extends({ style: style, ref: ref }, this.responder.panHandlers, { __source: { fileName: _jsxFileName, lineNumber: 150 } }), this.props.children, overlay);
    } }, { key: 'moveLeft', value: function moveLeft(offset) {
      var newOffset = this.menuPositionMultiplier() * offset;this.props.animationFunction(this.state.left, newOffset).start();this.prevLeft = newOffset;
    } }, { key: 'menuPositionMultiplier', value: function menuPositionMultiplier() {
      return this.props.menuPosition === 'right' ? -1 : 1;
    } }, { key: 'handlePanResponderMove', value: function handlePanResponderMove(e, gestureState) {
      if (this.state.left.__getValue() * this.menuPositionMultiplier() >= 0) {
        var newLeft = this.prevLeft + gestureState.dx;if (!this.props.bounceBackOnOverdraw && Math.abs(newLeft) > this.state.openMenuOffset) {
          newLeft = this.menuPositionMultiplier() * this.state.openMenuOffset;
        }this.props.onMove(newLeft);this.state.left.setValue(newLeft);
      }
    } }, { key: 'handlePanResponderEnd', value: function handlePanResponderEnd(e, gestureState) {
      var offsetLeft = this.menuPositionMultiplier() * (this.state.left.__getValue() + gestureState.dx);this.openMenu(shouldOpenMenu(offsetLeft));
    } }, { key: 'handleMoveShouldSetPanResponder', value: function handleMoveShouldSetPanResponder(e, gestureState) {
      if (this.gesturesAreEnabled()) {
        var x = Math.round(Math.abs(gestureState.dx));var y = Math.round(Math.abs(gestureState.dy));var touchMoved = x > this.props.toleranceX && y < this.props.toleranceY;if (this.isOpen) {
          return touchMoved;
        }var withinEdgeHitWidth = this.props.menuPosition === 'right' ? gestureState.moveX > deviceScreen.width - this.props.edgeHitWidth : gestureState.moveX < this.props.edgeHitWidth;var swipingToOpen = this.menuPositionMultiplier() * gestureState.dx > 0;return withinEdgeHitWidth && touchMoved && swipingToOpen;
      }return false;
    } }, { key: 'openMenu', value: function openMenu(isOpen) {
      var _state2 = this.state,
          hiddenMenuOffset = _state2.hiddenMenuOffset,
          openMenuOffset = _state2.openMenuOffset;this.moveLeft(isOpen ? openMenuOffset : hiddenMenuOffset);this.isOpen = isOpen;this.forceUpdate();this.props.onChange(isOpen);
    } }, { key: 'gesturesAreEnabled', value: function gesturesAreEnabled() {
      var disableGestures = this.props.disableGestures;if (typeof disableGestures === 'function') {
        return !disableGestures();
      }return !disableGestures;
    } }, { key: 'render', value: function render() {
      var boundryStyle = this.props.menuPosition === 'right' ? { left: this.state.width - this.state.openMenuOffset } : { right: this.state.width - this.state.openMenuOffset };var menu = _react2.default.createElement(_reactNative.View, { style: [_styles2.default.menu, boundryStyle], __source: { fileName: _jsxFileName, lineNumber: 238 } }, this.props.menu);return _react2.default.createElement(_reactNative.View, { style: _styles2.default.container, onLayout: this.onLayoutChange, __source: { fileName: _jsxFileName, lineNumber: 244 } }, menu, this.getContentView());
    } }]);return SideMenu;
}(_react2.default.Component);exports.default = SideMenu;SideMenu.propTypes = { edgeHitWidth: _propTypes2.default.number, toleranceX: _propTypes2.default.number, toleranceY: _propTypes2.default.number, menuPosition: _propTypes2.default.oneOf(['left', 'right']), onChange: _propTypes2.default.func, onMove: _propTypes2.default.func, children: _propTypes2.default.node, menu: _propTypes2.default.node, openMenuOffset: _propTypes2.default.number, hiddenMenuOffset: _propTypes2.default.number, animationStyle: _propTypes2.default.func, disableGestures: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.bool]), animationFunction: _propTypes2.default.func, onStartShouldSetResponderCapture: _propTypes2.default.func, isOpen: _propTypes2.default.bool, bounceBackOnOverdraw: _propTypes2.default.bool, autoClosing: _propTypes2.default.bool };SideMenu.defaultProps = { toleranceY: 10, toleranceX: 10, edgeHitWidth: 60, children: null, menu: null, openMenuOffset: deviceScreen.width * (2 / 3), disableGestures: false, menuPosition: 'left', hiddenMenuOffset: 0, onMove: function onMove() {}, onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture() {
    return true;
  }, onChange: function onChange() {}, animationStyle: function animationStyle(value) {
    return { transform: [{ translateX: value }] };
  }, animationFunction: function animationFunction(prop, value) {
    return _reactNative.Animated.spring(prop, { toValue: value, friction: 8 });
  }, isOpen: false, bounceBackOnOverdraw: true, autoClosing: true };
}, 376, null, "react-native-side-menu/build/index.js");
__d(/* react-native-side-menu/build/styles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", { value: true });var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};var _reactNative = require(26            );var absoluteStretch = { position: 'absolute', top: 0, left: 0, bottom: 0, right: 0 };exports.default = _reactNative.StyleSheet.create({ container: _extends({}, absoluteStretch, { justifyContent: 'center' }), menu: _extends({}, absoluteStretch), frontView: { flex: 1, position: 'absolute', left: 0, top: 0, backgroundColor: 'transparent', overflow: 'hidden' }, overlay: _extends({}, absoluteStretch, { backgroundColor: 'transparent' }) }); // 26 = react-native
}, 377, null, "react-native-side-menu/build/styles.js");
__d(/* react-native-swipe-list-view/lib/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.SwipeRow = exports.SwipeListView = undefined;

var _SwipeListView = require(379                          ); // 379 = ../components/SwipeListView

var _SwipeListView2 = babelHelpers.interopRequireDefault(_SwipeListView);

var _SwipeRow = require(380                     ); // 380 = ../components/SwipeRow

var _SwipeRow2 = babelHelpers.interopRequireDefault(_SwipeRow);

exports.SwipeListView = _SwipeListView2.default;
exports.SwipeRow = _SwipeRow2.default;
}, 378, null, "react-native-swipe-list-view/lib/index.js");
__d(/* react-native-swipe-list-view/components/SwipeListView.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
var _jsxFileName = 'D:\\myproject\\node_modules\\react-native-swipe-list-view\\components\\SwipeListView.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(19          ); // 19 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(26            ); // 26 = react-native

var _SwipeRow = require(380         ); // 380 = ./SwipeRow

var _SwipeRow2 = babelHelpers.interopRequireDefault(_SwipeRow);

var SwipeListView = function (_Component) {
	babelHelpers.inherits(SwipeListView, _Component);

	function SwipeListView(props) {
		babelHelpers.classCallCheck(this, SwipeListView);

		var _this = babelHelpers.possibleConstructorReturn(this, (SwipeListView.__proto__ || Object.getPrototypeOf(SwipeListView)).call(this, props));

		_this._rows = {};
		_this.openCellKey = null;
		return _this;
	}

	babelHelpers.createClass(SwipeListView, [{
		key: 'setScrollEnabled',
		value: function setScrollEnabled(enable) {
			this._listView.getScrollResponder().setNativeProps({ scrollEnabled: enable });
		}
	}, {
		key: 'safeCloseOpenRow',
		value: function safeCloseOpenRow() {
			var rowRef = this._rows[this.openCellKey];
			if (rowRef && rowRef.closeRow) {
				this._rows[this.openCellKey].closeRow();
			}
		}
	}, {
		key: 'rowSwipeGestureBegan',
		value: function rowSwipeGestureBegan(key) {
			if (this.props.closeOnRowBeginSwipe && this.openCellKey && this.openCellKey !== key) {
				this.safeCloseOpenRow();
			}

			if (this.props.swipeGestureBegan) {
				this.props.swipeGestureBegan(key);
			}
		}
	}, {
		key: 'onRowOpen',
		value: function onRowOpen(key) {
			if (this.openCellKey && this.openCellKey !== key) {
				this.safeCloseOpenRow();
			}
			this.openCellKey = key;
			this.props.onRowOpen && this.props.onRowOpen(key, this._rows);
		}
	}, {
		key: 'onRowPress',
		value: function onRowPress() {
			if (this.openCellKey) {
				if (this.props.closeOnRowPress) {
					this.safeCloseOpenRow();
					this.openCellKey = null;
				}
			}
		}
	}, {
		key: 'onScroll',
		value: function onScroll(e) {
			if (this.openCellKey) {
				if (this.props.closeOnScroll) {
					this.safeCloseOpenRow();
					this.openCellKey = null;
				}
			}
			this.props.onScroll && this.props.onScroll(e);
		}
	}, {
		key: 'setRefs',
		value: function setRefs(ref) {
			this._listView = ref;
			this.props.listViewRef && this.props.listViewRef(ref);
		}
	}, {
		key: 'renderCell',
		value: function renderCell(VisibleComponent, HiddenComponent, key, item, shouldPreviewRow) {
			var _this2 = this;

			if (!HiddenComponent) {
				return _react2.default.cloneElement(VisibleComponent, babelHelpers.extends({}, VisibleComponent.props, {
					ref: function ref(row) {
						return _this2._rows[key] = row;
					},
					onRowOpen: function onRowOpen(_) {
						return _this2.onRowOpen(key);
					},
					onRowDidOpen: function onRowDidOpen(_) {
						return _this2.props.onRowDidOpen && _this2.props.onRowDidOpen(key, _this2._rows);
					},
					onRowClose: function onRowClose(_) {
						return _this2.props.onRowClose && _this2.props.onRowClose(key, _this2._rows);
					},
					onRowDidClose: function onRowDidClose(_) {
						return _this2.props.onRowDidClose && _this2.props.onRowDidClose(key, _this2._rows);
					},
					onRowPress: function onRowPress(_) {
						return _this2.onRowPress();
					},
					setScrollEnabled: function setScrollEnabled(enable) {
						return _this2.setScrollEnabled(enable);
					},
					swipeGestureBegan: function swipeGestureBegan(_) {
						return _this2.rowSwipeGestureBegan(key);
					}
				}));
			} else {
				return _react2.default.createElement(
					_SwipeRow2.default,
					{
						ref: function ref(row) {
							return _this2._rows[key] = row;
						},
						swipeGestureBegan: function swipeGestureBegan(_) {
							return _this2.rowSwipeGestureBegan(key);
						},
						onRowOpen: function onRowOpen(_) {
							return _this2.onRowOpen(key);
						},
						onRowDidOpen: function onRowDidOpen(_) {
							return _this2.props.onRowDidOpen && _this2.props.onRowDidOpen(key, _this2._rows);
						},
						onRowClose: function onRowClose(_) {
							return _this2.props.onRowClose && _this2.props.onRowClose(key, _this2._rows);
						},
						onRowDidClose: function onRowDidClose(_) {
							return _this2.props.onRowDidClose && _this2.props.onRowDidClose(key, _this2._rows);
						},
						onRowPress: function onRowPress(_) {
							return _this2.onRowPress(key);
						},
						setScrollEnabled: function setScrollEnabled(enable) {
							return _this2.setScrollEnabled(enable);
						},
						leftOpenValue: item.leftOpenValue || this.props.leftOpenValue,
						rightOpenValue: item.rightOpenValue || this.props.rightOpenValue,
						closeOnRowPress: item.closeOnRowPress || this.props.closeOnRowPress,
						disableLeftSwipe: item.disableLeftSwipe || this.props.disableLeftSwipe,
						disableRightSwipe: item.disableRightSwipe || this.props.disableRightSwipe,
						stopLeftSwipe: item.stopLeftSwipe || this.props.stopLeftSwipe,
						stopRightSwipe: item.stopRightSwipe || this.props.stopRightSwipe,
						recalculateHiddenLayout: this.props.recalculateHiddenLayout,
						style: this.props.swipeRowStyle,
						preview: shouldPreviewRow,
						previewDuration: this.props.previewDuration,
						previewOpenValue: this.props.previewOpenValue,
						tension: this.props.tension,
						friction: this.props.friction,
						directionalDistanceChangeThreshold: this.props.directionalDistanceChangeThreshold,
						swipeToOpenPercent: this.props.swipeToOpenPercent,
						swipeToOpenVelocityContribution: this.props.swipeToOpenVelocityContribution,
						swipeToClosePercent: this.props.swipeToClosePercent,
						__source: {
							fileName: _jsxFileName,
							lineNumber: 99
						}
					},
					HiddenComponent,
					VisibleComponent
				);
			}
		}
	}, {
		key: 'renderRow',
		value: function renderRow(rowData, secId, rowId, rowMap) {
			var key = '' + secId + rowId;
			var Component = this.props.renderRow(rowData, secId, rowId, rowMap);
			var HiddenComponent = this.props.renderHiddenRow && this.props.renderHiddenRow(rowData, secId, rowId, rowMap);
			var previewRowId = this.props.dataSource && this.props.dataSource.getRowIDForFlatIndex(this.props.previewRowIndex || 0);
			var shouldPreviewRow = (this.props.previewFirstRow || this.props.previewRowIndex) && rowId === previewRowId;

			return this.renderCell(Component, HiddenComponent, key, rowData, shouldPreviewRow);
		}
	}, {
		key: 'renderItem',
		value: function renderItem(rowData, rowMap) {
			var Component = this.props.renderItem(rowData, rowMap);
			var HiddenComponent = this.props.renderHiddenItem && this.props.renderHiddenItem(rowData, rowMap);
			var item = rowData.item,
			    index = rowData.index;
			var key = item.key;

			if (!key && this.props.keyExtractor) {
				key = this.props.keyExtractor(item, index);
			}

			var shouldPreviewRow = this.props.previewRowKey === key;

			return this.renderCell(Component, HiddenComponent, key, item, shouldPreviewRow);
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var _props = this.props,
			    useFlatList = _props.useFlatList,
			    renderListView = _props.renderListView,
			    props = babelHelpers.objectWithoutProperties(_props, ['useFlatList', 'renderListView']);


			if (renderListView) {
				return renderListView(props, this.setRefs.bind(this), this.onScroll.bind(this), this.renderRow.bind(this, this._rows));
			}

			if (useFlatList) {
				return _react2.default.createElement(_reactNative.FlatList, babelHelpers.extends({}, props, {
					ref: function ref(c) {
						return _this3.setRefs(c);
					},
					onScroll: function onScroll(e) {
						return _this3.onScroll(e);
					},
					renderItem: function renderItem(rowData) {
						return _this3.renderItem(rowData, _this3._rows);
					},
					__source: {
						fileName: _jsxFileName,
						lineNumber: 172
					}
				}));
			}

			return _react2.default.createElement(_reactNative.ListView, babelHelpers.extends({}, props, {
				ref: function ref(c) {
					return _this3.setRefs(c);
				},
				onScroll: function onScroll(e) {
					return _this3.onScroll(e);
				},
				renderRow: function renderRow(rowData, secId, rowId) {
					return _this3.renderRow(rowData, secId, rowId, _this3._rows);
				},
				__source: {
					fileName: _jsxFileName,
					lineNumber: 182
				}
			}));
		}
	}]);
	return SwipeListView;
}(_react.Component);

SwipeListView.propTypes = {
	renderListView: _propTypes2.default.func,

	renderItem: _propTypes2.default.func,

	renderHiddenItem: _propTypes2.default.func,

	renderRow: _propTypes2.default.func,

	renderHiddenRow: _propTypes2.default.func,

	leftOpenValue: _propTypes2.default.number,

	rightOpenValue: _propTypes2.default.number,

	stopLeftSwipe: _propTypes2.default.number,

	stopRightSwipe: _propTypes2.default.number,

	closeOnScroll: _propTypes2.default.bool,

	closeOnRowPress: _propTypes2.default.bool,

	closeOnRowBeginSwipe: _propTypes2.default.bool,

	disableLeftSwipe: _propTypes2.default.bool,

	disableRightSwipe: _propTypes2.default.bool,

	recalculateHiddenLayout: _propTypes2.default.bool,

	swipeGestureBegan: _propTypes2.default.func,

	onRowOpen: _propTypes2.default.func,

	onRowDidOpen: _propTypes2.default.func,

	onRowClose: _propTypes2.default.func,

	onRowDidClose: _propTypes2.default.func,

	swipeRowStyle: _reactNative.ViewPropTypes.style,

	listViewRef: _propTypes2.default.func,

	previewRowKey: _propTypes2.default.string,

	previewFirstRow: _propTypes2.default.bool,

	previewRowIndex: _propTypes2.default.number,

	previewDuration: _propTypes2.default.number,

	previewOpenValue: _propTypes2.default.number,

	friction: _propTypes2.default.number,

	tension: _propTypes2.default.number,

	directionalDistanceChangeThreshold: _propTypes2.default.number,

	swipeToOpenPercent: _propTypes2.default.number,

	swipeToOpenVelocityContribution: _propTypes2.default.number,

	swipeToClosePercent: _propTypes2.default.number
};

SwipeListView.defaultProps = {
	leftOpenValue: 0,
	rightOpenValue: 0,
	closeOnRowBeginSwipe: false,
	closeOnScroll: true,
	closeOnRowPress: true,
	disableLeftSwipe: false,
	disableRightSwipe: false,
	recalculateHiddenLayout: false,
	previewFirstRow: false,
	directionalDistanceChangeThreshold: 2,
	swipeToOpenPercent: 50,
	swipeToOpenVelocityContribution: 0,
	swipeToClosePercent: 50
};

exports.default = SwipeListView;
}, 379, null, "react-native-swipe-list-view/components/SwipeListView.js");
__d(/* react-native-swipe-list-view/components/SwipeRow.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
var _jsxFileName = 'D:\\myproject\\node_modules\\react-native-swipe-list-view\\components\\SwipeRow.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(19          ); // 19 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(26            ); // 26 = react-native

var PREVIEW_OPEN_DELAY = 700;
var PREVIEW_CLOSE_DELAY = 300;
var MAX_VELOCITY_CONTRIBUTION = 5;
var SCROLL_LOCK_MILLISECONDS = 300;

var SwipeRow = function (_Component) {
	babelHelpers.inherits(SwipeRow, _Component);

	function SwipeRow(props) {
		babelHelpers.classCallCheck(this, SwipeRow);

		var _this = babelHelpers.possibleConstructorReturn(this, (SwipeRow.__proto__ || Object.getPrototypeOf(SwipeRow)).call(this, props));

		_this.ensureScrollEnabled = function () {
			if (!_this.parentScrollEnabled) {
				_this.parentScrollEnabled = true;
				_this.props.setScrollEnabled && _this.props.setScrollEnabled(true);
			}
		};

		_this.horizontalSwipeGestureBegan = false;
		_this.swipeInitialX = null;
		_this.parentScrollEnabled = true;
		_this.ranPreview = false;
		_this._ensureScrollEnabledTimer = null;
		_this.state = {
			dimensionsSet: false,
			hiddenHeight: 0,
			hiddenWidth: 0
		};
		_this._translateX = new _reactNative.Animated.Value(0);
		return _this;
	}

	babelHelpers.createClass(SwipeRow, [{
		key: 'componentWillMount',
		value: function componentWillMount() {
			var _this2 = this;

			this._panResponder = _reactNative.PanResponder.create({
				onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(e, gs) {
					return _this2.handleOnMoveShouldSetPanResponder(e, gs);
				},
				onPanResponderMove: function onPanResponderMove(e, gs) {
					return _this2.handlePanResponderMove(e, gs);
				},
				onPanResponderRelease: function onPanResponderRelease(e, gs) {
					return _this2.handlePanResponderEnd(e, gs);
				},
				onPanResponderTerminate: function onPanResponderTerminate(e, gs) {
					return _this2.handlePanResponderEnd(e, gs);
				},
				onShouldBlockNativeResponder: function onShouldBlockNativeResponder(_) {
					return false;
				}
			});
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			clearTimeout(this._ensureScrollEnabledTimer);
		}
	}, {
		key: 'getPreviewAnimation',
		value: function getPreviewAnimation(toValue, delay) {
			return _reactNative.Animated.timing(this._translateX, { duration: this.props.previewDuration, toValue: toValue, delay: delay });
		}
	}, {
		key: 'onContentLayout',
		value: function onContentLayout(e) {
			var _this3 = this;

			this.setState({
				dimensionsSet: !this.props.recalculateHiddenLayout,
				hiddenHeight: e.nativeEvent.layout.height,
				hiddenWidth: e.nativeEvent.layout.width
			});

			if (this.props.preview && !this.ranPreview) {
				this.ranPreview = true;
				var previewOpenValue = this.props.previewOpenValue || this.props.rightOpenValue * 0.5;
				this.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(function (_) {
					_this3.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();
				});
			}
		}
	}, {
		key: 'onRowPress',
		value: function onRowPress() {
			if (this.props.onRowPress) {
				this.props.onRowPress();
			} else {
				if (this.props.closeOnRowPress) {
					this.closeRow();
				}
			}
		}
	}, {
		key: 'handleOnMoveShouldSetPanResponder',
		value: function handleOnMoveShouldSetPanResponder(e, gs) {
			var dx = gs.dx;

			return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;
		}
	}, {
		key: 'handlePanResponderMove',
		value: function handlePanResponderMove(e, gestureState) {
			var dx = gestureState.dx,
			    dy = gestureState.dy;

			var absDx = Math.abs(dx);
			var absDy = Math.abs(dy);

			if (absDx > this.props.directionalDistanceChangeThreshold || absDy > this.props.directionalDistanceChangeThreshold) {
				if (absDy > absDx && !this.horizontalSwipeGestureBegan) {
					return;
				}

				if (this.parentScrollEnabled) {
					this.parentScrollEnabled = false;
					this.props.setScrollEnabled && this.props.setScrollEnabled(false);
				}

				if (this.swipeInitialX === null) {
					this.swipeInitialX = this._translateX._value;
				}
				if (!this.horizontalSwipeGestureBegan) {
					this.horizontalSwipeGestureBegan = true;
					this.props.swipeGestureBegan && this.props.swipeGestureBegan();
				}

				var newDX = this.swipeInitialX + dx;
				if (this.props.disableLeftSwipe && newDX < 0) {
					newDX = 0;
				}
				if (this.props.disableRightSwipe && newDX > 0) {
					newDX = 0;
				}

				if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {
					newDX = this.props.stopLeftSwipe;
				}
				if (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {
					newDX = this.props.stopRightSwipe;
				}

				this._translateX.setValue(newDX);
			}
		}
	}, {
		key: 'handlePanResponderEnd',
		value: function handlePanResponderEnd(e, gestureState) {
			var swipeToOpenVelocityContribution = this.props.swipeToOpenVelocityContribution;
			var possibleExtraPixels = this.props.rightOpenValue * swipeToOpenVelocityContribution;
			var clampedVelocity = Math.min(gestureState.vx, MAX_VELOCITY_CONTRIBUTION);
			var projectedExtraPixels = possibleExtraPixels * (clampedVelocity / MAX_VELOCITY_CONTRIBUTION);

			this._ensureScrollEnabledTimer = setTimeout(this.ensureScrollEnabled, SCROLL_LOCK_MILLISECONDS);

			var toValue = 0;
			if (this._translateX._value >= 0) {
				if (this.swipeInitialX < this._translateX._value) {
					if (this._translateX._value - projectedExtraPixels > this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)) {
						toValue = this.props.leftOpenValue;
					}
				} else {
					if (this._translateX._value - projectedExtraPixels > this.props.leftOpenValue * (1 - this.props.swipeToClosePercent / 100)) {
						toValue = this.props.leftOpenValue;
					}
				}
			} else {
				if (this.swipeInitialX > this._translateX._value) {
					if (this._translateX._value - projectedExtraPixels < this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)) {
						toValue = this.props.rightOpenValue;
					}
				} else {
					if (this._translateX._value - projectedExtraPixels < this.props.rightOpenValue * (1 - this.props.swipeToClosePercent / 100)) {
						toValue = this.props.rightOpenValue;
					}
				}
			}

			this.manuallySwipeRow(toValue);
		}
	}, {
		key: 'closeRow',
		value: function closeRow() {
			this.manuallySwipeRow(0);
		}
	}, {
		key: 'manuallySwipeRow',
		value: function manuallySwipeRow(toValue) {
			var _this4 = this;

			_reactNative.Animated.spring(this._translateX, {
				toValue: toValue,
				friction: this.props.friction,
				tension: this.props.tension
			}).start(function (_) {
				_this4.ensureScrollEnabled();
				if (toValue === 0) {
					_this4.props.onRowDidClose && _this4.props.onRowDidClose();
				} else {
					_this4.props.onRowDidOpen && _this4.props.onRowDidOpen();
				}
			});

			if (toValue === 0) {
				this.props.onRowClose && this.props.onRowClose();
			} else {
				this.props.onRowOpen && this.props.onRowOpen(toValue);
			}

			this.swipeInitialX = null;
			this.horizontalSwipeGestureBegan = false;
		}
	}, {
		key: 'renderVisibleContent',
		value: function renderVisibleContent() {
			var _this5 = this;

			var onPress = this.props.children[1].props.onPress;

			if (onPress) {
				var newOnPress = function newOnPress(_) {
					_this5.onRowPress();
					onPress();
				};
				return _react2.default.cloneElement(this.props.children[1], babelHelpers.extends({}, this.props.children[1].props, {
					onPress: newOnPress
				}));
			}

			return _react2.default.createElement(
				_reactNative.TouchableOpacity,
				{
					activeOpacity: 1,
					onPress: function onPress(_) {
						return _this5.onRowPress();
					},
					__source: {
						fileName: _jsxFileName,
						lineNumber: 248
					}
				},
				this.props.children[1]
			);
		}
	}, {
		key: 'renderRowContent',
		value: function renderRowContent() {
			var _this6 = this;

			if (this.state.dimensionsSet) {
				return _react2.default.createElement(
					_reactNative.Animated.View,
					babelHelpers.extends({}, this._panResponder.panHandlers, {
						style: {
							zIndex: 2,
							transform: [{ translateX: this._translateX }]
						},
						__source: {
							fileName: _jsxFileName,
							lineNumber: 263
						}
					}),
					this.renderVisibleContent()
				);
			} else {
				return _react2.default.createElement(
					_reactNative.Animated.View,
					babelHelpers.extends({}, this._panResponder.panHandlers, {
						onLayout: function onLayout(e) {
							return _this6.onContentLayout(e);
						},
						style: {
							zIndex: 2,
							transform: [{ translateX: this._translateX }]
						},
						__source: {
							fileName: _jsxFileName,
							lineNumber: 277
						}
					}),
					this.renderVisibleContent()
				);
			}
		}
	}, {
		key: 'render',
		value: function render() {
			return _react2.default.createElement(
				_reactNative.View,
				{ style: this.props.style ? this.props.style : styles.container, __source: {
						fileName: _jsxFileName,
						lineNumber: 295
					}
				},
				_react2.default.createElement(
					_reactNative.View,
					{ style: [styles.hidden, {
							height: this.state.hiddenHeight,
							width: this.state.hiddenWidth
						}], __source: {
							fileName: _jsxFileName,
							lineNumber: 296
						}
					},
					this.props.children[0]
				),
				this.renderRowContent()
			);
		}
	}]);
	return SwipeRow;
}(_react.Component);

var styles = _reactNative.StyleSheet.create({
	container: {},
	hidden: {
		zIndex: 1,
		bottom: 0,
		left: 0,
		overflow: 'hidden',
		position: 'absolute',
		right: 0,
		top: 0
	}
});

SwipeRow.propTypes = {
	setScrollEnabled: _propTypes2.default.func,

	swipeGestureBegan: _propTypes2.default.func,

	onRowOpen: _propTypes2.default.func,

	onRowDidOpen: _propTypes2.default.func,

	leftOpenValue: _propTypes2.default.number,

	rightOpenValue: _propTypes2.default.number,

	stopLeftSwipe: _propTypes2.default.number,

	stopRightSwipe: _propTypes2.default.number,

	friction: _propTypes2.default.number,

	tension: _propTypes2.default.number,

	closeOnRowPress: _propTypes2.default.bool,

	disableLeftSwipe: _propTypes2.default.bool,

	disableRightSwipe: _propTypes2.default.bool,

	recalculateHiddenLayout: _propTypes2.default.bool,

	onRowClose: _propTypes2.default.func,

	onRowDidClose: _propTypes2.default.func,

	style: _reactNative.ViewPropTypes.style,

	preview: _propTypes2.default.bool,

	previewDuration: _propTypes2.default.number,

	previewOpenValue: _propTypes2.default.number,

	directionalDistanceChangeThreshold: _propTypes2.default.number,

	swipeToOpenPercent: _propTypes2.default.number,

	swipeToOpenVelocityContribution: _propTypes2.default.number,

	swipeToClosePercent: _propTypes2.default.number
};

SwipeRow.defaultProps = {
	leftOpenValue: 0,
	rightOpenValue: 0,
	closeOnRowPress: true,
	disableLeftSwipe: false,
	disableRightSwipe: false,
	recalculateHiddenLayout: false,
	preview: false,
	previewDuration: 300,
	directionalDistanceChangeThreshold: 2,
	swipeToOpenPercent: 50,
	swipeToOpenVelocityContribution: 0,
	swipeToClosePercent: 50
};

exports.default = SwipeRow;
}, 380, null, "react-native-swipe-list-view/components/SwipeRow.js");
__d(/* myproject/images/1_08.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":40,"height":40,"scales":[1],"hash":"bc6166e484d857f720a81b889235590c","name":"1_08","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 381, null, "myproject/images/1_08.png");
__d(/* myproject/images/1_300.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":26,"height":26,"scales":[1],"hash":"b69e61d3f0c29500e7dafcffc512ca45","name":"1_300","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 382, null, "myproject/images/1_300.png");
__d(/* myproject/images/1_311.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":26,"height":26,"scales":[1],"hash":"276bdd7478c62db93163682ea26657ab","name":"1_311","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 383, null, "myproject/images/1_311.png");
__d(/* myproject/images/1_32.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":26,"height":26,"scales":[1],"hash":"1330cf55e2494ea3581039307bfebc9d","name":"1_32","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 384, null, "myproject/images/1_32.png");
__d(/* myproject/images/2_02.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":40,"height":40,"scales":[1],"hash":"a9c55c71a889e8d6d68f249a04946367","name":"2_02","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 385, null, "myproject/images/2_02.png");
__d(/* myproject/images/succeed.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":130,"height":130,"scales":[1],"hash":"b49c3ac2af4954c6887ab8466ed9977f","name":"succeed","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 386, null, "myproject/images/succeed.png");
__d(/* myproject/utils/DeCodePrePrint.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _StringUtils = require(352            ); // 352 = ./StringUtils

var _StringUtils2 = babelHelpers.interopRequireDefault(_StringUtils);

var strLength = void 0;

var DeCodePrePrint = function DeCodePrePrint() {
  babelHelpers.classCallCheck(this, DeCodePrePrint);

  this.deCodePreFlag = function (deCode) {
    var flag = _StringUtils2.default.subStr(0, 2, deCode);
    if ("27" == flag) {
      return true;
    } else if ("13" == flag) {
      return true;
    } else {
      return false;
    }
  };

  this.deCodeProdCode = function (deCode, dBAdapter) {
    return new Promise(function (resolve, reject) {
      dBAdapter.selectKgOpt("ScalePluLength").then(function (datas) {
        var dataLen = datas.length;
        if (dataLen != 0) {
          strLength = datas.item(0).OptValue;
          if (strLength == "") {
            strLength = "5";
          }
        } else {
          strLength = "5";
        }
        resolve(_StringUtils2.default.subStr(2, 2 + Number(strLength), deCode));
      });
    });
  };

  this.deCodeTotile = function (deCode, dBAdapter) {
    return new Promise(function (resolve, reject) {
      var strDegree = void 0;
      var s = void 0;
      var fixed = 2;
      dBAdapter.selectPosOpt("BARDEGREE").then(function (barDegrees) {
        if (barDegrees.length != 0) {
          strDegree = barDegrees.item(0).OptValue;
          s = _StringUtils2.default.subStr(2 + Number(strLength), 13 - 1, deCode);
          if (strDegree == "") {
            strDegree = "0.01";fixed = 2;
          } else if ("分" == strDegree) {
            strDegree = "0.01";fixed = 2;
          } else if ("角" == strDegree) {
            strDegree = "0.1";fixed = 1;
          } else if ("元" == strDegree) {
            strDegree = "1";
            fixed = 0;
          }
        } else {
          strDegree = "0.01";
          s = _StringUtils2.default.subStr(2 + Number(strLength), 13 - 1, deCode);
        }

        var scaleMultiply = parseFloat(Number(s) * Number(strDegree)).toFixed(fixed);

        resolve(scaleMultiply);
      });
    });
  };
};

exports.default = DeCodePrePrint;
}, 387, null, "myproject/utils/DeCodePrePrint.js");
__d(/* myproject/app/GoodsDetails.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\GoodsDetails.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _HistoricalDocument = require(309                   ); // 309 = ./HistoricalDocument

var _HistoricalDocument2 = babelHelpers.interopRequireDefault(_HistoricalDocument);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var GoodsDetails = function (_Component) {
    babelHelpers.inherits(GoodsDetails, _Component);

    function GoodsDetails(props) {
        babelHelpers.classCallCheck(this, GoodsDetails);

        var _this = babelHelpers.possibleConstructorReturn(this, (GoodsDetails.__proto__ || Object.getPrototypeOf(GoodsDetails)).call(this, props));

        _this.state = {
            reqDetailCode: "",
            ShopCountm: "",
            Number: "",
            storecode: "",
            numbershop: "",
            name: "",
            checktype: "",
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return row1 !== row2;
                } }),
            Formno: _this.props.Formno ? _this.props.Formno : "",
            FormDate: _this.props.FormDate ? _this.props.FormDate : "",
            promemo: _this.props.promemo ? _this.props.promemo : "无"
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(GoodsDetails, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('LinkUrl').then(function (tags) {
                _this2.setState({
                    linkurl: tags
                });
            });

            _Storage2.default.get('historyClass').then(function (tags) {
                _this2.setState({
                    reqDetailCode: tags
                });
            });

            _Storage2.default.get('Name').then(function (tags) {
                _this2.setState({
                    name: tags
                });
            });

            _Storage2.default.get('username').then(function (tags) {
                _this2.setState({
                    Username: tags
                });
            });

            _Storage2.default.get('userpwd').then(function (tags) {
                _this2.setState({
                    Userpwd: tags
                });
            });

            _Storage2.default.get('code').then(function (tags) {
                _Storage2.default.get("usercode", "").then(function (usercode) {
                    _Storage2.default.get("username", "").then(function (username) {
                        var params = {
                            ClientCode: _this2.state.ClientCode,
                            username: _this2.state.Username,
                            usercode: _this2.state.Userpwd
                        };
                    });
                });
                var params = {
                    reqCode: 'App_PosReq',
                    reqDetailCode: _this2.state.reqDetailCode,
                    ClientCode: _this2.state.ClientCode,
                    sDateTime: Date.parse(new Date()),
                    Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + _this2.state.reqDetailCode + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '',
                    username: _this2.state.Username,
                    usercode: _this2.state.Userpwd,
                    BeginDate: "",
                    EndDate: "",
                    shopcode: tags,
                    formno: _this2.state.Formno,
                    prodcode: ""
                };
                _FetchUtils2.default.post(_this2.state.linkurl, JSON.stringify(params)).then(function (data) {
                    console.log(JSON.stringify(data));
                    if (data.retcode == 1) {
                        var numbercode = data.DetailInfo1.storecode;
                        var numbershop = data.DetailInfo1.childshop;
                        var checktype = data.DetailInfo1.checktype;
                        var DetailInfo2 = data.DetailInfo2;
                        var shopnumber = 0;
                        for (var i = 0; i < DetailInfo2.length; i++) {
                            var row = DetailInfo2[i];
                            var number = row.countm;
                            shopnumber += parseInt(row.countm);
                        }
                        _this2.dataRows = _this2.dataRows.concat(DetailInfo2);
                        _this2.setState({
                            dataSource: _this2.state.dataSource.cloneWithRows(_this2.dataRows),
                            Number: shopnumber,
                            storecode: numbercode,
                            numbershop: numbershop,
                            checktype: checktype
                        });
                    } else {
                        alert(JSON.stringify(data));
                    }
                }, function (err) {
                    alert("网络请求失败");
                });
            });
        }
    }, {
        key: 'GoodsDetails',
        value: function GoodsDetails() {
            this.props.navigator.pop();
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            return _react2.default.createElement(
                _reactNative.ScrollView,
                { style: styles.shoprow, horizontal: true, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 138
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Direction, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 139
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: [styles.ShopList1, { width: 70 }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 140
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.Name1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 141
                                }
                            },
                            rowData.prodname
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: [styles.ShopList1, { width: 70 }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 143
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.Name1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 144
                                }
                            },
                            rowData.prototal
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: [styles.ShopList1, { width: 70 }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 146
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.Name1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 147
                                }
                            },
                            rowData.countm
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.ShopList1, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 149
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.Name1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 150
                                }
                            },
                            rowData.promemo
                        )
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 158
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 159
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 160
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.GoodsDetails.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 161
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 162
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 164
                                }
                            },
                            this.state.Formno
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Cont, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 167
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.List, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 168
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ListLeft, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 169
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 170
                                    }
                                },
                                '\u4ED3\u5E93\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 171
                                    }
                                },
                                '\u7CFB\u7EDF\u9ED8\u8BA4\u4ED3\u5E93'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ListRight, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 173
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 174
                                    }
                                },
                                '\u8D27\u54C1\u6570\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 175
                                    }
                                },
                                this.state.Number
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.List, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 178
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [styles.ListLeft, { flex: 1 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 179
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 180
                                    }
                                },
                                '\u5355\u636E\u5907\u6CE8\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 181
                                    }
                                },
                                this.state.promemo
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Listright, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 183
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 184
                                    }
                                },
                                '\u5355\u636E\u72B6\u6001\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [styles.ListText, { color: "#ff4e4e" }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 185
                                    }
                                },
                                this.state.checktype
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.List, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 188
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ListLeft, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 189
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 190
                                    }
                                },
                                '\u5236\u5355\u65E5\u671F\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 191
                                    }
                                },
                                this.state.FormDate
                            )
                        )
                    ),
                    this.state.reqDetailCode == "App_Client_ProCGDetailQ" || this.state.reqDetailCode == "App_Client_ProYSDetailQ" || this.state.reqDetailCode == "App_Client_ProXPDetailCGQ" || this.state.reqDetailCode == "App_Client_ProXPDetailYSQ" ? _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.List, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 196
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ListLeft, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 197
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 198
                                    }
                                },
                                '\u4F9B\u5E94\u5546\u7F16\u7801\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 199
                                    }
                                },
                                this.state.storecode
                            )
                        )
                    ) : null,
                    this.state.reqDetailCode == "App_Client_ProXPDetailCGQ" || this.state.reqDetailCode == "App_Client_ProXPDetailYSQ" ? _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.List, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 205
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ListLeft, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 206
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 207
                                    }
                                },
                                '\u673A\u6784\u53F7\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ListText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 208
                                    }
                                },
                                this.state.numbershop
                            )
                        )
                    ) : null
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ShopCont, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 213
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.ShopList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 214
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: [styles.Name, { width: 70 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 215
                                }
                            },
                            '\u540D\u79F0'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: [styles.Name, { width: 70 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 216
                                }
                            },
                            '\u91D1\u989D'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: [styles.Name, { width: 705 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 217
                                }
                            },
                            '\u6570\u91CF'
                        )
                    ),
                    _react2.default.createElement(_reactNative.ListView, {
                        style: styles.listViewStyle,
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 219
                        }
                    })
                )
            );
        }
    }]);
    return GoodsDetails;
}(_react.Component);

exports.default = GoodsDetails;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    Cont: {
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 15,
        backgroundColor: "#fffbe7"
    },
    List: {
        marginBottom: 15,
        flexDirection: "row"
    },
    ListText: {
        fontSize: 16,
        color: "#333333"
    },
    ListLeft: {
        flexDirection: "row"
    },
    ListRight: {
        position: "absolute",
        right: 0,
        flexDirection: "row"
    },
    Listright: {
        flexDirection: "row",
        flex: 1
    },
    ShopList: {
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 20,
        paddingBottom: 20,
        alignItems: "center",
        flexDirection: "row"
    },
    Name: {
        flex: 1,
        color: "#666666",
        fontSize: 16,
        textAlign: "center"
    },
    shoprow: {
        flex: 1
    },
    Direction: {
        paddingLeft: 25,
        paddingTop: 20,
        paddingBottom: 20,
        height: 61,
        flexDirection: "row",
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    ShopList1: {
        marginRight: 25,
        overflow: "hidden",
        flex: 1
    },
    Name1: {
        flex: 1,
        color: "#333333",
        fontSize: 16,
        textAlign: "center"
    },
    ContList: {
        paddingBottom: 50
    },
    listViewStyle: {
        marginBottom: 280
    }
});
}, 388, null, "myproject/app/GoodsDetails.js");
__d(/* myproject/app/Enquiries.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\Enquiries.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _HistoricalDocument = require(309                   ); // 309 = ./HistoricalDocument

var _HistoricalDocument2 = babelHelpers.interopRequireDefault(_HistoricalDocument);

var _DateUtil = require(390                ); // 390 = ../utils/DateUtil

var _DateUtil2 = babelHelpers.interopRequireDefault(_DateUtil);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _reactNativeDatetime = require(391                    ); // 391 = react-native-datetime

var _reactNativeDatetime2 = babelHelpers.interopRequireDefault(_reactNativeDatetime);

var dateutil = new _DateUtil2.default();
var db = void 0;

var Enquiries = function (_Component) {
    babelHelpers.inherits(Enquiries, _Component);

    function Enquiries(props) {
        babelHelpers.classCallCheck(this, Enquiries);

        var _this = babelHelpers.possibleConstructorReturn(this, (Enquiries.__proto__ || Object.getPrototypeOf(Enquiries)).call(this, props));

        _this.state = {
            startDate: _DateUtil2.default.formatDateTime(new Date()),
            endDate: _DateUtil2.default.formatDateTime(new Date()),
            formno: "",
            prodcode: "",
            name: ""
        };
        return _this;
    }

    babelHelpers.createClass(Enquiries, [{
        key: 'componentDidMount',
        value: function componentDidMount() {

            this._get();
        }
    }, {
        key: '_get',
        value: function _get() {
            var _this2 = this;

            _Storage2.default.get('code').then(function (tags) {
                _this2.setState({
                    reqDetailCode: tags
                });
            });

            _Storage2.default.get('Name').then(function (tags) {
                _this2.setState({
                    name: tags
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            this.props.navigator.pop();
        }
    }, {
        key: 'pressPop',
        value: function pressPop() {
            if (this.props.reloadView) {
                this.props.reloadView(this.state.startDate, this.state.endDate, this.state.formno, this.state.prodcode);
            }
            this.props.navigator.pop();
        }
    }, {
        key: 'showDatePicker',
        value: function showDatePicker() {
            var _this3 = this;

            var date = new Date();
            this.picker.showDatePicker(date, function (d) {
                _this3.setState({ date: d });
            });
        }
    }, {
        key: 'showTimePicker',
        value: function showTimePicker() {
            var _this4 = this;

            var date = new Date();
            this.picker.showTimePicker(date, function (d) {
                _this4.setState({ date: d });
            });
        }
    }, {
        key: 'showDateTimePicker',
        value: function showDateTimePicker(data) {
            var _this5 = this;

            if (data) {
                var startDate = new Date();
                this.picker.showDateTimePicker(startDate, function (d) {
                    _this5.setState({ startDate: _DateUtil2.default.formatDateTime(d) });
                });
            } else {
                var endDate = new Date();
                this.picker.showDateTimePicker(endDate, function (d) {
                    _this5.setState({ endDate: _DateUtil2.default.formatDateTime(d) });
                });
            }
        }
    }, {
        key: 'emptying',
        value: function emptying() {
            var nextRoute = {
                name: "主页",
                component: _HistoricalDocument2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            return _react2.default.createElement(
                _reactNative.ScrollView,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 110
                    }
                },
                _react2.default.createElement(
                    _reactNative.ScrollView,
                    { style: styles.ScrollView, scrollEnabled: false, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 111
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.header, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 112
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.cont, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 113
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                { onPress: this.Return.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 114
                                    }
                                },
                                _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                        fileName: _jsxFileName,
                                        lineNumber: 115
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.HeaderList, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 117
                                    }
                                },
                                this.state.name,
                                '\u67E5\u8BE2'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Content, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 120
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ContList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 121
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ContLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 122
                                    }
                                },
                                '\u5F00\u59CB\u65E5\u671F'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Contright, onPress: function onPress(data) {
                                        _this6.showDateTimePicker(true);
                                    }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 123
                                    }
                                },
                                this.state.startDate.toString()
                            ),
                            _react2.default.createElement(_reactNativeDatetime2.default, { ref: function ref(picker) {
                                    _this6.picker = picker;
                                }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 124
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ContList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 126
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ContLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 127
                                    }
                                },
                                '\u7ED3\u675F\u65E5\u671F'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Contright, onPress: function onPress(data) {
                                        _this6.showDateTimePicker(false);
                                    }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 128
                                    }
                                },
                                this.state.endDate.toString()
                            ),
                            _react2.default.createElement(_reactNativeDatetime2.default, { ref: function ref(picker) {
                                    _this6.picker = picker;
                                }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 129
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ContList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 131
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ContLeft, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 132
                                    }
                                },
                                '\u95E8\u5E97'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ContLeft1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 133
                                    }
                                },
                                this.state.reqDetailCode
                            )
                        ),
                        this.state.name == "商品采购" || this.state.name == "商品验收" || this.state.name == "协配采购" || this.state.name == "协配收货" ? _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ContList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 137
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [styles.ContLeft, { marginTop: 7 }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 138
                                    }
                                },
                                '\u4F9B\u5E94\u5546\u7F16\u7801'
                            ),
                            _react2.default.createElement(_reactNative.TextInput, {
                                underlineColorAndroid: 'transparent',
                                placeholder: '\u8BF7\u8F93\u5165\u4F9B\u5E94\u5546\u7F16\u7801',
                                placeholderTextColor: '#999999',
                                style: styles.ContRight,
                                onChangeText: function onChangeText(value) {
                                    _this6.setState({
                                        suppcode: value
                                    });
                                }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 139
                                }
                            })
                        ) : null,
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ContList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 151
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [styles.ContLeft, { marginTop: 7 }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 152
                                    }
                                },
                                '\u5355\u636E\u53F7'
                            ),
                            _react2.default.createElement(_reactNative.TextInput, {
                                underlineColorAndroid: 'transparent',
                                placeholder: '\u8BF7\u8F93\u5165\u5355\u636E\u53F7',
                                placeholderTextColor: '#999999',
                                style: styles.ContRight,
                                onChangeText: function onChangeText(value) {
                                    _this6.setState({
                                        formno: value
                                    });
                                }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 153
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.ContList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 164
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [styles.ContLeft, { marginTop: 7 }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 165
                                    }
                                },
                                '\u5546\u54C1\u7F16\u7801'
                            ),
                            _react2.default.createElement(_reactNative.TextInput, {
                                underlineColorAndroid: 'transparent',
                                placeholder: '\u8BF7\u8F93\u5165\u5546\u54C1\u7F16\u7801',
                                placeholderTextColor: '#999999',
                                style: styles.ContRight,
                                onChangeText: function onChangeText(value) {
                                    _this6.setState({
                                        prodcode: value
                                    });
                                }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 166
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.button, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 177
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.ButtonText, onPress: this.pressPop.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 178
                                    }
                                },
                                '\u641C\u7D22'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Emptying, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 181
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.emptying.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 182
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.EmptyingTxt, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 183
                                    }
                                },
                                '\u6E05\u7A7A\u5386\u53F2\u67E5\u8BE2'
                            )
                        )
                    )
                )
            );
        }
    }]);
    return Enquiries;
}(_react.Component);

exports.default = Enquiries;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4f4d",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    Content: {
        marginBottom: 30
    },
    ContList: {
        borderBottomWidth: 1,
        borderBottomColor: "#f5f5f5",
        flexDirection: "row",
        height: 55,
        paddingTop: 15,
        paddingLeft: 10,
        backgroundColor: "#ffffff",
        borderBottomColor: "#f2f2f2",
        borderBottomWidth: 1
    },
    ContLeft: {
        color: "#666666",
        fontSize: 16,
        width: 100,
        textAlign: "right"
    },
    Contright: {
        color: "#333333",
        marginLeft: 15
    },
    ContLeft1: {
        flex: 8,
        color: "#333333",
        fontSize: 16,
        marginLeft: 15
    },
    ContRight: {
        flex: 8,
        color: "#333333",
        fontSize: 16
    },
    Emptying: {
        borderWidth: 1,
        borderColor: "#ff4e4e",
        borderRadius: 5,
        marginLeft: 25,
        marginRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ffffff"
    },
    EmptyingTxt: {
        color: "#ff4e4e",
        textAlign: "center",
        fontSize: 18
    },
    button: {
        marginTop: 30,
        marginLeft: 25,
        marginRight: 25,
        backgroundColor: "#ff4e4e",
        borderRadius: 5,
        paddingTop: 13,
        paddingBottom: 13
    },
    ButtonText: {
        color: "#ffffff",
        textAlign: "center",
        fontSize: 18
    }
});
}, 389, null, "myproject/app/Enquiries.js");
__d(/* myproject/utils/DateUtil.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var DateUtil = function () {
    function DateUtil() {
        babelHelpers.classCallCheck(this, DateUtil);
    }

    babelHelpers.createClass(DateUtil, null, [{
        key: "formatDate",
        value: function formatDate(date) {
            var month = date.getMonth() + 1;
            var day = date.getDate();

            return date.getFullYear() + "-" + (month < 10 ? "0" + month : month) + "-" + (day < 10 ? "0" + day : day);
        }
    }, {
        key: "formatDateTime",
        value: function formatDateTime(date) {
            var month = date.getMonth() + 1;
            var day = date.getDate();
            var hours = date.getHours();
            var minutes = date.getMinutes();
            return date.getFullYear() + "-" + (month < 10 ? "0" + month : month) + "-" + (day < 10 ? "0" + day : day);
        }
    }, {
        key: "parseDate",
        value: function parseDate(dateString) {
            return new Date(Date.parse(dateString));
        }
    }, {
        key: "parseDateTime",
        value: function parseDateTime(dateTimeString) {
            var dateTimeArray = dateTimeString.split(" ");
            var date = new Date(Date.parse(dateTimeArray[0]));
            var timeArray = dateTimeArray[1].split(":");
            date.setHours(parseInt(timeArray[0]));
            date.setMinutes(parseInt(timeArray[1]));
            return date;
        }
    }]);
    return DateUtil;
}();

exports.default = DateUtil;
}, 390, null, "myproject/utils/DateUtil.js");
__d(/* react-native-datetime/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _DateTime = require(392         ); // 392 = ./DateTime

var _DateTime2 = babelHelpers.interopRequireDefault(_DateTime);

exports.default = _DateTime2.default;
}, 391, null, "react-native-datetime/index.js");
__d(/* react-native-datetime/DateTime.android.js */function(global, require, module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var RCTDateTimePicker = _reactNative.NativeModules.DateTimePicker;

var DateTimePicker = function (_Component) {
    babelHelpers.inherits(DateTimePicker, _Component);

    function DateTimePicker(props) {
        babelHelpers.classCallCheck(this, DateTimePicker);
        return babelHelpers.possibleConstructorReturn(this, (DateTimePicker.__proto__ || Object.getPrototypeOf(DateTimePicker)).call(this, props));
    }

    babelHelpers.createClass(DateTimePicker, [{
        key: 'showDatePicker',
        value: function showDatePicker(date, callback) {
            date = date || new Date();
            var options = babelHelpers.extends({}, this.props, {
                year: date.getFullYear(),
                month: date.getMonth(),
                day: date.getDate()
            });
            RCTDateTimePicker.showDatePicker(options, function (year, month, day) {
                date.setFullYear(year);
                date.setMonth(month);
                date.setDate(day);
                callback(date);
            });
        }
    }, {
        key: 'showTimePicker',
        value: function showTimePicker(date, callback) {
            date = date || new Date();
            var options = babelHelpers.extends({}, this.props, {
                hour: date.getHours(),
                minute: date.getMinutes()
            });
            RCTDateTimePicker.showTimePicker(options, function (hour, minute) {
                date.setHours(hour);
                date.setMinutes(minute);
                callback(date);
            });
        }
    }, {
        key: 'showDateTimePicker',
        value: function showDateTimePicker(date, callback) {
            date = date || new Date();
            var options = babelHelpers.extends({}, this.props, {
                year: date.getFullYear(),
                month: date.getMonth(),
                day: date.getDate(),
                hour: date.getHours(),
                minute: date.getMinutes()
            });
            RCTDateTimePicker.showDateTimePicker(options, function (year, month, day, hour, minute) {
                date.setFullYear(year);
                date.setMonth(month);
                date.setDate(day);
                date.setHours(hour);
                date.setMinutes(minute);
                callback(date);
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return null;
        }
    }]);
    return DateTimePicker;
}(_react.Component);

DateTimePicker.propTypes = {
    cancelText: _react.PropTypes.string,
    okText: _react.PropTypes.string
};
DateTimePicker.defaultProps = {
    cancelText: 'Cancel',
    okText: 'Ok'
};
exports.default = DateTimePicker;
}, 392, null, "react-native-datetime/DateTime.android.js");
__d(/* myproject/images/1_30.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":26,"height":26,"scales":[1],"hash":"bfe8a03bd5260efdd7553c0a79db208b","name":"1_30","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 393, null, "myproject/images/1_30.png");
__d(/* myproject/images/1_322.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":26,"height":26,"scales":[1],"hash":"c879875054bb849604829365cf593486","name":"1_322","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 394, null, "myproject/images/1_322.png");
__d(/* myproject/Sell/Sell_Data.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\Sell\\Sell_Data.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308           ); // 308 = ../app/Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Search = require(350            ); // 350 = ../app/Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _Sell_Data_List = require(396                     ); // 396 = ../Sell/Sell_Data_List

var _Sell_Data_List2 = babelHelpers.interopRequireDefault(_Sell_Data_List);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _NumFormatUtils = require(328                      ); // 328 = ../utils/NumFormatUtils

var _NumFormatUtils2 = babelHelpers.interopRequireDefault(_NumFormatUtils);

var _DownLoadBasicData = require(341                         ); // 341 = ../utils/DownLoadBasicData

var _DownLoadBasicData2 = babelHelpers.interopRequireDefault(_DownLoadBasicData);

var dbAdapter = new _DBAdapter2.default();

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var RNAndroidIMEI = NativeModules.RNAndroidIMEI;

var SellData = function (_Component) {
    babelHelpers.inherits(SellData, _Component);

    function SellData(props) {
        babelHelpers.classCallCheck(this, SellData);

        var _this = babelHelpers.possibleConstructorReturn(this, (SellData.__proto__ || Object.getPrototypeOf(SellData)).call(this, props));

        _this.state = {
            show: false,
            Number: "",
            ShopCode: "",
            PosCode: "",
            invoice: "",
            active: "",
            linkurl: ""
        };
        return _this;
    }

    babelHelpers.createClass(SellData, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('invoice').then(function (tags) {
                _this2.setState({
                    invoice: tags
                });
            });

            _Storage2.default.get('Disting').then(function (tags) {
                _this2.setState({
                    Disting: tags
                });
            });

            _Storage2.default.get('LinkUrl').then(function (tags) {
                _this2.setState({
                    linkurl: tags
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'ShopCodeOnclick',
        value: function ShopCodeOnclick() {
            var _this3 = this;

            _Storage2.default.save("Sell", "ShopCode");
            var nextRoute = {
                name: "Sell_Data_List",
                component: _Sell_Data_List2.default,
                params: {
                    reloadView: function reloadView(ShopCode) {
                        return _this3._reloadView(ShopCode);
                    }
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: '_reloadView',
        value: function _reloadView(ShopCode) {
            ShopCode = String(ShopCode);
            this.setState({
                ShopCode: ShopCode
            });
        }
    }, {
        key: 'PosCodeOnclick',
        value: function PosCodeOnclick() {
            var _this4 = this;

            _Storage2.default.save("Sell", "PosCode");
            _Storage2.default.save("ShopCode", this.state.ShopCode);
            if (this.state.ShopCode == "") {
                alert("请选择机构号");
            } else {
                var nextRoute = {
                    name: "Sell_Data_List",
                    component: _Sell_Data_List2.default,
                    params: {
                        PosCodeView: function PosCodeView(PosCode) {
                            return _this4._PosCodeView(PosCode);
                        }
                    }
                };
                this.props.navigator.push(nextRoute);
            }
        }
    }, {
        key: '_PosCodeView',
        value: function _PosCodeView(PosCode) {
            PosCode = String(PosCode);
            this.setState({
                PosCode: PosCode
            });
        }
    }, {
        key: 'Button',
        value: function Button() {
            var _this5 = this;

            if (this.state.Disting == "0") {
                NativeModules.AndroidDeviceInfo.getIMEI(function (IMEI) {
                    if (_this5.state.ShopCode == "") {
                        alert("请选择机构号");
                    } else if (_this5.state.PosCode == "") {
                        alert("请选择pos号");
                    } else {
                        var params = {
                            TblName: "PosShopBind",
                            poscode: _this5.state.PosCode,
                            shopcode: _this5.state.ShopCode,
                            BindMAC: "",
                            SysGuid: IMEI
                        };
                        _FetchUtils2.default.post(_this5.state.linkurl, JSON.stringify(params)).then(function (data) {
                            if (data.retcode == 1) {
                                _DownLoadBasicData2.default.downLoadPosOpt(_this5.state.linkurl, _this5.state.ShopCode, dbAdapter, _this5.state.PosCode).then(function (response) {
                                    if (response = true) {

                                        var nextRoute = {
                                            name: "Index",
                                            component: _Index2.default
                                        };
                                        _this5.props.navigator.push(nextRoute);
                                        _Storage2.default.save("Bind", "bindsucceed");
                                        _Storage2.default.save("ShopCode", _this5.state.ShopCode);
                                        _Storage2.default.save("PosCode", _this5.state.PosCode);
                                        _Storage2.default.save('Name', '移动销售');
                                        _Storage2.default.save("Num", "1");
                                        _Storage2.default.save("inoNum", "1");
                                        _NumFormatUtils2.default.createLsNo().then(function (data) {
                                            _Storage2.default.save("LsNo", data);
                                        });
                                    } else {
                                        alert(JSON.stringify(response));
                                    }
                                });
                            } else {
                                alert(JSON.stringify(data));
                            }
                        }, function (err) {
                            alert("网络请求失败");
                        });
                    }
                });
            } else if (this.state.Disting == "1") {
                NativeModules.AndroidDeviceInfo.getIMEI(function (IMEI) {
                    if (_this5.state.ShopCode == "") {
                        alert("请选择机构号");
                    } else if (_this5.state.PosCode == "") {
                        alert("请选择pos号");
                    } else {
                        var params = {
                            TblName: "PosShopBind",
                            poscode: _this5.state.PosCode,
                            shopcode: _this5.state.ShopCode,
                            BindMAC: "",
                            SysGuid: IMEI
                        };
                        _FetchUtils2.default.post(_this5.state.linkurl, JSON.stringify(params)).then(function (data) {
                            if (data.retcode == 1) {
                                _DownLoadBasicData2.default.downLoadPosOpt(_this5.state.linkurl, _this5.state.ShopCode, dbAdapter, _this5.state.PosCode).then(function (response) {
                                    if (response = true) {
                                        var nextRoute = {
                                            name: "Search",
                                            component: _Search2.default
                                        };
                                        _this5.props.navigator.push(nextRoute);
                                        _Storage2.default.save("Bind", "bindsucceed");
                                        _Storage2.default.save("ShopCode", _this5.state.ShopCode);
                                        _Storage2.default.save("PosCode", _this5.state.PosCode);
                                        _Storage2.default.save('Name', '移动销售');
                                        _Storage2.default.save("Num", "1");
                                    } else {
                                        alert(JSON.stringify(response));
                                    }
                                });
                            } else {
                                alert(JSON.stringify(data));
                            }
                        }, function (err) {
                            alert("网络请求失败");
                        });
                    }
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 214
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 215
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 216
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 217
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 218
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 220
                                }
                            },
                            this.state.invoice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 223
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 224
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 225
                                }
                            },
                            '\u673A\u6784\u53F7:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.ShopCodeOnclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 227
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.ShopCode,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9\u673A\u6784\u53F7',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 228
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.ShopCodeOnclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 240
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 241
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 244
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.listleft, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 245
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.listLeftText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 246
                                }
                            },
                            'Pos\u53F7:'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.listcont, onPress: this.PosCodeOnclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 248
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            style: styles.TextInput1,
                            autofocus: true,
                            editable: false,
                            defaultValue: this.state.PosCode,
                            numberoflines: 1,
                            placeholder: '\u8BF7\u9009\u62E9Pos\u53F7',
                            textalign: 'center',
                            underlineColorAndroid: 'transparent',
                            placeholderTextColor: '#cccccc',
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 249
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.PosCodeOnclick.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 261
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: require(362                 ), __source: { // 362 = ../images/2_03.png
                                fileName: _jsxFileName,
                                lineNumber: 262
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: styles.button, onPress: this.Button.bind(this), __source: {
                            fileName: _jsxFileName,
                            lineNumber: 265
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.buttonText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 266
                            }
                        },
                        '\u7ED1\u5B9A'
                    )
                )
            );
        }
    }]);
    return SellData;
}(_react.Component);

exports.default = SellData;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 50,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    ContList: {
        height: 55,
        paddingLeft: 25,
        paddingRight: 15,
        paddingTop: 15,
        backgroundColor: "#ffffff",
        flexDirection: "row",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    listleft: {
        width: 70,
        marginTop: 4
    },
    listLeftText: {
        color: "#333333",
        fontSize: 16,
        textAlign: "right"
    },
    listcont: {
        flex: 7,
        paddingLeft: 5,
        paddingRight: 5
    },
    listContText: {
        color: "#333333",
        fontSize: 16
    },
    TextInput1: {
        paddingLeft: 5,
        paddingRight: 5,
        paddingTop: 0,
        marginBottom: 2,
        fontSize: 16,
        color: "#333333"
    },
    button: {
        marginLeft: 25,
        marginRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ff4e4e",
        borderRadius: 3,
        marginTop: 30
    },
    buttonText: {
        color: "#ffffff",
        fontSize: 16,
        textAlign: "center"
    }
});
}, 395, null, "myproject/Sell/Sell_Data.js");
__d(/* myproject/Sell/Sell_Data_List.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\Sell\\Sell_Data_List.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var dbAdapter = new _DBAdapter2.default();
var db = void 0;

var Sell_Data_List = function (_Component) {
    babelHelpers.inherits(Sell_Data_List, _Component);

    function Sell_Data_List(props) {
        babelHelpers.classCallCheck(this, Sell_Data_List);

        var _this = babelHelpers.possibleConstructorReturn(this, (Sell_Data_List.__proto__ || Object.getPrototypeOf(Sell_Data_List)).call(this, props));

        _this.state = {
            search: "",
            Sell: "",
            ShopCode: "",
            show: false,
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return true;
                } })
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(Sell_Data_List, [{
        key: '_setModalVisible',
        value: function _setModalVisible() {
            var isShow = this.state.show;
            this.setState({
                show: !isShow
            });
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _Storage2.default.get('invoice').then(function (tags) {
                    _this2.setState({
                        invoice: tags
                    });
                });

                _Storage2.default.get('Sell').then(function (tags) {
                    _this2.setState({
                        Sell: tags
                    });
                });

                _Storage2.default.get('ShopCode').then(function (tags) {
                    _this2.setState({
                        ShopCode: tags
                    });
                });
                _this2.fetch();
            });
        }
    }, {
        key: 'fetch',
        value: function fetch() {
            var _this3 = this;

            this._setModalVisible();
            var params = {
                TblName: "DownPosShop"
            };
            _Storage2.default.get('LinkUrl').then(function (tags) {
                _FetchUtils2.default.post(tags, JSON.stringify(params)).then(function (data) {
                    var TblRow = data.TblRow;
                    var TblRow1 = data.TblRow1;
                    if (_this3.state.Sell == "ShopCode") {
                        _this3.dataRows = _this3.dataRows.concat(TblRow);
                    } else if (_this3.state.Sell == "PosCode") {
                        for (var i = 0; i < TblRow1.length; i++) {
                            var row = TblRow1[i];
                            var ShopCode = row.ShopCode;
                            if (_this3.state.ShopCode == ShopCode) {
                                var PosCode = TblRow1[i];
                                _this3.dataRows = _this3.dataRows.concat(PosCode);
                            }
                        }
                    }
                    _this3.setState({
                        dataSource: _this3.state.dataSource.cloneWithRows(_this3.dataRows)
                    });
                    _this3._setModalVisible();
                }, function (err) {
                    alert("网络请求失败");
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            this.props.navigator.pop();
        }
    }, {
        key: 'Search',
        value: function Search(value) {
            for (var i = 0; i < this.dataRows.length; i++) {
                var dataRow = this.dataRows[i];
                if ((dataRow.ShopCode + "").indexOf(value) >= 0) {
                    var str = this.dataRows.splice(i, 1);
                    this.dataRows.unshift(str[0]);
                    break;
                }
            }
            this.setState({
                dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
            });
        }
    }, {
        key: 'pressPop',
        value: function pressPop(rowData) {
            if (this.props.reloadView) {
                this.props.reloadView(rowData.ShopCode);
            } else if (this.props.PosCodeView) {
                this.props.PosCodeView(rowData.PosCode);
            }
            this.props.navigator.pop();
            _Storage2.default.save("ShopName", rowData.ShopName);
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this4 = this;

            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 133
                    }
                },
                this.state.Sell == "ShopCode" ? _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: styles.header, onPress: function onPress() {
                            return _this4.pressPop(rowData);
                        }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 136
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.coding, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 137
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.codingText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 138
                                }
                            },
                            rowData.ShopCode
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 140
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.codingText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 141
                                }
                            },
                            rowData.ShopName
                        )
                    )
                ) : _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: styles.header, onPress: function onPress() {
                            return _this4.pressPop(rowData);
                        }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 145
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.coding, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 146
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.codingText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 147
                                }
                            },
                            rowData.PosCode
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 149
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.codingText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 150
                                }
                            },
                            rowData.MachName
                        )
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 160
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Title, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 161
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, {
                        autofocus: '{true}',
                        returnKeyType: 'search',
                        placeholder: '\u641C\u7D22\u76F8\u5173\u7F16\u53F7',
                        placeholderColor: '#323232',
                        underlineColorAndroid: 'transparent',
                        style: styles.Search,
                        onChangeText: function onChangeText(value) {
                            _this5.setState({
                                search: value
                            });
                            _this5.Search(value);
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 162
                        }
                    }),
                    _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                            fileName: _jsxFileName,
                            lineNumber: 176
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.Return.bind(this), style: styles.Right, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 177
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.Text, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 178
                                }
                            },
                            '\u53D6\u6D88'
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 181
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.head, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 183
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.coding, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 184
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 185
                                    }
                                },
                                '\u7F16\u7801'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 187
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 188
                                    }
                                },
                                '\u540D\u79F0'
                            )
                        )
                    ),
                    this.dataRows == "" ? _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.NullData, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 194
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: [{ fontSize: 18, color: "#999999" }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 195
                                }
                            },
                            '\u5F53\u524D\u673A\u6784\u53F7\u6682\u65E0\u6570\u636E'
                        )
                    ) : _react2.default.createElement(_reactNative.ListView, {
                        style: styles.scrollview,
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 200
                        }
                    })
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.show,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 208
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LoadCenter, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 214
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.loading, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 215
                                }
                            },
                            _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 216
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TextLoading, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 217
                                    }
                                },
                                '\u52A0\u8F7D\u4E2D'
                            )
                        )
                    )
                )
            );
        }
    }]);
    return Sell_Data_List;
}(_react.Component);

exports.default = Sell_Data_List;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    Title: {
        backgroundColor: "#ff4e4e",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 15,
        paddingBottom: 15,
        flexDirection: "row"
    },
    SearchImage: {
        position: "absolute",
        top: 22,
        left: 24
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 15,
        paddingTop: 6,
        paddingBottom: 6,
        fontSize: 14,
        flex: 1
    },
    Right: {
        width: 60,
        flexDirection: "row",
        paddingTop: 3,
        paddingLeft: 6
    },
    Text: {
        fontSize: 18,
        color: "#ffffff",
        paddingTop: 5,
        paddingLeft: 10
    },
    head: {
        flexDirection: "row",
        paddingTop: 13,
        paddingBottom: 13,
        paddingLeft: 25,
        paddingRight: 25
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    codingText: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    name: {
        flex: 1
    },
    header: {
        flexDirection: "row",
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 13,
        paddingBottom: 13,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    codingText1: {
        color: "#333333",
        fontSize: 16
    },
    name: {
        flex: 1
    },
    nameText1: {
        color: "#333333",
        fontSize: 16
    },
    scrollview: {
        marginBottom: 120
    },
    NullData: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        marginTop: 80
    },
    LoadCenter: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    loading: {
        paddingLeft: 15,
        paddingRight: 15,
        paddingTop: 15,
        paddingBottom: 15,
        backgroundColor: "#000000",
        opacity: 0.8,
        borderRadius: 5
    },
    TextLoading: {
        fontSize: 17,
        color: "#ffffff"
    }
});
}, 396, null, "myproject/Sell/Sell_Data_List.js");
__d(/* myproject/StockEnquiries/StockEnquiries.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\StockEnquiries\\StockEnquiries.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308           ); // 308 = ../app/Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var RNScannerAndroid = NativeModules.RNScannerAndroid;
var dbAdapter = new _DBAdapter2.default();
var db = void 0;

var StockEnquiries = function (_Component) {
    babelHelpers.inherits(StockEnquiries, _Component);

    function StockEnquiries(props) {
        babelHelpers.classCallCheck(this, StockEnquiries);

        var _this = babelHelpers.possibleConstructorReturn(this, (StockEnquiries.__proto__ || Object.getPrototypeOf(StockEnquiries)).call(this, props));

        _this.state = {
            search: "",
            linkurl: "",
            show: false,
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return true;
                } })
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(StockEnquiries, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _Storage2.default.get('LinkUrl').then(function (tags) {
                    _this2.setState({
                        linkurl: tags
                    });
                });
                _reactNative.DeviceEventEmitter.removeAllListeners();
                _this2.Device();
            });
        }
    }, {
        key: 'Code',
        value: function Code() {
            RNScannerAndroid.openScanner();
        }
    }, {
        key: 'Device',
        value: function Device() {
            var _this3 = this;

            _reactNative.DeviceEventEmitter.addListener("code", function (reminder) {
                _this3.setState({
                    search: reminder
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            var nextRoute = {
                name: "Index",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'SearchButton',
        value: function SearchButton() {
            var _this4 = this;

            this.ModalShow();
            this.dataRows = [];
            _Storage2.default.get('str2').then(function (tags) {
                var params = {
                    TblName: "android_ProdQryCurrKC",
                    shopcode: tags,
                    NeedPage: "0",
                    PageSize: "20",
                    CurrPage: "1",
                    context: _this4.state.search
                };
                _FetchUtils2.default.post(_this4.state.linkurl, JSON.stringify(params)).then(function (data) {
                    var TblRow = data.TblRow;
                    _this4.dataRows = _this4.dataRows.concat(TblRow);
                    _this4.setState({
                        dataSource: _this4.state.dataSource.cloneWithRows(_this4.dataRows)
                    });
                    _this4.ModalShow();
                }, function (err) {
                    alert("网络请求失败");
                });
            });
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.DataList, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 99
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: [styles.coding, { paddingLeft: 10 }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 100
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.prod_name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 101
                            }
                        },
                        rowData.prod_name
                    ),
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: [styles.prod_name, { color: "#666666" }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 102
                            }
                        },
                        rowData.prod_code
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.name, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 104
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 105
                            }
                        },
                        rowData.total
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.name, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 107
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 108
                            }
                        },
                        rowData.kc_count
                    )
                )
            );
        }
    }, {
        key: 'ModalShow',
        value: function ModalShow() {
            var isShow = this.state.show;
            this.setState({
                show: !isShow
            });
        }
    }, {
        key: '_onEndEditing',
        value: function _onEndEditing() {
            this._textInput.blur();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 128
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 129
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 130
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 131
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 132
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 134
                                }
                            },
                            '\u5E93\u5B58\u67E5\u8BE2'
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.Code.bind(this), style: styles.onclick, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 135
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(347                 ), style: styles.HeaderImage, __source: { // 347 = ../images/1_05.png
                                    fileName: _jsxFileName,
                                    lineNumber: 136
                                }
                            })
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.ContList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 140
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Title, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 141
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            ref: function ref(component) {
                                return _this5._textInput = component;
                            },
                            onEndEditing: function onEndEditing() {
                                _this5._onEndEditing();
                            },
                            autofocus: '{true}',
                            returnKeyType: 'search',
                            placeholder: '\u641C\u7D22\u76F8\u5173\u4EA7\u54C1\u540D\u79F0',
                            placeholderColor: '#323232',
                            underlineColorAndroid: 'transparent',
                            style: styles.Search,
                            value: this.state.search,
                            onChangeText: function onChangeText(value) {
                                _this5.setState({
                                    search: value
                                });
                            },
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 142
                            }
                        }),
                        _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                                fileName: _jsxFileName,
                                lineNumber: 158
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.SearchButton.bind(this), style: styles.Right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 159
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Text, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 160
                                    }
                                },
                                '\u641C\u7D22'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 164
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.head, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 165
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.coding, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 166
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TitleCodingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 167
                                    }
                                },
                                '\u540D\u79F0&\u6761\u7801'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 169
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TitleCodingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 170
                                    }
                                },
                                '\u91D1\u989D'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 172
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TitleCodingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 173
                                    }
                                },
                                '\u5E93\u5B58'
                            )
                        )
                    ),
                    _react2.default.createElement(_reactNative.ListView, {
                        style: styles.scrollview,
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 176
                        }
                    })
                ),
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.show,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 183
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LoadCenter, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 189
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.loading, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 190
                                }
                            },
                            _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 191
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TextLoading, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 192
                                    }
                                },
                                '\u52A0\u8F7D\u4E2D'
                            )
                        )
                    )
                )
            );
        }
    }]);
    return StockEnquiries;
}(_react.Component);

exports.default = StockEnquiries;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#ffffff'
    },
    header: {
        height: 60,
        backgroundColor: "#ff4e4e",
        paddingTop: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    HeaderList: {
        flex: 6,
        textAlign: "center",
        paddingRight: 50,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 3
    },
    Title: {
        backgroundColor: "#e7e7e7",
        paddingLeft: 16,
        paddingRight: 5,
        paddingTop: 15,
        paddingBottom: 15,
        flexDirection: "row"
    },
    SearchImage: {
        position: "absolute",
        top: 22,
        left: 24
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 15,
        paddingTop: 6,
        paddingBottom: 6,
        fontSize: 14,
        flex: 1
    },
    Right: {
        width: 70,
        flexDirection: "row",
        paddingTop: 3,
        paddingLeft: 8
    },
    Text: {
        fontSize: 18,
        color: "#ff4e4e",
        paddingTop: 5,
        paddingLeft: 10
    },
    head: {
        flexDirection: "row",
        paddingTop: 13,
        paddingBottom: 13,
        paddingLeft: 25,
        paddingRight: 25,
        backgroundColor: "#f2f2f2"
    },
    coding: {
        flex: 2
    },
    prod_name: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    codingText: {
        color: "#333333",
        fontSize: 16,
        height: 44,
        paddingTop: 10,
        overflow: "hidden",
        textAlign: "center"
    },
    TitleCodingText: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden",
        textAlign: "center"
    },
    name: {
        flex: 1
    },
    DataList: {
        flexDirection: "row",
        paddingLeft: 5,
        paddingRight: 5,
        paddingTop: 5,
        paddingBottom: 5,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    scrollview: {
        marginBottom: 180
    },
    LoadCenter: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    loading: {
        paddingLeft: 15,
        paddingRight: 15,
        paddingTop: 15,
        paddingBottom: 15,
        backgroundColor: "#000000",
        opacity: 0.8,
        borderRadius: 5
    },
    TextLoading: {
        fontSize: 17,
        color: "#ffffff"
    }
});
}, 397, null, "myproject/StockEnquiries/StockEnquiries.js");
__d(/* myproject/StockEnquiries/Shopsearch.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\StockEnquiries\\Shopsearch.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308           ); // 308 = ../app/Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var Shopsearch = function (_Component) {
    babelHelpers.inherits(Shopsearch, _Component);

    function Shopsearch(props) {
        babelHelpers.classCallCheck(this, Shopsearch);

        var _this = babelHelpers.possibleConstructorReturn(this, (Shopsearch.__proto__ || Object.getPrototypeOf(Shopsearch)).call(this, props));

        _this.state = {
            ProdCode: "",
            BarCode: "",
            ProdName: "",
            ShortName: "",
            Kccount: "",
            Oprice: "",
            Cost: "",
            OutOprice: "",
            OutCost: "",
            Price: "",
            Total: "",
            SuppCode: "",
            SuppName: "",
            DepCode: "",
            DepName: "",
            BrandCode: "",
            BrandName: "",
            Coprice: "",
            AidCode: "",
            OtherCode: "",
            Spec: "",
            ProdAdr: "",
            Unit: "",
            PUnit: "",
            PUnitAmt: "",
            VipPrice1: "",
            VipPrice2: "",
            VipPrice3: "",
            PsPrice: "",
            WPrice: "",
            FNoCG: "",
            FNoSale: "",
            FNoYH: "",
            FNoPromotion: "",
            FNoTH: "",
            FNoCD: "",
            FUseSalePrice: "",
            PriceFlag: "",
            ProdCode: _this.props.ProdCode ? _this.props.ProdCode : "",
            DepCode: _this.props.DepCode ? _this.props.DepCode : ""
        };
        return _this;
    }

    babelHelpers.createClass(Shopsearch, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _Storage2.default.get('code').then(function (ShopCode) {
                _Storage2.default.get('Usercode').then(function (Usercode) {
                    _Storage2.default.get('LinkUrl').then(function (linkurl) {
                        var params = {
                            TblName: "BasicInfoProd",
                            reqCode: "product",
                            ShopCode: ShopCode,
                            Code: _this2.state.ProdCode,
                            UserCode: Usercode
                        };

                        _FetchUtils2.default.post(linkurl, JSON.stringify(params)).then(function (data) {
                            if (data.retcode == 1) {
                                var TblRow = data.TblRow;
                                var ProdCode;
                                var BarCode;
                                var ProdName;
                                var ShortName;
                                var Kccount;
                                var Oprice;
                                var Cost;
                                var OutOprice;
                                var OutCost;
                                var Price;
                                var Total;
                                var SuppCode;
                                var SuppName;
                                var DepCode;
                                var DepName;
                                var BrandCode;
                                var BrandName;
                                var Coprice;
                                var AidCode;
                                var OtherCode;
                                var Spec;
                                var ProdAdr;
                                var Unit;
                                var PUnit;
                                var PUnitAmt;
                                var VipPrice1;
                                var VipPrice2;
                                var VipPrice3;
                                var PsPrice;
                                var WPrice;
                                var FNoCG;
                                var FNoSale;
                                var FNoYH;
                                var FNoPromotion;
                                var FNoTH;
                                var FNoCD;
                                var FUseSalePrice;
                                var PriceFlag;
                                for (var i = 0; i < TblRow.length; i++) {
                                    var row = TblRow[i];
                                    ProdCode = row.ProdCode;
                                    BarCode = row.BarCode;
                                    ProdName = row.ProdName;
                                    ShortName = row.ShortName;
                                    Kccount = row.KCcount;
                                    Oprice = row.Oprice;
                                    Cost = row.Cost;
                                    OutOprice = row.OutOprice;
                                    OutCost = row.OutCost;
                                    Price = row.Price;
                                    Total = row.Total;
                                    SuppCode = row.SuppCode;
                                    SuppName = row.SuppName;
                                    DepCode = row.DepCode;
                                    DepName = row.DepName;
                                    BrandCode = row.BrandCode;
                                    BrandName = row.BrandName;
                                    Coprice = row.Coprice;
                                    AidCode = row.AidCode;
                                    OtherCode = row.OtherCode;
                                    Spec = row.Spec;
                                    ProdAdr = row.ProdAdr;
                                    Unit = row.Unit;
                                    PUnit = row.PUnit;
                                    PUnitAmt = row.PUnitAmt;
                                    VipPrice1 = row.VipPrice1;
                                    VipPrice2 = row.VipPrice2;
                                    VipPrice3 = row.VipPrice3;
                                    PsPrice = row.PsPrice;
                                    WPrice = row.WPrice;
                                    FNoCG = row.FNoCG;
                                    FNoSale = row.FNoSale;
                                    FNoYH = row.FNoYH;
                                    FNoPromotion = row.FNoPromotion;
                                    FNoTH = row.FNoTH;
                                    FNoCD = row.FNoCD;
                                    FUseSalePrice = row.FUseSalePrice;
                                    PriceFlag = row.PriceFlag;
                                };
                                if (FNoCG == 1 || FNoSale == 1 || FNoYH == 1 || FNoPromotion == 1 || FNoTH == 1 || FNoCD == 1) {
                                    _this2.setState({
                                        FNoCG: "是",
                                        FNoSale: "是",
                                        FNoYH: "是",
                                        FNoPromotion: "是",
                                        FNoTH: "是",
                                        FNoCD: "是"
                                    });
                                } else {
                                    _this2.setState({
                                        FNoCG: "否",
                                        FNoSale: "否",
                                        FNoYH: "否",
                                        FNoPromotion: "否",
                                        FNoTH: "否",
                                        FNoCD: "否"
                                    });
                                }
                                _this2.setState({
                                    ProdCode: ProdCode,
                                    BarCode: BarCode,
                                    ProdName: ProdName,
                                    ShortName: ShortName,
                                    Kccount: Kccount,
                                    Oprice: Oprice,
                                    Cost: Cost,
                                    OutOprice: OutOprice,
                                    OutCost: OutCost,
                                    Price: Price,
                                    Total: Total,
                                    SuppCode: SuppCode,
                                    SuppName: SuppName,
                                    DepCode: DepCode,
                                    DepName: DepName,
                                    BrandCode: BrandCode,
                                    BrandName: BrandName,
                                    Coprice: Coprice,
                                    AidCode: AidCode,
                                    OtherCode: OtherCode,
                                    Spec: Spec,
                                    ProdAdr: ProdAdr,
                                    Unit: Unit,
                                    PUnit: PUnit,
                                    PUnitAmt: PUnitAmt,
                                    VipPrice1: VipPrice1,
                                    VipPrice2: VipPrice2,
                                    VipPrice3: VipPrice3,
                                    PsPrice: PsPrice,
                                    WPrice: WPrice,
                                    FUseSalePrice: FUseSalePrice,
                                    PriceFlag: PriceFlag
                                });
                            } else {}
                        }, function (err) {
                            alert("网络请求失败");
                        });
                    });
                });
            });
        }
    }, {
        key: 'return',
        value: function _return() {
            var nextRoute = {
                name: "主页",
                component: _Index2.default,
                params: {
                    DepCode: this.state.DepCode
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'PressPop',
        value: function PressPop() {
            var nextRoute = {
                name: "主页",
                component: _Index2.default,
                params: {
                    DepCode: this.state.DepCode
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.ScrollView,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 249
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 250
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.cont, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 251
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: this.return.bind(this), style: styles.return, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 252
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { source: require(343                 ), style: styles.HeaderImage, __source: { // 343 = ../images/2_01.png
                                    fileName: _jsxFileName,
                                    lineNumber: 253
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.HeaderText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 255
                                }
                            },
                            this.state.ProdCode
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 258
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 259
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 260
                                }
                            },
                            '\u5546\u54C1\u7F16\u7801\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 261
                                }
                            },
                            this.state.ProdCode
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 264
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 265
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 266
                                }
                            },
                            '\u5546\u54C1\u6761\u7801\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 267
                                }
                            },
                            this.state.BarCode
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 270
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 271
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 272
                                }
                            },
                            '\u5546\u54C1\u540D\u79F0\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 273
                                }
                            },
                            this.state.ProdName
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 276
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 277
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 278
                                }
                            },
                            '\u5546\u54C1\u7B80\u79F0\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 279
                                }
                            },
                            this.state.ShortName
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 282
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 283
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 284
                                }
                            },
                            '\u5E93\u5B58\u6570\u91CF\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 285
                                }
                            },
                            this.state.Kccount
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 287
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 288
                                }
                            },
                            '\u8FDB\u4EF7\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 289
                                }
                            },
                            this.state.Oprice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 292
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 293
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 294
                                }
                            },
                            '\u542B\u7A0E\u6210\u672C\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 295
                                }
                            },
                            this.state.Cost
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 297
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 298
                                }
                            },
                            '\u53BB\u7A0E\u8FDB\u4EF7\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 299
                                }
                            },
                            this.state.OutOprice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 302
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 303
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 304
                                }
                            },
                            '\u53BB\u7A0E\u6210\u672C\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 305
                                }
                            },
                            this.state.OutCost
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 308
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 309
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 310
                                }
                            },
                            '\u552E\u4EF7\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 311
                                }
                            },
                            this.state.Price
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 313
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 314
                                }
                            },
                            '\u552E\u4EF7\u6210\u672C\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 315
                                }
                            },
                            this.state.Total
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 318
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 319
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 320
                                }
                            },
                            '\u4F9B\u5E94\u5546\u7F16\u7801\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 321
                                }
                            },
                            this.state.SuppCode
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 324
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 325
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 326
                                }
                            },
                            '\u4F9B\u5E94\u5546\u540D\u79F0\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 327
                                }
                            },
                            this.state.SuppName
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 330
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 331
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 332
                                }
                            },
                            '\u54C1\u7C7B\u7F16\u7801\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 333
                                }
                            },
                            this.state.DepCode
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 336
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 337
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 338
                                }
                            },
                            '\u54C1\u7C7B\u540D\u79F0\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 339
                                }
                            },
                            this.state.DepName
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 342
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 343
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 344
                                }
                            },
                            '\u54C1\u724C\u7F16\u7801\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 345
                                }
                            },
                            this.state.BrandCode
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 348
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 349
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 350
                                }
                            },
                            '\u54C1\u724C\u540D\u79F0\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 351
                                }
                            },
                            this.state.BrandName
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 354
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 355
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 356
                                }
                            },
                            '\u6700\u8FD1\u8FDB\u4EF7\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 357
                                }
                            },
                            this.state.Coprice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 360
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 361
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 362
                                }
                            },
                            '\u52A9\u8BB0\u7801\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 363
                                }
                            },
                            this.state.AidCode
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 366
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 367
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 368
                                }
                            },
                            '\u5176\u4ED6\u7F16\u7801\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 369
                                }
                            },
                            this.state.OtherCode
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 371
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 372
                                }
                            },
                            '\u89C4\u683C\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 373
                                }
                            },
                            this.state.Spec
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 376
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 377
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 378
                                }
                            },
                            '\u4EA7\u5730\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 379
                                }
                            },
                            this.state.ProdAdr
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 381
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 382
                                }
                            },
                            '\u8BA1\u91CF\u5355\u4F4D\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 383
                                }
                            },
                            this.state.Unit
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 386
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 387
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 388
                                }
                            },
                            '\u5305\u88C5\u5355\u4F4D\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 389
                                }
                            },
                            this.state.PUnit
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 391
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 392
                                }
                            },
                            '\u5305\u88C5\u7CFB\u6570\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 393
                                }
                            },
                            this.state.PUnitAmt
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 396
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 397
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 398
                                }
                            },
                            '\u4F1A\u5458\u4EF71\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 399
                                }
                            },
                            this.state.VipPrice1
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 401
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 402
                                }
                            },
                            '\u4F1A\u5458\u4EF72\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 403
                                }
                            },
                            this.state.VipPrice2
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 406
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 407
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 408
                                }
                            },
                            '\u4F1A\u5458\u4EF73\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 409
                                }
                            },
                            this.state.VipPrice3
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 412
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 413
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 414
                                }
                            },
                            '\u914D\u9001\u4EF7\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 415
                                }
                            },
                            this.state.PsPrice
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 417
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 418
                                }
                            },
                            '\u6279\u53D1\u4EF7\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 419
                                }
                            },
                            this.state.WPrice
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 422
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 423
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 424
                                }
                            },
                            '\u7981\u6B62\u91C7\u8D2D\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 425
                                }
                            },
                            this.state.FNoCG
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 427
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 428
                                }
                            },
                            '\u7981\u6B62\u9500\u552E\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 429
                                }
                            },
                            this.state.FNoSale
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 432
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 433
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 434
                                }
                            },
                            '\u7981\u6B62\u8981\u8D27\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 435
                                }
                            },
                            this.state.FNoYH
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 437
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 438
                                }
                            },
                            '\u7981\u6B62\u4FC3\u9500\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 439
                                }
                            },
                            this.state.FNoPromotion
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 442
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 443
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 444
                                }
                            },
                            '\u7981\u6B62\u9000\u8D27\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 445
                                }
                            },
                            this.state.FNoTH
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 447
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 448
                                }
                            },
                            '\u7981\u6B62\u53A8\u6253\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 449
                                }
                            },
                            this.state.FNoCD
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.RowList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 452
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 453
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 454
                                }
                            },
                            '\u6309\u91D1\u989D\u9500\u552E\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 455
                                }
                            },
                            this.state.FUseSalePrice
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LeftList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 457
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 458
                                }
                            },
                            '\u53EF\u53D8\u4EF7\u683C\uFF1A'
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.right, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 459
                                }
                            },
                            this.state.PriceFlag
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: styles.button, onPress: this.PressPop.bind(this), __source: {
                            fileName: _jsxFileName,
                            lineNumber: 462
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.ButtonText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 463
                            }
                        },
                        '\u786E\u5B9A'
                    )
                )
            );
        }
    }]);
    return Shopsearch;
}(_react.Component);

exports.default = Shopsearch;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        backgroundColor: "#ff4e4e",
        paddingTop: 10,
        paddingBottom: 10
    },
    cont: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16
    },
    return: {
        width: 80
    },
    HeaderImage: {
        marginRight: 25
    },
    HeaderText: {
        flex: 6,
        textAlign: "center",
        paddingRight: 56,
        color: "#ffffff",
        fontSize: 22,
        marginTop: 5
    },
    RowList: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 10,
        paddingBottom: 10,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    LeftList: {
        flex: 1,
        flexDirection: "row"
    },
    name: {
        width: 100,
        fontSize: 16,
        color: "#666666",
        textAlign: "right",
        marginRight: 5
    },
    right: {
        flex: 1,
        color: "#333333",
        fontSize: 16
    },
    button: {
        marginTop: 30,
        marginBottom: 30,
        flex: 1,
        marginLeft: 25,
        marginRight: 25,
        backgroundColor: "#ff4e4e",
        borderRadius: 5,
        paddingTop: 13,
        paddingBottom: 13
    },
    ButtonText: {
        color: "#ffffff",
        textAlign: "center",
        fontSize: 18
    }
});
}, 398, null, "myproject/StockEnquiries/Shopsearch.js");
__d(/* myproject/StockEnquiries/SearchData.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\StockEnquiries\\SearchData.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _Index = require(308           ); // 308 = ../app/Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _DeCodePrePrint = require(351                        ); // 351 = ../utils/DeCodePrePrint18

var _DeCodePrePrint2 = babelHelpers.interopRequireDefault(_DeCodePrePrint);

var dbAdapter = new _DBAdapter2.default();

var _require = require(26            ), // 26 = react-native
    NativeModules = _require.NativeModules;

var RNScannerAndroid = NativeModules.RNScannerAndroid;
var decodepreprint = new _DeCodePrePrint2.default();

var SearchData = function (_Component) {
    babelHelpers.inherits(SearchData, _Component);

    function SearchData(props) {
        babelHelpers.classCallCheck(this, SearchData);

        var _this = babelHelpers.possibleConstructorReturn(this, (SearchData.__proto__ || Object.getPrototypeOf(SearchData)).call(this, props));

        _this.state = {
            Show: false,
            ProdCode: "",
            BarCode: "",
            ProdName: "",
            ShortName: "",
            Kccount: "",
            Oprice: "",
            Cost: "",
            OutOprice: "",
            OutCost: "",
            Price: "",
            Total: "",
            SuppCode: "",
            SuppName: "",
            DepCode: "",
            DepName: "",
            BrandCode: "",
            BrandName: "",
            Coprice: "",
            AidCode: "",
            OtherCode: "",
            Spec: "",
            ProdAdr: "",
            Unit: "",
            PUnit: "",
            PUnitAmt: "",
            VipPrice1: "",
            VipPrice2: "",
            VipPrice3: "",
            PsPrice: "",
            WPrice: "",
            FNoCG: "",
            FNoSale: "",
            FNoYH: "",
            FNoPromotion: "",
            FNoTH: "",
            FNoCD: "",
            FUseSalePrice: "",
            PriceFlag: "",
            dataRows: "",
            Search: "",
            ProdCode: _this.props.ProdCode ? _this.props.ProdCode : "",
            DepCode: _this.props.DepCode ? _this.props.DepCode : "",
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return row1 !== row2;
                } })
        };
        _this.dataRows = [];
        return _this;
    }

    babelHelpers.createClass(SearchData, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _this2.Device();
            });
        }
    }, {
        key: 'Device',
        value: function Device() {
            var _this3 = this;

            _reactNative.DeviceEventEmitter.addListener("code", function (reminder) {
                decodepreprint.init(reminder, dbAdapter);
                if (reminder.length == 18 && decodepreprint.deCodePreFlag()) {
                    decodepreprint.deCodeProdCode().then(function (datas) {
                        dbAdapter.selectProdCode(datas, 1).then(function (rows) {
                            _this3.ClickButton();
                        });
                    });
                } else {
                    dbAdapter.selectAidCode(reminder, 1).then(function (rows) {
                        if (rows.length == 0) {
                            alert("该商品���存在");
                        } else {
                            _Storage2.default.get('code').then(function (ShopCode) {
                                _Storage2.default.get('Usercode').then(function (Usercode) {
                                    _Storage2.default.get('LinkUrl').then(function (linkurl) {
                                        var params = {
                                            TblName: "BasicInfoProd",
                                            reqCode: "product",
                                            ShopCode: ShopCode,
                                            Code: rows.item(0).ProdCode,
                                            UserCode: Usercode
                                        };

                                        _FetchUtils2.default.post(linkurl, JSON.stringify(params)).then(function (data) {
                                            if (data.retcode == 1) {
                                                var TblRow = data.TblRow;

                                                var ProdCode;
                                                var BarCode;
                                                var ProdName;
                                                var ShortName;
                                                var Kccount;
                                                var Oprice;
                                                var Cost;
                                                var OutOprice;
                                                var OutCost;
                                                var Price;
                                                var Total;
                                                var SuppCode;
                                                var SuppName;
                                                var DepCode;
                                                var DepName;
                                                var BrandCode;
                                                var BrandName;
                                                var Coprice;
                                                var AidCode;
                                                var OtherCode;
                                                var Spec;
                                                var ProdAdr;
                                                var Unit;
                                                var PUnit;
                                                var PUnitAmt;
                                                var VipPrice1;
                                                var VipPrice2;
                                                var VipPrice3;
                                                var PsPrice;
                                                var WPrice;
                                                var FNoCG;
                                                var FNoSale;
                                                var FNoYH;
                                                var FNoPromotion;
                                                var FNoTH;
                                                var FNoCD;
                                                var FUseSalePrice;
                                                var PriceFlag;
                                                for (var i = 0; i < TblRow.length; i++) {
                                                    var row = TblRow[i];

                                                    ProdCode = row.ProdCode;
                                                    BarCode = row.BarCode;
                                                    ProdName = row.ProdName;
                                                    ShortName = row.ShortName;
                                                    Kccount = row.KCcount;
                                                    Oprice = row.Oprice;
                                                    Cost = row.Cost;
                                                    OutOprice = row.OutOprice;
                                                    OutCost = row.OutCost;
                                                    Price = row.Price;
                                                    Total = row.Total;
                                                    SuppCode = row.SuppCode;
                                                    SuppName = row.SuppName;
                                                    DepCode = row.DepCode;
                                                    DepName = row.DepName;
                                                    BrandCode = row.BrandCode;
                                                    BrandName = row.BrandName;
                                                    Coprice = row.Coprice;
                                                    AidCode = row.AidCode;
                                                    OtherCode = row.OtherCode;
                                                    Spec = row.Spec;
                                                    ProdAdr = row.ProdAdr;
                                                    Unit = row.Unit;
                                                    PUnit = row.PUnit;
                                                    PUnitAmt = row.PUnitAmt;
                                                    VipPrice1 = row.VipPrice1;
                                                    VipPrice2 = row.VipPrice2;
                                                    VipPrice3 = row.VipPrice3;
                                                    PsPrice = row.PsPrice;
                                                    WPrice = row.WPrice;
                                                    FNoCG = row.FNoCG;
                                                    FNoSale = row.FNoSale;
                                                    FNoYH = row.FNoYH;
                                                    FNoPromotion = row.FNoPromotion;
                                                    FNoTH = row.FNoTH;
                                                    FNoCD = row.FNoCD;
                                                    FUseSalePrice = row.FUseSalePrice;
                                                    PriceFlag = row.PriceFlag;
                                                };
                                                if (FNoCG == 1 || FNoSale == 1 || FNoYH == 1 || FNoPromotion == 1 || FNoTH == 1 || FNoCD == 1) {
                                                    _this3.setState({
                                                        FNoCG: "是",
                                                        FNoSale: "是",
                                                        FNoYH: "是",
                                                        FNoPromotion: "是",
                                                        FNoTH: "是",
                                                        FNoCD: "是"
                                                    });
                                                } else {
                                                    _this3.setState({
                                                        FNoCG: "否",
                                                        FNoSale: "否",
                                                        FNoYH: "否",
                                                        FNoPromotion: "否",
                                                        FNoTH: "否",
                                                        FNoCD: "否"
                                                    });
                                                }
                                                _this3.setState({
                                                    ProdCode: ProdCode,
                                                    BarCode: BarCode,
                                                    ProdName: ProdName,
                                                    ShortName: ShortName,
                                                    Kccount: Kccount,
                                                    Oprice: Oprice,
                                                    Cost: Cost,
                                                    OutOprice: OutOprice,
                                                    OutCost: OutCost,
                                                    Price: Price,
                                                    Total: Total,
                                                    SuppCode: SuppCode,
                                                    SuppName: SuppName,
                                                    DepCode: DepCode,
                                                    DepName: DepName,
                                                    BrandCode: BrandCode,
                                                    BrandName: BrandName,
                                                    Coprice: Coprice,
                                                    AidCode: AidCode,
                                                    OtherCode: OtherCode,
                                                    Spec: Spec,
                                                    ProdAdr: ProdAdr,
                                                    Unit: Unit,
                                                    PUnit: PUnit,
                                                    PUnitAmt: PUnitAmt,
                                                    VipPrice1: VipPrice1,
                                                    VipPrice2: VipPrice2,
                                                    VipPrice3: VipPrice3,
                                                    PsPrice: PsPrice,
                                                    WPrice: WPrice,
                                                    FUseSalePrice: FUseSalePrice,
                                                    PriceFlag: PriceFlag,
                                                    Search: ""
                                                });
                                            } else {}
                                        }, function (err) {
                                            alert("网络请求失败");
                                        });
                                    });
                                });
                            });
                        }
                    });
                }
            });
        }
    }, {
        key: 'return',
        value: function _return() {
            var nextRoute = {
                name: "主页",
                component: _Index2.default,
                params: {
                    DepCode: this.state.DepCode
                }
            };
            this.props.navigator.push(nextRoute);
            _reactNative.DeviceEventEmitter.removeAllListeners();
        }
    }, {
        key: 'inputOnBlur',
        value: function inputOnBlur(value) {
            var _this4 = this;

            dbAdapter.selectAidCode(value, 1).then(function (rows) {
                _this4.dataRows = [];
                for (var i = 0; i < rows.length; i++) {
                    var row = rows.item(i);
                    _this4.dataRows.push(row);
                }
                _this4.setState({
                    dataSource: _this4.state.dataSource.cloneWithRows(_this4.dataRows),
                    dataRows: _this4.dataRows
                });
            });
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                        return _this5.ClickButton(rowData);
                    }, underlayColor: 'red', style: styles.Block, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 293
                    }
                },
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.BlockText, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 294
                        }
                    },
                    rowData.ProdName
                )
            );
        }
    }, {
        key: 'ClickButton',
        value: function ClickButton(rowData) {
            var _this6 = this;

            _Storage2.default.get('code').then(function (ShopCode) {
                _Storage2.default.get('Usercode').then(function (Usercode) {
                    _Storage2.default.get('LinkUrl').then(function (linkurl) {
                        var params = {
                            TblName: "BasicInfoProd",
                            reqCode: "product",
                            ShopCode: ShopCode,
                            Code: rowData.ProdCode,
                            UserCode: Usercode
                        };

                        _FetchUtils2.default.post(linkurl, JSON.stringify(params)).then(function (data) {
                            if (data.retcode == 1) {
                                var TblRow = data.TblRow;

                                var ProdCode;
                                var BarCode;
                                var ProdName;
                                var ShortName;
                                var Kccount;
                                var Oprice;
                                var Cost;
                                var OutOprice;
                                var OutCost;
                                var Price;
                                var Total;
                                var SuppCode;
                                var SuppName;
                                var DepCode;
                                var DepName;
                                var BrandCode;
                                var BrandName;
                                var Coprice;
                                var AidCode;
                                var OtherCode;
                                var Spec;
                                var ProdAdr;
                                var Unit;
                                var PUnit;
                                var PUnitAmt;
                                var VipPrice1;
                                var VipPrice2;
                                var VipPrice3;
                                var PsPrice;
                                var WPrice;
                                var FNoCG;
                                var FNoSale;
                                var FNoYH;
                                var FNoPromotion;
                                var FNoTH;
                                var FNoCD;
                                var FUseSalePrice;
                                var PriceFlag;
                                for (var i = 0; i < TblRow.length; i++) {
                                    var row = TblRow[i];

                                    ProdCode = row.ProdCode;
                                    BarCode = row.BarCode;
                                    ProdName = row.ProdName;
                                    ShortName = row.ShortName;
                                    Kccount = row.KCcount;
                                    Oprice = row.Oprice;
                                    Cost = row.Cost;
                                    OutOprice = row.OutOprice;
                                    OutCost = row.OutCost;
                                    Price = row.Price;
                                    Total = row.Total;
                                    SuppCode = row.SuppCode;
                                    SuppName = row.SuppName;
                                    DepCode = row.DepCode;
                                    DepName = row.DepName;
                                    BrandCode = row.BrandCode;
                                    BrandName = row.BrandName;
                                    Coprice = row.Coprice;
                                    AidCode = row.AidCode;
                                    OtherCode = row.OtherCode;
                                    Spec = row.Spec;
                                    ProdAdr = row.ProdAdr;
                                    Unit = row.Unit;
                                    PUnit = row.PUnit;
                                    PUnitAmt = row.PUnitAmt;
                                    VipPrice1 = row.VipPrice1;
                                    VipPrice2 = row.VipPrice2;
                                    VipPrice3 = row.VipPrice3;
                                    PsPrice = row.PsPrice;
                                    WPrice = row.WPrice;
                                    FNoCG = row.FNoCG;
                                    FNoSale = row.FNoSale;
                                    FNoYH = row.FNoYH;
                                    FNoPromotion = row.FNoPromotion;
                                    FNoTH = row.FNoTH;
                                    FNoCD = row.FNoCD;
                                    FUseSalePrice = row.FUseSalePrice;
                                    PriceFlag = row.PriceFlag;
                                };
                                if (FNoCG == 1 || FNoSale == 1 || FNoYH == 1 || FNoPromotion == 1 || FNoTH == 1 || FNoCD == 1) {
                                    _this6.setState({
                                        FNoCG: "是",
                                        FNoSale: "是",
                                        FNoYH: "是",
                                        FNoPromotion: "是",
                                        FNoTH: "是",
                                        FNoCD: "是"
                                    });
                                } else {
                                    _this6.setState({
                                        FNoCG: "否",
                                        FNoSale: "否",
                                        FNoYH: "否",
                                        FNoPromotion: "否",
                                        FNoTH: "否",
                                        FNoCD: "否"
                                    });
                                }
                                _this6.setState({
                                    ProdCode: ProdCode,
                                    BarCode: BarCode,
                                    ProdName: ProdName,
                                    ShortName: ShortName,
                                    Kccount: Kccount,
                                    Oprice: Oprice,
                                    Cost: Cost,
                                    OutOprice: OutOprice,
                                    OutCost: OutCost,
                                    Price: Price,
                                    Total: Total,
                                    SuppCode: SuppCode,
                                    SuppName: SuppName,
                                    DepCode: DepCode,
                                    DepName: DepName,
                                    BrandCode: BrandCode,
                                    BrandName: BrandName,
                                    Coprice: Coprice,
                                    AidCode: AidCode,
                                    OtherCode: OtherCode,
                                    Spec: Spec,
                                    ProdAdr: ProdAdr,
                                    Unit: Unit,
                                    PUnit: PUnit,
                                    PUnitAmt: PUnitAmt,
                                    VipPrice1: VipPrice1,
                                    VipPrice2: VipPrice2,
                                    VipPrice3: VipPrice3,
                                    PsPrice: PsPrice,
                                    WPrice: WPrice,
                                    FUseSalePrice: FUseSalePrice,
                                    PriceFlag: PriceFlag,
                                    Search: ""
                                });
                            } else {}
                        }, function (err) {
                            alert("网络请求失败");
                        });
                    });
                });
            });
        }
    }, {
        key: 'PressPop',
        value: function PressPop() {
            var nextRoute = {
                name: "主页",
                component: _Index2.default,
                params: {
                    DepCode: this.state.DepCode
                }
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'Close',
        value: function Close() {
            _reactNative.DeviceEventEmitter.removeAllListeners();
            var nextRoute = {
                name: "主页",
                component: _Index2.default
            };
            this.props.navigator.push(nextRoute);
        }
    }, {
        key: 'Modal',
        value: function Modal() {
            var isShow = this.state.Show;
            this.setState({
                Show: !isShow
            });
        }
    }, {
        key: 'onSubmitEditing',
        value: function onSubmitEditing() {
            this.inputOnBlur();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this7 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 494
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.header, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 495
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, {
                        autoFocus: true,
                        returnKeyType: 'search',
                        style: styles.Search,
                        placeholder: '\u8BF7\u8F93\u5165\u641C\u7D22\u5546\u54C1\u540D\u79F0',
                        placeholderColor: '#999999',
                        underlineColorAndroid: 'transparent',
                        value: this.state.Search,
                        onChangeText: function onChangeText(value) {
                            _this7.setState({
                                Search: value
                            });
                            _this7.inputOnBlur(value);
                        },
                        onSubmitEditing: this.onSubmitEditing.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 496
                        }
                    }),
                    _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                            fileName: _jsxFileName,
                            lineNumber: 512
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: this.Close.bind(this), style: styles.Right1, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 513
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.Text1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 514
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Text, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 514
                                    }
                                },
                                '\u53D6\u6D88'
                            )
                        )
                    )
                ),
                this.state.Search == "" ? _react2.default.createElement(
                    _reactNative.ScrollView,
                    { style: styles.container, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 519
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 520
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 521
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 522
                                    }
                                },
                                '\u5546\u54C1\u7F16\u7801\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 523
                                    }
                                },
                                this.state.ProdCode
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 526
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 527
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 528
                                    }
                                },
                                '\u5546\u54C1\u6761\u7801\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 529
                                    }
                                },
                                this.state.BarCode
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 532
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 533
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 534
                                    }
                                },
                                '\u5546\u54C1\u540D\u79F0\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 535
                                    }
                                },
                                this.state.ProdName
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 538
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 539
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 540
                                    }
                                },
                                '\u5546\u54C1\u7B80\u79F0\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 541
                                    }
                                },
                                this.state.ShortName
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 544
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 545
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 546
                                    }
                                },
                                '\u5E93\u5B58\u6570\u91CF\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 547
                                    }
                                },
                                this.state.Kccount
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 549
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 550
                                    }
                                },
                                '\u8FDB\u4EF7\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 551
                                    }
                                },
                                this.state.Oprice
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 554
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 555
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 556
                                    }
                                },
                                '\u542B\u7A0E\u6210\u672C\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 557
                                    }
                                },
                                this.state.Cost
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 559
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 560
                                    }
                                },
                                '\u53BB\u7A0E\u8FDB\u4EF7\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 561
                                    }
                                },
                                this.state.OutOprice
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 564
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 565
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 566
                                    }
                                },
                                '\u53BB\u7A0E\u6210\u672C\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 567
                                    }
                                },
                                this.state.OutCost
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 570
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 571
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 572
                                    }
                                },
                                '\u552E\u4EF7\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 573
                                    }
                                },
                                this.state.Price
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 575
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 576
                                    }
                                },
                                '\u552E\u4EF7\u6210\u672C\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 577
                                    }
                                },
                                this.state.Total
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 580
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 581
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 582
                                    }
                                },
                                '\u4F9B\u5E94\u5546\u7F16\u7801\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 583
                                    }
                                },
                                this.state.SuppCode
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 586
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 587
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 588
                                    }
                                },
                                '\u4F9B\u5E94\u5546\u540D\u79F0\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 589
                                    }
                                },
                                this.state.SuppName
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 592
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 593
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 594
                                    }
                                },
                                '\u54C1\u7C7B\u7F16\u7801\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 595
                                    }
                                },
                                this.state.DepCode
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 598
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 599
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 600
                                    }
                                },
                                '\u54C1\u7C7B\u540D\u79F0\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 601
                                    }
                                },
                                this.state.DepName
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 604
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 605
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 606
                                    }
                                },
                                '\u54C1\u724C\u7F16\u7801\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 607
                                    }
                                },
                                this.state.BrandCode
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 610
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 611
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 612
                                    }
                                },
                                '\u54C1\u724C\u540D\u79F0\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 613
                                    }
                                },
                                this.state.BrandName
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 616
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 617
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 618
                                    }
                                },
                                '\u6700\u8FD1\u8FDB\u4EF7\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 619
                                    }
                                },
                                this.state.Coprice
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 622
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 623
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 624
                                    }
                                },
                                '\u52A9\u8BB0\u7801\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 625
                                    }
                                },
                                this.state.AidCode
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 628
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 629
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 630
                                    }
                                },
                                '\u5176\u4ED6\u7F16\u7801\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 631
                                    }
                                },
                                this.state.OtherCode
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 633
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 634
                                    }
                                },
                                '\u89C4\u683C\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 635
                                    }
                                },
                                this.state.Spec
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 638
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 639
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 640
                                    }
                                },
                                '\u4EA7\u5730\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 641
                                    }
                                },
                                this.state.ProdAdr
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 643
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 644
                                    }
                                },
                                '\u8BA1\u91CF\u5355\u4F4D\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 645
                                    }
                                },
                                this.state.Unit
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 648
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 649
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 650
                                    }
                                },
                                '\u5305\u88C5\u5355\u4F4D\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 651
                                    }
                                },
                                this.state.PUnit
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 653
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 654
                                    }
                                },
                                '\u5305\u88C5\u7CFB\u6570\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 655
                                    }
                                },
                                this.state.PUnitAmt
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 658
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 659
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 660
                                    }
                                },
                                '\u4F1A\u5458\u4EF71\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 661
                                    }
                                },
                                this.state.VipPrice1
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 663
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 664
                                    }
                                },
                                '\u4F1A\u5458\u4EF72\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 665
                                    }
                                },
                                this.state.VipPrice2
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 668
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 669
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 670
                                    }
                                },
                                '\u4F1A\u5458\u4EF73\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 671
                                    }
                                },
                                this.state.VipPrice3
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 674
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 675
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 676
                                    }
                                },
                                '\u914D\u9001\u4EF7\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 677
                                    }
                                },
                                this.state.PsPrice
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 679
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 680
                                    }
                                },
                                '\u6279\u53D1\u4EF7\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 681
                                    }
                                },
                                this.state.WPrice
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 684
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 685
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 686
                                    }
                                },
                                '\u7981\u6B62\u91C7\u8D2D\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 687
                                    }
                                },
                                this.state.FNoCG
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 689
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 690
                                    }
                                },
                                '\u7981\u6B62\u9500\u552E\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 691
                                    }
                                },
                                this.state.FNoSale
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 694
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 695
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 696
                                    }
                                },
                                '\u7981\u6B62\u8981\u8D27\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 697
                                    }
                                },
                                this.state.FNoYH
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 699
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 700
                                    }
                                },
                                '\u7981\u6B62\u4FC3\u9500\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 701
                                    }
                                },
                                this.state.FNoPromotion
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 704
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 705
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 706
                                    }
                                },
                                '\u7981\u6B62\u9000\u8D27\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 707
                                    }
                                },
                                this.state.FNoTH
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 709
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 710
                                    }
                                },
                                '\u7981\u6B62\u53A8\u6253\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 711
                                    }
                                },
                                this.state.FNoCD
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.RowList, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 714
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 715
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 716
                                    }
                                },
                                '\u6309\u91D1\u989D\u9500\u552E\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 717
                                    }
                                },
                                this.state.FUseSalePrice
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.LeftList, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 719
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.name, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 720
                                    }
                                },
                                '\u53EF\u53D8\u4EF7\u683C\uFF1A'
                            ),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.right, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 721
                                    }
                                },
                                this.state.PriceFlag
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableOpacity,
                        { style: styles.button, onPress: this.PressPop.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 724
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.ButtonText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 725
                                }
                            },
                            '\u786E\u5B9A'
                        )
                    )
                ) : _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.BlockList, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 729
                        }
                    },
                    this.state.dataRows == "" ? _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Null, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 732
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: styles.NullText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 733
                                }
                            },
                            '\u6CA1\u6709\u641C\u7D22\u5230\u76F8\u5173\u5546\u54C1~~~'
                        )
                    ) : _react2.default.createElement(_reactNative.ListView, {
                        dataSource: this.state.dataSource,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        ref: 'myInput',
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 737
                        }
                    })
                )
            );
        }
    }]);
    return SearchData;
}(_react.Component);

exports.default = SearchData;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    header: {
        flexDirection: "row",
        backgroundColor: "#ff4e4e",
        paddingTop: 10,
        paddingBottom: 10
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 6,
        paddingTop: 6,
        fontSize: 14,
        flex: 1
    },
    SearchImage: {
        position: "absolute",
        top: 15,
        left: 12
    },
    Right1: {
        width: 60,
        flexDirection: "row",
        paddingTop: 6,
        paddingLeft: 6
    },
    Text1: {
        flex: 1
    },
    Text: {
        color: "#ffffff",
        fontSize: 16
    },
    RowList: {
        flexDirection: "row",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 10,
        paddingBottom: 10,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2"
    },
    LeftList: {
        flex: 1,
        flexDirection: "row"
    },
    name: {
        width: 100,
        fontSize: 16,
        color: "#666666",
        textAlign: "right",
        marginRight: 5
    },
    right: {
        flex: 1,
        color: "#333333",
        fontSize: 16
    },
    button: {
        marginTop: 30,
        marginBottom: 30,
        flex: 1,
        marginLeft: 25,
        marginRight: 25,
        backgroundColor: "#ff4e4e",
        borderRadius: 5,
        paddingTop: 13,
        paddingBottom: 13
    },
    ButtonText: {
        color: "#ffffff",
        textAlign: "center",
        fontSize: 18
    },
    BlockList: {
        flex: 1,
        flexDirection: "column",
        backgroundColor: "#ffffff"
    },
    Null: {
        marginLeft: 25,
        marginRight: 25,
        marginTop: 120
    },
    NullText: {
        color: "#cccccc",
        fontSize: 20,
        textAlign: "center"
    },
    Block: {
        paddingTop: 15,
        paddingBottom: 15,
        paddingLeft: 25,
        paddingRight: 25,
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2",
        backgroundColor: "#ffffff"
    },
    BlockText: {
        fontSize: 14,
        color: "#333333"
    }
});
}, 399, null, "myproject/StockEnquiries/SearchData.js");
__d(/* myproject/utils/UpData.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _FetchUtils = require(324                  ); // 324 = ../utils/FetchUtils

var _FetchUtils2 = babelHelpers.interopRequireDefault(_FetchUtils);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var _RequestBodyUtils = require(342                        ); // 342 = ../utils/RequestBodyUtils

var _RequestBodyUtils2 = babelHelpers.interopRequireDefault(_RequestBodyUtils);

var UpData = function UpData() {
  babelHelpers.classCallCheck(this, UpData);

  this.downLoadAllData = function (url, dbAdapter, currShopCode) {
    return new Promise(function (resolve, reject) {
      try {
        _Storage2.default.get('ClientCode').then(function (tags) {
          var params = {
            reqCode: "App_PosReq",
            reqDetailCode: "App_Client_UseQry",
            ClientCode: tags,
            sDateTime: Date.parse(new Date()),
            Sign: _NetUtils2.default.MD5("App_PosReq" + "##" + "App_Client_UseQry" + "##" + Date.parse(new Date()) + "##" + "PosControlCs") + '' };
          _FetchUtils2.default.post(url, JSON.stringify(params)).then(function (data) {
            if (data.retcode == 1) {
              var detailInfo1 = data.DetailInfo1;
              dbAdapter.insertTShopItemData(detailInfo1);

              var detailInfo2 = data.DetailInfo2;
              dbAdapter.insertTUserSetData(detailInfo2);

              var detailInfo3 = data.DetailInfo3;
              dbAdapter.insertTUserRrightData(detailInfo3);

              var detailInfo4 = data.DetailInfo4;
              console.log(detailInfo4);
              dbAdapter.insertTUsershopData(detailInfo4);
              var categoryBody = _RequestBodyUtils2.default.createCategory(currShopCode);
              dbAdapter.downProductAndCategory(categoryBody, currShopCode).then(function (result) {
                resolve(true);
              });
            }
          });
        });
      } catch (err) {
        resolve(true);
      }
    });
  };
};

exports.default = UpData;
}, 400, null, "myproject/utils/UpData.js");
__d(/* myproject/images/image.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":70,"height":70,"scales":[1],"hash":"967a4c66530c3205d2b4592f9f05d509","name":"image","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 401, null, "myproject/images/image.png");
__d(/* myproject/images/1_12.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":40,"height":40,"scales":[1],"hash":"d30f203245eb5c48359ac7a43b849fda","name":"1_12","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 402, null, "myproject/images/1_12.png");
__d(/* myproject/images/1_31.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":26,"height":26,"scales":[1],"hash":"cd3087707648014fe872a47caa82631a","name":"1_31","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 403, null, "myproject/images/1_31.png");
__d(/* myproject/images/1_42.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":26,"height":26,"scales":[1],"hash":"046bd91eb186478ecf598c2b94c72353","name":"1_42","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 404, null, "myproject/images/1_42.png");
__d(/* myproject/images/1_39.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":88,"height":88,"scales":[1],"hash":"d071ddfb11ab44153cb7796f6d735b66","name":"1_39","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 405, null, "myproject/images/1_39.png");
__d(/* myproject/images/1_47.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":1,"height":160,"scales":[1],"hash":"f12c222056180ca84556062611106a2a","name":"1_47","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 406, null, "myproject/images/1_47.png");
__d(/* myproject/images/1_41.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":88,"height":88,"scales":[1],"hash":"febb6c226623c3dc05d40cb2a1375118","name":"1_41","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 407, null, "myproject/images/1_41.png");
__d(/* myproject/images/1_25.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"ab54917a79906d5a8ba34e0401c9cae7","name":"1_25","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 408, null, "myproject/images/1_25.png");
__d(/* myproject/images/1_28.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":67,"height":55,"scales":[1],"hash":"215078eb58281a9fd20a790380e3116c","name":"1_28","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 409, null, "myproject/images/1_28.png");
__d(/* myproject/images/1_29.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"712fafd90a7121dfdacafa108ccb8710","name":"1_29","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 410, null, "myproject/images/1_29.png");
__d(/* myproject/images/1_48.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":441,"height":1,"scales":[1],"hash":"47d21270079d2603c423b124b28e30d3","name":"1_48","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 411, null, "myproject/images/1_48.png");
__d(/* myproject/images/1_36.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"bde929fcad9b3f8082f564e564959eb9","name":"1_36","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 412, null, "myproject/images/1_36.png");
__d(/* myproject/images/1_38.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"9353090e55c3f7cdd608df8ce060d6f0","name":"1_38","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 413, null, "myproject/images/1_38.png");
__d(/* myproject/images/1_40.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"8b5f919929ae4c985323e22923fb057c","name":"1_40","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 414, null, "myproject/images/1_40.png");
__d(/* myproject/images/1_44.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"20ad6c2aa5a4327b254d01e26ba6e35f","name":"1_44","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 415, null, "myproject/images/1_44.png");
__d(/* myproject/images/1_45.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"6fafba02cccc20d71cb1b02d0fa52a7c","name":"1_45","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 416, null, "myproject/images/1_45.png");
__d(/* myproject/images/1_46.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"4d8dc079029779a36eb6d3430741a3b4","name":"1_46","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 417, null, "myproject/images/1_46.png");
__d(/* myproject/images/1_62.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"e958b5c1d134c26fde07ead4a850fab9","name":"1_62","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 418, null, "myproject/images/1_62.png");
__d(/* myproject/images/1_57.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"601bed67f45158ee3a25f5ab3187f307","name":"1_57","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 419, null, "myproject/images/1_57.png");
__d(/* myproject/images/1_61.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"3edd90869543155226e057a0e13d40e6","name":"1_61","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 420, null, "myproject/images/1_61.png");
__d(/* myproject/images/1_58.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"f632bf4bba4ed0f45967fb9e6ce5a37c","name":"1_58","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 421, null, "myproject/images/1_58.png");
__d(/* myproject/images/1_60.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"c7ef0a63b2e6687f597aee424ac36764","name":"1_60","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 422, null, "myproject/images/1_60.png");
__d(/* myproject/images/1-60.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"e7677c89193102e9b786e98a088e189f","name":"1-60","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 423, null, "myproject/images/1-60.png");
__d(/* myproject/images/1_56.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"ba3f8dacea63f5e3ce0de06392dd3450","name":"1_56","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 424, null, "myproject/images/1_56.png");
__d(/* myproject/images/1_59.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":55,"height":55,"scales":[1],"hash":"50b993d13362482f75bbeea6baf0029f","name":"1_59","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 425, null, "myproject/images/1_59.png");
__d(/* myproject/app/PickedDate_list.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\PickedDate_list.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _DBAdapter = require(333                   ); // 333 = ../adapter/DBAdapter

var _DBAdapter2 = babelHelpers.interopRequireDefault(_DBAdapter);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _NetUtils = require(322                ); // 322 = ../utils/NetUtils

var _NetUtils2 = babelHelpers.interopRequireDefault(_NetUtils);

var dbAdapter = new _DBAdapter2.default();
var db = void 0;

var PickedDate_list = function (_Component) {
    babelHelpers.inherits(PickedDate_list, _Component);

    function PickedDate_list(props) {
        babelHelpers.classCallCheck(this, PickedDate_list);

        var _this = babelHelpers.possibleConstructorReturn(this, (PickedDate_list.__proto__ || Object.getPrototypeOf(PickedDate_list)).call(this, props));

        _this.state = {
            search: "",
            show: false,
            dataSource: new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
                    return true;
                } })
        };
        _this.dataRows = [];
        _this.pickerData = [];
        return _this;
    }

    babelHelpers.createClass(PickedDate_list, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNative.InteractionManager.runAfterInteractions(function () {
                _this2.fetch();
            });
        }
    }, {
        key: 'fetch',
        value: function fetch() {
            var _this3 = this;

            _Storage2.default.get('Usercode').then(function (tags) {
                dbAdapter.selectTUserShopData(tags).then(function (rows) {
                    for (var i = 0; i < rows.length; i++) {
                        var row = rows.item(i);
                        _this3.dataRows.push(row);
                        console.log(_this3.dataRows);
                    }
                    _this3.setState({
                        dataSource: _this3.state.dataSource.cloneWithRows(_this3.dataRows)
                    });
                });
            });
        }
    }, {
        key: 'Return',
        value: function Return() {
            this.props.navigator.pop();
        }
    }, {
        key: 'Search',
        value: function Search(value) {
            for (var i = 0; i < this.dataRows.length; i++) {
                var dataRow = this.dataRows[i];
                if ((dataRow.shopcode + "").indexOf(value) >= 0) {
                    var str = this.dataRows.splice(i, 1);
                    this.dataRows.unshift(str[0]);
                    break;
                }
            }
            this.setState({
                dataSource: this.state.dataSource.cloneWithRows(this.dataRows)
            });
        }
    }, {
        key: 'pressPop',
        value: function pressPop(rowData) {
            if (this.props.reloadView) {
                this.props.reloadView(rowData.shopname + '_' + rowData.shopcode);
            }
            this.props.navigator.pop();
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(rowData, sectionID, rowID) {
            var _this4 = this;

            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { style: styles.DataList, onPress: function onPress() {
                        return _this4.pressPop(rowData);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 86
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.coding, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 87
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 88
                            }
                        },
                        rowData.shopcode
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.name, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 90
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: styles.codingText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 91
                            }
                        },
                        rowData.shopname
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 99
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.Title, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 100
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, {
                        style: styles.Search,
                        autofocus: '{true}',
                        returnKeyType: 'search',
                        placeholder: '\u641C\u7D22\u673A\u6784\u7F16\u7801',
                        placeholderTextColor: '#bcbdc1',
                        underlineColorAndroid: 'transparent',
                        onChangeText: function onChangeText(value) {
                            _this5.setState({
                                search: value
                            });
                            _this5.Search(value);
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 101
                        }
                    }),
                    _react2.default.createElement(_reactNative.Image, { source: require(353              ), style: styles.SearchImage, __source: { // 353 = ../images/2.png
                            fileName: _jsxFileName,
                            lineNumber: 115
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.Right, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 116
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            { style: styles.Text1, onPress: this.Return.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 117
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.Text, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 117
                                    }
                                },
                                '\u53D6\u6D88'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 120
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.head, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 121
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.coding, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 122
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 123
                                    }
                                },
                                '\u7F16\u7801'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.name, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 125
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.codingText, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 126
                                    }
                                },
                                '\u673A\u6784\u540D\u79F0'
                            )
                        )
                    ),
                    _react2.default.createElement(_reactNative.ListView, {
                        style: styles.scrollview,
                        dataSource: this.state.dataSource,
                        enableEmptySections: true,
                        showsVerticalScrollIndicator: true,
                        renderRow: this._renderRow.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 129
                        }
                    })
                )
            );
        }
    }]);
    return PickedDate_list;
}(_react.Component);

exports.default = PickedDate_list;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f2f2f2'
    },
    Title: {
        backgroundColor: "#ff4e4e",
        paddingLeft: 16,
        paddingRight: 16,
        paddingTop: 15,
        paddingBottom: 15,
        flexDirection: "row"
    },
    SearchImage: {
        position: "absolute",
        top: 22,
        left: 24
    },
    Search: {
        borderRadius: 30,
        backgroundColor: "#ffffff",
        color: "#333333",
        paddingLeft: 46,
        paddingBottom: 15,
        paddingTop: 6,
        paddingBottom: 6,
        fontSize: 14,
        flex: 1
    },
    Right: {
        width: 60,
        flexDirection: "row",
        paddingTop: 3,
        paddingLeft: 6
    },
    HeaderImage1: {
        flex: 1,
        marginLeft: 20
    },
    Text1: {
        flex: 1
    },
    Text: {
        fontSize: 18,
        color: "#ffffff",
        paddingTop: 5,
        paddingLeft: 10
    },

    head: {
        flexDirection: "row",
        paddingTop: 13,
        paddingBottom: 13,
        paddingLeft: 25,
        paddingRight: 25
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    codingText: {
        color: "#333333",
        fontSize: 16,
        height: 22,
        overflow: "hidden"
    },
    name: {
        flex: 1
    },
    DataList: {
        flexDirection: "row",
        paddingTop: 13,
        paddingBottom: 13,
        paddingLeft: 25,
        paddingRight: 25,
        backgroundColor: "#ffffff",
        borderBottomWidth: 1,
        borderBottomColor: "#f2f2f2",
        overflow: "hidden"
    },
    coding: {
        flex: 1,
        paddingLeft: 12
    },
    name: {
        flex: 1
    },
    scrollview: {
        marginBottom: 120
    }
});
}, 426, null, "myproject/app/PickedDate_list.js");
__d(/* myproject/images/bj.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":468,"height":768,"scales":[1],"hash":"fb0922c81b5f2d579b41f5cefb0ff2d3","name":"bj","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 427, null, "myproject/images/bj.png");
__d(/* myproject/images/logo.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":290,"height":180,"scales":[1],"hash":"96d0aff2b5ec0a57efcb8e6bdacd18ac","name":"logo","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 428, null, "myproject/images/logo.png");
__d(/* myproject/images/1_07.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":30,"height":24,"scales":[1],"hash":"23058f3faf23e633ab26ac4b2d8095eb","name":"1_07","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 429, null, "myproject/images/1_07.png");
__d(/* myproject/images/1_11.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":24,"height":24,"scales":[1],"hash":"1c1182589b1e6ba96fd200ec5a1c755c","name":"1_11","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 430, null, "myproject/images/1_11.png");
__d(/* myproject/images/1_14.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":24,"height":24,"scales":[1],"hash":"f7cb50e3f7e271518e2a206595b8343e","name":"1_14","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 431, null, "myproject/images/1_14.png");
__d(/* myproject/images/1_21.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":24,"height":24,"scales":[1],"hash":"054959ddebf46eac7d22da4a17c0d0fc","name":"1_21","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 432, null, "myproject/images/1_21.png");
__d(/* myproject/images/1_04.png */function(global, require, module, exports) {module.exports=require(163                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/images","width":24,"height":24,"scales":[1],"hash":"f12ec5213aa652c52708f8850a1fe14f","name":"1_04","type":"png"}); // 163 = react-native/Libraries/Image/AssetRegistry
}, 433, null, "myproject/images/1_04.png");
__d(/* myproject/app/file.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = 'D:\\myproject\\app\\file.js';

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(26            ); // 26 = react-native

var _admin = require(307      ); // 307 = ./admin

var _admin2 = babelHelpers.interopRequireDefault(_admin);

var _login = require(305      ); // 305 = ./login

var _login2 = babelHelpers.interopRequireDefault(_login);

var _Index = require(308      ); // 308 = ./Index

var _Index2 = babelHelpers.interopRequireDefault(_Index);

var _Storage = require(325               ); // 325 = ../utils/Storage

var _Storage2 = babelHelpers.interopRequireDefault(_Storage);

var _reactNativeDeprecatedCustomComponents = require(435                                        ); // 435 = react-native-deprecated-custom-components

var _reactNativeDeprecatedCustomComponents2 = babelHelpers.interopRequireDefault(_reactNativeDeprecatedCustomComponents);

var file = function (_Component) {
    babelHelpers.inherits(file, _Component);

    function file(props) {
        babelHelpers.classCallCheck(this, file);

        var _this = babelHelpers.possibleConstructorReturn(this, (file.__proto__ || Object.getPrototypeOf(file)).call(this, props));

        _this.state = {
            first: "",
            show: false
        };
        return _this;
    }

    babelHelpers.createClass(file, [{
        key: '_setModalVisible',
        value: function _setModalVisible() {
            var isShow = this.state.show;
            this.setState({
                show: !isShow
            });
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            _Storage2.default.get('FirstTime').then(function (tags) {
                _Storage2.default.get('FirstTime1').then(function (FirstTime1) {
                    if (tags == 1 && FirstTime1 == 2) {
                        var nextRoute = {
                            name: "主页",
                            component: _Index2.default
                        };
                        _this2.props.navigator.push(nextRoute);

                        _reactNative.ToastAndroid.show('登录成功', _reactNative.ToastAndroid.SHORT);
                    } else if (tags == 1) {
                        var nextRoute = {
                            name: "主页",
                            component: _admin2.default
                        };
                        _this2.props.navigator.push(nextRoute);
                    } else {
                        var nextRoute = {
                            name: "主页",
                            component: _login2.default
                        };
                        _this2.props.navigator.push(nextRoute);
                    }
                });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 67
                    }
                },
                _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: 'fade',
                        transparent: true,
                        visible: this.state.show,
                        onShow: function onShow() {},
                        onRequestClose: function onRequestClose() {}, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 68
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: styles.LoadCenter, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 74
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: styles.loading, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 75
                                }
                            },
                            _react2.default.createElement(_reactNative.ActivityIndicator, { key: '1', color: '#ffffff', size: 'large', style: styles.activity, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 76
                                }
                            }),
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: styles.TextLoading, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 77
                                    }
                                },
                                '\u767B\u5F55\u4E2D'
                            )
                        )
                    )
                )
            );
        }
    }]);
    return file;
}(_react.Component);

exports.default = file;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: 'rgba(0,0,0,0)'
    },
    LoadCenter: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
    },
    loading: {
        paddingLeft: 15,
        paddingRight: 15,
        paddingTop: 15,
        paddingBottom: 15,
        backgroundColor: "#000000",
        opacity: 0.8,
        borderRadius: 5
    },
    TextLoading: {
        fontSize: 17,
        color: "#ffffff"
    },
    activity: {
        marginBottom: 5
    }
});
}, 434, null, "myproject/app/file.js");
__d(/* react-native-deprecated-custom-components/src/CustomComponents.js */function(global, require, module, exports) {

var Navigator = require(436          ); // 436 = ./Navigator

module.exports = {
  Navigator: Navigator
};
}, 435, null, "react-native-deprecated-custom-components/src/CustomComponents.js");
__d(/* react-native-deprecated-custom-components/src/Navigator.js */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native-deprecated-custom-components\\src\\Navigator.js';

var _reactNative = require(26            ); // 26 = react-native

var buildStyleInterpolator = require(437                       ); // 437 = ./buildStyleInterpolator

var AnimationsDebugModule = _reactNative.NativeModules.AnimationsDebugModule;
var InteractionMixin = require(438                 ); // 438 = ./InteractionMixin
var NavigationContext = require(439                  ); // 439 = ./NavigationContext
var NavigatorBreadcrumbNavigationBar = require(448                                 ); // 448 = ./NavigatorBreadcrumbNavigationBar
var NavigatorNavigationBar = require(456                       ); // 456 = ./NavigatorNavigationBar
var NavigatorSceneConfigs = require(457                      ); // 457 = ./NavigatorSceneConfigs
var React = require(12     ); // 12 = react
var Subscribable = require(458             ); // 458 = ./Subscribable
var TimerMixin = require(186                ); // 186 = react-timer-mixin

var clamp = require(459      ); // 459 = ./clamp
var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var rebound = require(460      ); // 460 = rebound

var flattenStyle = require(461             ); // 461 = ./flattenStyle

var PropTypes = require(19          ); // 19 = prop-types

var SCREEN_WIDTH = _reactNative.Dimensions.get('window').width;
var SCREEN_HEIGHT = _reactNative.Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS = {
  pointerEvents: 'none',
  style: {
    top: SCREEN_HEIGHT,
    bottom: -SCREEN_HEIGHT,
    opacity: 0
  }
};

var __uid = 0;
function getuid() {
  return __uid++;
}

function getRouteID(route) {
  if (route === null || typeof route !== 'object') {
    return String(route);
  }

  var key = '__navigatorRouteID';

  if (!route.hasOwnProperty(key)) {
    Object.defineProperty(route, key, {
      enumerable: false,
      configurable: false,
      writable: false,
      value: getuid()
    });
  }
  return route[key];
}

var BASE_SCENE_STYLE = {
  position: 'absolute',
  overflow: 'hidden',
  left: 0,
  right: 0,
  bottom: 0,
  top: 0
};

var DEFAULT_SCENE_STYLE = {
  position: 'absolute',
  left: 0,
  right: 0,
  bottom: 0,
  top: 0,
  transform: [{ translateX: 0 }, { translateY: 0 }, { scaleX: 1 }, { scaleY: 1 }, { rotate: '0deg' }, { skewX: '0deg' }, { skewY: '0deg' }]
};

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    overflow: 'hidden'
  },
  defaultSceneStyle: DEFAULT_SCENE_STYLE,
  baseScene: BASE_SCENE_STYLE,
  disabledScene: {
    top: SCREEN_HEIGHT,
    bottom: -SCREEN_HEIGHT
  },
  transitioner: {
    flex: 1,
    backgroundColor: 'transparent',
    overflow: 'hidden'
  }
});

var GESTURE_ACTIONS = ['pop', 'jumpBack', 'jumpForward'];

var Navigator = React.createClass({
  displayName: 'Navigator',


  propTypes: {
    configureScene: PropTypes.func,

    renderScene: PropTypes.func.isRequired,

    initialRoute: PropTypes.object,

    initialRouteStack: PropTypes.arrayOf(PropTypes.object),

    onWillFocus: PropTypes.func,

    onDidFocus: PropTypes.func,

    navigationBar: PropTypes.node,

    navigator: PropTypes.object,

    sceneStyle: _reactNative.ViewPropTypes.style
  },

  statics: {
    BreadcrumbNavigationBar: NavigatorBreadcrumbNavigationBar,
    NavigationBar: NavigatorNavigationBar,
    SceneConfigs: NavigatorSceneConfigs
  },

  mixins: [TimerMixin, InteractionMixin, Subscribable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return {
      configureScene: function configureScene() {
        return NavigatorSceneConfigs.PushFromRight;
      },
      sceneStyle: DEFAULT_SCENE_STYLE
    };
  },

  getInitialState: function getInitialState() {
    var _this = this;

    this._navigationBarNavigator = this.props.navigationBarNavigator || this;

    this._renderedSceneMap = new Map();

    this._sceneRefs = [];

    var routeStack = this.props.initialRouteStack || [this.props.initialRoute];
    invariant(routeStack.length >= 1, 'Navigator requires props.initialRoute or props.initialRouteStack.');
    var initialRouteIndex = routeStack.length - 1;
    if (this.props.initialRoute) {
      initialRouteIndex = routeStack.indexOf(this.props.initialRoute);
      invariant(initialRouteIndex !== -1, 'initialRoute is not in initialRouteStack.');
    }
    return {
      sceneConfigStack: routeStack.map(function (route) {
        return _this.props.configureScene(route, routeStack);
      }),
      routeStack: routeStack,
      presentedIndex: initialRouteIndex,
      transitionFromIndex: null,
      activeGesture: null,
      pendingGestureProgress: null,
      transitionQueue: []
    };
  },

  componentWillMount: function componentWillMount() {
    var _this2 = this;

    this.__defineGetter__('navigationContext', this._getNavigationContext);

    this._subRouteFocus = [];
    this.parentNavigator = this.props.navigator;
    this._handlers = {};
    this.springSystem = new rebound.SpringSystem();
    this.spring = this.springSystem.createSpring();
    this.spring.setRestSpeedThreshold(0.05);
    this.spring.setCurrentValue(0).setAtRest();
    this.spring.addListener({
      onSpringEndStateChange: function onSpringEndStateChange() {
        if (!_this2._interactionHandle) {
          _this2._interactionHandle = _this2.createInteractionHandle();
        }
      },
      onSpringUpdate: function onSpringUpdate() {
        _this2._handleSpringUpdate();
      },
      onSpringAtRest: function onSpringAtRest() {
        _this2._completeTransition();
      }
    });
    this.panGesture = _reactNative.PanResponder.create({
      onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,
      onPanResponderRelease: this._handlePanResponderRelease,
      onPanResponderMove: this._handlePanResponderMove,
      onPanResponderTerminate: this._handlePanResponderTerminate
    });
    this._interactionHandle = null;
    this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);
  },

  componentDidMount: function componentDidMount() {
    this._isMounted = true;
    this._handleSpringUpdate();
    this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);
    this._enableTVEventHandler();
  },

  componentWillUnmount: function componentWillUnmount() {
    this._isMounted = false;
    if (this._navigationContext) {
      this._navigationContext.dispose();
      this._navigationContext = null;
    }

    this.spring.destroy();

    if (this._interactionHandle) {
      this.clearInteractionHandle(this._interactionHandle);
    }

    this._disableTVEventHandler();
  },

  immediatelyResetRouteStack: function immediatelyResetRouteStack(nextRouteStack) {
    var _this3 = this;

    var destIndex = nextRouteStack.length - 1;
    this._emitWillFocus(nextRouteStack[destIndex]);
    this.setState({
      routeStack: nextRouteStack,
      sceneConfigStack: nextRouteStack.map(function (route) {
        return _this3.props.configureScene(route, nextRouteStack);
      }),
      presentedIndex: destIndex,
      activeGesture: null,
      transitionFromIndex: null,
      transitionQueue: []
    }, function () {
      _this3._handleSpringUpdate();
      var navBar = _this3._navBar;
      if (navBar && navBar.immediatelyRefresh) {
        navBar.immediatelyRefresh();
      }
      _this3._emitDidFocus(_this3.state.routeStack[_this3.state.presentedIndex]);
    });
  },

  _transitionTo: function _transitionTo(destIndex, velocity, jumpSpringTo, cb) {
    if (this.state.presentedIndex === destIndex) {
      cb && cb();
      return;
    }

    if (this.state.transitionFromIndex !== null) {
      this.state.transitionQueue.push({
        destIndex: destIndex,
        velocity: velocity,
        cb: cb
      });
      return;
    }

    this.state.transitionFromIndex = this.state.presentedIndex;
    this.state.presentedIndex = destIndex;
    this.state.transitionCb = cb;
    this._onAnimationStart();
    if (AnimationsDebugModule) {
      AnimationsDebugModule.startRecordingFps();
    }
    var sceneConfig = this.state.sceneConfigStack[this.state.transitionFromIndex] || this.state.sceneConfigStack[this.state.presentedIndex];
    invariant(sceneConfig, 'Cannot configure scene at index ' + this.state.transitionFromIndex);
    if (jumpSpringTo != null) {
      this.spring.setCurrentValue(jumpSpringTo);
    }
    this.spring.setOvershootClampingEnabled(true);
    this.spring.getSpringConfig().friction = sceneConfig.springFriction;
    this.spring.getSpringConfig().tension = sceneConfig.springTension;
    this.spring.setVelocity(velocity || sceneConfig.defaultTransitionVelocity);
    this.spring.setEndValue(1);
  },

  _handleSpringUpdate: function _handleSpringUpdate() {
    if (!this._isMounted) {
      return;
    }

    if (this.state.transitionFromIndex != null) {
      this._transitionBetween(this.state.transitionFromIndex, this.state.presentedIndex, this.spring.getCurrentValue());
    } else if (this.state.activeGesture != null) {
      var presentedToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
      this._transitionBetween(this.state.presentedIndex, presentedToIndex, this.spring.getCurrentValue());
    }
  },

  _completeTransition: function _completeTransition() {
    if (!this._isMounted) {
      return;
    }

    if (this.spring.getCurrentValue() !== 1 && this.spring.getCurrentValue() !== 0) {
      if (this.state.pendingGestureProgress) {
        this.state.pendingGestureProgress = null;
      }
      return;
    }
    this._onAnimationEnd();
    var presentedIndex = this.state.presentedIndex;
    var didFocusRoute = this._subRouteFocus[presentedIndex] || this.state.routeStack[presentedIndex];

    if (AnimationsDebugModule) {
      AnimationsDebugModule.stopRecordingFps(Date.now());
    }
    this.state.transitionFromIndex = null;
    this.spring.setCurrentValue(0).setAtRest();
    this._hideScenes();
    if (this.state.transitionCb) {
      this.state.transitionCb();
      this.state.transitionCb = null;
    }

    this._emitDidFocus(didFocusRoute);

    if (this._interactionHandle) {
      this.clearInteractionHandle(this._interactionHandle);
      this._interactionHandle = null;
    }
    if (this.state.pendingGestureProgress) {
      var gestureToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
      this._enableScene(gestureToIndex);
      this.spring.setEndValue(this.state.pendingGestureProgress);
      return;
    }
    if (this.state.transitionQueue.length) {
      var queuedTransition = this.state.transitionQueue.shift();
      this._enableScene(queuedTransition.destIndex);
      this._emitWillFocus(this.state.routeStack[queuedTransition.destIndex]);
      this._transitionTo(queuedTransition.destIndex, queuedTransition.velocity, null, queuedTransition.cb);
    }
  },

  _emitDidFocus: function _emitDidFocus(route) {
    this.navigationContext.emit('didfocus', { route: route });

    if (this.props.onDidFocus) {
      this.props.onDidFocus(route);
    }
  },

  _emitWillFocus: function _emitWillFocus(route) {
    this.navigationContext.emit('willfocus', { route: route });

    var navBar = this._navBar;
    if (navBar && navBar.handleWillFocus) {
      navBar.handleWillFocus(route);
    }
    if (this.props.onWillFocus) {
      this.props.onWillFocus(route);
    }
  },

  _hideScenes: function _hideScenes() {
    var gesturingToIndex = null;
    if (this.state.activeGesture) {
      gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
    }
    for (var i = 0; i < this.state.routeStack.length; i++) {
      if (i === this.state.presentedIndex || i === this.state.transitionFromIndex || i === gesturingToIndex) {
        continue;
      }
      this._disableScene(i);
    }
  },

  _disableScene: function _disableScene(sceneIndex) {
    this._sceneRefs[sceneIndex] && this._sceneRefs[sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);
  },

  _enableScene: function _enableScene(sceneIndex) {
    var sceneStyle = flattenStyle([BASE_SCENE_STYLE, this.props.sceneStyle]);

    var enabledSceneNativeProps = {
      pointerEvents: 'auto',
      style: {
        top: sceneStyle.top,
        bottom: sceneStyle.bottom
      }
    };
    if (sceneIndex !== this.state.transitionFromIndex && sceneIndex !== this.state.presentedIndex) {
      enabledSceneNativeProps.style.opacity = 0;
    }
    this._sceneRefs[sceneIndex] && this._sceneRefs[sceneIndex].setNativeProps(enabledSceneNativeProps);
  },

  _clearTransformations: function _clearTransformations(sceneIndex) {
    var defaultStyle = flattenStyle([DEFAULT_SCENE_STYLE]);
    this._sceneRefs[sceneIndex].setNativeProps({ style: defaultStyle });
  },

  _onAnimationStart: function _onAnimationStart() {
    var fromIndex = this.state.presentedIndex;
    var toIndex = this.state.presentedIndex;
    if (this.state.transitionFromIndex != null) {
      fromIndex = this.state.transitionFromIndex;
    } else if (this.state.activeGesture) {
      toIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
    }
    this._setRenderSceneToHardwareTextureAndroid(fromIndex, true);
    this._setRenderSceneToHardwareTextureAndroid(toIndex, true);
    var navBar = this._navBar;
    if (navBar && navBar.onAnimationStart) {
      navBar.onAnimationStart(fromIndex, toIndex);
    }
  },

  _onAnimationEnd: function _onAnimationEnd() {
    var max = this.state.routeStack.length - 1;
    for (var index = 0; index <= max; index++) {
      this._setRenderSceneToHardwareTextureAndroid(index, false);
    }

    var navBar = this._navBar;
    if (navBar && navBar.onAnimationEnd) {
      navBar.onAnimationEnd();
    }
  },

  _setRenderSceneToHardwareTextureAndroid: function _setRenderSceneToHardwareTextureAndroid(sceneIndex, shouldRenderToHardwareTexture) {
    var viewAtIndex = this._sceneRefs[sceneIndex];
    if (viewAtIndex === null || viewAtIndex === undefined) {
      return;
    }
    viewAtIndex.setNativeProps({ renderToHardwareTextureAndroid: shouldRenderToHardwareTexture });
  },

  _handleTouchStart: function _handleTouchStart() {
    this._eligibleGestures = GESTURE_ACTIONS;
  },

  _handleMoveShouldSetPanResponder: function _handleMoveShouldSetPanResponder(e, gestureState) {
    var sceneConfig = this.state.sceneConfigStack[this.state.presentedIndex];
    if (!sceneConfig) {
      return false;
    }
    this._expectingGestureGrant = this._matchGestureAction(this._eligibleGestures, sceneConfig.gestures, gestureState);
    return !!this._expectingGestureGrant;
  },

  _doesGestureOverswipe: function _doesGestureOverswipe(gestureName) {
    var wouldOverswipeBack = this.state.presentedIndex <= 0 && (gestureName === 'pop' || gestureName === 'jumpBack');
    var wouldOverswipeForward = this.state.presentedIndex >= this.state.routeStack.length - 1 && gestureName === 'jumpForward';
    return wouldOverswipeForward || wouldOverswipeBack;
  },

  _deltaForGestureAction: function _deltaForGestureAction(gestureAction) {
    switch (gestureAction) {
      case 'pop':
      case 'jumpBack':
        return -1;
      case 'jumpForward':
        return 1;
      default:
        invariant(false, 'Unsupported gesture action ' + gestureAction);
        return;
    }
  },

  _handlePanResponderRelease: function _handlePanResponderRelease(e, gestureState) {
    var _this4 = this;

    var sceneConfig = this.state.sceneConfigStack[this.state.presentedIndex];
    var releaseGestureAction = this.state.activeGesture;
    if (!releaseGestureAction) {
      return;
    }
    var releaseGesture = sceneConfig.gestures[releaseGestureAction];
    var destIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
    if (this.spring.getCurrentValue() === 0) {
      this.spring.setCurrentValue(0).setAtRest();
      this._completeTransition();
      return;
    }
    var isTravelVertical = releaseGesture.direction === 'top-to-bottom' || releaseGesture.direction === 'bottom-to-top';
    var isTravelInverted = releaseGesture.direction === 'right-to-left' || releaseGesture.direction === 'bottom-to-top';
    var velocity, gestureDistance;
    if (isTravelVertical) {
      velocity = isTravelInverted ? -gestureState.vy : gestureState.vy;
      gestureDistance = isTravelInverted ? -gestureState.dy : gestureState.dy;
    } else {
      velocity = isTravelInverted ? -gestureState.vx : gestureState.vx;
      gestureDistance = isTravelInverted ? -gestureState.dx : gestureState.dx;
    }
    var transitionVelocity = clamp(-10, velocity, 10);
    if (Math.abs(velocity) < releaseGesture.notMoving) {
      var hasGesturedEnoughToComplete = gestureDistance > releaseGesture.fullDistance * releaseGesture.stillCompletionRatio;
      transitionVelocity = hasGesturedEnoughToComplete ? releaseGesture.snapVelocity : -releaseGesture.snapVelocity;
    }
    if (transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)) {
      if (this.state.transitionFromIndex == null) {
        var transitionBackToPresentedIndex = this.state.presentedIndex;

        this.state.presentedIndex = destIndex;
        this._transitionTo(transitionBackToPresentedIndex, -transitionVelocity, 1 - this.spring.getCurrentValue());
      }
    } else {
      this._emitWillFocus(this.state.routeStack[destIndex]);
      this._transitionTo(destIndex, transitionVelocity, null, function () {
        if (releaseGestureAction === 'pop') {
          _this4._cleanScenesPastIndex(destIndex);
        }
      });
    }
    this._detachGesture();
  },

  _handlePanResponderTerminate: function _handlePanResponderTerminate(e, gestureState) {
    if (this.state.activeGesture == null) {
      return;
    }
    var destIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
    this._detachGesture();
    var transitionBackToPresentedIndex = this.state.presentedIndex;

    this.state.presentedIndex = destIndex;
    this._transitionTo(transitionBackToPresentedIndex, null, 1 - this.spring.getCurrentValue());
  },

  _attachGesture: function _attachGesture(gestureId) {
    this.state.activeGesture = gestureId;
    var gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
    this._enableScene(gesturingToIndex);
  },

  _detachGesture: function _detachGesture() {
    this.state.activeGesture = null;
    this.state.pendingGestureProgress = null;
    this._hideScenes();
  },

  _handlePanResponderMove: function _handlePanResponderMove(e, gestureState) {
    if (this._isMoveGestureAttached !== undefined) {
      invariant(this._expectingGestureGrant, 'Responder granted unexpectedly.');
      this._attachGesture(this._expectingGestureGrant);
      this._onAnimationStart();
      this._expectingGestureGrant = undefined;
    }

    var sceneConfig = this.state.sceneConfigStack[this.state.presentedIndex];
    if (this.state.activeGesture) {
      var gesture = sceneConfig.gestures[this.state.activeGesture];
      return this._moveAttachedGesture(gesture, gestureState);
    }
    var matchedGesture = this._matchGestureAction(GESTURE_ACTIONS, sceneConfig.gestures, gestureState);
    if (matchedGesture) {
      this._attachGesture(matchedGesture);
    }
  },

  _moveAttachedGesture: function _moveAttachedGesture(gesture, gestureState) {
    var isTravelVertical = gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
    var isTravelInverted = gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
    var distance = isTravelVertical ? gestureState.dy : gestureState.dx;
    distance = isTravelInverted ? -distance : distance;
    var gestureDetectMovement = gesture.gestureDetectMovement;
    var nextProgress = (distance - gestureDetectMovement) / (gesture.fullDistance - gestureDetectMovement);
    if (nextProgress < 0 && gesture.isDetachable) {
      var gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
      this._transitionBetween(this.state.presentedIndex, gesturingToIndex, 0);
      this._detachGesture();
      if (this.state.pendingGestureProgress != null) {
        this.spring.setCurrentValue(0);
      }
      return;
    }
    if (gesture.overswipe && this._doesGestureOverswipe(this.state.activeGesture)) {
      var frictionConstant = gesture.overswipe.frictionConstant;
      var frictionByDistance = gesture.overswipe.frictionByDistance;
      var frictionRatio = 1 / (frictionConstant + Math.abs(nextProgress) * frictionByDistance);
      nextProgress *= frictionRatio;
    }
    nextProgress = clamp(0, nextProgress, 1);
    if (this.state.transitionFromIndex != null) {
      this.state.pendingGestureProgress = nextProgress;
    } else if (this.state.pendingGestureProgress) {
      this.spring.setEndValue(nextProgress);
    } else {
      this.spring.setCurrentValue(nextProgress);
    }
  },

  _matchGestureAction: function _matchGestureAction(eligibleGestures, gestures, gestureState) {
    var _this5 = this;

    if (!gestures || !eligibleGestures || !eligibleGestures.some) {
      return null;
    }
    var matchedGesture = null;
    eligibleGestures.some(function (gestureName, gestureIndex) {
      var gesture = gestures[gestureName];
      if (!gesture) {
        return;
      }
      if (gesture.overswipe == null && _this5._doesGestureOverswipe(gestureName)) {
        return false;
      }
      var isTravelVertical = gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
      var isTravelInverted = gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
      var startedLoc = isTravelVertical ? gestureState.y0 : gestureState.x0;
      var currentLoc = isTravelVertical ? gestureState.moveY : gestureState.moveX;
      var travelDist = isTravelVertical ? gestureState.dy : gestureState.dx;
      var oppositeAxisTravelDist = isTravelVertical ? gestureState.dx : gestureState.dy;
      var edgeHitWidth = gesture.edgeHitWidth;
      if (isTravelInverted) {
        startedLoc = -startedLoc;
        currentLoc = -currentLoc;
        travelDist = -travelDist;
        oppositeAxisTravelDist = -oppositeAxisTravelDist;
        edgeHitWidth = isTravelVertical ? -(SCREEN_HEIGHT - edgeHitWidth) : -(SCREEN_WIDTH - edgeHitWidth);
      }
      if (startedLoc === 0) {
        startedLoc = currentLoc;
      }
      var moveStartedInRegion = gesture.edgeHitWidth == null || startedLoc < edgeHitWidth;
      if (!moveStartedInRegion) {
        return false;
      }
      var moveTravelledFarEnough = travelDist >= gesture.gestureDetectMovement;
      if (!moveTravelledFarEnough) {
        return false;
      }
      var directionIsCorrect = Math.abs(travelDist) > Math.abs(oppositeAxisTravelDist) * gesture.directionRatio;
      if (directionIsCorrect) {
        matchedGesture = gestureName;
        return true;
      } else {
        _this5._eligibleGestures = _this5._eligibleGestures.slice().splice(gestureIndex, 1);
      }
    });
    return matchedGesture || null;
  },

  _transitionSceneStyle: function _transitionSceneStyle(fromIndex, toIndex, progress, index) {
    var viewAtIndex = this._sceneRefs[index];
    if (viewAtIndex === null || viewAtIndex === undefined) {
      return;
    }

    var sceneConfigIndex = fromIndex < toIndex ? toIndex : fromIndex;
    var sceneConfig = this.state.sceneConfigStack[sceneConfigIndex];

    if (!sceneConfig) {
      sceneConfig = this.state.sceneConfigStack[sceneConfigIndex - 1];
    }
    var styleToUse = {};
    var useFn = index < fromIndex || index < toIndex ? sceneConfig.animationInterpolators.out : sceneConfig.animationInterpolators.into;
    var directionAdjustedProgress = fromIndex < toIndex ? progress : 1 - progress;
    var didChange = useFn(styleToUse, directionAdjustedProgress);
    if (didChange) {
      viewAtIndex.setNativeProps({ style: styleToUse });
    }
  },

  _transitionBetween: function _transitionBetween(fromIndex, toIndex, progress) {
    this._transitionSceneStyle(fromIndex, toIndex, progress, fromIndex);
    this._transitionSceneStyle(fromIndex, toIndex, progress, toIndex);
    var navBar = this._navBar;
    if (navBar && navBar.updateProgress && toIndex >= 0 && fromIndex >= 0) {
      navBar.updateProgress(progress, fromIndex, toIndex);
    }
  },

  _handleResponderTerminationRequest: function _handleResponderTerminationRequest() {
    return false;
  },

  _getDestIndexWithinBounds: function _getDestIndexWithinBounds(n) {
    var currentIndex = this.state.presentedIndex;
    var destIndex = currentIndex + n;
    invariant(destIndex >= 0, 'Cannot jump before the first route.');
    var maxIndex = this.state.routeStack.length - 1;
    invariant(maxIndex >= destIndex, 'Cannot jump past the last route.');
    return destIndex;
  },

  _jumpN: function _jumpN(n) {
    var destIndex = this._getDestIndexWithinBounds(n);
    this._enableScene(destIndex);
    this._emitWillFocus(this.state.routeStack[destIndex]);
    this._transitionTo(destIndex);
  },

  jumpTo: function jumpTo(route) {
    var destIndex = this.state.routeStack.indexOf(route);
    invariant(destIndex !== -1, 'Cannot jump to route that is not in the route stack');
    this._jumpN(destIndex - this.state.presentedIndex);
  },

  jumpForward: function jumpForward() {
    this._jumpN(1);
  },

  jumpBack: function jumpBack() {
    this._jumpN(-1);
  },

  push: function push(route) {
    var _this6 = this;

    invariant(!!route, 'Must supply route to push');
    var activeLength = this.state.presentedIndex + 1;
    var activeStack = this.state.routeStack.slice(0, activeLength);
    var activeAnimationConfigStack = this.state.sceneConfigStack.slice(0, activeLength);
    var nextStack = activeStack.concat([route]);
    var destIndex = nextStack.length - 1;
    var nextSceneConfig = this.props.configureScene(route, nextStack);
    var nextAnimationConfigStack = activeAnimationConfigStack.concat([nextSceneConfig]);
    this._emitWillFocus(nextStack[destIndex]);
    this.setState({
      routeStack: nextStack,
      sceneConfigStack: nextAnimationConfigStack
    }, function () {
      _this6._enableScene(destIndex);
      _this6._transitionTo(destIndex, nextSceneConfig.defaultTransitionVelocity);
    });
  },

  popN: function popN(n) {
    var _this7 = this;

    invariant(typeof n === 'number', 'Must supply a number to popN');
    n = parseInt(n, 10);
    if (n <= 0 || this.state.presentedIndex - n < 0) {
      return;
    }
    var popIndex = this.state.presentedIndex - n;
    var presentedRoute = this.state.routeStack[this.state.presentedIndex];
    var popSceneConfig = this.props.configureScene(presentedRoute);
    this._enableScene(popIndex);

    this._clearTransformations(popIndex);
    this._emitWillFocus(this.state.routeStack[popIndex]);
    this._transitionTo(popIndex, popSceneConfig.defaultTransitionVelocity, null, function () {
      _this7._cleanScenesPastIndex(popIndex);
    });
  },

  pop: function pop() {
    if (this.state.transitionQueue.length) {
      return;
    }

    this.popN(1);
  },

  replaceAtIndex: function replaceAtIndex(route, index, cb) {
    var _this8 = this;

    invariant(!!route, 'Must supply route to replace');
    if (index < 0) {
      index += this.state.routeStack.length;
    }

    if (this.state.routeStack.length <= index) {
      return;
    }

    var nextRouteStack = this.state.routeStack.slice();
    var nextAnimationModeStack = this.state.sceneConfigStack.slice();
    nextRouteStack[index] = route;
    nextAnimationModeStack[index] = this.props.configureScene(route, nextRouteStack);

    if (index === this.state.presentedIndex) {
      this._emitWillFocus(route);
    }
    this.setState({
      routeStack: nextRouteStack,
      sceneConfigStack: nextAnimationModeStack
    }, function () {
      if (index === _this8.state.presentedIndex) {
        _this8._emitDidFocus(route);
      }
      cb && cb();
    });
  },

  replace: function replace(route) {
    this.replaceAtIndex(route, this.state.presentedIndex);
  },

  replacePrevious: function replacePrevious(route) {
    this.replaceAtIndex(route, this.state.presentedIndex - 1);
  },

  popToTop: function popToTop() {
    this.popToRoute(this.state.routeStack[0]);
  },

  popToRoute: function popToRoute(route) {
    var indexOfRoute = this.state.routeStack.indexOf(route);
    invariant(indexOfRoute !== -1, 'Calling popToRoute for a route that doesn\'t exist!');
    var numToPop = this.state.presentedIndex - indexOfRoute;
    this.popN(numToPop);
  },

  replacePreviousAndPop: function replacePreviousAndPop(route) {
    if (this.state.routeStack.length < 2) {
      return;
    }
    this.replacePrevious(route);
    this.pop();
  },

  resetTo: function resetTo(route) {
    var _this9 = this;

    invariant(!!route, 'Must supply route to push');
    this.replaceAtIndex(route, 0, function () {
      _this9.popN(_this9.state.presentedIndex);
    });
  },

  getCurrentRoutes: function getCurrentRoutes() {
    return this.state.routeStack.slice();
  },

  _cleanScenesPastIndex: function _cleanScenesPastIndex(index) {
    var newStackLength = index + 1;

    if (newStackLength < this.state.routeStack.length) {
      this.setState({
        sceneConfigStack: this.state.sceneConfigStack.slice(0, newStackLength),
        routeStack: this.state.routeStack.slice(0, newStackLength)
      });
    }
  },

  _renderScene: function _renderScene(route, i) {
    var _this10 = this;

    var disabledSceneStyle = null;
    var disabledScenePointerEvents = 'auto';
    if (i !== this.state.presentedIndex) {
      disabledSceneStyle = styles.disabledScene;
      disabledScenePointerEvents = 'none';
    }
    return React.createElement(
      _reactNative.View,
      {
        collapsable: false,
        key: 'scene_' + getRouteID(route),
        ref: function ref(scene) {
          _this10._sceneRefs[i] = scene;
        },
        onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture() {
          return _this10.state.transitionFromIndex != null;
        },
        pointerEvents: disabledScenePointerEvents,
        style: [styles.baseScene, this.props.sceneStyle, disabledSceneStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 1283
        }
      },
      this.props.renderScene(route, this)
    );
  },

  _renderNavigationBar: function _renderNavigationBar() {
    var _this11 = this;

    var navigationBar = this.props.navigationBar;

    if (!navigationBar) {
      return null;
    }
    return React.cloneElement(navigationBar, {
      ref: function ref(navBar) {
        _this11._navBar = navBar;
        if (navigationBar && typeof navigationBar.ref === 'function') {
          navigationBar.ref(navBar);
        }
      },
      navigator: this._navigationBarNavigator,
      navState: this.state
    });
  },

  _tvEventHandler: _reactNative.TVEventHandler,

  _enableTVEventHandler: function _enableTVEventHandler() {
    if (!_reactNative.TVEventHandler) {
      return;
    }
    this._tvEventHandler = new _reactNative.TVEventHandler();
    this._tvEventHandler.enable(this, function (cmp, evt) {
      if (evt && evt.eventType === 'menu') {
        cmp.pop();
      }
    });
  },

  _disableTVEventHandler: function _disableTVEventHandler() {
    if (this._tvEventHandler) {
      this._tvEventHandler.disable();
      delete this._tvEventHandler;
    }
  },

  render: function render() {
    var _this12 = this;

    var newRenderedSceneMap = new Map();
    var scenes = this.state.routeStack.map(function (route, index) {
      var renderedScene;
      if (_this12._renderedSceneMap.has(route) && index !== _this12.state.presentedIndex) {
        renderedScene = _this12._renderedSceneMap.get(route);
      } else {
        renderedScene = _this12._renderScene(route, index);
      }
      newRenderedSceneMap.set(route, renderedScene);
      return renderedScene;
    });
    this._renderedSceneMap = newRenderedSceneMap;
    return React.createElement(
      _reactNative.View,
      { style: [styles.container, this.props.style], __source: {
          fileName: _jsxFileName,
          lineNumber: 1355
        }
      },
      React.createElement(
        _reactNative.View,
        babelHelpers.extends({
          style: styles.transitioner
        }, this.panGesture.panHandlers, {
          onTouchStart: this._handleTouchStart,
          onResponderTerminationRequest: this._handleResponderTerminationRequest, __source: {
            fileName: _jsxFileName,
            lineNumber: 1356
          }
        }),
        scenes
      ),
      this._renderNavigationBar()
    );
  },

  _getNavigationContext: function _getNavigationContext() {
    if (!this._navigationContext) {
      this._navigationContext = new NavigationContext();
    }
    return this._navigationContext;
  }
});

module.exports = Navigator;
}, 436, null, "react-native-deprecated-custom-components/src/Navigator.js");
__d(/* react-native-deprecated-custom-components/src/buildStyleInterpolator.js */function(global, require, module, exports) {

var keyOf = require(245             ); // 245 = fbjs/lib/keyOf

var X_DIM = keyOf({ x: null });
var Y_DIM = keyOf({ y: null });
var Z_DIM = keyOf({ z: null });
var W_DIM = keyOf({ w: null });

var TRANSFORM_ROTATE_NAME = keyOf({ transformRotateRadians: null });

var ShouldAllocateReusableOperationVars = {
  transformRotateRadians: true,
  transformScale: true,
  transformTranslate: true
};

var InitialOperationField = {
  transformRotateRadians: [0, 0, 0, 1],
  transformTranslate: [0, 0, 0],
  transformScale: [1, 1, 1]
};

var ARGUMENT_NAMES_RE = /([^\s,]+)/g;

var inline = function inline(fnStr, replaceWithArgs) {
  var parameterNames = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES_RE) || [];
  var replaceRegexStr = parameterNames.map(function (paramName) {
    return '\\b' + paramName + '\\b';
  }).join('|');
  var replaceRegex = new RegExp(replaceRegexStr, 'g');
  var fnBody = fnStr.substring(fnStr.indexOf('{') + 1, fnStr.lastIndexOf('}'));
  var newFnBody = fnBody.replace(replaceRegex, function (parameterName) {
    var indexInParameterNames = parameterNames.indexOf(parameterName);
    var replacementName = replaceWithArgs[indexInParameterNames];
    return replacementName;
  });
  return newFnBody.split('\n');
};

var MatrixOps = {
  unroll: 'function(matVar, m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15) {\n    m0 = matVar[0];\n    m1 = matVar[1];\n    m2 = matVar[2];\n    m3 = matVar[3];\n    m4 = matVar[4];\n    m5 = matVar[5];\n    m6 = matVar[6];\n    m7 = matVar[7];\n    m8 = matVar[8];\n    m9 = matVar[9];\n    m10 = matVar[10];\n    m11 = matVar[11];\n    m12 = matVar[12];\n    m13 = matVar[13];\n    m14 = matVar[14];\n    m15 = matVar[15];\n  }',

  matrixDiffers: 'function(retVar, matVar, m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15) {\n    retVar = retVar ||\n    m0 !== matVar[0] ||\n    m1 !== matVar[1] ||\n    m2 !== matVar[2] ||\n    m3 !== matVar[3] ||\n    m4 !== matVar[4] ||\n    m5 !== matVar[5] ||\n    m6 !== matVar[6] ||\n    m7 !== matVar[7] ||\n    m8 !== matVar[8] ||\n    m9 !== matVar[9] ||\n    m10 !== matVar[10] ||\n    m11 !== matVar[11] ||\n    m12 !== matVar[12] ||\n    m13 !== matVar[13] ||\n    m14 !== matVar[14] ||\n    m15 !== matVar[15];\n  }',

  transformScale: 'function(matVar, opVar) {\n    // Scaling matVar by opVar\n    var x = opVar[0];\n    var y = opVar[1];\n    var z = opVar[2];\n    matVar[0] = matVar[0] * x;\n    matVar[1] = matVar[1] * x;\n    matVar[2] = matVar[2] * x;\n    matVar[3] = matVar[3] * x;\n    matVar[4] = matVar[4] * y;\n    matVar[5] = matVar[5] * y;\n    matVar[6] = matVar[6] * y;\n    matVar[7] = matVar[7] * y;\n    matVar[8] = matVar[8] * z;\n    matVar[9] = matVar[9] * z;\n    matVar[10] = matVar[10] * z;\n    matVar[11] = matVar[11] * z;\n    matVar[12] = matVar[12];\n    matVar[13] = matVar[13];\n    matVar[14] = matVar[14];\n    matVar[15] = matVar[15];\n  }',

  transformTranslate: 'function(matVar, opVar) {\n    // Translating matVar by opVar\n    var x = opVar[0];\n    var y = opVar[1];\n    var z = opVar[2];\n    matVar[12] = matVar[0] * x + matVar[4] * y + matVar[8] * z + matVar[12];\n    matVar[13] = matVar[1] * x + matVar[5] * y + matVar[9] * z + matVar[13];\n    matVar[14] = matVar[2] * x + matVar[6] * y + matVar[10] * z + matVar[14];\n    matVar[15] = matVar[3] * x + matVar[7] * y + matVar[11] * z + matVar[15];\n  }',

  transformRotateRadians: 'function(matVar, q) {\n    // Rotating matVar by q\n    var xQuat = q[0], yQuat = q[1], zQuat = q[2], wQuat = q[3];\n    var x2Quat = xQuat + xQuat;\n    var y2Quat = yQuat + yQuat;\n    var z2Quat = zQuat + zQuat;\n    var xxQuat = xQuat * x2Quat;\n    var xyQuat = xQuat * y2Quat;\n    var xzQuat = xQuat * z2Quat;\n    var yyQuat = yQuat * y2Quat;\n    var yzQuat = yQuat * z2Quat;\n    var zzQuat = zQuat * z2Quat;\n    var wxQuat = wQuat * x2Quat;\n    var wyQuat = wQuat * y2Quat;\n    var wzQuat = wQuat * z2Quat;\n    // Step 1: Inlines the construction of a quaternion matrix (\'quatMat\')\n    var quatMat0 = 1 - (yyQuat + zzQuat);\n    var quatMat1 = xyQuat + wzQuat;\n    var quatMat2 = xzQuat - wyQuat;\n    var quatMat4 = xyQuat - wzQuat;\n    var quatMat5 = 1 - (xxQuat + zzQuat);\n    var quatMat6 = yzQuat + wxQuat;\n    var quatMat8 = xzQuat + wyQuat;\n    var quatMat9 = yzQuat - wxQuat;\n    var quatMat10 = 1 - (xxQuat + yyQuat);\n    // quatMat3/7/11/12/13/14 = 0, quatMat15 = 1\n\n    // Step 2: Inlines multiplication, takes advantage of constant quatMat cells\n    var a00 = matVar[0];\n    var a01 = matVar[1];\n    var a02 = matVar[2];\n    var a03 = matVar[3];\n    var a10 = matVar[4];\n    var a11 = matVar[5];\n    var a12 = matVar[6];\n    var a13 = matVar[7];\n    var a20 = matVar[8];\n    var a21 = matVar[9];\n    var a22 = matVar[10];\n    var a23 = matVar[11];\n\n    var b0  = quatMat0, b1 = quatMat1, b2 = quatMat2;\n    matVar[0] = b0 * a00 + b1 * a10 + b2 * a20;\n    matVar[1] = b0 * a01 + b1 * a11 + b2 * a21;\n    matVar[2] = b0 * a02 + b1 * a12 + b2 * a22;\n    matVar[3] = b0 * a03 + b1 * a13 + b2 * a23;\n    b0 = quatMat4; b1 = quatMat5; b2 = quatMat6;\n    matVar[4] = b0 * a00 + b1 * a10 + b2 * a20;\n    matVar[5] = b0 * a01 + b1 * a11 + b2 * a21;\n    matVar[6] = b0 * a02 + b1 * a12 + b2 * a22;\n    matVar[7] = b0 * a03 + b1 * a13 + b2 * a23;\n    b0 = quatMat8; b1 = quatMat9; b2 = quatMat10;\n    matVar[8] = b0 * a00 + b1 * a10 + b2 * a20;\n    matVar[9] = b0 * a01 + b1 * a11 + b2 * a21;\n    matVar[10] = b0 * a02 + b1 * a12 + b2 * a22;\n    matVar[11] = b0 * a03 + b1 * a13 + b2 * a23;\n  }'
};

var MatrixOpsInitial = {
  transformScale: 'function(matVar, opVar) {\n    // Scaling matVar known to be identity by opVar\n    matVar[0] = opVar[0];\n    matVar[1] = 0;\n    matVar[2] = 0;\n    matVar[3] = 0;\n    matVar[4] = 0;\n    matVar[5] = opVar[1];\n    matVar[6] = 0;\n    matVar[7] = 0;\n    matVar[8] = 0;\n    matVar[9] = 0;\n    matVar[10] = opVar[2];\n    matVar[11] = 0;\n    matVar[12] = 0;\n    matVar[13] = 0;\n    matVar[14] = 0;\n    matVar[15] = 1;\n  }',

  transformTranslate: 'function(matVar, opVar) {\n    // Translating matVar known to be identity by opVar;\n    matVar[0] = 1;\n    matVar[1] = 0;\n    matVar[2] = 0;\n    matVar[3] = 0;\n    matVar[4] = 0;\n    matVar[5] = 1;\n    matVar[6] = 0;\n    matVar[7] = 0;\n    matVar[8] = 0;\n    matVar[9] = 0;\n    matVar[10] = 1;\n    matVar[11] = 0;\n    matVar[12] = opVar[0];\n    matVar[13] = opVar[1];\n    matVar[14] = opVar[2];\n    matVar[15] = 1;\n  }',

  transformRotateRadians: 'function(matVar, q) {\n\n    // Rotating matVar which is known to be identity by q\n    var xQuat = q[0], yQuat = q[1], zQuat = q[2], wQuat = q[3];\n    var x2Quat = xQuat + xQuat;\n    var y2Quat = yQuat + yQuat;\n    var z2Quat = zQuat + zQuat;\n    var xxQuat = xQuat * x2Quat;\n    var xyQuat = xQuat * y2Quat;\n    var xzQuat = xQuat * z2Quat;\n    var yyQuat = yQuat * y2Quat;\n    var yzQuat = yQuat * z2Quat;\n    var zzQuat = zQuat * z2Quat;\n    var wxQuat = wQuat * x2Quat;\n    var wyQuat = wQuat * y2Quat;\n    var wzQuat = wQuat * z2Quat;\n    // Step 1: Inlines the construction of a quaternion matrix (\'quatMat\')\n    var quatMat0 = 1 - (yyQuat + zzQuat);\n    var quatMat1 = xyQuat + wzQuat;\n    var quatMat2 = xzQuat - wyQuat;\n    var quatMat4 = xyQuat - wzQuat;\n    var quatMat5 = 1 - (xxQuat + zzQuat);\n    var quatMat6 = yzQuat + wxQuat;\n    var quatMat8 = xzQuat + wyQuat;\n    var quatMat9 = yzQuat - wxQuat;\n    var quatMat10 = 1 - (xxQuat + yyQuat);\n    // quatMat3/7/11/12/13/14 = 0, quatMat15 = 1\n\n    // Step 2: Inlines the multiplication with identity matrix.\n    var b0  = quatMat0, b1 = quatMat1, b2 = quatMat2;\n    matVar[0] = b0;\n    matVar[1] = b1;\n    matVar[2] = b2;\n    matVar[3] = 0;\n    b0 = quatMat4; b1 = quatMat5; b2 = quatMat6;\n    matVar[4] = b0;\n    matVar[5] = b1;\n    matVar[6] = b2;\n    matVar[7] = 0;\n    b0 = quatMat8; b1 = quatMat9; b2 = quatMat10;\n    matVar[8] = b0;\n    matVar[9] = b1;\n    matVar[10] = b2;\n    matVar[11] = 0;\n    matVar[12] = 0;\n    matVar[13] = 0;\n    matVar[14] = 0;\n    matVar[15] = 1;\n  }'
};

var setNextValAndDetectChange = function setNextValAndDetectChange(name, tmpVarName) {
  return '  if (!didChange) {\n' + '    var prevVal = result.' + name + ';\n' + '    result.' + name + ' = ' + tmpVarName + ';\n' + '    didChange = didChange  || (' + tmpVarName + ' !== prevVal);\n' + '  } else {\n' + '    result.' + name + ' = ' + tmpVarName + ';\n' + '  }\n';
};

var computeNextValLinear = function computeNextValLinear(anim, from, to, tmpVarName) {
  var hasRoundRatio = 'round' in anim;
  var roundRatio = anim.round;
  var fn = '  ratio = (value - ' + anim.min + ') / ' + (anim.max - anim.min) + ';\n';
  if (!anim.extrapolate) {
    fn += '  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';
  }

  var roundOpen = hasRoundRatio ? 'Math.round(' + roundRatio + ' * ' : '';
  var roundClose = hasRoundRatio ? ') / ' + roundRatio : '';
  fn += '  ' + tmpVarName + ' = ' + roundOpen + '(' + from + ' * (1 - ratio) + ' + to + ' * ratio)' + roundClose + ';\n';
  return fn;
};

var computeNextValLinearScalar = function computeNextValLinearScalar(anim) {
  return computeNextValLinear(anim, anim.from, anim.to, 'nextScalarVal');
};

var computeNextValConstant = function computeNextValConstant(anim) {
  var constantExpression = JSON.stringify(anim.value);
  return '  nextScalarVal = ' + constantExpression + ';\n';
};

var computeNextValStep = function computeNextValStep(anim) {
  return '  nextScalarVal = value >= ' + (anim.threshold + ' ? ' + anim.to + ' : ' + anim.from) + ';\n';
};

var computeNextValIdentity = function computeNextValIdentity(anim) {
  return '  nextScalarVal = value;\n';
};

var operationVar = function operationVar(name) {
  return name + 'ReuseOp';
};

var createReusableOperationVars = function createReusableOperationVars(anims) {
  var ret = '';
  for (var name in anims) {
    if (ShouldAllocateReusableOperationVars[name]) {
      ret += 'var ' + operationVar(name) + ' = [];\n';
    }
  }
  return ret;
};

var newlines = function newlines(statements) {
  return '\n' + statements.join('\n') + '\n';
};

var computeNextMatrixOperationField = function computeNextMatrixOperationField(anim, name, dimension, index) {
  var fieldAccess = operationVar(name) + '[' + index + ']';
  if (anim.from[dimension] !== undefined && anim.to[dimension] !== undefined) {
    return '  ' + anim.from[dimension] !== anim.to[dimension] ? computeNextValLinear(anim, anim.from[dimension], anim.to[dimension], fieldAccess) : fieldAccess + ' = ' + anim.from[dimension] + ';';
  } else {
    return '  ' + fieldAccess + ' = ' + InitialOperationField[name][index] + ';';
  }
};

var unrolledVars = [];
for (var varIndex = 0; varIndex < 16; varIndex++) {
  unrolledVars.push('m' + varIndex);
}
var setNextMatrixAndDetectChange = function setNextMatrixAndDetectChange(orderedMatrixOperations) {
  var fn = ['  var transform = result.transform !== undefined ? ' + 'result.transform : (result.transform = [{ matrix: [] }]);' + '  var transformMatrix = transform[0].matrix;'];
  fn.push.apply(fn, inline(MatrixOps.unroll, ['transformMatrix'].concat(unrolledVars)));
  for (var i = 0; i < orderedMatrixOperations.length; i++) {
    var opName = orderedMatrixOperations[i];
    if (i === 0) {
      fn.push.apply(fn, inline(MatrixOpsInitial[opName], ['transformMatrix', operationVar(opName)]));
    } else {
      fn.push.apply(fn, inline(MatrixOps[opName], ['transformMatrix', operationVar(opName)]));
    }
  }
  fn.push.apply(fn, inline(MatrixOps.matrixDiffers, ['didChange', 'transformMatrix'].concat(unrolledVars)));
  return fn;
};

var InterpolateMatrix = {
  transformTranslate: true,
  transformRotateRadians: true,
  transformScale: true
};

var createFunctionString = function createFunctionString(anims) {
  var orderedMatrixOperations = [];

  var fn = 'return (function() {\n';
  fn += createReusableOperationVars(anims);
  fn += 'return function(result, value) {\n';
  fn += '  var didChange = false;\n';
  fn += '  var nextScalarVal;\n';
  fn += '  var ratio;\n';

  for (var name in anims) {
    var anim = anims[name];
    if (anim.type === 'linear') {
      if (InterpolateMatrix[name]) {
        orderedMatrixOperations.push(name);
        var setOperations = [computeNextMatrixOperationField(anim, name, X_DIM, 0), computeNextMatrixOperationField(anim, name, Y_DIM, 1), computeNextMatrixOperationField(anim, name, Z_DIM, 2)];
        if (name === TRANSFORM_ROTATE_NAME) {
          setOperations.push(computeNextMatrixOperationField(anim, name, W_DIM, 3));
        }
        fn += newlines(setOperations);
      } else {
        fn += computeNextValLinearScalar(anim, 'nextScalarVal');
        fn += setNextValAndDetectChange(name, 'nextScalarVal');
      }
    } else if (anim.type === 'constant') {
      fn += computeNextValConstant(anim);
      fn += setNextValAndDetectChange(name, 'nextScalarVal');
    } else if (anim.type === 'step') {
      fn += computeNextValStep(anim);
      fn += setNextValAndDetectChange(name, 'nextScalarVal');
    } else if (anim.type === 'identity') {
      fn += computeNextValIdentity(anim);
      fn += setNextValAndDetectChange(name, 'nextScalarVal');
    }
  }
  if (orderedMatrixOperations.length) {
    fn += newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));
  }
  fn += '  return didChange;\n';
  fn += '};\n';
  fn += '})()';
  return fn;
};

var buildStyleInterpolator = function buildStyleInterpolator(anims) {
  var interpolator = null;
  function lazyStyleInterpolator(result, value) {
    if (interpolator === null) {
      interpolator = Function(createFunctionString(anims))();
    }
    return interpolator(result, value);
  }
  return lazyStyleInterpolator;
};

module.exports = buildStyleInterpolator;
}, 437, null, "react-native-deprecated-custom-components/src/buildStyleInterpolator.js");
__d(/* react-native-deprecated-custom-components/src/InteractionMixin.js */function(global, require, module, exports) {
'use strict';

var _reactNative = require(26            ); // 26 = react-native

var InteractionMixin = {
  componentWillUnmount: function componentWillUnmount() {
    while (this._interactionMixinHandles.length) {
      _reactNative.InteractionManager.clearInteractionHandle(this._interactionMixinHandles.pop());
    }
  },

  _interactionMixinHandles: [],

  createInteractionHandle: function createInteractionHandle() {
    var handle = _reactNative.InteractionManager.createInteractionHandle();
    this._interactionMixinHandles.push(handle);
    return handle;
  },

  clearInteractionHandle: function clearInteractionHandle(clearHandle) {
    _reactNative.InteractionManager.clearInteractionHandle(clearHandle);
    this._interactionMixinHandles = this._interactionMixinHandles.filter(function (handle) {
      return handle !== clearHandle;
    });
  },

  runAfterInteractions: function runAfterInteractions(callback) {
    _reactNative.InteractionManager.runAfterInteractions(callback);
  }
};

module.exports = InteractionMixin;
}, 438, null, "react-native-deprecated-custom-components/src/InteractionMixin.js");
__d(/* react-native-deprecated-custom-components/src/NavigationContext.js */function(global, require, module, exports) {
'use strict';

var NavigationEvent = require(440                ); // 440 = ./NavigationEvent
var NavigationEventEmitter = require(441                       ); // 441 = ./NavigationEventEmitter
var NavigationTreeNode = require(446                   ); // 446 = ./NavigationTreeNode

var emptyFunction = require(16                      ); // 16 = fbjs/lib/emptyFunction
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var AT_TARGET = NavigationEvent.AT_TARGET,
    BUBBLING_PHASE = NavigationEvent.BUBBLING_PHASE,
    CAPTURING_PHASE = NavigationEvent.CAPTURING_PHASE;

var LegacyEventTypes = new Set(['willfocus', 'didfocus']);

var NavigationContext = function () {
  function NavigationContext() {
    babelHelpers.classCallCheck(this, NavigationContext);

    this._bubbleEventEmitter = new NavigationEventEmitter(this);
    this._captureEventEmitter = new NavigationEventEmitter(this);
    this._currentRoute = null;

    this.__node = new NavigationTreeNode(this);

    this._emitCounter = 0;
    this._emitQueue = [];

    this.addListener('willfocus', this._onFocus);
    this.addListener('didfocus', this._onFocus);
  }

  babelHelpers.createClass(NavigationContext, [{
    key: 'appendChild',
    value: function appendChild(childContext) {
      this.__node.appendChild(childContext.__node);
    }
  }, {
    key: 'addListener',
    value: function addListener(eventType, listener, useCapture) {
      if (LegacyEventTypes.has(eventType)) {
        useCapture = false;
      }

      var emitter = useCapture ? this._captureEventEmitter : this._bubbleEventEmitter;

      if (emitter) {
        return emitter.addListener(eventType, listener, this);
      } else {
        return { remove: emptyFunction };
      }
    }
  }, {
    key: 'emit',
    value: function emit(eventType, data, didEmitCallback) {
      var _this = this;

      if (this._emitCounter > 0) {
        var args = Array.prototype.slice.call(arguments);
        this._emitQueue.push(args);
        return;
      }

      this._emitCounter++;

      if (LegacyEventTypes.has(eventType)) {
        this.__emit(eventType, data, null, {
          defaultPrevented: false,
          eventPhase: AT_TARGET,
          propagationStopped: true,
          target: this
        });
      } else {
        var targets = [this];
        var parentTarget = this.parent;
        while (parentTarget) {
          targets.unshift(parentTarget);
          parentTarget = parentTarget.parent;
        }

        var propagationStopped = false;
        var defaultPrevented = false;
        var callback = function callback(event) {
          propagationStopped = propagationStopped || event.isPropagationStopped();
          defaultPrevented = defaultPrevented || event.defaultPrevented;
        };

        targets.some(function (currentTarget) {
          if (propagationStopped) {
            return true;
          }

          var extraInfo = {
            defaultPrevented: defaultPrevented,
            eventPhase: CAPTURING_PHASE,
            propagationStopped: propagationStopped,
            target: _this
          };

          currentTarget.__emit(eventType, data, callback, extraInfo);
        }, this);

        targets.reverse().some(function (currentTarget) {
          if (propagationStopped) {
            return true;
          }
          var extraInfo = {
            defaultPrevented: defaultPrevented,
            eventPhase: BUBBLING_PHASE,
            propagationStopped: propagationStopped,
            target: _this
          };
          currentTarget.__emit(eventType, data, callback, extraInfo);
        }, this);
      }

      if (didEmitCallback) {
        var event = NavigationEvent.pool(eventType, this, data);
        propagationStopped && event.stopPropagation();
        defaultPrevented && event.preventDefault();
        didEmitCallback.call(this, event);
        event.dispose();
      }

      this._emitCounter--;
      while (this._emitQueue.length) {
        var args = this._emitQueue.shift();
        this.emit.apply(this, args);
      }
    }
  }, {
    key: 'dispose',
    value: function dispose() {
      this._bubbleEventEmitter && this._bubbleEventEmitter.removeAllListeners();
      this._captureEventEmitter && this._captureEventEmitter.removeAllListeners();
      this._bubbleEventEmitter = null;
      this._captureEventEmitter = null;
      this._currentRoute = null;
    }
  }, {
    key: '__emit',
    value: function __emit(eventType, data, didEmitCallback, extraInfo) {
      var emitter;
      switch (extraInfo.eventPhase) {
        case CAPTURING_PHASE:
          emitter = this._captureEventEmitter;
          break;

        case AT_TARGET:
          emitter = this._bubbleEventEmitter;
          break;

        case BUBBLING_PHASE:
          emitter = this._bubbleEventEmitter;
          break;

        default:
          invariant(false, 'invalid event phase %s', extraInfo.eventPhase);
      }

      if (extraInfo.target === this) {
        extraInfo.eventPhase = AT_TARGET;
      }

      if (emitter) {
        emitter.emit(eventType, data, didEmitCallback, extraInfo);
      }
    }
  }, {
    key: '_onFocus',
    value: function _onFocus(event) {
      invariant(event.data && event.data.hasOwnProperty('route'), 'event type "%s" should provide route', event.type);

      this._currentRoute = event.data.route;
    }
  }, {
    key: 'parent',
    get: function get() {
      var parent = this.__node.getParent();
      return parent ? parent.getValue() : null;
    }
  }, {
    key: 'top',
    get: function get() {
      var result = null;
      var parentNode = this.__node.getParent();
      while (parentNode) {
        result = parentNode.getValue();
        parentNode = parentNode.getParent();
      }
      return result;
    }
  }, {
    key: 'currentRoute',
    get: function get() {
      return this._currentRoute;
    }
  }]);
  return NavigationContext;
}();

module.exports = NavigationContext;
}, 439, null, "react-native-deprecated-custom-components/src/NavigationContext.js");
__d(/* react-native-deprecated-custom-components/src/NavigationEvent.js */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var NavigationEventPool = function () {
  function NavigationEventPool() {
    babelHelpers.classCallCheck(this, NavigationEventPool);

    this._list = [];
  }

  babelHelpers.createClass(NavigationEventPool, [{
    key: 'get',
    value: function get(type, currentTarget, data) {
      var event = void 0;
      if (this._list.length > 0) {
        event = this._list.pop();
        event.constructor.call(event, type, currentTarget, data);
      } else {
        event = new NavigationEvent(type, currentTarget, data);
      }
      return event;
    }
  }, {
    key: 'put',
    value: function put(event) {
      this._list.push(event);
    }
  }]);
  return NavigationEventPool;
}();

var _navigationEventPool = new NavigationEventPool();

var NavigationEvent = function () {
  babelHelpers.createClass(NavigationEvent, null, [{
    key: 'pool',
    value: function pool(type, currentTarget, data) {
      return _navigationEventPool.get(type, currentTarget, data);
    }
  }]);

  function NavigationEvent(type, currentTarget, data) {
    babelHelpers.classCallCheck(this, NavigationEvent);

    this.target = currentTarget;
    this.eventPhase = NavigationEvent.NONE;

    this._type = type;
    this._currentTarget = currentTarget;
    this._data = data;
    this._defaultPrevented = false;
    this._disposed = false;
    this._propagationStopped = false;
  }

  babelHelpers.createClass(NavigationEvent, [{
    key: 'preventDefault',
    value: function preventDefault() {
      this._defaultPrevented = true;
    }
  }, {
    key: 'stopPropagation',
    value: function stopPropagation() {
      this._propagationStopped = true;
    }
  }, {
    key: 'stop',
    value: function stop() {
      this.preventDefault();
      this.stopPropagation();
    }
  }, {
    key: 'isPropagationStopped',
    value: function isPropagationStopped() {
      return this._propagationStopped;
    }
  }, {
    key: 'dispose',
    value: function dispose() {
      invariant(!this._disposed, 'NavigationEvent is already disposed');
      this._disposed = true;

      this.target = null;
      this.eventPhase = NavigationEvent.NONE;
      this._type = '';
      this._currentTarget = null;
      this._data = null;
      this._defaultPrevented = false;

      _navigationEventPool.put(this);
    }
  }, {
    key: 'type',
    get: function get() {
      return this._type;
    }
  }, {
    key: 'currentTarget',
    get: function get() {
      return this._currentTarget;
    }
  }, {
    key: 'data',
    get: function get() {
      return this._data;
    }
  }, {
    key: 'defaultPrevented',
    get: function get() {
      return this._defaultPrevented;
    }
  }]);
  return NavigationEvent;
}();

NavigationEvent.NONE = 0;

NavigationEvent.CAPTURING_PHASE = 1;

NavigationEvent.AT_TARGET = 2;

NavigationEvent.BUBBLING_PHASE = 3;

module.exports = NavigationEvent;
}, 440, null, "react-native-deprecated-custom-components/src/NavigationEvent.js");
__d(/* react-native-deprecated-custom-components/src/NavigationEventEmitter.js */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(442             ); // 442 = ./EventEmitter
var NavigationEvent = require(440                ); // 440 = ./NavigationEvent

var NavigationEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(NavigationEventEmitter, _EventEmitter);

  function NavigationEventEmitter(target) {
    babelHelpers.classCallCheck(this, NavigationEventEmitter);

    var _this = babelHelpers.possibleConstructorReturn(this, (NavigationEventEmitter.__proto__ || Object.getPrototypeOf(NavigationEventEmitter)).call(this));

    _this._emitting = false;
    _this._emitQueue = [];
    _this._target = target;
    return _this;
  }

  babelHelpers.createClass(NavigationEventEmitter, [{
    key: 'emit',
    value: function emit(eventType, data, didEmitCallback, extraInfo) {
      if (this._emitting) {
        var args = Array.prototype.slice.call(arguments);
        this._emitQueue.push(args);
        return;
      }

      this._emitting = true;

      var event = NavigationEvent.pool(eventType, this._target, data);

      if (extraInfo) {
        if (extraInfo.target) {
          event.target = extraInfo.target;
        }

        if (extraInfo.eventPhase) {
          event.eventPhase = extraInfo.eventPhase;
        }

        if (extraInfo.defaultPrevented) {
          event.preventDefault();
        }

        if (extraInfo.propagationStopped) {
          event.stopPropagation();
        }
      }

      babelHelpers.get(NavigationEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NavigationEventEmitter.prototype), 'emit', this).call(this, String(eventType), event);

      if (typeof didEmitCallback === 'function') {
        didEmitCallback.call(this._target, event);
      }
      event.dispose();

      this._emitting = false;

      while (this._emitQueue.length) {
        var args = this._emitQueue.shift();
        this.emit.apply(this, args);
      }
    }
  }]);
  return NavigationEventEmitter;
}(EventEmitter);

module.exports = NavigationEventEmitter;
}, 441, null, "react-native-deprecated-custom-components/src/NavigationEventEmitter.js");
__d(/* react-native-deprecated-custom-components/src/EventEmitter.js */function(global, require, module, exports) {
'use strict';

var EmitterSubscription = require(443                    ); // 443 = ./EmitterSubscription
var EventSubscriptionVendor = require(445                        ); // 445 = ./EventSubscriptionVendor

var emptyFunction = require(16                      ); // 16 = fbjs/lib/emptyFunction
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var EventEmitter = function () {
  function EventEmitter(subscriber) {
    babelHelpers.classCallCheck(this, EventEmitter);

    this._subscriber = subscriber || new EventSubscriptionVendor();
  }

  babelHelpers.createClass(EventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {

      return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      var _this = this;

      return this.addListener(eventType, function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this.removeCurrentListener();
        listener.apply(context, args);
      });
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._subscriber.removeAllSubscriptions(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');
      this.removeSubscription(this._currentSubscription);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');
      this._subscriber.removeSubscription(subscription);
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {
        return subscription.listener;
      }) : [];
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription) {
            this._currentSubscription = subscription;
            subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));
          }
        }
        this._currentSubscription = null;
      }
    }
  }, {
    key: 'removeListener',
    value: function removeListener(eventType, listener) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription && subscription.listener === listener) {
            subscription.remove();
          }
        }
      }
    }
  }]);
  return EventEmitter;
}();

module.exports = EventEmitter;
}, 442, null, "react-native-deprecated-custom-components/src/EventEmitter.js");
__d(/* react-native-deprecated-custom-components/src/EmitterSubscription.js */function(global, require, module, exports) {
'use strict';

var EventSubscription = require(444                  ); // 444 = ./EventSubscription

var EmitterSubscription = function (_EventSubscription) {
  babelHelpers.inherits(EmitterSubscription, _EventSubscription);

  function EmitterSubscription(emitter, subscriber, listener, context) {
    babelHelpers.classCallCheck(this, EmitterSubscription);

    var _this = babelHelpers.possibleConstructorReturn(this, (EmitterSubscription.__proto__ || Object.getPrototypeOf(EmitterSubscription)).call(this, subscriber));

    _this.emitter = emitter;
    _this.listener = listener;
    _this.context = context;
    return _this;
  }

  babelHelpers.createClass(EmitterSubscription, [{
    key: 'remove',
    value: function remove() {
      this.emitter.removeSubscription(this);
    }
  }]);
  return EmitterSubscription;
}(EventSubscription);

module.exports = EmitterSubscription;
}, 443, null, "react-native-deprecated-custom-components/src/EmitterSubscription.js");
__d(/* react-native-deprecated-custom-components/src/EventSubscription.js */function(global, require, module, exports) {
'use strict';

var EventSubscription = function () {
  function EventSubscription(subscriber) {
    babelHelpers.classCallCheck(this, EventSubscription);

    this.subscriber = subscriber;
  }

  babelHelpers.createClass(EventSubscription, [{
    key: 'remove',
    value: function remove() {
      this.subscriber.removeSubscription(this);
    }
  }]);
  return EventSubscription;
}();

module.exports = EventSubscription;
}, 444, null, "react-native-deprecated-custom-components/src/EventSubscription.js");
__d(/* react-native-deprecated-custom-components/src/EventSubscriptionVendor.js */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var EventSubscriptionVendor = function () {
  function EventSubscriptionVendor() {
    babelHelpers.classCallCheck(this, EventSubscriptionVendor);

    this._subscriptionsForType = {};
    this._currentSubscription = null;
  }

  babelHelpers.createClass(EventSubscriptionVendor, [{
    key: 'addSubscription',
    value: function addSubscription(eventType, subscription) {
      invariant(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');
      if (!this._subscriptionsForType[eventType]) {
        this._subscriptionsForType[eventType] = [];
      }
      var key = this._subscriptionsForType[eventType].length;
      this._subscriptionsForType[eventType].push(subscription);
      subscription.eventType = eventType;
      subscription.key = key;
      return subscription;
    }
  }, {
    key: 'removeAllSubscriptions',
    value: function removeAllSubscriptions(eventType) {
      if (eventType === undefined) {
        this._subscriptionsForType = {};
      } else {
        delete this._subscriptionsForType[eventType];
      }
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      var eventType = subscription.eventType;
      var key = subscription.key;

      var subscriptionsForType = this._subscriptionsForType[eventType];
      if (subscriptionsForType) {
        delete subscriptionsForType[key];
      }
    }
  }, {
    key: 'getSubscriptionsForType',
    value: function getSubscriptionsForType(eventType) {
      return this._subscriptionsForType[eventType];
    }
  }]);
  return EventSubscriptionVendor;
}();

module.exports = EventSubscriptionVendor;
}, 445, null, "react-native-deprecated-custom-components/src/EventSubscriptionVendor.js");
__d(/* react-native-deprecated-custom-components/src/NavigationTreeNode.js */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var immutable = require(447        ); // 447 = immutable

var List = immutable.List;

var NavigationTreeNode = function () {
  function NavigationTreeNode(value) {
    babelHelpers.classCallCheck(this, NavigationTreeNode);

    this.__parent = null;
    this._children = new List();
    this._value = value;
  }

  babelHelpers.createClass(NavigationTreeNode, [{
    key: 'getValue',
    value: function getValue() {
      return this._value;
    }
  }, {
    key: 'getParent',
    value: function getParent() {
      return this.__parent;
    }
  }, {
    key: 'getChildrenCount',
    value: function getChildrenCount() {
      return this._children.size;
    }
  }, {
    key: 'getChildAt',
    value: function getChildAt(index) {
      return index > -1 && index < this._children.size ? this._children.get(index) : null;
    }
  }, {
    key: 'appendChild',
    value: function appendChild(child) {
      if (child.__parent) {
        child.__parent.removeChild(child);
      }
      child.__parent = this;
      this._children = this._children.push(child);
    }
  }, {
    key: 'removeChild',
    value: function removeChild(child) {
      var index = this._children.indexOf(child);

      invariant(index > -1, 'The node to be removed is not a child of this node.');

      child.__parent = null;

      this._children = this._children.splice(index, 1);
    }
  }, {
    key: 'indexOf',
    value: function indexOf(child) {
      return this._children.indexOf(child);
    }
  }, {
    key: 'forEach',
    value: function forEach(callback, context) {
      this._children.forEach(callback, context);
    }
  }, {
    key: 'map',
    value: function map(callback, context) {
      return this._children.map(callback, context).toJS();
    }
  }, {
    key: 'some',
    value: function some(callback, context) {
      return this._children.some(callback, context);
    }
  }]);
  return NavigationTreeNode;
}();

module.exports = NavigationTreeNode;
}, 446, null, "react-native-deprecated-custom-components/src/NavigationTreeNode.js");
__d(/* immutable/dist/immutable.js */function(global, require, module, exports) {

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Immutable = factory();
})(this, function () {
  'use strict';
  var SLICE$0 = Array.prototype.slice;

  function createClass(ctor, superClass) {
    if (superClass) {
      ctor.prototype = Object.create(superClass.prototype);
    }
    ctor.prototype.constructor = ctor;
  }

  function Iterable(value) {
    return isIterable(value) ? value : Seq(value);
  }

  createClass(KeyedIterable, Iterable);
  function KeyedIterable(value) {
    return isKeyed(value) ? value : KeyedSeq(value);
  }

  createClass(IndexedIterable, Iterable);
  function IndexedIterable(value) {
    return isIndexed(value) ? value : IndexedSeq(value);
  }

  createClass(SetIterable, Iterable);
  function SetIterable(value) {
    return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
  }

  function isIterable(maybeIterable) {
    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
  }

  function isKeyed(maybeKeyed) {
    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
  }

  function isIndexed(maybeIndexed) {
    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
  }

  function isAssociative(maybeAssociative) {
    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
  }

  function isOrdered(maybeOrdered) {
    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
  }

  Iterable.isIterable = isIterable;
  Iterable.isKeyed = isKeyed;
  Iterable.isIndexed = isIndexed;
  Iterable.isAssociative = isAssociative;
  Iterable.isOrdered = isOrdered;

  Iterable.Keyed = KeyedIterable;
  Iterable.Indexed = IndexedIterable;
  Iterable.Set = SetIterable;

  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

  var DELETE = 'delete';

  var SHIFT = 5;
  var SIZE = 1 << SHIFT;
  var MASK = SIZE - 1;

  var NOT_SET = {};

  var CHANGE_LENGTH = { value: false };
  var DID_ALTER = { value: false };

  function MakeRef(ref) {
    ref.value = false;
    return ref;
  }

  function SetRef(ref) {
    ref && (ref.value = true);
  }

  function OwnerID() {}

  function arrCopy(arr, offset) {
    offset = offset || 0;
    var len = Math.max(0, arr.length - offset);
    var newArr = new Array(len);
    for (var ii = 0; ii < len; ii++) {
      newArr[ii] = arr[ii + offset];
    }
    return newArr;
  }

  function ensureSize(iter) {
    if (iter.size === undefined) {
      iter.size = iter.__iterate(returnTrue);
    }
    return iter.size;
  }

  function wrapIndex(iter, index) {
    if (typeof index !== 'number') {
      var uint32Index = index >>> 0;
      if ('' + uint32Index !== index || uint32Index === 4294967295) {
        return NaN;
      }
      index = uint32Index;
    }
    return index < 0 ? ensureSize(iter) + index : index;
  }

  function returnTrue() {
    return true;
  }

  function wholeSlice(begin, end, size) {
    return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);
  }

  function resolveBegin(begin, size) {
    return resolveIndex(begin, size, 0);
  }

  function resolveEnd(end, size) {
    return resolveIndex(end, size, size);
  }

  function resolveIndex(index, size, defaultIndex) {
    return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);
  }

  var ITERATE_KEYS = 0;
  var ITERATE_VALUES = 1;
  var ITERATE_ENTRIES = 2;

  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';

  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;

  function Iterator(next) {
    this.next = next;
  }

  Iterator.prototype.toString = function () {
    return '[Iterator]';
  };

  Iterator.KEYS = ITERATE_KEYS;
  Iterator.VALUES = ITERATE_VALUES;
  Iterator.ENTRIES = ITERATE_ENTRIES;

  Iterator.prototype.inspect = Iterator.prototype.toSource = function () {
    return this.toString();
  };
  Iterator.prototype[ITERATOR_SYMBOL] = function () {
    return this;
  };

  function iteratorValue(type, k, v, iteratorResult) {
    var value = type === 0 ? k : type === 1 ? v : [k, v];
    iteratorResult ? iteratorResult.value = value : iteratorResult = {
      value: value, done: false
    };
    return iteratorResult;
  }

  function iteratorDone() {
    return { value: undefined, done: true };
  }

  function hasIterator(maybeIterable) {
    return !!getIteratorFn(maybeIterable);
  }

  function isIterator(maybeIterator) {
    return maybeIterator && typeof maybeIterator.next === 'function';
  }

  function getIterator(iterable) {
    var iteratorFn = getIteratorFn(iterable);
    return iteratorFn && iteratorFn.call(iterable);
  }

  function getIteratorFn(iterable) {
    var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  function isArrayLike(value) {
    return value && typeof value.length === 'number';
  }

  createClass(Seq, Iterable);
  function Seq(value) {
    return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);
  }

  Seq.of = function () {
    return Seq(arguments);
  };

  Seq.prototype.toSeq = function () {
    return this;
  };

  Seq.prototype.toString = function () {
    return this.__toString('Seq {', '}');
  };

  Seq.prototype.cacheResult = function () {
    if (!this._cache && this.__iterateUncached) {
      this._cache = this.entrySeq().toArray();
      this.size = this._cache.length;
    }
    return this;
  };

  Seq.prototype.__iterate = function (fn, reverse) {
    return seqIterate(this, fn, reverse, true);
  };

  Seq.prototype.__iterator = function (type, reverse) {
    return seqIterator(this, type, reverse, true);
  };

  createClass(KeyedSeq, Seq);
  function KeyedSeq(value) {
    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);
  }

  KeyedSeq.prototype.toKeyedSeq = function () {
    return this;
  };

  createClass(IndexedSeq, Seq);
  function IndexedSeq(value) {
    return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
  }

  IndexedSeq.of = function () {
    return IndexedSeq(arguments);
  };

  IndexedSeq.prototype.toIndexedSeq = function () {
    return this;
  };

  IndexedSeq.prototype.toString = function () {
    return this.__toString('Seq [', ']');
  };

  IndexedSeq.prototype.__iterate = function (fn, reverse) {
    return seqIterate(this, fn, reverse, false);
  };

  IndexedSeq.prototype.__iterator = function (type, reverse) {
    return seqIterator(this, type, reverse, false);
  };

  createClass(SetSeq, Seq);
  function SetSeq(value) {
    return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();
  }

  SetSeq.of = function () {
    return SetSeq(arguments);
  };

  SetSeq.prototype.toSetSeq = function () {
    return this;
  };

  Seq.isSeq = isSeq;
  Seq.Keyed = KeyedSeq;
  Seq.Set = SetSeq;
  Seq.Indexed = IndexedSeq;

  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

  Seq.prototype[IS_SEQ_SENTINEL] = true;

  createClass(ArraySeq, IndexedSeq);
  function ArraySeq(array) {
    this._array = array;
    this.size = array.length;
  }

  ArraySeq.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
  };

  ArraySeq.prototype.__iterate = function (fn, reverse) {
    var array = this._array;
    var maxIndex = array.length - 1;
    for (var ii = 0; ii <= maxIndex; ii++) {
      if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  ArraySeq.prototype.__iterator = function (type, reverse) {
    var array = this._array;
    var maxIndex = array.length - 1;
    var ii = 0;
    return new Iterator(function () {
      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);
    });
  };

  createClass(ObjectSeq, KeyedSeq);
  function ObjectSeq(object) {
    var keys = Object.keys(object);
    this._object = object;
    this._keys = keys;
    this.size = keys.length;
  }

  ObjectSeq.prototype.get = function (key, notSetValue) {
    if (notSetValue !== undefined && !this.has(key)) {
      return notSetValue;
    }
    return this._object[key];
  };

  ObjectSeq.prototype.has = function (key) {
    return this._object.hasOwnProperty(key);
  };

  ObjectSeq.prototype.__iterate = function (fn, reverse) {
    var object = this._object;
    var keys = this._keys;
    var maxIndex = keys.length - 1;
    for (var ii = 0; ii <= maxIndex; ii++) {
      var key = keys[reverse ? maxIndex - ii : ii];
      if (fn(object[key], key, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  ObjectSeq.prototype.__iterator = function (type, reverse) {
    var object = this._object;
    var keys = this._keys;
    var maxIndex = keys.length - 1;
    var ii = 0;
    return new Iterator(function () {
      var key = keys[reverse ? maxIndex - ii : ii];
      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);
    });
  };

  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;

  createClass(IterableSeq, IndexedSeq);
  function IterableSeq(iterable) {
    this._iterable = iterable;
    this.size = iterable.length || iterable.size;
  }

  IterableSeq.prototype.__iterateUncached = function (fn, reverse) {
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var iterable = this._iterable;
    var iterator = getIterator(iterable);
    var iterations = 0;
    if (isIterator(iterator)) {
      var step;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
    }
    return iterations;
  };

  IterableSeq.prototype.__iteratorUncached = function (type, reverse) {
    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterable = this._iterable;
    var iterator = getIterator(iterable);
    if (!isIterator(iterator)) {
      return new Iterator(iteratorDone);
    }
    var iterations = 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, iterations++, step.value);
    });
  };

  createClass(IteratorSeq, IndexedSeq);
  function IteratorSeq(iterator) {
    this._iterator = iterator;
    this._iteratorCache = [];
  }

  IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var iterator = this._iterator;
    var cache = this._iteratorCache;
    var iterations = 0;
    while (iterations < cache.length) {
      if (fn(cache[iterations], iterations++, this) === false) {
        return iterations;
      }
    }
    var step;
    while (!(step = iterator.next()).done) {
      var val = step.value;
      cache[iterations] = val;
      if (fn(val, iterations++, this) === false) {
        break;
      }
    }
    return iterations;
  };

  IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {
    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterator = this._iterator;
    var cache = this._iteratorCache;
    var iterations = 0;
    return new Iterator(function () {
      if (iterations >= cache.length) {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        cache[iterations] = step.value;
      }
      return iteratorValue(type, iterations, cache[iterations++]);
    });
  };

  function isSeq(maybeSeq) {
    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
  }

  var EMPTY_SEQ;

  function emptySequence() {
    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
  }

  function keyedSeqFromValue(value) {
    var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === 'object' ? new ObjectSeq(value) : undefined;
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);
    }
    return seq;
  }

  function indexedSeqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value);
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of values: ' + value);
    }
    return seq;
  }

  function seqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value) || typeof value === 'object' && new ObjectSeq(value);
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);
    }
    return seq;
  }

  function maybeIndexedSeqFromValue(value) {
    return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;
  }

  function seqIterate(seq, fn, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        var entry = cache[reverse ? maxIndex - ii : ii];
        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
          return ii + 1;
        }
      }
      return ii;
    }
    return seq.__iterateUncached(fn, reverse);
  }

  function seqIterator(seq, type, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      var ii = 0;
      return new Iterator(function () {
        var entry = cache[reverse ? maxIndex - ii : ii];
        return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
      });
    }
    return seq.__iteratorUncached(type, reverse);
  }

  function fromJS(json, converter) {
    return converter ? fromJSWith(converter, json, '', { '': json }) : fromJSDefault(json);
  }

  function fromJSWith(converter, json, key, parentJSON) {
    if (Array.isArray(json)) {
      return converter.call(parentJSON, key, IndexedSeq(json).map(function (v, k) {
        return fromJSWith(converter, v, k, json);
      }));
    }
    if (isPlainObj(json)) {
      return converter.call(parentJSON, key, KeyedSeq(json).map(function (v, k) {
        return fromJSWith(converter, v, k, json);
      }));
    }
    return json;
  }

  function fromJSDefault(json) {
    if (Array.isArray(json)) {
      return IndexedSeq(json).map(fromJSDefault).toList();
    }
    if (isPlainObj(json)) {
      return KeyedSeq(json).map(fromJSDefault).toMap();
    }
    return json;
  }

  function isPlainObj(value) {
    return value && (value.constructor === Object || value.constructor === undefined);
  }

  function is(valueA, valueB) {
    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {
      return true;
    }
    if (!valueA || !valueB) {
      return false;
    }
    if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {
      valueA = valueA.valueOf();
      valueB = valueB.valueOf();
      if (valueA === valueB || valueA !== valueA && valueB !== valueB) {
        return true;
      }
      if (!valueA || !valueB) {
        return false;
      }
    }
    if (typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)) {
      return true;
    }
    return false;
  }

  function deepEqual(a, b) {
    if (a === b) {
      return true;
    }

    if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {
      return false;
    }

    if (a.size === 0 && b.size === 0) {
      return true;
    }

    var notAssociative = !isAssociative(a);

    if (isOrdered(a)) {
      var entries = a.entries();
      return b.every(function (v, k) {
        var entry = entries.next().value;
        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
      }) && entries.next().done;
    }

    var flipped = false;

    if (a.size === undefined) {
      if (b.size === undefined) {
        if (typeof a.cacheResult === 'function') {
          a.cacheResult();
        }
      } else {
        flipped = true;
        var _ = a;
        a = b;
        b = _;
      }
    }

    var allEqual = true;
    var bSize = b.__iterate(function (v, k) {
      if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
        allEqual = false;
        return false;
      }
    });

    return allEqual && a.size === bSize;
  }

  createClass(Repeat, IndexedSeq);

  function Repeat(value, times) {
    if (!(this instanceof Repeat)) {
      return new Repeat(value, times);
    }
    this._value = value;
    this.size = times === undefined ? Infinity : Math.max(0, times);
    if (this.size === 0) {
      if (EMPTY_REPEAT) {
        return EMPTY_REPEAT;
      }
      EMPTY_REPEAT = this;
    }
  }

  Repeat.prototype.toString = function () {
    if (this.size === 0) {
      return 'Repeat []';
    }
    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
  };

  Repeat.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._value : notSetValue;
  };

  Repeat.prototype.includes = function (searchValue) {
    return is(this._value, searchValue);
  };

  Repeat.prototype.slice = function (begin, end) {
    var size = this.size;
    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
  };

  Repeat.prototype.reverse = function () {
    return this;
  };

  Repeat.prototype.indexOf = function (searchValue) {
    if (is(this._value, searchValue)) {
      return 0;
    }
    return -1;
  };

  Repeat.prototype.lastIndexOf = function (searchValue) {
    if (is(this._value, searchValue)) {
      return this.size;
    }
    return -1;
  };

  Repeat.prototype.__iterate = function (fn, reverse) {
    for (var ii = 0; ii < this.size; ii++) {
      if (fn(this._value, ii, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  Repeat.prototype.__iterator = function (type, reverse) {
    var this$0 = this;
    var ii = 0;
    return new Iterator(function () {
      return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();
    });
  };

  Repeat.prototype.equals = function (other) {
    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);
  };

  var EMPTY_REPEAT;

  function invariant(condition, error) {
    if (!condition) throw new Error(error);
  }

  createClass(Range, IndexedSeq);

  function Range(start, end, step) {
    if (!(this instanceof Range)) {
      return new Range(start, end, step);
    }
    invariant(step !== 0, 'Cannot step a Range by 0');
    start = start || 0;
    if (end === undefined) {
      end = Infinity;
    }
    step = step === undefined ? 1 : Math.abs(step);
    if (end < start) {
      step = -step;
    }
    this._start = start;
    this._end = end;
    this._step = step;
    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
    if (this.size === 0) {
      if (EMPTY_RANGE) {
        return EMPTY_RANGE;
      }
      EMPTY_RANGE = this;
    }
  }

  Range.prototype.toString = function () {
    if (this.size === 0) {
      return 'Range []';
    }
    return 'Range [ ' + this._start + '...' + this._end + (this._step > 1 ? ' by ' + this._step : '') + ' ]';
  };

  Range.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;
  };

  Range.prototype.includes = function (searchValue) {
    var possibleIndex = (searchValue - this._start) / this._step;
    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);
  };

  Range.prototype.slice = function (begin, end) {
    if (wholeSlice(begin, end, this.size)) {
      return this;
    }
    begin = resolveBegin(begin, this.size);
    end = resolveEnd(end, this.size);
    if (end <= begin) {
      return new Range(0, 0);
    }
    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
  };

  Range.prototype.indexOf = function (searchValue) {
    var offsetValue = searchValue - this._start;
    if (offsetValue % this._step === 0) {
      var index = offsetValue / this._step;
      if (index >= 0 && index < this.size) {
        return index;
      }
    }
    return -1;
  };

  Range.prototype.lastIndexOf = function (searchValue) {
    return this.indexOf(searchValue);
  };

  Range.prototype.__iterate = function (fn, reverse) {
    var maxIndex = this.size - 1;
    var step = this._step;
    var value = reverse ? this._start + maxIndex * step : this._start;
    for (var ii = 0; ii <= maxIndex; ii++) {
      if (fn(value, ii, this) === false) {
        return ii + 1;
      }
      value += reverse ? -step : step;
    }
    return ii;
  };

  Range.prototype.__iterator = function (type, reverse) {
    var maxIndex = this.size - 1;
    var step = this._step;
    var value = reverse ? this._start + maxIndex * step : this._start;
    var ii = 0;
    return new Iterator(function () {
      var v = value;
      value += reverse ? -step : step;
      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
    });
  };

  Range.prototype.equals = function (other) {
    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);
  };

  var EMPTY_RANGE;

  createClass(Collection, Iterable);
  function Collection() {
    throw TypeError('Abstract');
  }

  createClass(KeyedCollection, Collection);function KeyedCollection() {}

  createClass(IndexedCollection, Collection);function IndexedCollection() {}

  createClass(SetCollection, Collection);function SetCollection() {}

  Collection.Keyed = KeyedCollection;
  Collection.Indexed = IndexedCollection;
  Collection.Set = SetCollection;

  var imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {
    a = a | 0;
    b = b | 0;
    var c = a & 0xffff;
    var d = b & 0xffff;

    return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0;
  };

  function smi(i32) {
    return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;
  }

  function hash(o) {
    if (o === false || o === null || o === undefined) {
      return 0;
    }
    if (typeof o.valueOf === 'function') {
      o = o.valueOf();
      if (o === false || o === null || o === undefined) {
        return 0;
      }
    }
    if (o === true) {
      return 1;
    }
    var type = typeof o;
    if (type === 'number') {
      var h = o | 0;
      if (h !== o) {
        h ^= o * 0xFFFFFFFF;
      }
      while (o > 0xFFFFFFFF) {
        o /= 0xFFFFFFFF;
        h ^= o;
      }
      return smi(h);
    }
    if (type === 'string') {
      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
    }
    if (typeof o.hashCode === 'function') {
      return o.hashCode();
    }
    if (type === 'object') {
      return hashJSObj(o);
    }
    if (typeof o.toString === 'function') {
      return hashString(o.toString());
    }
    throw new Error('Value type ' + type + ' cannot be hashed.');
  }

  function cachedHashString(string) {
    var hash = stringHashCache[string];
    if (hash === undefined) {
      hash = hashString(string);
      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
        STRING_HASH_CACHE_SIZE = 0;
        stringHashCache = {};
      }
      STRING_HASH_CACHE_SIZE++;
      stringHashCache[string] = hash;
    }
    return hash;
  }

  function hashString(string) {
    var hash = 0;
    for (var ii = 0; ii < string.length; ii++) {
      hash = 31 * hash + string.charCodeAt(ii) | 0;
    }
    return smi(hash);
  }

  function hashJSObj(obj) {
    var hash;
    if (usingWeakMap) {
      hash = weakMap.get(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = obj[UID_HASH_KEY];
    if (hash !== undefined) {
      return hash;
    }

    if (!canDefineProperty) {
      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
      if (hash !== undefined) {
        return hash;
      }

      hash = getIENodeHash(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = ++objHashUID;
    if (objHashUID & 0x40000000) {
      objHashUID = 0;
    }

    if (usingWeakMap) {
      weakMap.set(obj, hash);
    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
      throw new Error('Non-extensible objects are not allowed as keys.');
    } else if (canDefineProperty) {
      Object.defineProperty(obj, UID_HASH_KEY, {
        'enumerable': false,
        'configurable': false,
        'writable': false,
        'value': hash
      });
    } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
      obj.propertyIsEnumerable = function () {
        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
      };
      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
    } else if (obj.nodeType !== undefined) {
      obj[UID_HASH_KEY] = hash;
    } else {
      throw new Error('Unable to set a non-enumerable property on object.');
    }

    return hash;
  }

  var isExtensible = Object.isExtensible;

  var canDefineProperty = function () {
    try {
      Object.defineProperty({}, '@', {});
      return true;
    } catch (e) {
      return false;
    }
  }();

  function getIENodeHash(node) {
    if (node && node.nodeType > 0) {
      switch (node.nodeType) {
        case 1:
          return node.uniqueID;
        case 9:
          return node.documentElement && node.documentElement.uniqueID;
      }
    }
  }

  var usingWeakMap = typeof WeakMap === 'function';
  var weakMap;
  if (usingWeakMap) {
    weakMap = new WeakMap();
  }

  var objHashUID = 0;

  var UID_HASH_KEY = '__immutablehash__';
  if (typeof Symbol === 'function') {
    UID_HASH_KEY = Symbol(UID_HASH_KEY);
  }

  var STRING_HASH_CACHE_MIN_STRLEN = 16;
  var STRING_HASH_CACHE_MAX_SIZE = 255;
  var STRING_HASH_CACHE_SIZE = 0;
  var stringHashCache = {};

  function assertNotInfinite(size) {
    invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');
  }

  createClass(Map, KeyedCollection);

  function Map(value) {
    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {
      var iter = KeyedIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v, k) {
        return map.set(k, v);
      });
    });
  }

  Map.prototype.toString = function () {
    return this.__toString('Map {', '}');
  };

  Map.prototype.get = function (k, notSetValue) {
    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;
  };

  Map.prototype.set = function (k, v) {
    return updateMap(this, k, v);
  };

  Map.prototype.setIn = function (keyPath, v) {
    return this.updateIn(keyPath, NOT_SET, function () {
      return v;
    });
  };

  Map.prototype.remove = function (k) {
    return updateMap(this, k, NOT_SET);
  };

  Map.prototype.deleteIn = function (keyPath) {
    return this.updateIn(keyPath, function () {
      return NOT_SET;
    });
  };

  Map.prototype.update = function (k, notSetValue, updater) {
    return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);
  };

  Map.prototype.updateIn = function (keyPath, notSetValue, updater) {
    if (!updater) {
      updater = notSetValue;
      notSetValue = undefined;
    }
    var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);
    return updatedValue === NOT_SET ? undefined : updatedValue;
  };

  Map.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._root = null;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyMap();
  };

  Map.prototype.merge = function () {
    return mergeIntoMapWith(this, undefined, arguments);
  };

  Map.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoMapWith(this, merger, iters);
  };

  Map.prototype.mergeIn = function (keyPath) {
    var iters = SLICE$0.call(arguments, 1);
    return this.updateIn(keyPath, emptyMap(), function (m) {
      return typeof m.merge === 'function' ? m.merge.apply(m, iters) : iters[iters.length - 1];
    });
  };

  Map.prototype.mergeDeep = function () {
    return mergeIntoMapWith(this, deepMerger, arguments);
  };

  Map.prototype.mergeDeepWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoMapWith(this, deepMergerWith(merger), iters);
  };

  Map.prototype.mergeDeepIn = function (keyPath) {
    var iters = SLICE$0.call(arguments, 1);
    return this.updateIn(keyPath, emptyMap(), function (m) {
      return typeof m.mergeDeep === 'function' ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];
    });
  };

  Map.prototype.sort = function (comparator) {
    return OrderedMap(sortFactory(this, comparator));
  };

  Map.prototype.sortBy = function (mapper, comparator) {
    return OrderedMap(sortFactory(this, comparator, mapper));
  };

  Map.prototype.withMutations = function (fn) {
    var mutable = this.asMutable();
    fn(mutable);
    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
  };

  Map.prototype.asMutable = function () {
    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
  };

  Map.prototype.asImmutable = function () {
    return this.__ensureOwner();
  };

  Map.prototype.wasAltered = function () {
    return this.__altered;
  };

  Map.prototype.__iterator = function (type, reverse) {
    return new MapIterator(this, type, reverse);
  };

  Map.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var iterations = 0;
    this._root && this._root.iterate(function (entry) {
      iterations++;
      return fn(entry[1], entry[0], this$0);
    }, reverse);
    return iterations;
  };

  Map.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeMap(this.size, this._root, ownerID, this.__hash);
  };

  function isMap(maybeMap) {
    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
  }

  Map.isMap = isMap;

  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

  var MapPrototype = Map.prototype;
  MapPrototype[IS_MAP_SENTINEL] = true;
  MapPrototype[DELETE] = MapPrototype.remove;
  MapPrototype.removeIn = MapPrototype.deleteIn;

  function ArrayMapNode(ownerID, entries) {
    this.ownerID = ownerID;
    this.entries = entries;
  }

  ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    var entries = this.entries;
    for (var ii = 0, len = entries.length; ii < len; ii++) {
      if (is(key, entries[ii][0])) {
        return entries[ii][1];
      }
    }
    return notSetValue;
  };

  ArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    var removed = value === NOT_SET;

    var entries = this.entries;
    var idx = 0;
    for (var len = entries.length; idx < len; idx++) {
      if (is(key, entries[idx][0])) {
        break;
      }
    }
    var exists = idx < len;

    if (exists ? entries[idx][1] === value : removed) {
      return this;
    }

    SetRef(didAlter);
    (removed || !exists) && SetRef(didChangeSize);

    if (removed && entries.length === 1) {
      return;
    }

    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
      return createNodes(ownerID, entries, key, value);
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newEntries = isEditable ? entries : arrCopy(entries);

    if (exists) {
      if (removed) {
        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();
      } else {
        newEntries[idx] = [key, value];
      }
    } else {
      newEntries.push([key, value]);
    }

    if (isEditable) {
      this.entries = newEntries;
      return this;
    }

    return new ArrayMapNode(ownerID, newEntries);
  };

  function BitmapIndexedNode(ownerID, bitmap, nodes) {
    this.ownerID = ownerID;
    this.bitmap = bitmap;
    this.nodes = nodes;
  }

  BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);
    var bitmap = this.bitmap;
    return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);
  };

  BitmapIndexedNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var bit = 1 << keyHashFrag;
    var bitmap = this.bitmap;
    var exists = (bitmap & bit) !== 0;

    if (!exists && value === NOT_SET) {
      return this;
    }

    var idx = popCount(bitmap & bit - 1);
    var nodes = this.nodes;
    var node = exists ? nodes[idx] : undefined;
    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

    if (newNode === node) {
      return this;
    }

    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
    }

    if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
      return nodes[idx ^ 1];
    }

    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
      return newNode;
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
    var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);

    if (isEditable) {
      this.bitmap = newBitmap;
      this.nodes = newNodes;
      return this;
    }

    return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
  };

  function HashArrayMapNode(ownerID, count, nodes) {
    this.ownerID = ownerID;
    this.count = count;
    this.nodes = nodes;
  }

  HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var node = this.nodes[idx];
    return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
  };

  HashArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var removed = value === NOT_SET;
    var nodes = this.nodes;
    var node = nodes[idx];

    if (removed && !node) {
      return this;
    }

    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
    if (newNode === node) {
      return this;
    }

    var newCount = this.count;
    if (!node) {
      newCount++;
    } else if (!newNode) {
      newCount--;
      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
        return packNodes(ownerID, nodes, newCount, idx);
      }
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newNodes = setIn(nodes, idx, newNode, isEditable);

    if (isEditable) {
      this.count = newCount;
      this.nodes = newNodes;
      return this;
    }

    return new HashArrayMapNode(ownerID, newCount, newNodes);
  };

  function HashCollisionNode(ownerID, keyHash, entries) {
    this.ownerID = ownerID;
    this.keyHash = keyHash;
    this.entries = entries;
  }

  HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    var entries = this.entries;
    for (var ii = 0, len = entries.length; ii < len; ii++) {
      if (is(key, entries[ii][0])) {
        return entries[ii][1];
      }
    }
    return notSetValue;
  };

  HashCollisionNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }

    var removed = value === NOT_SET;

    if (keyHash !== this.keyHash) {
      if (removed) {
        return this;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
    }

    var entries = this.entries;
    var idx = 0;
    for (var len = entries.length; idx < len; idx++) {
      if (is(key, entries[idx][0])) {
        break;
      }
    }
    var exists = idx < len;

    if (exists ? entries[idx][1] === value : removed) {
      return this;
    }

    SetRef(didAlter);
    (removed || !exists) && SetRef(didChangeSize);

    if (removed && len === 2) {
      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newEntries = isEditable ? entries : arrCopy(entries);

    if (exists) {
      if (removed) {
        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();
      } else {
        newEntries[idx] = [key, value];
      }
    } else {
      newEntries.push([key, value]);
    }

    if (isEditable) {
      this.entries = newEntries;
      return this;
    }

    return new HashCollisionNode(ownerID, this.keyHash, newEntries);
  };

  function ValueNode(ownerID, keyHash, entry) {
    this.ownerID = ownerID;
    this.keyHash = keyHash;
    this.entry = entry;
  }

  ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
  };

  ValueNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    var removed = value === NOT_SET;
    var keyMatch = is(key, this.entry[0]);
    if (keyMatch ? value === this.entry[1] : removed) {
      return this;
    }

    SetRef(didAlter);

    if (removed) {
      SetRef(didChangeSize);
      return;
    }

    if (keyMatch) {
      if (ownerID && ownerID === this.ownerID) {
        this.entry[1] = value;
        return this;
      }
      return new ValueNode(ownerID, this.keyHash, [key, value]);
    }

    SetRef(didChangeSize);
    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
  };

  ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {
    var entries = this.entries;
    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
        return false;
      }
    }
  };

  BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {
    var nodes = this.nodes;
    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
      var node = nodes[reverse ? maxIndex - ii : ii];
      if (node && node.iterate(fn, reverse) === false) {
        return false;
      }
    }
  };

  ValueNode.prototype.iterate = function (fn, reverse) {
    return fn(this.entry);
  };

  createClass(MapIterator, Iterator);

  function MapIterator(map, type, reverse) {
    this._type = type;
    this._reverse = reverse;
    this._stack = map._root && mapIteratorFrame(map._root);
  }

  MapIterator.prototype.next = function () {
    var type = this._type;
    var stack = this._stack;
    while (stack) {
      var node = stack.node;
      var index = stack.index++;
      var maxIndex;
      if (node.entry) {
        if (index === 0) {
          return mapIteratorValue(type, node.entry);
        }
      } else if (node.entries) {
        maxIndex = node.entries.length - 1;
        if (index <= maxIndex) {
          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
        }
      } else {
        maxIndex = node.nodes.length - 1;
        if (index <= maxIndex) {
          var subNode = node.nodes[this._reverse ? maxIndex - index : index];
          if (subNode) {
            if (subNode.entry) {
              return mapIteratorValue(type, subNode.entry);
            }
            stack = this._stack = mapIteratorFrame(subNode, stack);
          }
          continue;
        }
      }
      stack = this._stack = this._stack.__prev;
    }
    return iteratorDone();
  };

  function mapIteratorValue(type, entry) {
    return iteratorValue(type, entry[0], entry[1]);
  }

  function mapIteratorFrame(node, prev) {
    return {
      node: node,
      index: 0,
      __prev: prev
    };
  }

  function makeMap(size, root, ownerID, hash) {
    var map = Object.create(MapPrototype);
    map.size = size;
    map._root = root;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_MAP;
  function emptyMap() {
    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
  }

  function updateMap(map, k, v) {
    var newRoot;
    var newSize;
    if (!map._root) {
      if (v === NOT_SET) {
        return map;
      }
      newSize = 1;
      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
    } else {
      var didChangeSize = MakeRef(CHANGE_LENGTH);
      var didAlter = MakeRef(DID_ALTER);
      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
      if (!didAlter.value) {
        return map;
      }
      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
    }
    if (map.__ownerID) {
      map.size = newSize;
      map._root = newRoot;
      map.__hash = undefined;
      map.__altered = true;
      return map;
    }
    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
  }

  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (!node) {
      if (value === NOT_SET) {
        return node;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return new ValueNode(ownerID, keyHash, [key, value]);
    }
    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
  }

  function isLeafNode(node) {
    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
  }

  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
    if (node.keyHash === keyHash) {
      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
    }

    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

    var newNode;
    var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);

    return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);
  }

  function createNodes(ownerID, entries, key, value) {
    if (!ownerID) {
      ownerID = new OwnerID();
    }
    var node = new ValueNode(ownerID, hash(key), [key, value]);
    for (var ii = 0; ii < entries.length; ii++) {
      var entry = entries[ii];
      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
    }
    return node;
  }

  function packNodes(ownerID, nodes, count, excluding) {
    var bitmap = 0;
    var packedII = 0;
    var packedNodes = new Array(count);
    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
      var node = nodes[ii];
      if (node !== undefined && ii !== excluding) {
        bitmap |= bit;
        packedNodes[packedII++] = node;
      }
    }
    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
  }

  function expandNodes(ownerID, nodes, bitmap, including, node) {
    var count = 0;
    var expandedNodes = new Array(SIZE);
    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
    }
    expandedNodes[including] = node;
    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
  }

  function mergeIntoMapWith(map, merger, iterables) {
    var iters = [];
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = KeyedIterable(value);
      if (!isIterable(value)) {
        iter = iter.map(function (v) {
          return fromJS(v);
        });
      }
      iters.push(iter);
    }
    return mergeIntoCollectionWith(map, merger, iters);
  }

  function deepMerger(existing, value, key) {
    return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;
  }

  function deepMergerWith(merger) {
    return function (existing, value, key) {
      if (existing && existing.mergeDeepWith && isIterable(value)) {
        return existing.mergeDeepWith(merger, value);
      }
      var nextValue = merger(existing, value, key);
      return is(existing, nextValue) ? existing : nextValue;
    };
  }

  function mergeIntoCollectionWith(collection, merger, iters) {
    iters = iters.filter(function (x) {
      return x.size !== 0;
    });
    if (iters.length === 0) {
      return collection;
    }
    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
      return collection.constructor(iters[0]);
    }
    return collection.withMutations(function (collection) {
      var mergeIntoMap = merger ? function (value, key) {
        collection.update(key, NOT_SET, function (existing) {
          return existing === NOT_SET ? value : merger(existing, value, key);
        });
      } : function (value, key) {
        collection.set(key, value);
      };
      for (var ii = 0; ii < iters.length; ii++) {
        iters[ii].forEach(mergeIntoMap);
      }
    });
  }

  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
    var isNotSet = existing === NOT_SET;
    var step = keyPathIter.next();
    if (step.done) {
      var existingValue = isNotSet ? notSetValue : existing;
      var newValue = updater(existingValue);
      return newValue === existingValue ? existing : newValue;
    }
    invariant(isNotSet || existing && existing.set, 'invalid keyPath');
    var key = step.value;
    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
    var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);
    return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
  }

  function popCount(x) {
    x = x - (x >> 1 & 0x55555555);
    x = (x & 0x33333333) + (x >> 2 & 0x33333333);
    x = x + (x >> 4) & 0x0f0f0f0f;
    x = x + (x >> 8);
    x = x + (x >> 16);
    return x & 0x7f;
  }

  function setIn(array, idx, val, canEdit) {
    var newArray = canEdit ? array : arrCopy(array);
    newArray[idx] = val;
    return newArray;
  }

  function spliceIn(array, idx, val, canEdit) {
    var newLen = array.length + 1;
    if (canEdit && idx + 1 === newLen) {
      array[idx] = val;
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        newArray[ii] = val;
        after = -1;
      } else {
        newArray[ii] = array[ii + after];
      }
    }
    return newArray;
  }

  function spliceOut(array, idx, canEdit) {
    var newLen = array.length - 1;
    if (canEdit && idx === newLen) {
      array.pop();
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        after = 1;
      }
      newArray[ii] = array[ii + after];
    }
    return newArray;
  }

  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

  createClass(List, IndexedCollection);

  function List(value) {
    var empty = emptyList();
    if (value === null || value === undefined) {
      return empty;
    }
    if (isList(value)) {
      return value;
    }
    var iter = IndexedIterable(value);
    var size = iter.size;
    if (size === 0) {
      return empty;
    }
    assertNotInfinite(size);
    if (size > 0 && size < SIZE) {
      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
    }
    return empty.withMutations(function (list) {
      list.setSize(size);
      iter.forEach(function (v, i) {
        return list.set(i, v);
      });
    });
  }

  List.of = function () {
    return this(arguments);
  };

  List.prototype.toString = function () {
    return this.__toString('List [', ']');
  };

  List.prototype.get = function (index, notSetValue) {
    index = wrapIndex(this, index);
    if (index >= 0 && index < this.size) {
      index += this._origin;
      var node = listNodeFor(this, index);
      return node && node.array[index & MASK];
    }
    return notSetValue;
  };

  List.prototype.set = function (index, value) {
    return updateList(this, index, value);
  };

  List.prototype.remove = function (index) {
    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);
  };

  List.prototype.insert = function (index, value) {
    return this.splice(index, 0, value);
  };

  List.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = this._origin = this._capacity = 0;
      this._level = SHIFT;
      this._root = this._tail = null;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyList();
  };

  List.prototype.push = function () {
    var values = arguments;
    var oldSize = this.size;
    return this.withMutations(function (list) {
      setListBounds(list, 0, oldSize + values.length);
      for (var ii = 0; ii < values.length; ii++) {
        list.set(oldSize + ii, values[ii]);
      }
    });
  };

  List.prototype.pop = function () {
    return setListBounds(this, 0, -1);
  };

  List.prototype.unshift = function () {
    var values = arguments;
    return this.withMutations(function (list) {
      setListBounds(list, -values.length);
      for (var ii = 0; ii < values.length; ii++) {
        list.set(ii, values[ii]);
      }
    });
  };

  List.prototype.shift = function () {
    return setListBounds(this, 1);
  };

  List.prototype.merge = function () {
    return mergeIntoListWith(this, undefined, arguments);
  };

  List.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoListWith(this, merger, iters);
  };

  List.prototype.mergeDeep = function () {
    return mergeIntoListWith(this, deepMerger, arguments);
  };

  List.prototype.mergeDeepWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoListWith(this, deepMergerWith(merger), iters);
  };

  List.prototype.setSize = function (size) {
    return setListBounds(this, 0, size);
  };

  List.prototype.slice = function (begin, end) {
    var size = this.size;
    if (wholeSlice(begin, end, size)) {
      return this;
    }
    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));
  };

  List.prototype.__iterator = function (type, reverse) {
    var index = 0;
    var values = iterateList(this, reverse);
    return new Iterator(function () {
      var value = values();
      return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);
    });
  };

  List.prototype.__iterate = function (fn, reverse) {
    var index = 0;
    var values = iterateList(this, reverse);
    var value;
    while ((value = values()) !== DONE) {
      if (fn(value, index++, this) === false) {
        break;
      }
    }
    return index;
  };

  List.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      return this;
    }
    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
  };

  function isList(maybeList) {
    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
  }

  List.isList = isList;

  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

  var ListPrototype = List.prototype;
  ListPrototype[IS_LIST_SENTINEL] = true;
  ListPrototype[DELETE] = ListPrototype.remove;
  ListPrototype.setIn = MapPrototype.setIn;
  ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;
  ListPrototype.update = MapPrototype.update;
  ListPrototype.updateIn = MapPrototype.updateIn;
  ListPrototype.mergeIn = MapPrototype.mergeIn;
  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  ListPrototype.withMutations = MapPrototype.withMutations;
  ListPrototype.asMutable = MapPrototype.asMutable;
  ListPrototype.asImmutable = MapPrototype.asImmutable;
  ListPrototype.wasAltered = MapPrototype.wasAltered;

  function VNode(array, ownerID) {
    this.array = array;
    this.ownerID = ownerID;
  }

  VNode.prototype.removeBefore = function (ownerID, level, index) {
    if (index === level ? 1 << level : 0 || this.array.length === 0) {
      return this;
    }
    var originIndex = index >>> level & MASK;
    if (originIndex >= this.array.length) {
      return new VNode([], ownerID);
    }
    var removingFirst = originIndex === 0;
    var newChild;
    if (level > 0) {
      var oldChild = this.array[originIndex];
      newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
      if (newChild === oldChild && removingFirst) {
        return this;
      }
    }
    if (removingFirst && !newChild) {
      return this;
    }
    var editable = editableVNode(this, ownerID);
    if (!removingFirst) {
      for (var ii = 0; ii < originIndex; ii++) {
        editable.array[ii] = undefined;
      }
    }
    if (newChild) {
      editable.array[originIndex] = newChild;
    }
    return editable;
  };

  VNode.prototype.removeAfter = function (ownerID, level, index) {
    if (index === (level ? 1 << level : 0) || this.array.length === 0) {
      return this;
    }
    var sizeIndex = index - 1 >>> level & MASK;
    if (sizeIndex >= this.array.length) {
      return this;
    }

    var newChild;
    if (level > 0) {
      var oldChild = this.array[sizeIndex];
      newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
      if (newChild === oldChild && sizeIndex === this.array.length - 1) {
        return this;
      }
    }

    var editable = editableVNode(this, ownerID);
    editable.array.splice(sizeIndex + 1);
    if (newChild) {
      editable.array[sizeIndex] = newChild;
    }
    return editable;
  };

  var DONE = {};

  function iterateList(list, reverse) {
    var left = list._origin;
    var right = list._capacity;
    var tailPos = getTailOffset(right);
    var tail = list._tail;

    return iterateNodeOrLeaf(list._root, list._level, 0);

    function iterateNodeOrLeaf(node, level, offset) {
      return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);
    }

    function iterateLeaf(node, offset) {
      var array = offset === tailPos ? tail && tail.array : node && node.array;
      var from = offset > left ? 0 : left - offset;
      var to = right - offset;
      if (to > SIZE) {
        to = SIZE;
      }
      return function () {
        if (from === to) {
          return DONE;
        }
        var idx = reverse ? --to : from++;
        return array && array[idx];
      };
    }

    function iterateNode(node, level, offset) {
      var values;
      var array = node && node.array;
      var from = offset > left ? 0 : left - offset >> level;
      var to = (right - offset >> level) + 1;
      if (to > SIZE) {
        to = SIZE;
      }
      return function () {
        do {
          if (values) {
            var value = values();
            if (value !== DONE) {
              return value;
            }
            values = null;
          }
          if (from === to) {
            return DONE;
          }
          var idx = reverse ? --to : from++;
          values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));
        } while (true);
      };
    }
  }

  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
    var list = Object.create(ListPrototype);
    list.size = capacity - origin;
    list._origin = origin;
    list._capacity = capacity;
    list._level = level;
    list._root = root;
    list._tail = tail;
    list.__ownerID = ownerID;
    list.__hash = hash;
    list.__altered = false;
    return list;
  }

  var EMPTY_LIST;
  function emptyList() {
    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
  }

  function updateList(list, index, value) {
    index = wrapIndex(list, index);

    if (index !== index) {
      return list;
    }

    if (index >= list.size || index < 0) {
      return list.withMutations(function (list) {
        index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);
      });
    }

    index += list._origin;

    var newTail = list._tail;
    var newRoot = list._root;
    var didAlter = MakeRef(DID_ALTER);
    if (index >= getTailOffset(list._capacity)) {
      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
    } else {
      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
    }

    if (!didAlter.value) {
      return list;
    }

    if (list.__ownerID) {
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
  }

  function updateVNode(node, ownerID, level, index, value, didAlter) {
    var idx = index >>> level & MASK;
    var nodeHas = node && idx < node.array.length;
    if (!nodeHas && value === undefined) {
      return node;
    }

    var newNode;

    if (level > 0) {
      var lowerNode = node && node.array[idx];
      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
      if (newLowerNode === lowerNode) {
        return node;
      }
      newNode = editableVNode(node, ownerID);
      newNode.array[idx] = newLowerNode;
      return newNode;
    }

    if (nodeHas && node.array[idx] === value) {
      return node;
    }

    SetRef(didAlter);

    newNode = editableVNode(node, ownerID);
    if (value === undefined && idx === newNode.array.length - 1) {
      newNode.array.pop();
    } else {
      newNode.array[idx] = value;
    }
    return newNode;
  }

  function editableVNode(node, ownerID) {
    if (ownerID && node && ownerID === node.ownerID) {
      return node;
    }
    return new VNode(node ? node.array.slice() : [], ownerID);
  }

  function listNodeFor(list, rawIndex) {
    if (rawIndex >= getTailOffset(list._capacity)) {
      return list._tail;
    }
    if (rawIndex < 1 << list._level + SHIFT) {
      var node = list._root;
      var level = list._level;
      while (node && level > 0) {
        node = node.array[rawIndex >>> level & MASK];
        level -= SHIFT;
      }
      return node;
    }
  }

  function setListBounds(list, begin, end) {
    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      end = end | 0;
    }
    var owner = list.__ownerID || new OwnerID();
    var oldOrigin = list._origin;
    var oldCapacity = list._capacity;
    var newOrigin = oldOrigin + begin;
    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
      return list;
    }

    if (newOrigin >= newCapacity) {
      return list.clear();
    }

    var newLevel = list._level;
    var newRoot = list._root;

    var offsetShift = 0;
    while (newOrigin + offsetShift < 0) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
      newLevel += SHIFT;
      offsetShift += 1 << newLevel;
    }
    if (offsetShift) {
      newOrigin += offsetShift;
      oldOrigin += offsetShift;
      newCapacity += offsetShift;
      oldCapacity += offsetShift;
    }

    var oldTailOffset = getTailOffset(oldCapacity);
    var newTailOffset = getTailOffset(newCapacity);

    while (newTailOffset >= 1 << newLevel + SHIFT) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
      newLevel += SHIFT;
    }

    var oldTail = list._tail;
    var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
      newRoot = editableVNode(newRoot, owner);
      var node = newRoot;
      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
        var idx = oldTailOffset >>> level & MASK;
        node = node.array[idx] = editableVNode(node.array[idx], owner);
      }
      node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;
    }

    if (newCapacity < oldCapacity) {
      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
    }

    if (newOrigin >= newTailOffset) {
      newOrigin -= newTailOffset;
      newCapacity -= newTailOffset;
      newLevel = SHIFT;
      newRoot = null;
      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);
    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
      offsetShift = 0;

      while (newRoot) {
        var beginIndex = newOrigin >>> newLevel & MASK;
        if (beginIndex !== newTailOffset >>> newLevel & MASK) {
          break;
        }
        if (beginIndex) {
          offsetShift += (1 << newLevel) * beginIndex;
        }
        newLevel -= SHIFT;
        newRoot = newRoot.array[beginIndex];
      }

      if (newRoot && newOrigin > oldOrigin) {
        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
      }
      if (newRoot && newTailOffset < oldTailOffset) {
        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
      }
      if (offsetShift) {
        newOrigin -= offsetShift;
        newCapacity -= offsetShift;
      }
    }

    if (list.__ownerID) {
      list.size = newCapacity - newOrigin;
      list._origin = newOrigin;
      list._capacity = newCapacity;
      list._level = newLevel;
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
  }

  function mergeIntoListWith(list, merger, iterables) {
    var iters = [];
    var maxSize = 0;
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = IndexedIterable(value);
      if (iter.size > maxSize) {
        maxSize = iter.size;
      }
      if (!isIterable(value)) {
        iter = iter.map(function (v) {
          return fromJS(v);
        });
      }
      iters.push(iter);
    }
    if (maxSize > list.size) {
      list = list.setSize(maxSize);
    }
    return mergeIntoCollectionWith(list, merger, iters);
  }

  function getTailOffset(size) {
    return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;
  }

  createClass(OrderedMap, Map);

  function OrderedMap(value) {
    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {
      var iter = KeyedIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v, k) {
        return map.set(k, v);
      });
    });
  }

  OrderedMap.of = function () {
    return this(arguments);
  };

  OrderedMap.prototype.toString = function () {
    return this.__toString('OrderedMap {', '}');
  };

  OrderedMap.prototype.get = function (k, notSetValue) {
    var index = this._map.get(k);
    return index !== undefined ? this._list.get(index)[1] : notSetValue;
  };

  OrderedMap.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._map.clear();
      this._list.clear();
      return this;
    }
    return emptyOrderedMap();
  };

  OrderedMap.prototype.set = function (k, v) {
    return updateOrderedMap(this, k, v);
  };

  OrderedMap.prototype.remove = function (k) {
    return updateOrderedMap(this, k, NOT_SET);
  };

  OrderedMap.prototype.wasAltered = function () {
    return this._map.wasAltered() || this._list.wasAltered();
  };

  OrderedMap.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._list.__iterate(function (entry) {
      return entry && fn(entry[1], entry[0], this$0);
    }, reverse);
  };

  OrderedMap.prototype.__iterator = function (type, reverse) {
    return this._list.fromEntrySeq().__iterator(type, reverse);
  };

  OrderedMap.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map.__ensureOwner(ownerID);
    var newList = this._list.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      this._list = newList;
      return this;
    }
    return makeOrderedMap(newMap, newList, ownerID, this.__hash);
  };

  function isOrderedMap(maybeOrderedMap) {
    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
  }

  OrderedMap.isOrderedMap = isOrderedMap;

  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;

  function makeOrderedMap(map, list, ownerID, hash) {
    var omap = Object.create(OrderedMap.prototype);
    omap.size = map ? map.size : 0;
    omap._map = map;
    omap._list = list;
    omap.__ownerID = ownerID;
    omap.__hash = hash;
    return omap;
  }

  var EMPTY_ORDERED_MAP;
  function emptyOrderedMap() {
    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
  }

  function updateOrderedMap(omap, k, v) {
    var map = omap._map;
    var list = omap._list;
    var i = map.get(k);
    var has = i !== undefined;
    var newMap;
    var newList;
    if (v === NOT_SET) {
      if (!has) {
        return omap;
      }
      if (list.size >= SIZE && list.size >= map.size * 2) {
        newList = list.filter(function (entry, idx) {
          return entry !== undefined && i !== idx;
        });
        newMap = newList.toKeyedSeq().map(function (entry) {
          return entry[0];
        }).flip().toMap();
        if (omap.__ownerID) {
          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
        }
      } else {
        newMap = map.remove(k);
        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
      }
    } else {
      if (has) {
        if (v === list.get(i)[1]) {
          return omap;
        }
        newMap = map;
        newList = list.set(i, [k, v]);
      } else {
        newMap = map.set(k, list.size);
        newList = list.set(list.size, [k, v]);
      }
    }
    if (omap.__ownerID) {
      omap.size = newMap.size;
      omap._map = newMap;
      omap._list = newList;
      omap.__hash = undefined;
      return omap;
    }
    return makeOrderedMap(newMap, newList);
  }

  createClass(ToKeyedSequence, KeyedSeq);
  function ToKeyedSequence(indexed, useKeys) {
    this._iter = indexed;
    this._useKeys = useKeys;
    this.size = indexed.size;
  }

  ToKeyedSequence.prototype.get = function (key, notSetValue) {
    return this._iter.get(key, notSetValue);
  };

  ToKeyedSequence.prototype.has = function (key) {
    return this._iter.has(key);
  };

  ToKeyedSequence.prototype.valueSeq = function () {
    return this._iter.valueSeq();
  };

  ToKeyedSequence.prototype.reverse = function () {
    var this$0 = this;
    var reversedSequence = reverseFactory(this, true);
    if (!this._useKeys) {
      reversedSequence.valueSeq = function () {
        return this$0._iter.toSeq().reverse();
      };
    }
    return reversedSequence;
  };

  ToKeyedSequence.prototype.map = function (mapper, context) {
    var this$0 = this;
    var mappedSequence = mapFactory(this, mapper, context);
    if (!this._useKeys) {
      mappedSequence.valueSeq = function () {
        return this$0._iter.toSeq().map(mapper, context);
      };
    }
    return mappedSequence;
  };

  ToKeyedSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var ii;
    return this._iter.__iterate(this._useKeys ? function (v, k) {
      return fn(v, k, this$0);
    } : (ii = reverse ? resolveSize(this) : 0, function (v) {
      return fn(v, reverse ? --ii : ii++, this$0);
    }), reverse);
  };

  ToKeyedSequence.prototype.__iterator = function (type, reverse) {
    if (this._useKeys) {
      return this._iter.__iterator(type, reverse);
    }
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    var ii = reverse ? resolveSize(this) : 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);
    });
  };

  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;

  createClass(ToIndexedSequence, IndexedSeq);
  function ToIndexedSequence(iter) {
    this._iter = iter;
    this.size = iter.size;
  }

  ToIndexedSequence.prototype.includes = function (value) {
    return this._iter.includes(value);
  };

  ToIndexedSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var iterations = 0;
    return this._iter.__iterate(function (v) {
      return fn(v, iterations++, this$0);
    }, reverse);
  };

  ToIndexedSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    var iterations = 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, iterations++, step.value, step);
    });
  };

  createClass(ToSetSequence, SetSeq);
  function ToSetSequence(iter) {
    this._iter = iter;
    this.size = iter.size;
  }

  ToSetSequence.prototype.has = function (key) {
    return this._iter.includes(key);
  };

  ToSetSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._iter.__iterate(function (v) {
      return fn(v, v, this$0);
    }, reverse);
  };

  ToSetSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, step.value, step.value, step);
    });
  };

  createClass(FromEntriesSequence, KeyedSeq);
  function FromEntriesSequence(entries) {
    this._iter = entries;
    this.size = entries.size;
  }

  FromEntriesSequence.prototype.entrySeq = function () {
    return this._iter.toSeq();
  };

  FromEntriesSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._iter.__iterate(function (entry) {
      if (entry) {
        validateEntry(entry);
        var indexedIterable = isIterable(entry);
        return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);
      }
    }, reverse);
  };

  FromEntriesSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    return new Iterator(function () {
      while (true) {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;

        if (entry) {
          validateEntry(entry);
          var indexedIterable = isIterable(entry);
          return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);
        }
      }
    });
  };

  ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;

  function flipFactory(iterable) {
    var flipSequence = makeSequence(iterable);
    flipSequence._iter = iterable;
    flipSequence.size = iterable.size;
    flipSequence.flip = function () {
      return iterable;
    };
    flipSequence.reverse = function () {
      var reversedSequence = iterable.reverse.apply(this);
      reversedSequence.flip = function () {
        return iterable.reverse();
      };
      return reversedSequence;
    };
    flipSequence.has = function (key) {
      return iterable.includes(key);
    };
    flipSequence.includes = function (key) {
      return iterable.has(key);
    };
    flipSequence.cacheResult = cacheResultThrough;
    flipSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k) {
        return fn(k, v, this$0) !== false;
      }, reverse);
    };
    flipSequence.__iteratorUncached = function (type, reverse) {
      if (type === ITERATE_ENTRIES) {
        var iterator = iterable.__iterator(type, reverse);
        return new Iterator(function () {
          var step = iterator.next();
          if (!step.done) {
            var k = step.value[0];
            step.value[0] = step.value[1];
            step.value[1] = k;
          }
          return step;
        });
      }
      return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);
    };
    return flipSequence;
  }

  function mapFactory(iterable, mapper, context) {
    var mappedSequence = makeSequence(iterable);
    mappedSequence.size = iterable.size;
    mappedSequence.has = function (key) {
      return iterable.has(key);
    };
    mappedSequence.get = function (key, notSetValue) {
      var v = iterable.get(key, NOT_SET);
      return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);
    };
    mappedSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k, c) {
        return fn(mapper.call(context, v, k, c), k, this$0) !== false;
      }, reverse);
    };
    mappedSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      return new Iterator(function () {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var key = entry[0];
        return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);
      });
    };
    return mappedSequence;
  }

  function reverseFactory(iterable, useKeys) {
    var reversedSequence = makeSequence(iterable);
    reversedSequence._iter = iterable;
    reversedSequence.size = iterable.size;
    reversedSequence.reverse = function () {
      return iterable;
    };
    if (iterable.flip) {
      reversedSequence.flip = function () {
        var flipSequence = flipFactory(iterable);
        flipSequence.reverse = function () {
          return iterable.flip();
        };
        return flipSequence;
      };
    }
    reversedSequence.get = function (key, notSetValue) {
      return iterable.get(useKeys ? key : -1 - key, notSetValue);
    };
    reversedSequence.has = function (key) {
      return iterable.has(useKeys ? key : -1 - key);
    };
    reversedSequence.includes = function (value) {
      return iterable.includes(value);
    };
    reversedSequence.cacheResult = cacheResultThrough;
    reversedSequence.__iterate = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k) {
        return fn(v, k, this$0);
      }, !reverse);
    };
    reversedSequence.__iterator = function (type, reverse) {
      return iterable.__iterator(type, !reverse);
    };
    return reversedSequence;
  }

  function filterFactory(iterable, predicate, context, useKeys) {
    var filterSequence = makeSequence(iterable);
    if (useKeys) {
      filterSequence.has = function (key) {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
      };
      filterSequence.get = function (key, notSetValue) {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;
      };
    }
    filterSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        if (predicate.call(context, v, k, c)) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      }, reverse);
      return iterations;
    };
    filterSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterations = 0;
      return new Iterator(function () {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          var key = entry[0];
          var value = entry[1];
          if (predicate.call(context, value, key, iterable)) {
            return iteratorValue(type, useKeys ? key : iterations++, value, step);
          }
        }
      });
    };
    return filterSequence;
  }

  function countByFactory(iterable, grouper, context) {
    var groups = Map().asMutable();
    iterable.__iterate(function (v, k) {
      groups.update(grouper.call(context, v, k, iterable), 0, function (a) {
        return a + 1;
      });
    });
    return groups.asImmutable();
  }

  function groupByFactory(iterable, grouper, context) {
    var isKeyedIter = isKeyed(iterable);
    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
    iterable.__iterate(function (v, k) {
      groups.update(grouper.call(context, v, k, iterable), function (a) {
        return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;
      });
    });
    var coerce = iterableClass(iterable);
    return groups.map(function (arr) {
      return reify(iterable, coerce(arr));
    });
  }

  function sliceFactory(iterable, begin, end, useKeys) {
    var originalSize = iterable.size;

    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      end = end | 0;
    }

    if (wholeSlice(begin, end, originalSize)) {
      return iterable;
    }

    var resolvedBegin = resolveBegin(begin, originalSize);
    var resolvedEnd = resolveEnd(end, originalSize);

    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
    }

    var resolvedSize = resolvedEnd - resolvedBegin;
    var sliceSize;
    if (resolvedSize === resolvedSize) {
      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
    }

    var sliceSeq = makeSequence(iterable);

    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
      sliceSeq.get = function (index, notSetValue) {
        index = wrapIndex(this, index);
        return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;
      };
    }

    sliceSeq.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (sliceSize === 0) {
        return 0;
      }
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var skipped = 0;
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function (v, k) {
        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;
        }
      });
      return iterations;
    };

    sliceSeq.__iteratorUncached = function (type, reverse) {
      if (sliceSize !== 0 && reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }

      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
      var skipped = 0;
      var iterations = 0;
      return new Iterator(function () {
        while (skipped++ < resolvedBegin) {
          iterator.next();
        }
        if (++iterations > sliceSize) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (useKeys || type === ITERATE_VALUES) {
          return step;
        } else if (type === ITERATE_KEYS) {
          return iteratorValue(type, iterations - 1, undefined, step);
        } else {
          return iteratorValue(type, iterations - 1, step.value[1], step);
        }
      });
    };

    return sliceSeq;
  }

  function takeWhileFactory(iterable, predicate, context) {
    var takeSequence = makeSequence(iterable);
    takeSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);
      });
      return iterations;
    };
    takeSequence.__iteratorUncached = function (type, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterating = true;
      return new Iterator(function () {
        if (!iterating) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var k = entry[0];
        var v = entry[1];
        if (!predicate.call(context, v, k, this$0)) {
          iterating = false;
          return iteratorDone();
        }
        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
      });
    };
    return takeSequence;
  }

  function skipWhileFactory(iterable, predicate, context, useKeys) {
    var skipSequence = makeSequence(iterable);
    skipSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      });
      return iterations;
    };
    skipSequence.__iteratorUncached = function (type, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var skipping = true;
      var iterations = 0;
      return new Iterator(function () {
        var step, k, v;
        do {
          step = iterator.next();
          if (step.done) {
            if (useKeys || type === ITERATE_VALUES) {
              return step;
            } else if (type === ITERATE_KEYS) {
              return iteratorValue(type, iterations++, undefined, step);
            } else {
              return iteratorValue(type, iterations++, step.value[1], step);
            }
          }
          var entry = step.value;
          k = entry[0];
          v = entry[1];
          skipping && (skipping = predicate.call(context, v, k, this$0));
        } while (skipping);
        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
      });
    };
    return skipSequence;
  }

  function concatFactory(iterable, values) {
    var isKeyedIterable = isKeyed(iterable);
    var iters = [iterable].concat(values).map(function (v) {
      if (!isIterable(v)) {
        v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);
      } else if (isKeyedIterable) {
        v = KeyedIterable(v);
      }
      return v;
    }).filter(function (v) {
      return v.size !== 0;
    });

    if (iters.length === 0) {
      return iterable;
    }

    if (iters.length === 1) {
      var singleton = iters[0];
      if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {
        return singleton;
      }
    }

    var concatSeq = new ArraySeq(iters);
    if (isKeyedIterable) {
      concatSeq = concatSeq.toKeyedSeq();
    } else if (!isIndexed(iterable)) {
      concatSeq = concatSeq.toSetSeq();
    }
    concatSeq = concatSeq.flatten(true);
    concatSeq.size = iters.reduce(function (sum, seq) {
      if (sum !== undefined) {
        var size = seq.size;
        if (size !== undefined) {
          return sum + size;
        }
      }
    }, 0);
    return concatSeq;
  }

  function flattenFactory(iterable, depth, useKeys) {
    var flatSequence = makeSequence(iterable);
    flatSequence.__iterateUncached = function (fn, reverse) {
      var iterations = 0;
      var stopped = false;
      function flatDeep(iter, currentDepth) {
        var this$0 = this;
        iter.__iterate(function (v, k) {
          if ((!depth || currentDepth < depth) && isIterable(v)) {
            flatDeep(v, currentDepth + 1);
          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
            stopped = true;
          }
          return !stopped;
        }, reverse);
      }
      flatDeep(iterable, 0);
      return iterations;
    };
    flatSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(type, reverse);
      var stack = [];
      var iterations = 0;
      return new Iterator(function () {
        while (iterator) {
          var step = iterator.next();
          if (step.done !== false) {
            iterator = stack.pop();
            continue;
          }
          var v = step.value;
          if (type === ITERATE_ENTRIES) {
            v = v[1];
          }
          if ((!depth || stack.length < depth) && isIterable(v)) {
            stack.push(iterator);
            iterator = v.__iterator(type, reverse);
          } else {
            return useKeys ? step : iteratorValue(type, iterations++, v, step);
          }
        }
        return iteratorDone();
      });
    };
    return flatSequence;
  }

  function flatMapFactory(iterable, mapper, context) {
    var coerce = iterableClass(iterable);
    return iterable.toSeq().map(function (v, k) {
      return coerce(mapper.call(context, v, k, iterable));
    }).flatten(true);
  }

  function interposeFactory(iterable, separator) {
    var interposedSequence = makeSequence(iterable);
    interposedSequence.size = iterable.size && iterable.size * 2 - 1;
    interposedSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function (v, k) {
        return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;
      }, reverse);
      return iterations;
    };
    interposedSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
      var iterations = 0;
      var step;
      return new Iterator(function () {
        if (!step || iterations % 2) {
          step = iterator.next();
          if (step.done) {
            return step;
          }
        }
        return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);
      });
    };
    return interposedSequence;
  }

  function sortFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    var isKeyedIterable = isKeyed(iterable);
    var index = 0;
    var entries = iterable.toSeq().map(function (v, k) {
      return [k, v, index++, mapper ? mapper(v, k, iterable) : v];
    }).toArray();
    entries.sort(function (a, b) {
      return comparator(a[3], b[3]) || a[2] - b[2];
    }).forEach(isKeyedIterable ? function (v, i) {
      entries[i].length = 2;
    } : function (v, i) {
      entries[i] = v[1];
    });
    return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);
  }

  function maxFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    if (mapper) {
      var entry = iterable.toSeq().map(function (v, k) {
        return [v, mapper(v, k, iterable)];
      }).reduce(function (a, b) {
        return maxCompare(comparator, a[1], b[1]) ? b : a;
      });
      return entry && entry[0];
    } else {
      return iterable.reduce(function (a, b) {
        return maxCompare(comparator, a, b) ? b : a;
      });
    }
  }

  function maxCompare(comparator, a, b) {
    var comp = comparator(b, a);

    return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;
  }

  function zipWithFactory(keyIter, zipper, iters) {
    var zipSequence = makeSequence(keyIter);
    zipSequence.size = new ArraySeq(iters).map(function (i) {
      return i.size;
    }).min();

    zipSequence.__iterate = function (fn, reverse) {
      var iterator = this.__iterator(ITERATE_VALUES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
      return iterations;
    };
    zipSequence.__iteratorUncached = function (type, reverse) {
      var iterators = iters.map(function (i) {
        return i = Iterable(i), getIterator(reverse ? i.reverse() : i);
      });
      var iterations = 0;
      var isDone = false;
      return new Iterator(function () {
        var steps;
        if (!isDone) {
          steps = iterators.map(function (i) {
            return i.next();
          });
          isDone = steps.some(function (s) {
            return s.done;
          });
        }
        if (isDone) {
          return iteratorDone();
        }
        return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {
          return s.value;
        })));
      });
    };
    return zipSequence;
  }

  function reify(iter, seq) {
    return isSeq(iter) ? seq : iter.constructor(seq);
  }

  function validateEntry(entry) {
    if (entry !== Object(entry)) {
      throw new TypeError('Expected [K, V] tuple: ' + entry);
    }
  }

  function resolveSize(iter) {
    assertNotInfinite(iter.size);
    return ensureSize(iter);
  }

  function iterableClass(iterable) {
    return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;
  }

  function makeSequence(iterable) {
    return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);
  }

  function cacheResultThrough() {
    if (this._iter.cacheResult) {
      this._iter.cacheResult();
      this.size = this._iter.size;
      return this;
    } else {
      return Seq.prototype.cacheResult.call(this);
    }
  }

  function defaultComparator(a, b) {
    return a > b ? 1 : a < b ? -1 : 0;
  }

  function forceIterator(keyPath) {
    var iter = getIterator(keyPath);
    if (!iter) {
      if (!isArrayLike(keyPath)) {
        throw new TypeError('Expected iterable or array-like: ' + keyPath);
      }
      iter = getIterator(Iterable(keyPath));
    }
    return iter;
  }

  createClass(Record, KeyedCollection);

  function Record(defaultValues, name) {
    var hasInitialized;

    var RecordType = function Record(values) {
      if (values instanceof RecordType) {
        return values;
      }
      if (!(this instanceof RecordType)) {
        return new RecordType(values);
      }
      if (!hasInitialized) {
        hasInitialized = true;
        var keys = Object.keys(defaultValues);
        setProps(RecordTypePrototype, keys);
        RecordTypePrototype.size = keys.length;
        RecordTypePrototype._name = name;
        RecordTypePrototype._keys = keys;
        RecordTypePrototype._defaultValues = defaultValues;
      }
      this._map = Map(values);
    };

    var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
    RecordTypePrototype.constructor = RecordType;

    return RecordType;
  }

  Record.prototype.toString = function () {
    return this.__toString(recordName(this) + ' {', '}');
  };

  Record.prototype.has = function (k) {
    return this._defaultValues.hasOwnProperty(k);
  };

  Record.prototype.get = function (k, notSetValue) {
    if (!this.has(k)) {
      return notSetValue;
    }
    var defaultVal = this._defaultValues[k];
    return this._map ? this._map.get(k, defaultVal) : defaultVal;
  };

  Record.prototype.clear = function () {
    if (this.__ownerID) {
      this._map && this._map.clear();
      return this;
    }
    var RecordType = this.constructor;
    return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
  };

  Record.prototype.set = function (k, v) {
    if (!this.has(k)) {
      throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
    }
    var newMap = this._map && this._map.set(k, v);
    if (this.__ownerID || newMap === this._map) {
      return this;
    }
    return makeRecord(this, newMap);
  };

  Record.prototype.remove = function (k) {
    if (!this.has(k)) {
      return this;
    }
    var newMap = this._map && this._map.remove(k);
    if (this.__ownerID || newMap === this._map) {
      return this;
    }
    return makeRecord(this, newMap);
  };

  Record.prototype.wasAltered = function () {
    return this._map.wasAltered();
  };

  Record.prototype.__iterator = function (type, reverse) {
    var this$0 = this;
    return KeyedIterable(this._defaultValues).map(function (_, k) {
      return this$0.get(k);
    }).__iterator(type, reverse);
  };

  Record.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return KeyedIterable(this._defaultValues).map(function (_, k) {
      return this$0.get(k);
    }).__iterate(fn, reverse);
  };

  Record.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map && this._map.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      return this;
    }
    return makeRecord(this, newMap, ownerID);
  };

  var RecordPrototype = Record.prototype;
  RecordPrototype[DELETE] = RecordPrototype.remove;
  RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;
  RecordPrototype.merge = MapPrototype.merge;
  RecordPrototype.mergeWith = MapPrototype.mergeWith;
  RecordPrototype.mergeIn = MapPrototype.mergeIn;
  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  RecordPrototype.setIn = MapPrototype.setIn;
  RecordPrototype.update = MapPrototype.update;
  RecordPrototype.updateIn = MapPrototype.updateIn;
  RecordPrototype.withMutations = MapPrototype.withMutations;
  RecordPrototype.asMutable = MapPrototype.asMutable;
  RecordPrototype.asImmutable = MapPrototype.asImmutable;

  function makeRecord(likeRecord, map, ownerID) {
    var record = Object.create(Object.getPrototypeOf(likeRecord));
    record._map = map;
    record.__ownerID = ownerID;
    return record;
  }

  function recordName(record) {
    return record._name || record.constructor.name || 'Record';
  }

  function setProps(prototype, names) {
    try {
      names.forEach(setProp.bind(undefined, prototype));
    } catch (error) {}
  }

  function setProp(prototype, name) {
    Object.defineProperty(prototype, name, {
      get: function get() {
        return this.get(name);
      },
      set: function set(value) {
        invariant(this.__ownerID, 'Cannot set on an immutable record.');
        this.set(name, value);
      }
    });
  }

  createClass(Set, SetCollection);

  function Set(value) {
    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {
      var iter = SetIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v) {
        return set.add(v);
      });
    });
  }

  Set.of = function () {
    return this(arguments);
  };

  Set.fromKeys = function (value) {
    return this(KeyedIterable(value).keySeq());
  };

  Set.prototype.toString = function () {
    return this.__toString('Set {', '}');
  };

  Set.prototype.has = function (value) {
    return this._map.has(value);
  };

  Set.prototype.add = function (value) {
    return updateSet(this, this._map.set(value, true));
  };

  Set.prototype.remove = function (value) {
    return updateSet(this, this._map.remove(value));
  };

  Set.prototype.clear = function () {
    return updateSet(this, this._map.clear());
  };

  Set.prototype.union = function () {
    var iters = SLICE$0.call(arguments, 0);
    iters = iters.filter(function (x) {
      return x.size !== 0;
    });
    if (iters.length === 0) {
      return this;
    }
    if (this.size === 0 && !this.__ownerID && iters.length === 1) {
      return this.constructor(iters[0]);
    }
    return this.withMutations(function (set) {
      for (var ii = 0; ii < iters.length; ii++) {
        SetIterable(iters[ii]).forEach(function (value) {
          return set.add(value);
        });
      }
    });
  };

  Set.prototype.intersect = function () {
    var iters = SLICE$0.call(arguments, 0);
    if (iters.length === 0) {
      return this;
    }
    iters = iters.map(function (iter) {
      return SetIterable(iter);
    });
    var originalSet = this;
    return this.withMutations(function (set) {
      originalSet.forEach(function (value) {
        if (!iters.every(function (iter) {
          return iter.includes(value);
        })) {
          set.remove(value);
        }
      });
    });
  };

  Set.prototype.subtract = function () {
    var iters = SLICE$0.call(arguments, 0);
    if (iters.length === 0) {
      return this;
    }
    iters = iters.map(function (iter) {
      return SetIterable(iter);
    });
    var originalSet = this;
    return this.withMutations(function (set) {
      originalSet.forEach(function (value) {
        if (iters.some(function (iter) {
          return iter.includes(value);
        })) {
          set.remove(value);
        }
      });
    });
  };

  Set.prototype.merge = function () {
    return this.union.apply(this, arguments);
  };

  Set.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return this.union.apply(this, iters);
  };

  Set.prototype.sort = function (comparator) {
    return OrderedSet(sortFactory(this, comparator));
  };

  Set.prototype.sortBy = function (mapper, comparator) {
    return OrderedSet(sortFactory(this, comparator, mapper));
  };

  Set.prototype.wasAltered = function () {
    return this._map.wasAltered();
  };

  Set.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._map.__iterate(function (_, k) {
      return fn(k, k, this$0);
    }, reverse);
  };

  Set.prototype.__iterator = function (type, reverse) {
    return this._map.map(function (_, k) {
      return k;
    }).__iterator(type, reverse);
  };

  Set.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      return this;
    }
    return this.__make(newMap, ownerID);
  };

  function isSet(maybeSet) {
    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
  }

  Set.isSet = isSet;

  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

  var SetPrototype = Set.prototype;
  SetPrototype[IS_SET_SENTINEL] = true;
  SetPrototype[DELETE] = SetPrototype.remove;
  SetPrototype.mergeDeep = SetPrototype.merge;
  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
  SetPrototype.withMutations = MapPrototype.withMutations;
  SetPrototype.asMutable = MapPrototype.asMutable;
  SetPrototype.asImmutable = MapPrototype.asImmutable;

  SetPrototype.__empty = emptySet;
  SetPrototype.__make = makeSet;

  function updateSet(set, newMap) {
    if (set.__ownerID) {
      set.size = newMap.size;
      set._map = newMap;
      return set;
    }
    return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);
  }

  function makeSet(map, ownerID) {
    var set = Object.create(SetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_SET;
  function emptySet() {
    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
  }

  createClass(OrderedSet, Set);

  function OrderedSet(value) {
    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {
      var iter = SetIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v) {
        return set.add(v);
      });
    });
  }

  OrderedSet.of = function () {
    return this(arguments);
  };

  OrderedSet.fromKeys = function (value) {
    return this(KeyedIterable(value).keySeq());
  };

  OrderedSet.prototype.toString = function () {
    return this.__toString('OrderedSet {', '}');
  };

  function isOrderedSet(maybeOrderedSet) {
    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
  }

  OrderedSet.isOrderedSet = isOrderedSet;

  var OrderedSetPrototype = OrderedSet.prototype;
  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

  OrderedSetPrototype.__empty = emptyOrderedSet;
  OrderedSetPrototype.__make = makeOrderedSet;

  function makeOrderedSet(map, ownerID) {
    var set = Object.create(OrderedSetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_ORDERED_SET;
  function emptyOrderedSet() {
    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
  }

  createClass(Stack, IndexedCollection);

  function Stack(value) {
    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);
  }

  Stack.of = function () {
    return this(arguments);
  };

  Stack.prototype.toString = function () {
    return this.__toString('Stack [', ']');
  };

  Stack.prototype.get = function (index, notSetValue) {
    var head = this._head;
    index = wrapIndex(this, index);
    while (head && index--) {
      head = head.next;
    }
    return head ? head.value : notSetValue;
  };

  Stack.prototype.peek = function () {
    return this._head && this._head.value;
  };

  Stack.prototype.push = function () {
    if (arguments.length === 0) {
      return this;
    }
    var newSize = this.size + arguments.length;
    var head = this._head;
    for (var ii = arguments.length - 1; ii >= 0; ii--) {
      head = {
        value: arguments[ii],
        next: head
      };
    }
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.pushAll = function (iter) {
    iter = IndexedIterable(iter);
    if (iter.size === 0) {
      return this;
    }
    assertNotInfinite(iter.size);
    var newSize = this.size;
    var head = this._head;
    iter.reverse().forEach(function (value) {
      newSize++;
      head = {
        value: value,
        next: head
      };
    });
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.pop = function () {
    return this.slice(1);
  };

  Stack.prototype.unshift = function () {
    return this.push.apply(this, arguments);
  };

  Stack.prototype.unshiftAll = function (iter) {
    return this.pushAll(iter);
  };

  Stack.prototype.shift = function () {
    return this.pop.apply(this, arguments);
  };

  Stack.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._head = undefined;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyStack();
  };

  Stack.prototype.slice = function (begin, end) {
    if (wholeSlice(begin, end, this.size)) {
      return this;
    }
    var resolvedBegin = resolveBegin(begin, this.size);
    var resolvedEnd = resolveEnd(end, this.size);
    if (resolvedEnd !== this.size) {
      return IndexedCollection.prototype.slice.call(this, begin, end);
    }
    var newSize = this.size - resolvedBegin;
    var head = this._head;
    while (resolvedBegin--) {
      head = head.next;
    }
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeStack(this.size, this._head, ownerID, this.__hash);
  };

  Stack.prototype.__iterate = function (fn, reverse) {
    if (reverse) {
      return this.reverse().__iterate(fn);
    }
    var iterations = 0;
    var node = this._head;
    while (node) {
      if (fn(node.value, iterations++, this) === false) {
        break;
      }
      node = node.next;
    }
    return iterations;
  };

  Stack.prototype.__iterator = function (type, reverse) {
    if (reverse) {
      return this.reverse().__iterator(type);
    }
    var iterations = 0;
    var node = this._head;
    return new Iterator(function () {
      if (node) {
        var value = node.value;
        node = node.next;
        return iteratorValue(type, iterations++, value);
      }
      return iteratorDone();
    });
  };

  function isStack(maybeStack) {
    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
  }

  Stack.isStack = isStack;

  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

  var StackPrototype = Stack.prototype;
  StackPrototype[IS_STACK_SENTINEL] = true;
  StackPrototype.withMutations = MapPrototype.withMutations;
  StackPrototype.asMutable = MapPrototype.asMutable;
  StackPrototype.asImmutable = MapPrototype.asImmutable;
  StackPrototype.wasAltered = MapPrototype.wasAltered;

  function makeStack(size, head, ownerID, hash) {
    var map = Object.create(StackPrototype);
    map.size = size;
    map._head = head;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_STACK;
  function emptyStack() {
    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
  }

  function mixin(ctor, methods) {
    var keyCopier = function keyCopier(key) {
      ctor.prototype[key] = methods[key];
    };
    Object.keys(methods).forEach(keyCopier);
    Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);
    return ctor;
  }

  Iterable.Iterator = Iterator;

  mixin(Iterable, {

    toArray: function toArray() {
      assertNotInfinite(this.size);
      var array = new Array(this.size || 0);
      this.valueSeq().__iterate(function (v, i) {
        array[i] = v;
      });
      return array;
    },

    toIndexedSeq: function toIndexedSeq() {
      return new ToIndexedSequence(this);
    },

    toJS: function toJS() {
      return this.toSeq().map(function (value) {
        return value && typeof value.toJS === 'function' ? value.toJS() : value;
      }).__toJS();
    },

    toJSON: function toJSON() {
      return this.toSeq().map(function (value) {
        return value && typeof value.toJSON === 'function' ? value.toJSON() : value;
      }).__toJS();
    },

    toKeyedSeq: function toKeyedSeq() {
      return new ToKeyedSequence(this, true);
    },

    toMap: function toMap() {
      return Map(this.toKeyedSeq());
    },

    toObject: function toObject() {
      assertNotInfinite(this.size);
      var object = {};
      this.__iterate(function (v, k) {
        object[k] = v;
      });
      return object;
    },

    toOrderedMap: function toOrderedMap() {
      return OrderedMap(this.toKeyedSeq());
    },

    toOrderedSet: function toOrderedSet() {
      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
    },

    toSet: function toSet() {
      return Set(isKeyed(this) ? this.valueSeq() : this);
    },

    toSetSeq: function toSetSeq() {
      return new ToSetSequence(this);
    },

    toSeq: function toSeq() {
      return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();
    },

    toStack: function toStack() {
      return Stack(isKeyed(this) ? this.valueSeq() : this);
    },

    toList: function toList() {
      return List(isKeyed(this) ? this.valueSeq() : this);
    },

    toString: function toString() {
      return '[Iterable]';
    },

    __toString: function __toString(head, tail) {
      if (this.size === 0) {
        return head + tail;
      }
      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
    },

    concat: function concat() {
      var values = SLICE$0.call(arguments, 0);
      return reify(this, concatFactory(this, values));
    },

    includes: function includes(searchValue) {
      return this.some(function (value) {
        return is(value, searchValue);
      });
    },

    entries: function entries() {
      return this.__iterator(ITERATE_ENTRIES);
    },

    every: function every(predicate, context) {
      assertNotInfinite(this.size);
      var returnValue = true;
      this.__iterate(function (v, k, c) {
        if (!predicate.call(context, v, k, c)) {
          returnValue = false;
          return false;
        }
      });
      return returnValue;
    },

    filter: function filter(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, true));
    },

    find: function find(predicate, context, notSetValue) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[1] : notSetValue;
    },

    findEntry: function findEntry(predicate, context) {
      var found;
      this.__iterate(function (v, k, c) {
        if (predicate.call(context, v, k, c)) {
          found = [k, v];
          return false;
        }
      });
      return found;
    },

    findLastEntry: function findLastEntry(predicate, context) {
      return this.toSeq().reverse().findEntry(predicate, context);
    },

    forEach: function forEach(sideEffect, context) {
      assertNotInfinite(this.size);
      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
    },

    join: function join(separator) {
      assertNotInfinite(this.size);
      separator = separator !== undefined ? '' + separator : ',';
      var joined = '';
      var isFirst = true;
      this.__iterate(function (v) {
        isFirst ? isFirst = false : joined += separator;
        joined += v !== null && v !== undefined ? v.toString() : '';
      });
      return joined;
    },

    keys: function keys() {
      return this.__iterator(ITERATE_KEYS);
    },

    map: function map(mapper, context) {
      return reify(this, mapFactory(this, mapper, context));
    },

    reduce: function reduce(reducer, initialReduction, context) {
      assertNotInfinite(this.size);
      var reduction;
      var useFirst;
      if (arguments.length < 2) {
        useFirst = true;
      } else {
        reduction = initialReduction;
      }
      this.__iterate(function (v, k, c) {
        if (useFirst) {
          useFirst = false;
          reduction = v;
        } else {
          reduction = reducer.call(context, reduction, v, k, c);
        }
      });
      return reduction;
    },

    reduceRight: function reduceRight(reducer, initialReduction, context) {
      var reversed = this.toKeyedSeq().reverse();
      return reversed.reduce.apply(reversed, arguments);
    },

    reverse: function reverse() {
      return reify(this, reverseFactory(this, true));
    },

    slice: function slice(begin, end) {
      return reify(this, sliceFactory(this, begin, end, true));
    },

    some: function some(predicate, context) {
      return !this.every(not(predicate), context);
    },

    sort: function sort(comparator) {
      return reify(this, sortFactory(this, comparator));
    },

    values: function values() {
      return this.__iterator(ITERATE_VALUES);
    },

    butLast: function butLast() {
      return this.slice(0, -1);
    },

    isEmpty: function isEmpty() {
      return this.size !== undefined ? this.size === 0 : !this.some(function () {
        return true;
      });
    },

    count: function count(predicate, context) {
      return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);
    },

    countBy: function countBy(grouper, context) {
      return countByFactory(this, grouper, context);
    },

    equals: function equals(other) {
      return deepEqual(this, other);
    },

    entrySeq: function entrySeq() {
      var iterable = this;
      if (iterable._cache) {
        return new ArraySeq(iterable._cache);
      }
      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
      entriesSequence.fromEntrySeq = function () {
        return iterable.toSeq();
      };
      return entriesSequence;
    },

    filterNot: function filterNot(predicate, context) {
      return this.filter(not(predicate), context);
    },

    findLast: function findLast(predicate, context, notSetValue) {
      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
    },

    first: function first() {
      return this.find(returnTrue);
    },

    flatMap: function flatMap(mapper, context) {
      return reify(this, flatMapFactory(this, mapper, context));
    },

    flatten: function flatten(depth) {
      return reify(this, flattenFactory(this, depth, true));
    },

    fromEntrySeq: function fromEntrySeq() {
      return new FromEntriesSequence(this);
    },

    get: function get(searchKey, notSetValue) {
      return this.find(function (_, key) {
        return is(key, searchKey);
      }, undefined, notSetValue);
    },

    getIn: function getIn(searchKeyPath, notSetValue) {
      var nested = this;

      var iter = forceIterator(searchKeyPath);
      var step;
      while (!(step = iter.next()).done) {
        var key = step.value;
        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
        if (nested === NOT_SET) {
          return notSetValue;
        }
      }
      return nested;
    },

    groupBy: function groupBy(grouper, context) {
      return groupByFactory(this, grouper, context);
    },

    has: function has(searchKey) {
      return this.get(searchKey, NOT_SET) !== NOT_SET;
    },

    hasIn: function hasIn(searchKeyPath) {
      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
    },

    isSubset: function isSubset(iter) {
      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
      return this.every(function (value) {
        return iter.includes(value);
      });
    },

    isSuperset: function isSuperset(iter) {
      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
      return iter.isSubset(this);
    },

    keySeq: function keySeq() {
      return this.toSeq().map(keyMapper).toIndexedSeq();
    },

    last: function last() {
      return this.toSeq().reverse().first();
    },

    max: function max(comparator) {
      return maxFactory(this, comparator);
    },

    maxBy: function maxBy(mapper, comparator) {
      return maxFactory(this, comparator, mapper);
    },

    min: function min(comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
    },

    minBy: function minBy(mapper, comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
    },

    rest: function rest() {
      return this.slice(1);
    },

    skip: function skip(amount) {
      return this.slice(Math.max(0, amount));
    },

    skipLast: function skipLast(amount) {
      return reify(this, this.toSeq().reverse().skip(amount).reverse());
    },

    skipWhile: function skipWhile(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, true));
    },

    skipUntil: function skipUntil(predicate, context) {
      return this.skipWhile(not(predicate), context);
    },

    sortBy: function sortBy(mapper, comparator) {
      return reify(this, sortFactory(this, comparator, mapper));
    },

    take: function take(amount) {
      return this.slice(0, Math.max(0, amount));
    },

    takeLast: function takeLast(amount) {
      return reify(this, this.toSeq().reverse().take(amount).reverse());
    },

    takeWhile: function takeWhile(predicate, context) {
      return reify(this, takeWhileFactory(this, predicate, context));
    },

    takeUntil: function takeUntil(predicate, context) {
      return this.takeWhile(not(predicate), context);
    },

    valueSeq: function valueSeq() {
      return this.toIndexedSeq();
    },

    hashCode: function hashCode() {
      return this.__hash || (this.__hash = hashIterable(this));
    }

  });

  var IterablePrototype = Iterable.prototype;
  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
  IterablePrototype.__toJS = IterablePrototype.toArray;
  IterablePrototype.__toStringMapper = quoteString;
  IterablePrototype.inspect = IterablePrototype.toSource = function () {
    return this.toString();
  };
  IterablePrototype.chain = IterablePrototype.flatMap;
  IterablePrototype.contains = IterablePrototype.includes;

  (function () {
    try {
      Object.defineProperty(IterablePrototype, 'length', {
        get: function get() {
          if (!Iterable.noLengthWarning) {
            var stack;
            try {
              throw new Error();
            } catch (error) {
              stack = error.stack;
            }
            if (stack.indexOf('_wrapObject') === -1) {
              console && console.warn && console.warn('iterable.length has been deprecated, ' + 'use iterable.size or iterable.count(). ' + 'This warning will become a silent error in a future version. ' + stack);
              return this.size;
            }
          }
        }
      });
    } catch (e) {}
  })();

  mixin(KeyedIterable, {

    flip: function flip() {
      return reify(this, flipFactory(this));
    },

    findKey: function findKey(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry && entry[0];
    },

    findLastKey: function findLastKey(predicate, context) {
      return this.toSeq().reverse().findKey(predicate, context);
    },

    keyOf: function keyOf(searchValue) {
      return this.findKey(function (value) {
        return is(value, searchValue);
      });
    },

    lastKeyOf: function lastKeyOf(searchValue) {
      return this.findLastKey(function (value) {
        return is(value, searchValue);
      });
    },

    mapEntries: function mapEntries(mapper, context) {
      var this$0 = this;
      var iterations = 0;
      return reify(this, this.toSeq().map(function (v, k) {
        return mapper.call(context, [k, v], iterations++, this$0);
      }).fromEntrySeq());
    },

    mapKeys: function mapKeys(mapper, context) {
      var this$0 = this;
      return reify(this, this.toSeq().flip().map(function (k, v) {
        return mapper.call(context, k, v, this$0);
      }).flip());
    }

  });

  var KeyedIterablePrototype = KeyedIterable.prototype;
  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
  KeyedIterablePrototype.__toStringMapper = function (v, k) {
    return JSON.stringify(k) + ': ' + quoteString(v);
  };

  mixin(IndexedIterable, {

    toKeyedSeq: function toKeyedSeq() {
      return new ToKeyedSequence(this, false);
    },

    filter: function filter(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, false));
    },

    findIndex: function findIndex(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    indexOf: function indexOf(searchValue) {
      var key = this.toKeyedSeq().keyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    lastIndexOf: function lastIndexOf(searchValue) {
      var key = this.toKeyedSeq().reverse().keyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    reverse: function reverse() {
      return reify(this, reverseFactory(this, false));
    },

    slice: function slice(begin, end) {
      return reify(this, sliceFactory(this, begin, end, false));
    },

    splice: function splice(index, removeNum) {
      var numArgs = arguments.length;
      removeNum = Math.max(removeNum | 0, 0);
      if (numArgs === 0 || numArgs === 2 && !removeNum) {
        return this;
      }

      index = resolveBegin(index, index < 0 ? this.count() : this.size);
      var spliced = this.slice(0, index);
      return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));
    },

    findLastIndex: function findLastIndex(predicate, context) {
      var key = this.toKeyedSeq().findLastKey(predicate, context);
      return key === undefined ? -1 : key;
    },

    first: function first() {
      return this.get(0);
    },

    flatten: function flatten(depth) {
      return reify(this, flattenFactory(this, depth, false));
    },

    get: function get(index, notSetValue) {
      index = wrapIndex(this, index);
      return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {
        return key === index;
      }, undefined, notSetValue);
    },

    has: function has(index) {
      index = wrapIndex(this, index);
      return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);
    },

    interpose: function interpose(separator) {
      return reify(this, interposeFactory(this, separator));
    },

    interleave: function interleave() {
      var iterables = [this].concat(arrCopy(arguments));
      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
      var interleaved = zipped.flatten(true);
      if (zipped.size) {
        interleaved.size = zipped.size * iterables.length;
      }
      return reify(this, interleaved);
    },

    last: function last() {
      return this.get(-1);
    },

    skipWhile: function skipWhile(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, false));
    },

    zip: function zip() {
      var iterables = [this].concat(arrCopy(arguments));
      return reify(this, zipWithFactory(this, defaultZipper, iterables));
    },

    zipWith: function zipWith(zipper) {
      var iterables = arrCopy(arguments);
      iterables[0] = this;
      return reify(this, zipWithFactory(this, zipper, iterables));
    }

  });

  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;

  mixin(SetIterable, {

    get: function get(value, notSetValue) {
      return this.has(value) ? value : notSetValue;
    },

    includes: function includes(value) {
      return this.has(value);
    },

    keySeq: function keySeq() {
      return this.valueSeq();
    }

  });

  SetIterable.prototype.has = IterablePrototype.includes;

  mixin(KeyedSeq, KeyedIterable.prototype);
  mixin(IndexedSeq, IndexedIterable.prototype);
  mixin(SetSeq, SetIterable.prototype);

  mixin(KeyedCollection, KeyedIterable.prototype);
  mixin(IndexedCollection, IndexedIterable.prototype);
  mixin(SetCollection, SetIterable.prototype);

  function keyMapper(v, k) {
    return k;
  }

  function entryMapper(v, k) {
    return [k, v];
  }

  function not(predicate) {
    return function () {
      return !predicate.apply(this, arguments);
    };
  }

  function neg(predicate) {
    return function () {
      return -predicate.apply(this, arguments);
    };
  }

  function quoteString(value) {
    return typeof value === 'string' ? JSON.stringify(value) : value;
  }

  function defaultZipper() {
    return arrCopy(arguments);
  }

  function defaultNegComparator(a, b) {
    return a < b ? 1 : a > b ? -1 : 0;
  }

  function hashIterable(iterable) {
    if (iterable.size === Infinity) {
      return 0;
    }
    var ordered = isOrdered(iterable);
    var keyed = isKeyed(iterable);
    var h = ordered ? 1 : 0;
    var size = iterable.__iterate(keyed ? ordered ? function (v, k) {
      h = 31 * h + hashMerge(hash(v), hash(k)) | 0;
    } : function (v, k) {
      h = h + hashMerge(hash(v), hash(k)) | 0;
    } : ordered ? function (v) {
      h = 31 * h + hash(v) | 0;
    } : function (v) {
      h = h + hash(v) | 0;
    });
    return murmurHashOfSize(size, h);
  }

  function murmurHashOfSize(size, h) {
    h = imul(h, 0xCC9E2D51);
    h = imul(h << 15 | h >>> -15, 0x1B873593);
    h = imul(h << 13 | h >>> -13, 5);
    h = (h + 0xE6546B64 | 0) ^ size;
    h = imul(h ^ h >>> 16, 0x85EBCA6B);
    h = imul(h ^ h >>> 13, 0xC2B2AE35);
    h = smi(h ^ h >>> 16);
    return h;
  }

  function hashMerge(a, b) {
    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0;
  }

  var Immutable = {

    Iterable: Iterable,

    Seq: Seq,
    Collection: Collection,
    Map: Map,
    OrderedMap: OrderedMap,
    List: List,
    Stack: Stack,
    Set: Set,
    OrderedSet: OrderedSet,

    Record: Record,
    Range: Range,
    Repeat: Repeat,

    is: is,
    fromJS: fromJS

  };

  return Immutable;
});
}, 447, null, "immutable/dist/immutable.js");
__d(/* react-native-deprecated-custom-components/src/NavigatorBreadcrumbNavigationBar.js */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native-deprecated-custom-components\\src\\NavigatorBreadcrumbNavigationBar.js';

var _reactNative = require(26            ); // 26 = react-native

var _react = require(12     ); // 12 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var NavigatorBreadcrumbNavigationBarStyles = require(449                                       ); // 449 = ./NavigatorBreadcrumbNavigationBarStyles
var NavigatorNavigationBarStylesAndroid = require(450                                    ); // 450 = ./NavigatorNavigationBarStylesAndroid
var NavigatorNavigationBarStylesIOS = require(454                                ); // 454 = ./NavigatorNavigationBarStylesIOS

var guid = require(455     ); // 455 = ./guid
var invariant = require(18                  ); // 18 = fbjs/lib/invariant

var _require = require(447        ), // 447 = immutable
    Map = _require.Map;

var Interpolators = NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var NavigatorNavigationBarStyles = _reactNative.Platform.OS === 'android' ? NavigatorNavigationBarStylesAndroid : NavigatorNavigationBarStylesIOS;
var PropTypes = require(19          ); // 19 = prop-types

var CRUMB_PROPS = Interpolators.map(function () {
  return { style: {} };
});
var ICON_PROPS = Interpolators.map(function () {
  return { style: {} };
});
var SEPARATOR_PROPS = Interpolators.map(function () {
  return { style: {} };
});
var TITLE_PROPS = Interpolators.map(function () {
  return { style: {} };
});
var RIGHT_BUTTON_PROPS = Interpolators.map(function () {
  return { style: {} };
});

function navStatePresentedIndex(navState) {
  if (navState.presentedIndex !== undefined) {
    return navState.presentedIndex;
  }

  return navState.observedTopOfStack;
}

function initStyle(index, presentedIndex) {
  return index === presentedIndex ? NavigatorBreadcrumbNavigationBarStyles.Center[index] : index < presentedIndex ? NavigatorBreadcrumbNavigationBarStyles.Left[index] : NavigatorBreadcrumbNavigationBarStyles.Right[index];
}

var NavigatorBreadcrumbNavigationBar = function (_React$Component) {
  babelHelpers.inherits(NavigatorBreadcrumbNavigationBar, _React$Component);

  function NavigatorBreadcrumbNavigationBar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, NavigatorBreadcrumbNavigationBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = NavigatorBreadcrumbNavigationBar.__proto__ || Object.getPrototypeOf(NavigatorBreadcrumbNavigationBar)).call.apply(_ref, [this].concat(args))), _this), _this._getBreadcrumb = function (route, index) {
      var pointerEvents = _this.props.navState.routeStack.length <= 1 && index === 0 ? 'none' : 'auto';
      var navBarRouteMapper = _this.props.routeMapper;
      var firstStyles = initStyle(index, navStatePresentedIndex(_this.props.navState));

      var breadcrumbDescriptor = _react2.default.createElement(
        _reactNative.View,
        {
          key: 'crumb_' + index,
          pointerEvents: pointerEvents,
          ref: 'crumb_' + index,
          style: firstStyles.Crumb, __source: {
            fileName: _jsxFileName,
            lineNumber: 232
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { ref: 'icon_' + index, style: firstStyles.Icon, __source: {
              fileName: _jsxFileName,
              lineNumber: 237
            }
          },
          navBarRouteMapper.iconForRoute(route, _this.props.navigator)
        ),
        _react2.default.createElement(
          _reactNative.View,
          { ref: 'separator_' + index, style: firstStyles.Separator, __source: {
              fileName: _jsxFileName,
              lineNumber: 240
            }
          },
          navBarRouteMapper.separatorForRoute(route, _this.props.navigator)
        )
      );

      return breadcrumbDescriptor;
    }, _this._getTitle = function (route, index) {
      if (_this._descriptors.title.has(route)) {
        return _this._descriptors.title.get(route);
      }

      var titleContent = _this.props.routeMapper.titleContentForRoute(_this.props.navState.routeStack[index], _this.props.navigator);
      var firstStyles = initStyle(index, navStatePresentedIndex(_this.props.navState));

      var titleDescriptor = _react2.default.createElement(
        _reactNative.View,
        {
          key: 'title_' + index,
          ref: 'title_' + index,
          style: firstStyles.Title, __source: {
            fileName: _jsxFileName,
            lineNumber: 261
          }
        },
        titleContent
      );
      _this._descriptors.title = _this._descriptors.title.set(route, titleDescriptor);
      return titleDescriptor;
    }, _this._getRightButton = function (route, index) {
      if (_this._descriptors.right.has(route)) {
        return _this._descriptors.right.get(route);
      }
      var rightContent = _this.props.routeMapper.rightContentForRoute(_this.props.navState.routeStack[index], _this.props.navigator);
      if (!rightContent) {
        _this._descriptors.right = _this._descriptors.right.set(route, null);
        return null;
      }
      var firstStyles = initStyle(index, navStatePresentedIndex(_this.props.navState));
      var rightButtonDescriptor = _react2.default.createElement(
        _reactNative.View,
        {
          key: 'right_' + index,
          ref: 'right_' + index,
          style: firstStyles.RightItem, __source: {
            fileName: _jsxFileName,
            lineNumber: 286
          }
        },
        rightContent
      );
      _this._descriptors.right = _this._descriptors.right.set(route, rightButtonDescriptor);
      return rightButtonDescriptor;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(NavigatorBreadcrumbNavigationBar, [{
    key: '_updateIndexProgress',
    value: function _updateIndexProgress(progress, index, fromIndex, toIndex) {
      var amount = toIndex > fromIndex ? progress : 1 - progress;
      var oldDistToCenter = index - fromIndex;
      var newDistToCenter = index - toIndex;
      var interpolate;
      invariant(Interpolators[index], 'Cannot find breadcrumb interpolators for ' + index);
      if (oldDistToCenter > 0 && newDistToCenter === 0 || newDistToCenter > 0 && oldDistToCenter === 0) {
        interpolate = Interpolators[index].RightToCenter;
      } else if (oldDistToCenter < 0 && newDistToCenter === 0 || newDistToCenter < 0 && oldDistToCenter === 0) {
        interpolate = Interpolators[index].CenterToLeft;
      } else if (oldDistToCenter === newDistToCenter) {
        interpolate = Interpolators[index].RightToCenter;
      } else {
        interpolate = Interpolators[index].RightToLeft;
      }

      if (interpolate.Crumb(CRUMB_PROPS[index].style, amount)) {
        this._setPropsIfExists('crumb_' + index, CRUMB_PROPS[index]);
      }
      if (interpolate.Icon(ICON_PROPS[index].style, amount)) {
        this._setPropsIfExists('icon_' + index, ICON_PROPS[index]);
      }
      if (interpolate.Separator(SEPARATOR_PROPS[index].style, amount)) {
        this._setPropsIfExists('separator_' + index, SEPARATOR_PROPS[index]);
      }
      if (interpolate.Title(TITLE_PROPS[index].style, amount)) {
        this._setPropsIfExists('title_' + index, TITLE_PROPS[index]);
      }
      var right = this.refs['right_' + index];

      var rightButtonStyle = RIGHT_BUTTON_PROPS[index].style;
      if (right && interpolate.RightItem(rightButtonStyle, amount)) {
        right.setNativeProps({
          style: rightButtonStyle,
          pointerEvents: rightButtonStyle.opacity === 0 ? 'none' : 'auto'
        });
      }
    }
  }, {
    key: 'updateProgress',
    value: function updateProgress(progress, fromIndex, toIndex) {
      var max = Math.max(fromIndex, toIndex);
      var min = Math.min(fromIndex, toIndex);
      for (var index = min; index <= max; index++) {
        this._updateIndexProgress(progress, index, fromIndex, toIndex);
      }
    }
  }, {
    key: 'onAnimationStart',
    value: function onAnimationStart(fromIndex, toIndex) {
      var max = Math.max(fromIndex, toIndex);
      var min = Math.min(fromIndex, toIndex);
      for (var index = min; index <= max; index++) {
        this._setRenderViewsToHardwareTextureAndroid(index, true);
      }
    }
  }, {
    key: 'onAnimationEnd',
    value: function onAnimationEnd() {
      var max = this.props.navState.routeStack.length - 1;
      for (var index = 0; index <= max; index++) {
        this._setRenderViewsToHardwareTextureAndroid(index, false);
      }
    }
  }, {
    key: '_setRenderViewsToHardwareTextureAndroid',
    value: function _setRenderViewsToHardwareTextureAndroid(index, renderToHardwareTexture) {
      var props = {
        renderToHardwareTextureAndroid: renderToHardwareTexture
      };

      this._setPropsIfExists('icon_' + index, props);
      this._setPropsIfExists('separator_' + index, props);
      this._setPropsIfExists('title_' + index, props);
      this._setPropsIfExists('right_' + index, props);
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._reset();
    }
  }, {
    key: 'render',
    value: function render() {
      var navState = this.props.navState;
      var icons = navState && navState.routeStack.map(this._getBreadcrumb);
      var titles = navState.routeStack.map(this._getTitle);
      var buttons = navState.routeStack.map(this._getRightButton);

      return _react2.default.createElement(
        _reactNative.View,
        {
          key: this._key,
          style: [styles.breadCrumbContainer, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 194
          }
        },
        titles,
        icons,
        buttons
      );
    }
  }, {
    key: 'immediatelyRefresh',
    value: function immediatelyRefresh() {
      this._reset();
      this.forceUpdate();
    }
  }, {
    key: '_reset',
    value: function _reset() {
      this._key = guid();
      this._descriptors = {
        title: new Map(),
        right: new Map()
      };
    }
  }, {
    key: '_setPropsIfExists',
    value: function _setPropsIfExists(ref, props) {
      var ref = this.refs[ref];
      ref && ref.setNativeProps(props);
    }
  }]);
  return NavigatorBreadcrumbNavigationBar;
}(_react2.default.Component);

NavigatorBreadcrumbNavigationBar.propTypes = {
  navigator: PropTypes.shape({
    push: PropTypes.func,
    pop: PropTypes.func,
    replace: PropTypes.func,
    popToRoute: PropTypes.func,
    popToTop: PropTypes.func
  }),
  routeMapper: PropTypes.shape({
    rightContentForRoute: PropTypes.func,
    titleContentForRoute: PropTypes.func,
    iconForRoute: PropTypes.func
  }),
  navState: _react2.default.PropTypes.shape({
    routeStack: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.object),
    presentedIndex: _react2.default.PropTypes.number
  }),
  style: _reactNative.ViewPropTypes.style
};
NavigatorBreadcrumbNavigationBar.Styles = NavigatorBreadcrumbNavigationBarStyles;


var styles = _reactNative.StyleSheet.create({
  breadCrumbContainer: {
    overflow: 'hidden',
    position: 'absolute',
    height: NavigatorNavigationBarStyles.General.TotalNavHeight,
    top: 0,
    left: 0,
    right: 0
  }
});

module.exports = NavigatorBreadcrumbNavigationBar;
}, 448, null, "react-native-deprecated-custom-components/src/NavigatorBreadcrumbNavigationBar.js");
__d(/* react-native-deprecated-custom-components/src/NavigatorBreadcrumbNavigationBarStyles.android.js */function(global, require, module, exports) {
'use strict';

var NavigatorNavigationBarStylesAndroid = require(450                                    ); // 450 = ./NavigatorNavigationBarStylesAndroid

var buildStyleInterpolator = require(437                       ); // 437 = ./buildStyleInterpolator
var merge = require(451      ); // 451 = ./merge

var NAV_BAR_HEIGHT = NavigatorNavigationBarStylesAndroid.General.NavBarHeight;

var SPACING = 8;
var ICON_WIDTH = 40;
var SEPARATOR_WIDTH = 9;
var CRUMB_WIDTH = ICON_WIDTH + SEPARATOR_WIDTH;
var NAV_ELEMENT_HEIGHT = NAV_BAR_HEIGHT;

var OPACITY_RATIO = 100;
var ICON_INACTIVE_OPACITY = 0.6;
var MAX_BREADCRUMBS = 10;

var CRUMB_BASE = {
  position: 'absolute',
  flexDirection: 'row',
  top: 0,
  width: CRUMB_WIDTH,
  height: NAV_ELEMENT_HEIGHT,
  backgroundColor: 'transparent'
};

var ICON_BASE = {
  width: ICON_WIDTH,
  height: NAV_ELEMENT_HEIGHT
};

var SEPARATOR_BASE = {
  width: SEPARATOR_WIDTH,
  height: NAV_ELEMENT_HEIGHT
};

var TITLE_BASE = {
  position: 'absolute',
  top: 0,
  height: NAV_ELEMENT_HEIGHT,
  backgroundColor: 'transparent',
  alignItems: 'flex-start'
};

var FIRST_TITLE_BASE = merge(TITLE_BASE, {
  left: 0,
  right: 0
});

var RIGHT_BUTTON_BASE = {
  position: 'absolute',
  top: 0,
  right: 0,
  overflow: 'hidden',
  opacity: 1,
  height: NAV_ELEMENT_HEIGHT,
  backgroundColor: 'transparent'
};

var LEFT = [];
var CENTER = [];
var RIGHT = [];
for (var i = 0; i < MAX_BREADCRUMBS; i++) {
  var crumbLeft = CRUMB_WIDTH * i + SPACING;
  LEFT[i] = {
    Crumb: merge(CRUMB_BASE, { left: crumbLeft }),
    Icon: merge(ICON_BASE, { opacity: ICON_INACTIVE_OPACITY }),
    Separator: merge(SEPARATOR_BASE, { opacity: 1 }),
    Title: merge(TITLE_BASE, { left: crumbLeft, opacity: 0 }),
    RightItem: merge(RIGHT_BUTTON_BASE, { opacity: 0 })
  };
  CENTER[i] = {
    Crumb: merge(CRUMB_BASE, { left: crumbLeft }),
    Icon: merge(ICON_BASE, { opacity: 1 }),
    Separator: merge(SEPARATOR_BASE, { opacity: 0 }),
    Title: merge(TITLE_BASE, {
      left: crumbLeft + ICON_WIDTH,
      opacity: 1
    }),
    RightItem: merge(RIGHT_BUTTON_BASE, { opacity: 1 })
  };
  var crumbRight = crumbLeft + 50;
  RIGHT[i] = {
    Crumb: merge(CRUMB_BASE, { left: crumbRight }),
    Icon: merge(ICON_BASE, { opacity: 0 }),
    Separator: merge(SEPARATOR_BASE, { opacity: 0 }),
    Title: merge(TITLE_BASE, {
      left: crumbRight + ICON_WIDTH,
      opacity: 0
    }),
    RightItem: merge(RIGHT_BUTTON_BASE, { opacity: 0 })
  };
}

CENTER[0] = {
  Crumb: merge(CRUMB_BASE, { left: SPACING + CRUMB_WIDTH }),
  Icon: merge(ICON_BASE, { opacity: 0 }),
  Separator: merge(SEPARATOR_BASE, { opacity: 0 }),
  Title: merge(FIRST_TITLE_BASE, { opacity: 1 }),
  RightItem: CENTER[0].RightItem
};
LEFT[0].Title = merge(FIRST_TITLE_BASE, { opacity: 0 });
RIGHT[0].Title = merge(FIRST_TITLE_BASE, { opacity: 0 });

var buildIndexSceneInterpolator = function buildIndexSceneInterpolator(startStyles, endStyles) {
  return {
    Crumb: buildStyleInterpolator({
      left: {
        type: 'linear',
        from: startStyles.Crumb.left,
        to: endStyles.Crumb.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    }),
    Icon: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.Icon.opacity,
        to: endStyles.Icon.opacity,
        min: 0,
        max: 1
      }
    }),
    Separator: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.Separator.opacity,
        to: endStyles.Separator.opacity,
        min: 0,
        max: 1
      }
    }),
    Title: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.Title.opacity,
        to: endStyles.Title.opacity,
        min: 0,
        max: 1
      },
      left: {
        type: 'linear',
        from: startStyles.Title.left,
        to: endStyles.Title.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    }),
    RightItem: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.RightItem.opacity,
        to: endStyles.RightItem.opacity,
        min: 0,
        max: 1,
        round: OPACITY_RATIO
      }
    })
  };
};

var Interpolators = CENTER.map(function (_, ii) {
  return {
    RightToCenter: buildIndexSceneInterpolator(RIGHT[ii], CENTER[ii]),

    CenterToLeft: buildIndexSceneInterpolator(CENTER[ii], LEFT[ii]),

    RightToLeft: buildIndexSceneInterpolator(RIGHT[ii], LEFT[ii])
  };
});

module.exports = {
  Interpolators: Interpolators,
  Left: LEFT,
  Center: CENTER,
  Right: RIGHT,
  IconWidth: ICON_WIDTH,
  IconHeight: NAV_BAR_HEIGHT,
  SeparatorWidth: SEPARATOR_WIDTH,
  SeparatorHeight: NAV_BAR_HEIGHT
};
}, 449, null, "react-native-deprecated-custom-components/src/NavigatorBreadcrumbNavigationBarStyles.android.js");
__d(/* react-native-deprecated-custom-components/src/NavigatorNavigationBarStylesAndroid.js */function(global, require, module, exports) {
'use strict';

var buildStyleInterpolator = require(437                       ); // 437 = ./buildStyleInterpolator
var merge = require(451      ); // 451 = ./merge

var NAV_BAR_HEIGHT = 56;
var TITLE_LEFT = 72;
var BUTTON_SIZE = 24;
var TOUCH_TARGT_SIZE = 48;
var BUTTON_HORIZONTAL_MARGIN = 16;

var BUTTON_EFFECTIVE_MARGIN = BUTTON_HORIZONTAL_MARGIN - (TOUCH_TARGT_SIZE - BUTTON_SIZE) / 2;
var NAV_ELEMENT_HEIGHT = NAV_BAR_HEIGHT;

var BASE_STYLES = {
  Title: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    alignItems: 'flex-start',
    height: NAV_ELEMENT_HEIGHT,
    backgroundColor: 'transparent',
    marginLeft: TITLE_LEFT
  },
  LeftButton: {
    position: 'absolute',
    top: 0,
    left: BUTTON_EFFECTIVE_MARGIN,
    overflow: 'hidden',
    height: NAV_ELEMENT_HEIGHT,
    backgroundColor: 'transparent'
  },
  RightButton: {
    position: 'absolute',
    top: 0,
    right: BUTTON_EFFECTIVE_MARGIN,
    overflow: 'hidden',
    alignItems: 'flex-end',
    height: NAV_ELEMENT_HEIGHT,
    backgroundColor: 'transparent'
  }
};

var Stages = {
  Left: {
    Title: merge(BASE_STYLES.Title, { opacity: 0 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { opacity: 0 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 0 })
  },
  Center: {
    Title: merge(BASE_STYLES.Title, { opacity: 1 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { opacity: 1 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 1 })
  },
  Right: {
    Title: merge(BASE_STYLES.Title, { opacity: 0 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { opacity: 0 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 0 })
  }
};

var opacityRatio = 100;

function buildSceneInterpolators(startStyles, endStyles) {
  return {
    Title: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.Title.opacity,
        to: endStyles.Title.opacity,
        min: 0,
        max: 1
      },
      left: {
        type: 'linear',
        from: startStyles.Title.left,
        to: endStyles.Title.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    }),
    LeftButton: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.LeftButton.opacity,
        to: endStyles.LeftButton.opacity,
        min: 0,
        max: 1,
        round: opacityRatio
      },
      left: {
        type: 'linear',
        from: startStyles.LeftButton.left,
        to: endStyles.LeftButton.left,
        min: 0,
        max: 1
      }
    }),
    RightButton: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.RightButton.opacity,
        to: endStyles.RightButton.opacity,
        min: 0,
        max: 1,
        round: opacityRatio
      },
      left: {
        type: 'linear',
        from: startStyles.RightButton.left,
        to: endStyles.RightButton.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    })
  };
}

var Interpolators = {
  RightToCenter: buildSceneInterpolators(Stages.Right, Stages.Center),

  CenterToLeft: buildSceneInterpolators(Stages.Center, Stages.Left),

  RightToLeft: buildSceneInterpolators(Stages.Right, Stages.Left)
};

module.exports = {
  General: {
    NavBarHeight: NAV_BAR_HEIGHT,
    StatusBarHeight: 0,
    TotalNavHeight: NAV_BAR_HEIGHT
  },
  Interpolators: Interpolators,
  Stages: Stages
};
}, 450, null, "react-native-deprecated-custom-components/src/NavigatorNavigationBarStylesAndroid.js");
__d(/* react-native-deprecated-custom-components/src/merge.js */function(global, require, module, exports) {

"use strict";

var mergeInto = require(452          ); // 452 = ./mergeInto

var merge = function merge(one, two) {
  var result = {};
  mergeInto(result, one);
  mergeInto(result, two);
  return result;
};

module.exports = merge;
}, 451, null, "react-native-deprecated-custom-components/src/merge.js");
__d(/* react-native-deprecated-custom-components/src/mergeInto.js */function(global, require, module, exports) {

"use strict";

var mergeHelpers = require(453             ); // 453 = ./mergeHelpers

var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg = mergeHelpers.checkMergeIntoObjectArg;

function mergeInto(one, two) {
  checkMergeIntoObjectArg(one);
  if (two != null) {
    checkMergeObjectArg(two);
    for (var key in two) {
      if (!two.hasOwnProperty(key)) {
        continue;
      }
      one[key] = two[key];
    }
  }
}

module.exports = mergeInto;
}, 452, null, "react-native-deprecated-custom-components/src/mergeInto.js");
__d(/* react-native-deprecated-custom-components/src/mergeHelpers.js */function(global, require, module, exports) {

"use strict";

var invariant = require(18                  ); // 18 = fbjs/lib/invariant
var keyMirror = require(129                 ); // 129 = fbjs/lib/keyMirror

var MAX_MERGE_DEPTH = 36;

var isTerminal = function isTerminal(o) {
  return typeof o !== 'object' || o === null;
};

var mergeHelpers = {

  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,

  isTerminal: isTerminal,

  normalizeMergeArg: function normalizeMergeArg(arg) {
    return arg === undefined || arg === null ? {} : arg;
  },

  checkMergeArrayArgs: function checkMergeArrayArgs(one, two) {
    invariant(Array.isArray(one) && Array.isArray(two), 'Tried to merge arrays, instead got %s and %s.', one, two);
  },

  checkMergeObjectArgs: function checkMergeObjectArgs(one, two) {
    mergeHelpers.checkMergeObjectArg(one);
    mergeHelpers.checkMergeObjectArg(two);
  },

  checkMergeObjectArg: function checkMergeObjectArg(arg) {
    invariant(!isTerminal(arg) && !Array.isArray(arg), 'Tried to merge an object, instead got %s.', arg);
  },

  checkMergeIntoObjectArg: function checkMergeIntoObjectArg(arg) {
    invariant((!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg), 'Tried to merge into an object, instead got %s.', arg);
  },

  checkMergeLevel: function checkMergeLevel(level) {
    invariant(level < MAX_MERGE_DEPTH, 'Maximum deep merge depth exceeded. You may be attempting to merge ' + 'circular structures in an unsupported way.');
  },

  checkArrayStrategy: function checkArrayStrategy(strategy) {
    invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies, 'You must provide an array strategy to deep merge functions to ' + 'instruct the deep merge how to resolve merging two arrays.');
  },

  ArrayStrategies: keyMirror({
    Clobber: true,
    IndexByIndex: true
  })

};

module.exports = mergeHelpers;
}, 453, null, "react-native-deprecated-custom-components/src/mergeHelpers.js");
__d(/* react-native-deprecated-custom-components/src/NavigatorNavigationBarStylesIOS.js */function(global, require, module, exports) {
'use strict';

var _reactNative = require(26            ); // 26 = react-native

var buildStyleInterpolator = require(437                       ); // 437 = ./buildStyleInterpolator
var merge = require(451      ); // 451 = ./merge

var SCREEN_WIDTH = _reactNative.Dimensions.get('window').width;
var NAV_BAR_HEIGHT = 44;
var STATUS_BAR_HEIGHT = 20;
var NAV_HEIGHT = NAV_BAR_HEIGHT + STATUS_BAR_HEIGHT;

var BASE_STYLES = {
  Title: {
    position: 'absolute',
    top: STATUS_BAR_HEIGHT,
    left: 0,
    right: 0,
    alignItems: 'center',
    height: NAV_BAR_HEIGHT,
    backgroundColor: 'transparent'
  },
  LeftButton: {
    position: 'absolute',
    top: STATUS_BAR_HEIGHT,
    left: 0,
    overflow: 'hidden',
    opacity: 1,
    height: NAV_BAR_HEIGHT,
    backgroundColor: 'transparent'
  },
  RightButton: {
    position: 'absolute',
    top: STATUS_BAR_HEIGHT,
    right: 0,
    overflow: 'hidden',
    opacity: 1,
    alignItems: 'flex-end',
    height: NAV_BAR_HEIGHT,
    backgroundColor: 'transparent'
  }
};

var Stages = {
  Left: {
    Title: merge(BASE_STYLES.Title, { left: -SCREEN_WIDTH / 2, opacity: 0 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { left: 0, opacity: 0 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 0 })
  },
  Center: {
    Title: merge(BASE_STYLES.Title, { left: 0, opacity: 1 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { left: 0, opacity: 1 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 1 })
  },
  Right: {
    Title: merge(BASE_STYLES.Title, { left: SCREEN_WIDTH / 2, opacity: 0 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { left: 0, opacity: 0 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 0 })
  }
};

var opacityRatio = 100;

function buildSceneInterpolators(startStyles, endStyles) {
  return {
    Title: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.Title.opacity,
        to: endStyles.Title.opacity,
        min: 0,
        max: 1
      },
      left: {
        type: 'linear',
        from: startStyles.Title.left,
        to: endStyles.Title.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    }),
    LeftButton: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.LeftButton.opacity,
        to: endStyles.LeftButton.opacity,
        min: 0,
        max: 1,
        round: opacityRatio
      },
      left: {
        type: 'linear',
        from: startStyles.LeftButton.left,
        to: endStyles.LeftButton.left,
        min: 0,
        max: 1
      }
    }),
    RightButton: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.RightButton.opacity,
        to: endStyles.RightButton.opacity,
        min: 0,
        max: 1,
        round: opacityRatio
      },
      left: {
        type: 'linear',
        from: startStyles.RightButton.left,
        to: endStyles.RightButton.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    })
  };
}

var Interpolators = {
  RightToCenter: buildSceneInterpolators(Stages.Right, Stages.Center),

  CenterToLeft: buildSceneInterpolators(Stages.Center, Stages.Left),

  RightToLeft: buildSceneInterpolators(Stages.Right, Stages.Left)
};

module.exports = {
  General: {
    NavBarHeight: NAV_BAR_HEIGHT,
    StatusBarHeight: STATUS_BAR_HEIGHT,
    TotalNavHeight: NAV_HEIGHT
  },
  Interpolators: Interpolators,
  Stages: Stages
};
}, 454, null, "react-native-deprecated-custom-components/src/NavigatorNavigationBarStylesIOS.js");
__d(/* react-native-deprecated-custom-components/src/guid.js */function(global, require, module, exports) {

'use strict';

function guid() {
  return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.', '');
}

module.exports = guid;
}, 455, null, "react-native-deprecated-custom-components/src/guid.js");
__d(/* react-native-deprecated-custom-components/src/NavigatorNavigationBar.js */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'D:\\myproject\\node_modules\\react-native-deprecated-custom-components\\src\\NavigatorNavigationBar.js';

var _reactNative = require(26            ); // 26 = react-native

var React = require(12     ); // 12 = react
var NavigatorNavigationBarStylesAndroid = require(450                                    ); // 450 = ./NavigatorNavigationBarStylesAndroid
var NavigatorNavigationBarStylesIOS = require(454                                ); // 454 = ./NavigatorNavigationBarStylesIOS

var PropTypes = require(19          ); // 19 = prop-types

var guid = require(455     ); // 455 = ./guid

var _require = require(447        ), // 447 = immutable
    Map = _require.Map;

var COMPONENT_NAMES = ['Title', 'LeftButton', 'RightButton'];

var NavigatorNavigationBarStyles = _reactNative.Platform.OS === 'android' ? NavigatorNavigationBarStylesAndroid : NavigatorNavigationBarStylesIOS;

var navStatePresentedIndex = function navStatePresentedIndex(navState) {
  if (navState.presentedIndex !== undefined) {
    return navState.presentedIndex;
  }

  return navState.observedTopOfStack;
};

var NavigatorNavigationBar = function (_React$Component) {
  babelHelpers.inherits(NavigatorNavigationBar, _React$Component);

  function NavigatorNavigationBar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, NavigatorNavigationBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = NavigatorNavigationBar.__proto__ || Object.getPrototypeOf(NavigatorNavigationBar)).call.apply(_ref, [this].concat(args))), _this), _this.immediatelyRefresh = function () {
      _this._reset();
      _this.forceUpdate();
    }, _this._reset = function () {
      _this._key = guid();
      _this._reusableProps = {};
      _this._components = {};
      _this._descriptors = {};

      COMPONENT_NAMES.forEach(function (componentName) {
        _this._components[componentName] = new Map();
        _this._descriptors[componentName] = new Map();
      });
    }, _this._getReusableProps = function (componentName, index) {
      var propStack = _this._reusableProps[componentName];
      if (!propStack) {
        propStack = _this._reusableProps[componentName] = [];
      }
      var props = propStack[index];
      if (!props) {
        props = propStack[index] = { style: {} };
      }
      return props;
    }, _this._updateIndexProgress = function (progress, index, fromIndex, toIndex) {
      var amount = toIndex > fromIndex ? progress : 1 - progress;
      var oldDistToCenter = index - fromIndex;
      var newDistToCenter = index - toIndex;
      var interpolate;
      if (oldDistToCenter > 0 && newDistToCenter === 0 || newDistToCenter > 0 && oldDistToCenter === 0) {
        interpolate = _this.props.navigationStyles.Interpolators.RightToCenter;
      } else if (oldDistToCenter < 0 && newDistToCenter === 0 || newDistToCenter < 0 && oldDistToCenter === 0) {
        interpolate = _this.props.navigationStyles.Interpolators.CenterToLeft;
      } else if (oldDistToCenter === newDistToCenter) {
        interpolate = _this.props.navigationStyles.Interpolators.RightToCenter;
      } else {
        interpolate = _this.props.navigationStyles.Interpolators.RightToLeft;
      }

      COMPONENT_NAMES.forEach(function (componentName) {
        var component = this._components[componentName].get(this.props.navState.routeStack[index]);
        var props = this._getReusableProps(componentName, index);
        if (component && interpolate[componentName](props.style, amount)) {
          props.pointerEvents = props.style.opacity === 0 ? 'none' : 'box-none';
          component.setNativeProps(props);
        }
      }, _this);
    }, _this.updateProgress = function (progress, fromIndex, toIndex) {
      var max = Math.max(fromIndex, toIndex);
      var min = Math.min(fromIndex, toIndex);
      for (var index = min; index <= max; index++) {
        _this._updateIndexProgress(progress, index, fromIndex, toIndex);
      }
    }, _this._getComponent = function (componentName, route, index) {
      if (_this._descriptors[componentName].includes(route)) {
        return _this._descriptors[componentName].get(route);
      }

      var rendered = null;

      var content = _this.props.routeMapper[componentName](_this.props.navState.routeStack[index], _this.props.navigator, index, _this.props.navState);
      if (!content) {
        return null;
      }

      var componentIsActive = index === navStatePresentedIndex(_this.props.navState);
      var initialStage = componentIsActive ? _this.props.navigationStyles.Stages.Center : _this.props.navigationStyles.Stages.Left;
      rendered = React.createElement(
        _reactNative.View,
        {
          ref: function ref(_ref2) {
            _this._components[componentName] = _this._components[componentName].set(route, _ref2);
          },
          pointerEvents: componentIsActive ? 'box-none' : 'none',
          style: initialStage[componentName], __source: {
            fileName: _jsxFileName,
            lineNumber: 199
          }
        },
        content
      );

      _this._descriptors[componentName] = _this._descriptors[componentName].set(route, rendered);
      return rendered;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(NavigatorNavigationBar, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._reset();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var navBarStyle = {
        height: this.props.navigationStyles.General.TotalNavHeight
      };
      var navState = this.props.navState;
      var components = navState.routeStack.map(function (route, index) {
        return COMPONENT_NAMES.map(function (componentName) {
          return _this2._getComponent(componentName, route, index);
        });
      });

      return React.createElement(
        _reactNative.View,
        {
          key: this._key,
          style: [styles.navBarContainer, navBarStyle, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 169
          }
        },
        components
      );
    }
  }]);
  return NavigatorNavigationBar;
}(React.Component);

NavigatorNavigationBar.propTypes = {
  navigator: PropTypes.object,
  routeMapper: PropTypes.shape({
    Title: PropTypes.func.isRequired,
    LeftButton: PropTypes.func.isRequired,
    RightButton: PropTypes.func.isRequired
  }).isRequired,
  navState: PropTypes.shape({
    routeStack: PropTypes.arrayOf(PropTypes.object),
    presentedIndex: PropTypes.number
  }),
  navigationStyles: PropTypes.object,
  style: _reactNative.ViewPropTypes.style
};
NavigatorNavigationBar.Styles = NavigatorNavigationBarStyles;
NavigatorNavigationBar.StylesAndroid = NavigatorNavigationBarStylesAndroid;
NavigatorNavigationBar.StylesIOS = NavigatorNavigationBarStylesIOS;
NavigatorNavigationBar.defaultProps = {
  navigationStyles: NavigatorNavigationBarStyles
};


var styles = _reactNative.StyleSheet.create({
  navBarContainer: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    backgroundColor: 'transparent'
  }
});

module.exports = NavigatorNavigationBar;
}, 456, null, "react-native-deprecated-custom-components/src/NavigatorNavigationBar.js");
__d(/* react-native-deprecated-custom-components/src/NavigatorSceneConfigs.js */function(global, require, module, exports) {
'use strict';

var _reactNative = require(26            ); // 26 = react-native

var buildStyleInterpolator = require(437                       ); // 437 = ./buildStyleInterpolator

var IS_RTL = _reactNative.I18nManager.isRTL;

var SCREEN_WIDTH = _reactNative.Dimensions.get('window').width;
var SCREEN_HEIGHT = _reactNative.Dimensions.get('window').height;
var PIXEL_RATIO = _reactNative.PixelRatio.get();

var ToTheLeftIOS = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: -SCREEN_WIDTH * 0.3, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  opacity: {
    value: 1.0,
    type: 'constant'
  }
};

var ToTheRightIOS = babelHelpers.extends({}, ToTheLeftIOS, {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: SCREEN_WIDTH * 0.3, y: 0, z: 0 }
  }
});

var FadeToTheLeft = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: -Math.round(SCREEN_WIDTH * 0.3), y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },

  transformScale: {
    from: { x: 1, y: 1, z: 1 },
    to: { x: 0.95, y: 0.95, z: 1 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  },
  opacity: {
    from: 1,
    to: 0.3,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: false,
    round: 100
  },
  translateX: {
    from: 0,
    to: -Math.round(SCREEN_WIDTH * 0.3),
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  scaleX: {
    from: 1,
    to: 0.95,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  },
  scaleY: {
    from: 1,
    to: 0.95,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  }
};

var FadeToTheRight = babelHelpers.extends({}, FadeToTheLeft, {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: Math.round(SCREEN_WIDTH * 0.3), y: 0, z: 0 }
  },
  translateX: {
    from: 0,
    to: Math.round(SCREEN_WIDTH * 0.3)
  }
});

var FadeIn = {
  opacity: {
    from: 0,
    to: 1,
    min: 0.5,
    max: 1,
    type: 'linear',
    extrapolate: false,
    round: 100
  }
};

var FadeOut = {
  opacity: {
    from: 1,
    to: 0,
    min: 0,
    max: 0.5,
    type: 'linear',
    extrapolate: false,
    round: 100
  }
};

var ToTheLeft = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: -SCREEN_WIDTH, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  opacity: {
    value: 1.0,
    type: 'constant'
  },

  translateX: {
    from: 0,
    to: -SCREEN_WIDTH,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
};

var ToTheRight = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: SCREEN_WIDTH, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  opacity: {
    value: 1.0,
    type: 'constant'
  },

  translateX: {
    from: 0,
    to: SCREEN_WIDTH,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
};

var ToTheUp = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: 0, y: -SCREEN_HEIGHT, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  opacity: {
    value: 1.0,
    type: 'constant'
  },
  translateY: {
    from: 0,
    to: -SCREEN_HEIGHT,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
};

var ToTheDown = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: 0, y: SCREEN_HEIGHT, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  opacity: {
    value: 1.0,
    type: 'constant'
  },
  translateY: {
    from: 0,
    to: SCREEN_HEIGHT,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
};

var FromTheRight = {
  opacity: {
    value: 1.0,
    type: 'constant'
  },

  transformTranslate: {
    from: { x: SCREEN_WIDTH, y: 0, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },

  translateX: {
    from: SCREEN_WIDTH,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },

  scaleX: {
    value: 1,
    type: 'constant'
  },
  scaleY: {
    value: 1,
    type: 'constant'
  }
};

var FromTheLeft = babelHelpers.extends({}, FromTheRight, {
  transformTranslate: {
    from: { x: -SCREEN_WIDTH, y: 0, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  translateX: {
    from: -SCREEN_WIDTH,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
});

var FromTheDown = babelHelpers.extends({}, FromTheRight, {
  transformTranslate: {
    from: { y: SCREEN_HEIGHT, x: 0, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  translateY: {
    from: SCREEN_HEIGHT,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
});

var FromTheTop = babelHelpers.extends({}, FromTheRight, {
  transformTranslate: {
    from: { y: -SCREEN_HEIGHT, x: 0, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  translateY: {
    from: -SCREEN_HEIGHT,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
});

var ToTheBack = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  transformScale: {
    from: { x: 1, y: 1, z: 1 },
    to: { x: 0.95, y: 0.95, z: 1 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  },
  opacity: {
    from: 1,
    to: 0.3,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: false,
    round: 100
  },
  scaleX: {
    from: 1,
    to: 0.95,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  },
  scaleY: {
    from: 1,
    to: 0.95,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  }
};

var FromTheFront = {
  opacity: {
    value: 1.0,
    type: 'constant'
  },

  transformTranslate: {
    from: { x: 0, y: SCREEN_HEIGHT, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  translateY: {
    from: SCREEN_HEIGHT,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  scaleX: {
    value: 1,
    type: 'constant'
  },
  scaleY: {
    value: 1,
    type: 'constant'
  }
};

var ToTheBackAndroid = {
  opacity: {
    value: 1,
    type: 'constant'
  }
};

var FromTheFrontAndroid = {
  opacity: {
    from: 0,
    to: 1,
    min: 0.5,
    max: 1,
    type: 'linear',
    extrapolate: false,
    round: 100
  },
  transformTranslate: {
    from: { x: 0, y: 100, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  translateY: {
    from: 100,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
};

var BaseOverswipeConfig = {
  frictionConstant: 1,
  frictionByDistance: 1.5
};

var BaseLeftToRightGesture = {
  isDetachable: false,

  gestureDetectMovement: 2,

  notMoving: 0.3,

  directionRatio: 0.66,

  snapVelocity: 2,

  edgeHitWidth: 30,

  stillCompletionRatio: 3 / 5,

  fullDistance: SCREEN_WIDTH,

  direction: 'left-to-right'

};

var BaseRightToLeftGesture = babelHelpers.extends({}, BaseLeftToRightGesture, {
  direction: 'right-to-left'
});

var BaseDownUpGesture = babelHelpers.extends({}, BaseLeftToRightGesture, {
  fullDistance: SCREEN_HEIGHT,
  direction: 'bottom-to-top'
});

var BaseUpDownGesture = babelHelpers.extends({}, BaseLeftToRightGesture, {
  fullDistance: SCREEN_HEIGHT,
  direction: 'top-to-bottom'
});

var directionMapping = {
  ToTheStartIOS: ToTheLeftIOS,
  ToTheEndIOS: ToTheRightIOS,
  FadeToTheStart: FadeToTheLeft,
  FadeToTheEnd: FadeToTheRight,
  ToTheStart: ToTheLeft,
  ToTheEnd: ToTheRight,
  FromTheStart: FromTheLeft,
  FromTheEnd: FromTheRight,
  BaseStartToEndGesture: BaseLeftToRightGesture,
  BaseEndToStartGesture: BaseRightToLeftGesture
};

if (IS_RTL) {
  directionMapping = {
    ToTheStartIOS: ToTheRightIOS,
    ToTheEndIOS: ToTheLeftIOS,
    FadeToTheStart: FadeToTheRight,
    FadeToTheEnd: FadeToTheLeft,
    ToTheStart: ToTheRight,
    ToTheEnd: ToTheLeft,
    FromTheStart: FromTheRight,
    FromTheEnd: FromTheLeft,
    BaseStartToEndGesture: BaseRightToLeftGesture,
    BaseEndToStartGesture: BaseLeftToRightGesture
  };
}

var BaseConfig = {
  gestures: {
    pop: directionMapping.BaseStartToEndGesture
  },

  springFriction: 26,
  springTension: 200,

  defaultTransitionVelocity: 1.5,

  animationInterpolators: {
    into: buildStyleInterpolator(directionMapping.FromTheEnd),
    out: buildStyleInterpolator(directionMapping.FadeToTheStart)
  }
};

var NavigatorSceneConfigs = {
  PushFromRight: babelHelpers.extends({}, BaseConfig, {
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheEnd),
      out: buildStyleInterpolator(directionMapping.ToTheStartIOS)
    }
  }),
  PushFromLeft: babelHelpers.extends({}, BaseConfig, {
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheStart),
      out: buildStyleInterpolator(directionMapping.ToTheEndIOS)
    }
  }),
  FloatFromRight: babelHelpers.extends({}, BaseConfig),
  FloatFromLeft: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      pop: directionMapping.BaseEndToStartGesture
    },
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheStart),
      out: buildStyleInterpolator(directionMapping.FadeToTheEnd)
    }
  }),
  FloatFromBottom: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      pop: babelHelpers.extends({}, directionMapping.BaseStartToEndGesture, {
        edgeHitWidth: 150,
        direction: 'top-to-bottom',
        fullDistance: SCREEN_HEIGHT
      })
    },
    animationInterpolators: {
      into: buildStyleInterpolator(FromTheFront),
      out: buildStyleInterpolator(ToTheBack)
    }
  }),
  FloatFromBottomAndroid: babelHelpers.extends({}, BaseConfig, {
    gestures: null,
    defaultTransitionVelocity: 3,
    springFriction: 20,
    animationInterpolators: {
      into: buildStyleInterpolator(FromTheFrontAndroid),
      out: buildStyleInterpolator(ToTheBackAndroid)
    }
  }),
  FadeAndroid: babelHelpers.extends({}, BaseConfig, {
    gestures: null,
    animationInterpolators: {
      into: buildStyleInterpolator(FadeIn),
      out: buildStyleInterpolator(FadeOut)
    }
  }),
  SwipeFromLeft: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, directionMapping.BaseEndToStartGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, directionMapping.BaseStartToEndGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      })
    },
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheStart),
      out: buildStyleInterpolator(directionMapping.ToTheEnd)
    }
  }),
  HorizontalSwipeJump: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, directionMapping.BaseStartToEndGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, directionMapping.BaseEndToStartGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      })
    },
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheEnd),
      out: buildStyleInterpolator(directionMapping.ToTheStart)
    }
  }),
  HorizontalSwipeJumpFromRight: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, directionMapping.BaseEndToStartGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, directionMapping.BaseStartToEndGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      pop: directionMapping.BaseEndToStartGesture
    },
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheStart),
      out: buildStyleInterpolator(directionMapping.FadeToTheEnd)
    }
  }),
  HorizontalSwipeJumpFromLeft: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, directionMapping.BaseEndToStartGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, directionMapping.BaseStartToEndGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      pop: directionMapping.BaseEndToStartGesture
    },
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheStart),
      out: buildStyleInterpolator(directionMapping.ToTheEnd)
    }
  }),
  VerticalUpSwipeJump: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, BaseUpDownGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, BaseDownUpGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      })
    },
    animationInterpolators: {
      into: buildStyleInterpolator(FromTheDown),
      out: buildStyleInterpolator(ToTheUp)
    }
  }),
  VerticalDownSwipeJump: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, BaseDownUpGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, BaseUpDownGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      })
    },
    animationInterpolators: {
      into: buildStyleInterpolator(FromTheTop),
      out: buildStyleInterpolator(ToTheDown)
    }
  })
};

module.exports = NavigatorSceneConfigs;
}, 457, null, "react-native-deprecated-custom-components/src/NavigatorSceneConfigs.js");
__d(/* react-native-deprecated-custom-components/src/Subscribable.js */function(global, require, module, exports) {
'use strict';

var Subscribable = {};

Subscribable.Mixin = {

  componentWillMount: function componentWillMount() {
    this._subscribableSubscriptions = [];
  },

  componentWillUnmount: function componentWillUnmount() {
    this._subscribableSubscriptions.forEach(function (subscription) {
      return subscription.remove();
    });
    this._subscribableSubscriptions = null;
  },

  addListenerOn: function addListenerOn(eventEmitter, eventType, listener, context) {
    this._subscribableSubscriptions.push(eventEmitter.addListener(eventType, listener, context));
  }
};

module.exports = Subscribable;
}, 458, null, "react-native-deprecated-custom-components/src/Subscribable.js");
__d(/* react-native-deprecated-custom-components/src/clamp.js */function(global, require, module, exports) {
'use strict';

function clamp(min, value, max) {
  if (value < min) {
    return min;
  }
  if (value > max) {
    return max;
  }
  return value;
}

module.exports = clamp;
}, 459, null, "react-native-deprecated-custom-components/src/clamp.js");
__d(/* rebound/rebound.js */function(global, require, module, exports) {

(function () {
  var rebound = {};
  var util = rebound.util = {};
  var concat = Array.prototype.concat;
  var slice = Array.prototype.slice;

  util.bind = function bind(func, context) {
    var args = slice.call(arguments, 2);
    return function () {
      func.apply(context, concat.call(args, slice.call(arguments)));
    };
  };

  util.extend = function extend(target, source) {
    for (var key in source) {
      if (source.hasOwnProperty(key)) {
        target[key] = source[key];
      }
    }
  };

  var SpringSystem = rebound.SpringSystem = function SpringSystem(looper) {
    this._springRegistry = {};
    this._activeSprings = [];
    this.listeners = [];
    this._idleSpringIndices = [];
    this.looper = looper || new AnimationLooper();
    this.looper.springSystem = this;
  };

  util.extend(SpringSystem.prototype, {

    _springRegistry: null,

    _isIdle: true,

    _lastTimeMillis: -1,

    _activeSprings: null,

    listeners: null,

    _idleSpringIndices: null,

    setLooper: function setLooper(looper) {
      this.looper = looper;
      looper.springSystem = this;
    },

    createSpring: function createSpring(tension, friction) {
      var springConfig;
      if (tension === undefined || friction === undefined) {
        springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;
      } else {
        springConfig = SpringConfig.fromOrigamiTensionAndFriction(tension, friction);
      }
      return this.createSpringWithConfig(springConfig);
    },

    createSpringWithBouncinessAndSpeed: function createSpringWithBouncinessAndSpeed(bounciness, speed) {
      var springConfig;
      if (bounciness === undefined || speed === undefined) {
        springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;
      } else {
        springConfig = SpringConfig.fromBouncinessAndSpeed(bounciness, speed);
      }
      return this.createSpringWithConfig(springConfig);
    },

    createSpringWithConfig: function createSpringWithConfig(springConfig) {
      var spring = new Spring(this);
      this.registerSpring(spring);
      spring.setSpringConfig(springConfig);
      return spring;
    },

    getIsIdle: function getIsIdle() {
      return this._isIdle;
    },

    getSpringById: function getSpringById(id) {
      return this._springRegistry[id];
    },

    getAllSprings: function getAllSprings() {
      var vals = [];
      for (var id in this._springRegistry) {
        if (this._springRegistry.hasOwnProperty(id)) {
          vals.push(this._springRegistry[id]);
        }
      }
      return vals;
    },

    registerSpring: function registerSpring(spring) {
      this._springRegistry[spring.getId()] = spring;
    },

    deregisterSpring: function deregisterSpring(spring) {
      removeFirst(this._activeSprings, spring);
      delete this._springRegistry[spring.getId()];
    },

    advance: function advance(time, deltaTime) {
      while (this._idleSpringIndices.length > 0) {
        this._idleSpringIndices.pop();
      }for (var i = 0, len = this._activeSprings.length; i < len; i++) {
        var spring = this._activeSprings[i];
        if (spring.systemShouldAdvance()) {
          spring.advance(time / 1000.0, deltaTime / 1000.0);
        } else {
          this._idleSpringIndices.push(this._activeSprings.indexOf(spring));
        }
      }
      while (this._idleSpringIndices.length > 0) {
        var idx = this._idleSpringIndices.pop();
        idx >= 0 && this._activeSprings.splice(idx, 1);
      }
    },

    loop: function loop(currentTimeMillis) {
      var listener;
      if (this._lastTimeMillis === -1) {
        this._lastTimeMillis = currentTimeMillis - 1;
      }
      var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;
      this._lastTimeMillis = currentTimeMillis;

      var i = 0,
          len = this.listeners.length;
      for (i = 0; i < len; i++) {
        listener = this.listeners[i];
        listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);
      }

      this.advance(currentTimeMillis, ellapsedMillis);
      if (this._activeSprings.length === 0) {
        this._isIdle = true;
        this._lastTimeMillis = -1;
      }

      for (i = 0; i < len; i++) {
        listener = this.listeners[i];
        listener.onAfterIntegrate && listener.onAfterIntegrate(this);
      }

      if (!this._isIdle) {
        this.looper.run();
      }
    },

    activateSpring: function activateSpring(springId) {
      var spring = this._springRegistry[springId];
      if (this._activeSprings.indexOf(spring) == -1) {
        this._activeSprings.push(spring);
      }
      if (this.getIsIdle()) {
        this._isIdle = false;
        this.looper.run();
      }
    },

    addListener: function addListener(listener) {
      this.listeners.push(listener);
    },

    removeListener: function removeListener(listener) {
      removeFirst(this.listeners, listener);
    },

    removeAllListeners: function removeAllListeners() {
      this.listeners = [];
    }

  });

  var Spring = rebound.Spring = function Spring(springSystem) {
    this._id = 's' + Spring._ID++;
    this._springSystem = springSystem;
    this.listeners = [];
    this._currentState = new PhysicsState();
    this._previousState = new PhysicsState();
    this._tempState = new PhysicsState();
  };

  util.extend(Spring, {
    _ID: 0,

    MAX_DELTA_TIME_SEC: 0.064,

    SOLVER_TIMESTEP_SEC: 0.001

  });

  util.extend(Spring.prototype, {

    _id: 0,

    _springConfig: null,

    _overshootClampingEnabled: false,

    _currentState: null,

    _previousState: null,

    _tempState: null,

    _startValue: 0,

    _endValue: 0,

    _wasAtRest: true,

    _restSpeedThreshold: 0.001,

    _displacementFromRestThreshold: 0.001,

    listeners: null,

    _timeAccumulator: 0,

    _springSystem: null,

    destroy: function destroy() {
      this.listeners = [];
      this.frames = [];
      this._springSystem.deregisterSpring(this);
    },

    getId: function getId() {
      return this._id;
    },

    setSpringConfig: function setSpringConfig(springConfig) {
      this._springConfig = springConfig;
      return this;
    },

    getSpringConfig: function getSpringConfig() {
      return this._springConfig;
    },

    setCurrentValue: function setCurrentValue(currentValue, skipSetAtRest) {
      this._startValue = currentValue;
      this._currentState.position = currentValue;
      if (!skipSetAtRest) {
        this.setAtRest();
      }
      this.notifyPositionUpdated(false, false);
      return this;
    },

    getStartValue: function getStartValue() {
      return this._startValue;
    },

    getCurrentValue: function getCurrentValue() {
      return this._currentState.position;
    },

    getCurrentDisplacementDistance: function getCurrentDisplacementDistance() {
      return this.getDisplacementDistanceForState(this._currentState);
    },

    getDisplacementDistanceForState: function getDisplacementDistanceForState(state) {
      return Math.abs(this._endValue - state.position);
    },

    setEndValue: function setEndValue(endValue) {
      if (this._endValue == endValue && this.isAtRest()) {
        return this;
      }
      this._startValue = this.getCurrentValue();
      this._endValue = endValue;
      this._springSystem.activateSpring(this.getId());
      for (var i = 0, len = this.listeners.length; i < len; i++) {
        var listener = this.listeners[i];
        var onChange = listener.onSpringEndStateChange;
        onChange && onChange(this);
      }
      return this;
    },

    getEndValue: function getEndValue() {
      return this._endValue;
    },

    setVelocity: function setVelocity(velocity) {
      if (velocity === this._currentState.velocity) {
        return this;
      }
      this._currentState.velocity = velocity;
      this._springSystem.activateSpring(this.getId());
      return this;
    },

    getVelocity: function getVelocity() {
      return this._currentState.velocity;
    },

    setRestSpeedThreshold: function setRestSpeedThreshold(restSpeedThreshold) {
      this._restSpeedThreshold = restSpeedThreshold;
      return this;
    },

    getRestSpeedThreshold: function getRestSpeedThreshold() {
      return this._restSpeedThreshold;
    },

    setRestDisplacementThreshold: function setRestDisplacementThreshold(displacementFromRestThreshold) {
      this._displacementFromRestThreshold = displacementFromRestThreshold;
    },

    getRestDisplacementThreshold: function getRestDisplacementThreshold() {
      return this._displacementFromRestThreshold;
    },

    setOvershootClampingEnabled: function setOvershootClampingEnabled(enabled) {
      this._overshootClampingEnabled = enabled;
      return this;
    },

    isOvershootClampingEnabled: function isOvershootClampingEnabled() {
      return this._overshootClampingEnabled;
    },

    isOvershooting: function isOvershooting() {
      var start = this._startValue;
      var end = this._endValue;
      return this._springConfig.tension > 0 && (start < end && this.getCurrentValue() > end || start > end && this.getCurrentValue() < end);
    },

    advance: function advance(time, realDeltaTime) {
      var isAtRest = this.isAtRest();

      if (isAtRest && this._wasAtRest) {
        return;
      }

      var adjustedDeltaTime = realDeltaTime;
      if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {
        adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;
      }

      this._timeAccumulator += adjustedDeltaTime;

      var tension = this._springConfig.tension,
          friction = this._springConfig.friction,
          position = this._currentState.position,
          velocity = this._currentState.velocity,
          tempPosition = this._tempState.position,
          tempVelocity = this._tempState.velocity,
          aVelocity,
          aAcceleration,
          bVelocity,
          bAcceleration,
          cVelocity,
          cAcceleration,
          dVelocity,
          dAcceleration,
          dxdt,
          dvdt;

      while (this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

        this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

        if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {
          this._previousState.position = position;
          this._previousState.velocity = velocity;
        }

        aVelocity = velocity;
        aAcceleration = tension * (this._endValue - tempPosition) - friction * velocity;

        tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        bVelocity = tempVelocity;
        bAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;

        tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        cVelocity = tempVelocity;
        cAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;

        tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        dVelocity = tempVelocity;
        dAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;

        dxdt = 1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
        dvdt = 1.0 / 6.0 * (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);

        position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
        velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;
      }

      this._tempState.position = tempPosition;
      this._tempState.velocity = tempVelocity;

      this._currentState.position = position;
      this._currentState.velocity = velocity;

      if (this._timeAccumulator > 0) {
        this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);
      }

      if (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) {

        if (this._springConfig.tension > 0) {
          this._startValue = this._endValue;
          this._currentState.position = this._endValue;
        } else {
          this._endValue = this._currentState.position;
          this._startValue = this._endValue;
        }
        this.setVelocity(0);
        isAtRest = true;
      }

      var notifyActivate = false;
      if (this._wasAtRest) {
        this._wasAtRest = false;
        notifyActivate = true;
      }

      var notifyAtRest = false;
      if (isAtRest) {
        this._wasAtRest = true;
        notifyAtRest = true;
      }

      this.notifyPositionUpdated(notifyActivate, notifyAtRest);
    },

    notifyPositionUpdated: function notifyPositionUpdated(notifyActivate, notifyAtRest) {
      for (var i = 0, len = this.listeners.length; i < len; i++) {
        var listener = this.listeners[i];
        if (notifyActivate && listener.onSpringActivate) {
          listener.onSpringActivate(this);
        }

        if (listener.onSpringUpdate) {
          listener.onSpringUpdate(this);
        }

        if (notifyAtRest && listener.onSpringAtRest) {
          listener.onSpringAtRest(this);
        }
      }
    },

    systemShouldAdvance: function systemShouldAdvance() {
      return !this.isAtRest() || !this.wasAtRest();
    },

    wasAtRest: function wasAtRest() {
      return this._wasAtRest;
    },

    isAtRest: function isAtRest() {
      return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || this._springConfig.tension === 0);
    },

    setAtRest: function setAtRest() {
      this._endValue = this._currentState.position;
      this._tempState.position = this._currentState.position;
      this._currentState.velocity = 0;
      return this;
    },

    _interpolate: function _interpolate(alpha) {
      this._currentState.position = this._currentState.position * alpha + this._previousState.position * (1 - alpha);
      this._currentState.velocity = this._currentState.velocity * alpha + this._previousState.velocity * (1 - alpha);
    },

    getListeners: function getListeners() {
      return this.listeners;
    },

    addListener: function addListener(newListener) {
      this.listeners.push(newListener);
      return this;
    },

    removeListener: function removeListener(listenerToRemove) {
      removeFirst(this.listeners, listenerToRemove);
      return this;
    },

    removeAllListeners: function removeAllListeners() {
      this.listeners = [];
      return this;
    },

    currentValueIsApproximately: function currentValueIsApproximately(value) {
      return Math.abs(this.getCurrentValue() - value) <= this.getRestDisplacementThreshold();
    }

  });

  var PhysicsState = function PhysicsState() {};

  util.extend(PhysicsState.prototype, {
    position: 0,
    velocity: 0
  });

  var SpringConfig = rebound.SpringConfig = function SpringConfig(tension, friction) {
    this.tension = tension;
    this.friction = friction;
  };

  var AnimationLooper = rebound.AnimationLooper = function AnimationLooper() {
    this.springSystem = null;
    var _this = this;
    var _run = function _run() {
      _this.springSystem.loop(Date.now());
    };

    this.run = function () {
      util.onFrame(_run);
    };
  };

  rebound.SimulationLooper = function SimulationLooper(timestep) {
    this.springSystem = null;
    var time = 0;
    var running = false;
    timestep = timestep || 16.667;

    this.run = function () {
      if (running) {
        return;
      }
      running = true;
      while (!this.springSystem.getIsIdle()) {
        this.springSystem.loop(time += timestep);
      }
      running = false;
    };
  };

  rebound.SteppingSimulationLooper = function (timestep) {
    this.springSystem = null;
    var time = 0;

    this.run = function () {};

    this.step = function (timestep) {
      this.springSystem.loop(time += timestep);
    };
  };

  var OrigamiValueConverter = rebound.OrigamiValueConverter = {
    tensionFromOrigamiValue: function tensionFromOrigamiValue(oValue) {
      return (oValue - 30.0) * 3.62 + 194.0;
    },

    origamiValueFromTension: function origamiValueFromTension(tension) {
      return (tension - 194.0) / 3.62 + 30.0;
    },

    frictionFromOrigamiValue: function frictionFromOrigamiValue(oValue) {
      return (oValue - 8.0) * 3.0 + 25.0;
    },

    origamiFromFriction: function origamiFromFriction(friction) {
      return (friction - 25.0) / 3.0 + 8.0;
    }
  };

  var BouncyConversion = rebound.BouncyConversion = function (bounciness, speed) {
    this.bounciness = bounciness;
    this.speed = speed;
    var b = this.normalize(bounciness / 1.7, 0, 20.0);
    b = this.projectNormal(b, 0.0, 0.8);
    var s = this.normalize(speed / 1.7, 0, 20.0);
    this.bouncyTension = this.projectNormal(s, 0.5, 200);
    this.bouncyFriction = this.quadraticOutInterpolation(b, this.b3Nobounce(this.bouncyTension), 0.01);
  };

  util.extend(BouncyConversion.prototype, {

    normalize: function normalize(value, startValue, endValue) {
      return (value - startValue) / (endValue - startValue);
    },

    projectNormal: function projectNormal(n, start, end) {
      return start + n * (end - start);
    },

    linearInterpolation: function linearInterpolation(t, start, end) {
      return t * end + (1.0 - t) * start;
    },

    quadraticOutInterpolation: function quadraticOutInterpolation(t, start, end) {
      return this.linearInterpolation(2 * t - t * t, start, end);
    },

    b3Friction1: function b3Friction1(x) {
      return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
    },

    b3Friction2: function b3Friction2(x) {
      return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2.;
    },

    b3Friction3: function b3Friction3(x) {
      return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
    },

    b3Nobounce: function b3Nobounce(tension) {
      var friction = 0;
      if (tension <= 18) {
        friction = this.b3Friction1(tension);
      } else if (tension > 18 && tension <= 44) {
        friction = this.b3Friction2(tension);
      } else {
        friction = this.b3Friction3(tension);
      }
      return friction;
    }
  });

  util.extend(SpringConfig, {
    fromOrigamiTensionAndFriction: function fromOrigamiTensionAndFriction(tension, friction) {
      return new SpringConfig(OrigamiValueConverter.tensionFromOrigamiValue(tension), OrigamiValueConverter.frictionFromOrigamiValue(friction));
    },

    fromBouncinessAndSpeed: function fromBouncinessAndSpeed(bounciness, speed) {
      var bouncyConversion = new rebound.BouncyConversion(bounciness, speed);
      return this.fromOrigamiTensionAndFriction(bouncyConversion.bouncyTension, bouncyConversion.bouncyFriction);
    },

    coastingConfigWithOrigamiFriction: function coastingConfigWithOrigamiFriction(friction) {
      return new SpringConfig(0, OrigamiValueConverter.frictionFromOrigamiValue(friction));
    }
  });

  SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = SpringConfig.fromOrigamiTensionAndFriction(40, 7);

  util.extend(SpringConfig.prototype, { friction: 0, tension: 0 });

  var colorCache = {};
  util.hexToRGB = function (color) {
    if (colorCache[color]) {
      return colorCache[color];
    }
    color = color.replace('#', '');
    if (color.length === 3) {
      color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];
    }
    var parts = color.match(/.{2}/g);

    var ret = {
      r: parseInt(parts[0], 16),
      g: parseInt(parts[1], 16),
      b: parseInt(parts[2], 16)
    };

    colorCache[color] = ret;
    return ret;
  };

  util.rgbToHex = function (r, g, b) {
    r = r.toString(16);
    g = g.toString(16);
    b = b.toString(16);
    r = r.length < 2 ? '0' + r : r;
    g = g.length < 2 ? '0' + g : g;
    b = b.length < 2 ? '0' + b : b;
    return '#' + r + g + b;
  };

  var MathUtil = rebound.MathUtil = {
    mapValueInRange: function mapValueInRange(value, fromLow, fromHigh, toLow, toHigh) {
      var fromRangeSize = fromHigh - fromLow;
      var toRangeSize = toHigh - toLow;
      var valueScale = (value - fromLow) / fromRangeSize;
      return toLow + valueScale * toRangeSize;
    },

    interpolateColor: function interpolateColor(val, startColor, endColor, fromLow, fromHigh, asRGB) {
      fromLow = fromLow === undefined ? 0 : fromLow;
      fromHigh = fromHigh === undefined ? 1 : fromHigh;
      startColor = util.hexToRGB(startColor);
      endColor = util.hexToRGB(endColor);
      var r = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));
      var g = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));
      var b = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));
      if (asRGB) {
        return 'rgb(' + r + ',' + g + ',' + b + ')';
      } else {
        return util.rgbToHex(r, g, b);
      }
    },

    degreesToRadians: function degreesToRadians(deg) {
      return deg * Math.PI / 180;
    },

    radiansToDegrees: function radiansToDegrees(rad) {
      return rad * 180 / Math.PI;
    }

  };

  util.extend(util, MathUtil);

  function removeFirst(array, item) {
    var idx = array.indexOf(item);
    idx != -1 && array.splice(idx, 1);
  }

  var _onFrame;
  if (typeof window !== 'undefined') {
    _onFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function (callback) {
      window.setTimeout(callback, 1000 / 60);
    };
  }
  if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {
    _onFrame = setImmediate;
  }

  util.onFrame = function onFrame(func) {
    return _onFrame(func);
  };

  if (typeof exports != 'undefined') {
    util.extend(exports, rebound);
  } else if (typeof window != 'undefined') {
    window.rebound = rebound;
  }
})();
}, 460, null, "rebound/rebound.js");
__d(/* react-native-deprecated-custom-components/src/flattenStyle.js */function(global, require, module, exports) {
'use strict';

var invariant = require(18                  ); // 18 = fbjs/lib/invariant

function getStyle(style) {
  if (style && typeof style === 'number') {
    debugger;
    invariant(false, "Error when using Navigator from react-native-custom-components. Please provide a raw object to `props.sceneStyle` instead of a StyleSheet reference.");
  }
  return style;
}

function flattenStyle(style) {
  if (!style) {
    return undefined;
  }
  invariant(style !== true, 'style may be false but not true');

  if (!Array.isArray(style)) {
    return getStyle(style);
  }

  var result = {};
  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {
    var computedStyle = flattenStyle(style[i]);
    if (computedStyle) {
      for (var key in computedStyle) {
        result[key] = computedStyle[key];
      }
    }
  }
  return result;
}

module.exports = flattenStyle;
}, 461, null, "react-native-deprecated-custom-components/src/flattenStyle.js");
;require(72);
;require(0);
//# sourceMappingURL=index.android.map